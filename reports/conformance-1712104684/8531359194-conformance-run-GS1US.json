{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b3b67b92-1075-41ad-a7b9-d5c8329604b2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fb1f6048-9151-408b-ba5f-df2f9be6c868",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80a4af3d-6656-4405-b1d5-301c9452d05b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "13ed0e4c-f301-464e-87ee-2e546b553352"
                }
              }
            ]
          },
          {
            "id": "4a12f0f1-9a1e-4e90-9232-3b56a5be68c9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd1a97bf-eea2-4912-8e1d-45fa80227b3c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "20c98157-0e08-41b3-9570-662afe8b3cc4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "18fa0f44-a5fe-4eac-8106-c88149235c4c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f89529e4-ce2b-4bba-a4c6-301c4794decc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2554849e-e995-4ba4-becd-d45c4aa261cb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a02cddb7-ad85-4e0b-96c2-4730b9b42799",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bae0a5c9-270d-4773-b076-986b682f3551"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c995d66-e87e-4c3e-b4d3-e3be63eb2a70",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e2253121-75bc-4b72-b8fe-38c5eae3fad2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b279f2b1-3358-404b-8e8e-3e6d08d25c68",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5914af31-6dc0-4625-81ae-b3e063f19437"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90a9755e-3dc1-4684-a98c-3219d7fb04e6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1ef1bf05-8ade-45de-af51-aa175463feae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e41f4e00-f182-4cb5-be0e-73b5152be48e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd305fc6-ed8e-4b48-84ec-b967fb638960"
            }
          }
        ]
      },
      {
        "id": "313e9d69-c3a8-4653-b92a-3aed047e1bbe",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "32728c7f-e77f-4c3c-93e1-8ebdf63fbd5c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc2a4f44-4015-453e-8a3e-36ed2b9bfe3a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9b984808-9898-433e-88b3-62cad4b0b6e5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a2dc8d-61d7-411a-aa68-5e1fdb7f79bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95c0f1c0-b876-42bf-bc7e-2b9f4b39d41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1cc52f-a28d-48e5-9d70-3ca19529b95b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df652fc-9ac5-4e62-9cdc-188b8bb88181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8caa255-b225-411c-a928-f701044dfda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6134eba3-dee8-436b-9306-09f249dc723c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2ba3a6-2813-4976-877c-46635cc58c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "082e480c-012f-40e6-bc13-0d33493e88da"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ddb73e7c-4b32-456f-a14a-b85f34272bf1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4e3ad12-5f0d-4631-aa40-29bcd28733cc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0359b97c-057f-4f6c-a2f7-d74b82b8d5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "959ae04c-5547-42b0-bebb-47e9dca5dcb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b9e8e2-df88-406c-b0db-3db83d63a3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ea6604-953c-4f30-84b0-1c0cde81b16c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "123ed61b-a6f2-463b-84f1-78411597f47d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1225a71c-fe21-4f4d-887a-9eda241b049a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92ea4acc-2bd2-4654-abae-a356de60830e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b09153c7-4a66-45ec-870a-2f27db77ee89"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cdb0d2b8-c050-4f3f-9c42-94f5539c02cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8b8f6f12-30ae-4e22-ba8e-204acc556cde"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "874e1c71-80de-4aed-8915-c5f3725fc547",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41b58c83-d395-4920-b58f-209dbf2df236"
            }
          }
        ]
      },
      {
        "id": "e94a94be-50ef-4af5-b852-ad8874fa2ebb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "51f5fadd-3875-40a2-89f6-32690d6e8569",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7315588a-0369-437b-ba12-ee0a09eb5296",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6e3d15c2-e7aa-4571-befd-1512400c4347",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92bab94-f666-42ba-ae76-d487d3e7f1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c1260d-1c8f-42d5-9add-ecf71b3fef80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641fca86-e765-44f9-a183-1edf20a7e6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2b2523c-c357-4061-ade7-1b18a3f4a04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab857bf0-5778-42ef-a21d-abdc2671732b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d835063-f87c-4526-8b32-f04cb04019d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4495b61-67a8-4672-88f8-6a9ee0da23f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03576167-cc7d-4880-a062-f02fb269929d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c171ffbe-332e-41c3-949c-d7e9e5724ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4a8a9c-f321-4448-837b-e26da4d4b0f9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b4555e-637d-4c58-b1e3-77d1af914d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2cb37d-f6ab-4e6a-aaaf-66323d289d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b248a1c-03da-49ee-ac8c-2446c06b96d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cad7f46a-79d8-4ef0-9ee5-9606af4b3844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07c5fb2-34b9-4479-b5fb-7e8fc0d77d36",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240f0e0f-dfed-42a7-945b-3f37742365fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509b3566-8acc-4441-ac10-1967c1ea894f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167326a4-4bed-4ae4-ac5c-a1dbb44638dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf00f074-5b69-46c5-a413-0132fa379801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b24c44e-810d-4aff-b6bd-bfd3901e99df",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca747c38-6273-495b-a9bc-55e432aca1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215b952d-36c7-436d-b78d-780f98323df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef0dfd5-b886-4355-97b1-e8515d8385b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd9401bf-ba03-4efa-b989-329ccd56285a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36407027-f574-427a-bdbc-ee67a9b80c36",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8528b6-5444-4eb9-bc89-0778806422ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43bef01e-b8ab-41a0-85ff-694bd1050d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd9402f-0738-4fb5-b1f5-b2a19c2bdc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "273596ba-25e3-4e90-8d3a-c981dde74d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9a8dcd-8e8f-4356-88cf-fbd04083ba90",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f68874-caf9-442c-ac0b-5ae531aef2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb949ec-1b74-4aef-8af4-1f39d2293e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b22915-060a-487a-a664-60ed63c7a6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cff9697-b444-4e55-8170-a9a49a88397b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d5aff0-35ae-49d3-8e48-c4dbe45ef9cf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e4bfca-3717-48ce-a42a-81f58429fe4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b658f111-59e8-4bd1-849a-50efc8ef93ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9307a4b-b7ca-476f-922a-3ab3f24f8ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1774231c-c318-4a46-83de-3228ac38f6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d154b8cf-7749-447f-b07d-dc9c7c15783c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e91ee3-f13c-45b3-8100-d4a9538735c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5772c46c-7812-47d4-8709-09fbad1e7ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0c1649-aa1e-4050-bf29-54ae60abafc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d67b110-14d0-4e67-8e4c-2c923f2869d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffa4d72-e56e-4aca-bfb1-7c2216006e62",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cd6f0d-de23-4caa-abd9-d6599f3288b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d728a3-d992-4692-b1e3-d2eeb54f7b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03b3c94-9a53-416a-b919-b60e8bf7da39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "639f4e3c-f463-4218-a28c-c8dac3d65c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610194a5-f368-4aac-b289-8c59cf9860de",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dd29c0-a5f3-449e-9e3d-2182e9283180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb399ee-2983-446a-9741-e6bd8130d71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fc717f-5634-4dae-b871-e358d74b9bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ab8c335-22cd-4dc8-a464-bbf712f48a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b2d0ed-e99e-429d-bdf3-86e3b95de081",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fa731b-f97f-4f06-aeed-461317e648f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ef734c-e91f-4f28-bf46-300463716da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7e2d63-d42d-452f-837e-34294aa72720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92e9176a-1d40-484d-a466-2be674b8cb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ff5ec3-7695-41a6-911a-434820fc9e0c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ef3198-3d40-4b8c-8151-c1be0006f1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272fd316-5eb8-497a-999c-651dcdbc27a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8283d0-917a-4a0e-ac97-bf5d8a7a14e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f4e9ef6-a6e0-4253-8383-67a9b5a7caa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c99e1a-8517-49eb-a222-cecc8d9fc487",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc897bd-f9d4-4498-913d-d5196666dc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf54961-f2e0-44c8-b654-4963c515f8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7741f56b-a03f-4080-8940-18edd5dba280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e15d911e-6440-4dad-ad10-2615e56838dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9511e4fc-2c23-4130-91c2-d61b09a52611",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6130f9b1-51e3-49b2-865b-642e9895d051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5debbed-ac45-4c10-b7cb-f07889d3c354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defd3f5b-a8d9-45ef-899d-691fd556850f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "563cb29d-ea61-44f9-9a47-7ddde33aa612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536c7ccb-077d-45de-81df-9c1110e1b6a1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d277a7-f983-43f0-b41b-c7a3c8cc0070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603a70ca-febf-4915-adae-f4f07a441da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3efee5-774c-43e9-aaa4-7d3cb389291c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f049003a-168b-4e61-856c-11acff91a945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2258fcab-aca3-44bb-88d2-0a5f8adc249e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea0a460-6baf-4ca4-8380-70f02dfd69ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8013fb-88ce-45d4-91ec-9c8fdb300df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f086e8-3b35-4c9e-b39e-260aa1b168a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2b94f13-80fd-4cc3-84b3-0079bc334f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d2751d-978b-4e9b-a86a-50a6bd773dc9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c692e6d-40cc-434b-87ab-955723b13932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef04c386-8429-4eca-b386-b8e64b9c909e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fae63d-0477-40e4-b5d8-e245982bcf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "90f94093-71ec-4e70-bbaa-42adf21de0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7a5152-cabd-441b-a11e-8b8800b541eb",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ce5f63-2760-4bc0-9ec5-9eb9a7bf91c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecee75c-ff56-4986-aa1d-68530cb124a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e35d07-7ca3-4869-a7e6-ec34112e2297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4fd97ef-4ce9-4ec5-868a-9c0337fd4966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98e78aa-e87b-49e9-a94d-d6d635f82dbc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3b5467-550e-4138-91bd-3940de36df1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d582f0d6-3b0f-4d6b-b0ea-54acb1d910ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76dc4baf-525e-4aed-b5b5-fd83faad9dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f358447-c015-43bf-bbf4-a79e29fe07f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23ea337-9525-408c-bdbd-d805311f3a59",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28db912b-1069-4702-a2db-92f7b8c9d715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128cfa44-c1d3-4863-a7f3-93e7781354f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663ed426-c959-47e1-a2c5-ffb2bb2e7dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3f6d78-0791-447c-af92-87afb9bbba92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01925551-e6ea-4cce-b12b-91d2f52fc16f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c5422f-2412-4dff-97ac-4e1254054499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9fe80e-4641-4bde-950a-491c1d5d7989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325f8646-5d69-4eae-ba92-61f098ecf267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9974ae8c-3733-4460-962c-0f96a6de43ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63f185f-92dc-4400-8487-c6580afd4201",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ef5338-04ff-4c3d-85b7-18ec58ab480b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8b5062-cf04-4e09-8434-81508fc7c718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53343a89-ab67-45dd-a3a6-3ee73e677b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76040ab5-6376-4eed-be75-ab0bbc22ddad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff35228e-423b-4571-a181-679c2560bfb5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae169b77-bd54-4c23-a12b-d177d030f703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7356582-abb8-4baf-ba99-26ce570eb25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe90818b-26e5-4789-9437-92bde98bc90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd843cde-9b6d-4565-ba67-465f18062d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8a9fa0-13df-4ca4-bfd1-ae413984cda9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00e4d91-817a-49a2-ad7a-67122bbda59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434aaa63-2726-464a-a58a-ffe2e3a6ec2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1650fd1-b1e5-4bd4-8b3c-a42435c4be01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "114fc791-0561-470d-b323-7b19c83d072d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5be2867-d3a5-4d01-8ed2-43653a79937f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91181646-7cb6-44f0-9f18-cbf5d0a201a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2e94cf-1f2c-4972-b64d-e469b46d905e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bec7bde-376f-46a8-b76c-896c9b387086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b309e704-b1f0-4b50-ac54-3efcea3a6d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6412948c-55eb-40e9-bcd3-438391a7d345",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680d661e-9c18-47c8-bdb0-45d29de8f596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2817e35-9379-4cfd-9df1-ae85e6286eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182cfd0f-9a3c-48d8-af44-0c495a1bdeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82e46734-fedd-45a9-9747-3b0fe91cb5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482f766e-3c26-4bed-a0d3-108295b9f017",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df03dc8-b75e-4c7a-b31b-f0adfd961211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e8b4ae-e55f-4f46-a9c7-91372f53e3b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e61bb5a-792f-4809-b2cd-7e291dd721c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c1c6ff-2af8-413f-b2cc-4be6cfc6d0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665029b8-7760-4224-8d0e-3b496db90143",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc32eae5-1c4c-4096-ab81-f02fe79f040e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6025106d-d9a8-43b6-bcac-2c03bcf033a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db990fb4-9867-4c5f-8d29-68ed91c79ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5b0460-1a63-4f56-8ccb-e0c9633125a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750705bf-dfca-4e76-98b3-e1d341d8604e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c90ee16-1861-4eff-ad0b-1698872b6425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108eb95e-5ff6-4f96-b671-8dd1dee57eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769a6e87-4fd4-4c68-9e0c-2e70e065a2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "825bd427-2b3d-48b3-a955-b4adddb763a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f5e6fb-8818-46d3-82c7-ddc404bfb4f7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bf6e6a-e110-4064-a90e-d45dfe5064fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e5e538-0609-4e10-817f-731f5232e812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa63235-c5b8-465c-a9bc-3e889972fc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f360299b-7a16-424e-a71a-a10c3c32f409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e192831-b2f4-4dd0-bb50-e58e23d54f7c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64723881-829f-4999-8690-cf0f9d98ca05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "babc693f-1696-40da-938e-993f6329248a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1a398a-9160-45e1-81f7-5220b463954f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb49134-56d4-419a-b6b1-8b874e1d331f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613459dd-0a69-4325-902e-e0d2b5fc574a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee05c77-6cfe-4275-8597-a9192ca15216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc95bbb-c6cb-4e25-bfe8-31654892f71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca26ab0d-1f8d-4aa8-8549-b077e82cfd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3fdcb89-fc27-4618-9b81-2e93a3f17b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69a50da-cdd5-467e-8e70-161988ad3923",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ffbc77-e5ce-4e67-8ee1-cf8ef01cf121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6098463d-07bc-4a53-a991-599ec4623190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1755909-caa6-4ebe-8cc9-15071d4b13b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c624bd79-b660-46a5-9600-b853636af740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c059dc6-ff82-4dff-904e-6a65daecf1f2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b8e5ef-8a98-4bf5-8082-856bf9a315af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd06b0cb-dbdd-4a10-93c9-14910b0c1f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48283899-18f4-49cc-a182-f272ff9c68f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6c77ca63-a9b8-44eb-8891-c7a14c8d34f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c1faa0-ae95-4e2b-89f8-e4f4eec68872",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a34fece-104f-4d2e-a80e-d74df06f5c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61382f1f-1cc6-4c59-aacf-3e2df5c73605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6229fef-2a84-40e6-9478-57f89ff879c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b590871c-703b-49e0-96db-23592b439558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d887ad-542d-4694-a4dd-f329a37a7c0d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c850ef6f-02fd-4c47-80f1-dd7173228354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef62f8b0-3d5c-4821-9582-ac35cc67acf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b257826-5a0d-4f7b-b323-f4c0a6cac7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59866dac-376e-43e4-8239-bd81c8d826d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa267ce-e685-4a47-a698-881fe045f765",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aeeb8f4-c3f5-444c-9332-29a6b45fd8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c77a7b-bdcd-4995-8c1d-e3386b10d8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7c49b6-97cf-4d19-bb5a-1f05f8d8a63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc3b2fa-1c9a-4ba2-a692-6348888c71b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e13cec-9a9a-4d12-828d-6cb17e10dead",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec8b704-ac24-4219-8a5e-645cbdf55a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecdb26de-2900-4aac-85cd-2e9e50cacbfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1ab007-4466-472e-9c6e-86710d9dfd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "92389ae5-5938-4377-9011-b95c8792ea69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8d3686-afb8-4249-b14a-b93bbfc59d57",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56790df2-f8f0-4fa9-9d50-9818f5e63d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7735c78-601b-4751-9d89-0a2cb5f2f21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2127dc-4432-4490-96c7-4997ea6dc1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "68acb0e9-616b-44f8-b755-849e2565897d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93df965-baa6-4f29-b64a-c5b5591b6b54",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324be647-4cb3-460d-ace8-86c5dd4bf1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2dfbd1c-80b3-4ee5-bca6-f385ee272a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6004189-0eba-4c65-bb38-12a54ce29713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a52b945c-6684-45ff-9d9f-38dce58359e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee9c17c-6fa9-47ea-bb31-54e199d882d0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186f77df-a6ca-4752-8965-9f266723eb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4913db1-ba06-4ac0-ad5d-f4200f6fbcf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26d0eaa-7065-4ff4-8f99-4850a23efef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ab75fc3b-5bdc-43e7-bc4d-fcdb304004a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066be3ef-783b-4448-998f-9f98f03fc9ce",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed0f9ca-1292-4037-b003-d56883880f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc51a11b-eb83-4c4d-a35c-d13484f12d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9e78ad-e1fb-450e-89c4-dea048084f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbff8af2-756b-4c0d-9680-164a3704c39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cda8a9-86c1-46f6-afa1-fafeff4b1b3e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982ffb26-c8b7-41dc-a2b5-cf8d10b3d284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe1b164-8af1-4b63-9f56-153c499521d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5900d545-41a3-429c-aab9-c4e87d89ce76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e90be0-9aea-4df6-b8f7-07bf3cfa94c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539302bf-b021-419a-9b5c-befb54e76aeb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4ae1c0-36df-41a1-8110-9ee0387997a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e90385a-fd88-4822-a8c0-aaadbd886b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25197f94-0904-47e1-9e0b-43c0ba440176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62bdc888-0fcd-4052-820d-6f2fa84f5ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b3db94-316f-4a90-8af6-4806811d4155",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e6c9c3-6f68-43d8-be48-fddab087a3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75566e18-bbe3-482f-b354-6838df9e8610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2d7964-be26-4dbc-be1b-d11de41a02e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc1980f-acbd-4bca-b41e-e8b40bd2cb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa19c434-59ca-4446-9b15-f66a59100261",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717422c1-1416-4fc5-b4d0-6f4b82ac917f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22d3f52-887b-4043-ba0e-873007917ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f73f47-d708-4b59-ad42-034143ed3934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cdd80c9-c681-42e1-875c-83d0bf54e7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c51b32a-2f98-435d-9c12-cb15e49d1705",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee693695-f7f1-4fbe-9626-54e8301f6d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ad4e30-fa56-4092-b3a4-4b1cee1da143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfc0622-900e-4fdb-8b9a-d1821f59edb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "493e552a-6cd9-421d-b72a-27ed4768de2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06abf20b-3b23-45b4-8c7f-d2e334a0b404",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e21852b-fc2e-4a83-978b-d537ae65253e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06d4c0c-2b54-4a49-84fa-170387246435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7488654-ac72-4a18-82d0-e1a6d87c1d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed8b93c-c932-47f9-8e9b-d0f05f869871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d8a73c-9525-43b8-9198-f967b94e3b83",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b28638-a156-46ed-ac3f-be0c63f34cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3d192a-7a5f-4eff-b8f4-c060b77edd01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eccc5f5-d4f2-4184-9724-b37934f55874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e4f79c-c8bc-4beb-8470-4034d9b2246e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfef4b3-61c8-4edc-b77e-3d2f25ac0864",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9fca4e-b67a-405e-8777-c6ace22c08ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ad5b7d-deb6-45c8-a30a-e7ea7610bd9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d168bd9b-8b86-4886-a70a-74052bf7afe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4df269c-68b5-4c05-8199-18499dbc4512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8e0e96-9375-4842-985c-cd3cdc4f8df9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5f2e5e-7e52-4fba-ab2e-72207d87a467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9889aa7e-1a71-47ff-97ac-3a8ae389b9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c22be9c-aaa9-4cf6-b3d9-b143398fcecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "076770eb-1116-428f-8dca-e52c77f283f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2837cc-3db0-48fa-8ffe-b1340107ddd7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6426eac4-8c8f-4164-b70b-20b6e66c0adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebdaf92-247c-4839-855d-a0756014fe47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1116ed-6667-479e-86c7-14da6e639a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41afc702-86aa-4874-8e0e-64cd0dc33492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edebab4-4287-4a48-8db7-c45396d9172a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae51d5c-14ad-4a5a-a51c-31c302bd48c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beea53b7-d8b1-406d-a3d0-8923233ad700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a01e998-6a4c-457b-be0b-76210e0eb3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e30598e-4821-4b24-8dea-0f50b6561d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fda1c1-0ec7-4f56-9247-8a1f7970b578",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c6b78a-f0b4-417a-87ac-15be57e5b4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1620408a-af72-46cb-8495-ba4298dd3d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f795e666-90ed-4f70-ad51-94e4bb5dba9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16a48e03-ae24-4a40-bce0-f71e6c82f2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84eb1aff-bb3c-4dac-8425-25209ca41f72",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c598c1-1702-4b21-80af-930d0d537dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cbcf27-9cd1-4cfe-a0f8-a3ef76b5f72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2350bab6-d2b3-4d9b-9c4b-a7a7c5ed23e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "20299add-1965-4938-bedc-73275455d539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018aae4c-7a66-4161-8757-5a00dee6e4f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7235e0-f91f-42dc-8e27-f6a938e2a853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a1a1ab-5f34-42fb-8bdd-54e290489d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d41f0f8-0ffe-4e52-af01-f8de62c94475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e66a4d65-7072-4790-9a18-d993871f8f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26f0f81-304a-4410-8ea2-11a085a094b1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a319ce-4ade-4f17-b8a9-487600cb6196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931ca24e-aaf5-4e89-9a48-4be38495afab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d5c190-f578-4fd7-8ab2-a4f7ece0ea98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a7047f3-7d56-4a41-909e-6f29f0ba7c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46889b92-86da-41e0-abd3-f118b696ea9a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb6d843-05af-4903-8973-185b523b15d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2b092c-c33d-40d7-8b92-f3eb978477f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a99c42-8080-435d-811e-7d688f72f252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaea164c-2420-4da4-8970-1647a7f6d4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d713fe-6c2e-4bb0-a922-2fb178ae0430",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5204c3-01c4-4b6a-9805-6c317579488c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f61435c-f182-4153-a134-f79490f31ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eeac17e-ec76-417a-8ab3-8cba0d73f98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "caa29460-3c02-4b0b-b574-e6a92826a679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187284b1-89b5-491e-be9c-54ffb7143712",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a0cae6-b6e2-4ba7-aff1-fc816166de89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f6ef38-613d-4eea-9a18-1d6f91cae51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097a5eac-d741-4640-81be-d6a5662b37eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4eee81f-7b6e-468d-b4f0-d64e75d8b57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b050d6ac-07ec-4c22-a981-dcf9d0e5da9e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbe6661-a436-4c50-85fd-1f0ab8301c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d65755-37a4-413e-ab16-2adda90835f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2415e2-0cf5-43f8-92c5-5ff0dad2ad83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c29ae6a-21e5-4718-85ee-b41763de5e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1c733b-cd4e-4bd6-8169-f832fb57a253",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c5d6a8-0c92-4aea-8638-36d0d4659f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bcac1d5-af5d-47be-aade-43f202005a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47b0702-f304-4a7b-baf6-aeae3a00982f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "110c6f71-e2da-462f-85b9-c1a224301b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4583b341-687f-4c7c-8319-a8db73e52999",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b66ee7-a195-46cb-b3cb-0170582e0816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c630fad8-2ad5-43e7-85d4-8c35a9d20add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1ace57-c51a-40ad-9691-5e7f3b21e388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "581165d8-3fc0-4cf6-b227-c9ce0a2a4e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae30a1b-adb6-4ea2-9a16-46d43bcdc411",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386fe125-b28e-483e-bb1b-ae0074f5fc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1464dba6-cd8c-48a7-bad7-4a35ebae7ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694a129a-6a0a-4a8c-9a1a-a5e81509126d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5073810-8207-484c-a25c-bca254097871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34c3c0a-aa8b-4856-94b7-9420ea123ebb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ebb65e-f14f-40d8-bb34-d07ed3a6bc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af519fd5-dcd4-4f36-9274-9f823cbcc43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afbaa76-f094-43b0-ba70-b50238b9d346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86147291-8b40-4aec-b496-d8877f03eae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb3edcd-f78f-44af-adc9-2e6b5a6ec99a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0935af4-d434-440a-b2fd-e040f8eed3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a97745-04be-44fe-8391-49b423806fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a56cae9-00de-43d4-9ad1-dc4b1695aa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f795aa45-d096-4c4f-b4ec-dd92ed93744d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d70af3c-e4d4-407b-9af5-c29cf1ba8a2b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61b7aac-415c-4325-a0fb-2c8011ae41bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d778db71-8863-4fd7-a289-7c6e63ece18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3e9782-8420-4252-ae39-af9b3a3883d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "03097224-23b6-4f3a-9fcb-8aac557fc693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9469d5-4f70-4921-896b-ae0156f597d1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52ed095-4b4c-424b-afc6-1e196d16381d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fb1724-b242-42eb-8322-84fdd97aa54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d058295d-cb2b-430e-97f6-f72abf3e3f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c07edb-5b8e-42fb-87c1-00559fcdc1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e95ecd-3010-4226-877c-7a9c9cfcf3d4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596ccf2a-3ec1-4a8c-915e-b5b12ed92ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a81f73-c604-4b95-994b-38d381d8d203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e9567b-3e18-4208-9f61-b1bbfbe3cd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68cc0707-62be-4127-a2ce-e7306d01b06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc29e87c-df70-46ef-a7d5-9b2c0277fb36",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db76f6c3-592d-4b29-bb04-35c984ac2087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f0d112-d901-4540-b4a5-9dac59f50898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e779c8-3ceb-44bc-9d10-ac045856b683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92e535f2-f2e4-41b3-a94a-07453d6bc495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4d8a6b-abb1-4fe1-b013-ba2addc9d10f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9467c1bf-7503-4fee-870a-eabf9de62a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b924d0-40e6-4067-a41b-86cbde8d6e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621f259f-9654-4c39-b8df-c72605123399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5577688d-12c7-4b0e-9ed7-5bae6cad598d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339a9925-146f-4a9b-8e52-220d1b2835bf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c6d2df-135f-4824-8e78-c90ad0ba076d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71fa2b5b-cad2-41e2-a112-c8a46a80f9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7b2d6a-5aaa-4d28-8ff4-362f7a908346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "249a9482-c18d-4aec-a8ff-c4c00100d292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4efa39f-94ee-44dd-ba7e-42c39dc7c3f7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22a8ff9-c5a6-4987-ae63-cf436c4e04f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea6dc1b-335c-4b4a-b129-7f992b540076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e77bbd-0c07-4347-b5cc-222807dedd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a148d755-c9c7-422a-870a-07b055da5c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6dab8c-57ba-42c2-a06e-f9625cec729f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ddb783-bf38-44a4-b1c6-23227f4b97c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed38b090-c13c-4e14-aa56-88c556551e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ede7617-c96c-4bbc-a1c0-9803f14c7e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8725e92-3afd-4383-b7cb-c6cee09edc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7c52b3-2fba-49ff-b9b7-630b55dbf128",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1261492-7bd9-4c1e-b21a-93eb6286a00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19530826-6742-4620-801f-e26a608507c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2098c16-d4be-4644-8837-77a17ccb4004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8af99687-bd89-4d4c-b102-0a7004e9e6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b73fae-a466-44d5-b6f5-5150e1a72c64",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2703f71-efea-4fb6-a6d3-5dd1c7d0dffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5589ed70-b645-4120-a909-8c3ac8a55ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087ee0fb-ddc1-43e1-9ca0-dba8c31b0f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f33ce1a6-1027-4e78-afa8-2f9040ea2457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cda1941-2347-4c5b-9d70-3a8bc966765b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672d6c39-f69c-4d75-9aad-b46de5e3d922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105abf14-b736-4b77-a129-0f00d92a0806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdc9804-0362-496a-8200-35458d8b516a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34520a46-a4b5-4dbb-aed6-d0f298c1e7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89205541-dbc0-4fd0-90af-43fc0ef71b56",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abfc316-d48a-4a3a-8cba-2b3785d1329b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082c87e2-33cf-4377-bca1-98fe6ee012ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1031158-355d-4992-a552-1f07f7399bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85d835c3-ae0f-4f66-bb3f-def74c7a5019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fc1b11-d38a-4b4b-a56d-c3e5a0d778a4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ed73c8-9b22-4e2a-a884-9838a30ba44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75115bf1-cef8-4092-8a38-f038e2efaccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea63bab2-a765-412e-aab2-f8115273695c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c7bf2b-5b34-4c41-bf70-d05e98dc01b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32da149a-1214-4d96-8373-176e0b2d4415",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb64f75-9002-425e-ace1-e03eb048836f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c76eff5-0b75-42be-9b04-93daddd58308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85089fda-3c73-4aed-aab4-391c94ea7220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbf095a-16c3-4627-ae0e-236aa12b607c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cb4432-9bd3-4e01-bed3-ef49f63069a7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5cb998-8f7a-4824-a0f3-546971241763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143ddb69-d0f4-498b-af7c-515d9afcfad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee71976-d5da-413e-940c-26410585d44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5fcd00d-973c-4f32-ad9b-5548406cdfd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf22abe6-75a7-40ee-be09-a821eae40c31",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf92116-5d85-4e1f-af02-7b702d8322d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73bb2166-c546-40c9-8e7a-c4f88b2e26dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8834c8-2b6b-4e7c-a61c-8c6c2feb0a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5031c7-07fc-45f5-9fef-488465bf19ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69511e07-aa96-4821-9721-2b9d687036c9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cef6a6-a00c-4a00-a7c9-1a8b139a343f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ca4c8a-0804-4ec0-ad25-0aaa3bce5447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7551c680-8336-43ab-8704-d53952eb6bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca309fa-9c5c-4298-b38a-8b642533749f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ffdd15-a88d-4d5c-972b-16542ce988a6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c922a5d8-7dcc-4fb7-8282-dd9614347dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf1c21a-2634-46d4-8ea3-5d5e6a14555c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1670d983-fd3d-42ee-9061-8dcdc725b394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b993115c-8b36-461a-82e0-1549aeb5e339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8345cbf-e156-4e2a-8d9b-d4e58140bb4c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a64ab0d-83f3-4207-8636-91f987944f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a57039-9021-47f4-b353-a55b4a2da687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a3c2f7-f908-4b6f-b245-24390b7e9c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4f2aa8-0e4a-4eba-a73b-79efef46a398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e86fcde-28bf-4d21-ac2f-fc3c6724220b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7767a8-57ff-4124-98de-b8279d626d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6479a5-d370-43ed-bece-2811e961f8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7195cef5-7c45-4e59-ab05-db55de45e1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a83ae5c8-ba77-4a1a-9eec-1e40b9e13280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6aebc7-0e8d-49d0-a7d5-afc5e5e3f6f2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ce9626-1c38-40c9-85de-1e2acbff69ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47cf564-d161-41e6-bed3-7963b4e66d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4be43d0-8f1d-4298-8eac-06e7e681fca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "17a5c980-289a-4254-aa0b-1268666a9076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc41554-d6e9-412d-917b-f0b42f8a179b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe597c0-fc1a-4e1e-bcad-1e94b46709b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e15f3d-3135-4963-8e6f-dff6b805ae2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91f9386-f460-44bc-8a3a-98c7760a7063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6f9659-c02c-4c8e-b2e5-13aeaf0669ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7fb411-bced-499b-8302-12ea03e07f53",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffffd51-9b41-47ae-950d-8fcb816cd7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221745ba-bd4f-42ab-aea5-4e50ec0bd877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91578def-49ca-42f6-bc36-77ae65d7cf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1bb10fc-c5de-4206-b731-ea5941c6186c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6d9093-f9b6-4c7d-b699-80470b53309c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9cd619-2ce0-4288-9f45-26c1326eb5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3143b1b1-54ad-401e-9edc-a1f792ae4d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5753c835-a636-4eda-9ce8-090cf9e5145a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e43a9bcf-4f4a-4633-9475-1a15ae1b79e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114a5275-118f-4d65-a700-3ba536308868",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54379f9-e8a3-4850-b59c-4c8d55efff73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f3c0c5ff-5099-411e-b5a8-0735af9eb6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef0179c-858d-4469-910e-5abfb1c8ba4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "95fd1e1a-7045-4c22-abd2-b9d0b7f38fd3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e1c6fa17-de37-4e9b-aea5-68f9c327b554",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f9031f45-1aa6-4953-8ef9-7bfd9d1d2a1e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130e0b43-c255-4286-8f03-1d100ecaa6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "672b9a9d-b936-4709-b02b-5aa41613182b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e374d76-d08e-42e9-b183-a46a8e796e7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f524bee1-d2e5-4358-8463-9e4ba88083f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "067a0558-3be9-47f2-82f1-5eb42c672ba1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "223a06ae-9d1b-43cc-840b-a4a3c8fcff27"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a141bdc7-f532-4d56-a272-5ad4b6517040",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbfa1d03-98a7-4bb2-b467-a535e5d33c9c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "157d4100-a12f-439a-b3f3-64c48958deb8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "88f55402-3c9e-47e6-b58c-e184e769abda"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2dbdc9f8-6a71-4f3e-92b0-c6a4462987a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "65118212-e877-4cf0-99e9-fec5ca1576a3"
                }
              }
            ]
          },
          {
            "id": "6be2ef8d-175e-4909-b4da-39e4418eaad9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ff79d9a9-3733-452b-8b75-325252510555",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9ea4c642-18d6-4d6d-b64d-a132a2e85e22",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcce95ec-064d-415e-8001-fbbda5a9641b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "00fe0a6a-8875-4979-bb90-41288990d122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603aadd1-3026-4780-aca5-e0af7f6a5102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ae6bf7-9d09-478e-b799-228f170a7c6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cd98ff16-7636-45f6-9a07-365832e351d6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ba69d4f-581d-4fa2-9c8f-9b83a6ddc316",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed74fc18-fbaa-44a3-ade6-a2ff2b65fe5f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f21d760-cef6-43ff-a8a4-c57e4e397a8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6d486ba4-0e6f-426c-8590-b8990cc0c0a1"
                    }
                  }
                ]
              },
              {
                "id": "0e38211a-2cc9-4aa3-93c4-d30daed67b30",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "426c2434-2321-461e-b527-47736f87cf59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d990ceb7-1a10-4eda-8906-e3d7b043219e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c09ee4e9-b44b-4e7c-8cdc-95b3144215f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8223754c-b851-4a8e-8e82-12bb46251544"
                    }
                  }
                ]
              },
              {
                "id": "03f2da68-44d5-41e6-9a1b-e070c8c94ee2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c5fa7a7-2cfa-4df3-8ef3-4a84ea4b608a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18df49db-640e-46ea-aff6-9d8722e4fd87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a9c63ac-8354-4f2d-bcea-796b6e0f6f1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bcdac342-a945-4875-9af2-22ddc75b3af5"
                    }
                  }
                ]
              },
              {
                "id": "5002e52c-4fc3-4582-be34-05e79d141493",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d843299e-1c2c-4e13-b308-7f40aa45eaf8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "306f8d68-1a3a-4d0e-aa3d-084774a54b6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27dfc4ae-0e20-4f5b-86c2-972aceb52c6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2b8fa9ea-b148-49e6-93a9-01d2f78926d0"
                    }
                  }
                ]
              },
              {
                "id": "e4fe4a78-f824-4eed-94d0-fe67e147d39c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "834d911b-5979-4467-86c4-c688d1800fde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1294fbe-1296-4f11-9526-c8d696759aeb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3aa8f4aa-691e-4214-84ef-5d6a36de0126",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fc86bca3-b427-477b-a688-fec7ecf9109f"
                    }
                  }
                ]
              },
              {
                "id": "3d55ac68-7c48-46aa-8d08-050b367b0c88",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80ad9d14-f14f-4ed2-bddb-3211e94422ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba2f7c88-52fa-451c-a6be-cb64a6df5ea7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52a052ad-2698-4828-88ff-ab5e2844720f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "999adb56-e6f3-4615-b898-bfd353801fb9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52289dfb-5e3b-40c7-802e-d6b9dbfd5776",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0d10d77-af23-45e3-877e-3c5f100f6145"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b3c789a5-b04a-44ab-a7bc-3d91ba85b42d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1ba935a-b58c-476f-a888-a1b32ca5e121"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00e727f3-f970-4df7-961e-488def36a9e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "954a6e15-ebb3-47a5-89cc-5bd0f24687bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98537afd-ec9d-499b-8c9b-266d7d0096cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94e2b470-8915-4c7c-a0b4-2b41176b70ac"
            }
          }
        ]
      },
      {
        "id": "9ea670a8-3e8c-46bc-8f4a-b01329809805",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0fd6670e-e575-4d5c-8575-db82f818b067",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c195a1b-a316-402e-9f28-ee5600f32c9e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "56d8ec55-d236-45ce-b948-48e959ebcf2e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e698ee-ae94-49e5-be0a-8aa6b36e6d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c5dad6-0fa2-497a-9ca0-4e2e7a9679da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad6d790-bbd0-48ca-91b3-19b12cb6e5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee8c214-9647-402a-be90-d68b4dbf645e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb91f4b8-4503-49e8-be70-d25704b2722e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d275aeda-0935-492e-b190-0dae41547b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1508db6-49f8-4b89-a5cc-cde4ae36d667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f77712-8738-445e-bc6b-b5f9f4a2e973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "82483e28-2e99-44c9-9066-bd441629cd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7429a8aa-8b9d-4d49-9def-ddf0fe93e46d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15385a50-3948-4b8c-bb47-1b888901382a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec2af858-8ff9-441a-aa21-e0e792ee83e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f88f91-8841-4228-ae1c-1c951ecb95e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8545268-22d4-4db2-8224-357333bb3fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2044199-c0d7-4852-9101-e7a5e9844712",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90177b65-6cc9-4d00-9fd6-3b965f57a584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf475316-3ad8-453a-9fb1-7daf1aa18f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398823b7-5a3a-4ca4-a6fa-9ff63c50c844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ddfc08a-bf65-439d-a074-216b42e6d1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792ef972-bc46-4607-9b9c-c35445dc92e3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf03cb8a-a47a-458a-979b-cbe3bb8897e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648b22f6-1db5-4ad5-9f7b-bb1fc1dcda7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55664da6-76a1-4438-a250-89e170c86394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "138679c9-0698-4c6c-ba10-7b363aedcfd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27da2bcb-04c5-4eb6-ad30-3b0613d0a3d0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac229421-4836-4954-b8f4-4ddf5d95f361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "818caa01-7ef0-4a1c-a4e6-049c7819afce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19afeb09-db02-4057-8e4d-fdb25e85c30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6eefa3f0-21b6-4a74-9605-f76d98bab94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a0dc2c-4211-4662-9270-12f246618061",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d430b71e-7015-42bb-be29-68f49e4eb316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431f7cc3-34d9-43a9-b87e-e4063428ba20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350a9eab-a77c-44eb-a15e-665285f42c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6299971e-e5e6-4dc9-b706-6a4c523eff3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8884a93-c56f-4c65-a637-707f827490bc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90faef9d-8bea-4f7e-91d1-6346f0727e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3cfcc55-e369-4b1e-8691-d487009e6afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8f5edd-3063-4446-b21a-c7acefc2132a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f147be-30a0-40ca-8b9d-36e3a8629b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0baae29-4850-483d-bb10-6d99e4cc4bb2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b36ed95-9eac-4a2f-844b-56f99e3fa1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb491af-12b3-428a-8c21-75dc29de1f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f6cd8e-aa66-4a5c-a8ef-4f85019a9043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea54767a-07f9-4a3d-a656-36b3352c3044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8561f62e-508d-4fc8-9f62-5c1beeb53e99",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc53910d-7a09-47b2-b7c8-b4f938113c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8436b456-8627-4ef7-95f6-52f5e8690af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d66cf39-89c2-465a-be8e-c4a258dc783e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b91bc198-38c9-461e-9e7e-d1c38f4ea900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9224633-6bac-4109-a592-ceb53afbf9fb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b262453c-28db-49a0-ace5-1adea73a1cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84bbe62c-a2cf-43b1-918d-3b2dd5a42f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba0ce86-68a4-4207-abfc-0ce7450bcae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9361e49a-50d7-46c8-8001-1276c95997dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac18097-b04f-49b2-b624-2698cf4fa7fe",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35eff1d-31bf-493f-adee-8923213ea61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad99b31-246a-476f-b364-ac975b5bb06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28aa1bf-63ab-4267-9a65-55313bd031d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af79428b-8370-42ca-bc1f-e9e722ed0d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33ebe62-31bc-4ea8-9dad-8007a02c6f49",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ed6f88-8584-45f8-839f-8681b4517526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2b7b0e-7e48-46bb-aeee-34d21b83dbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0f37cd-316c-41d3-b765-2a9c22b67194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bfc8b58-fa99-4e54-9a5a-d2ea66b78ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d2495b-c930-487e-8505-6ae0d5daeeeb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28898490-6de1-49ff-a9df-c96296329535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50713fed-7da8-4a62-bd69-6e2b1e41d46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c906761-05e8-4316-9cc5-c3085056533b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c8aef3-4a4f-40be-a06a-2c85bd92cd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c5fd11-0edf-4f38-92cc-c4effb2d2dce",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc6965e-03a9-4149-ba4b-abbb5d7279fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbaae19-de5f-4212-b064-45ef4b4bc7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40be918c-7e96-4e47-bdba-3c9ec3a6c099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7709cc62-504a-4e05-a756-fec25f70da81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa4e226-3209-44ae-b05b-e4010870d7bd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae95b81-93b6-4044-b972-cfe49da7ba59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace0c4c8-8142-4174-81b2-a5e887ea3dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06b1dcb-7a56-4663-8000-9b0e17575951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f16e5264-2c5f-4fc7-9c3c-d33e7380375d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dba177-7fa6-4f64-8076-47947d9f13e0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1716ff0d-ebbe-4c6f-950d-4f6b466f9328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4daf8493-bf62-4f0b-a21e-0eee8dde48d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ea854a-8a4f-4747-b832-7fde2a7588e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "440f7145-d4fe-4d46-95d2-fbb4edf6f74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee2460b-9397-4bd3-98f4-f6543a6ab57e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f56340-c1ad-4dcd-b4c7-543c70fb2fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d818712-4187-48ab-b647-ae495f33bb96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b45437-ca93-45e6-a2e0-8295bd28b760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "48d8d4d5-28b6-4ce8-885d-e0bd896a9526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f26b1d5-f8d3-496c-9bc5-cd0372b50f9c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d1ec0b-e5b1-4528-a690-c65aeb638f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1100c871-f5ba-4062-9e1c-4e43b807d5b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03db6f89-1778-49f6-b00e-db5334f8814c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "839b9190-db37-4a83-9f9d-15707b1e0e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d59ce5-e2f1-4c85-9219-c98048520d8f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f6c826-62db-4bd4-a776-77d6310168d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce9b3ae-c1e0-42aa-9dfb-8cd8a7b821c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38134778-077b-4e94-8c5a-ab329692e1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a5458c-5a2f-47b5-b38f-f4eb8e47b998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1298439-91da-4110-9e48-b2118a338f5b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edd1ba6-fd93-4b64-858d-ab987093a934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887cbde4-9b66-4215-8abe-90d8cba4c4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7ed3f1-66a1-4b09-a325-1f6a5f2ab064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0499aa90-2174-411c-8be2-ed09647a95e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0c9d8e-5b78-4786-8fd6-26d4d8e8e9e5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07920c85-a6a3-4a2a-9d8d-fb271c5f7b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0614902b-24d8-4a2a-996c-3234c79fa26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c6c057-5e74-4d17-bd44-16162a70b9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00ffd8af-b4e8-4a3d-a9a8-84406614599e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232eec8f-9680-41e3-a73f-a336c237d319",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a9e2c9-1d4a-42d2-97a3-328830f664e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b07811e-9fba-4db2-ba7b-585c93b84bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b46fbef-86aa-449f-92f1-ff54a0b8a9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17acb3d7-20c9-4e19-a3b6-735351d8222a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3c7a5d-6a17-42e3-a6bb-e72bca6187c7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec210c3-cb3b-4f7e-bc65-b3f9cea1bf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0a6c93-c225-4ab3-86b7-56b21341ed7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273290db-6ae5-4277-9d91-912bdaa9baee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d350967-3bf4-4971-9e14-54df75c87a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb77c39-5943-4073-a255-0c96d5e677e4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0dcc6b4-b13c-4191-a7b4-e6f4dccbdef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cc49c9-479e-494b-8276-50eff4f9e769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d2bb00-6484-4f83-95c7-85732091e9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "659e3cba-98b8-443f-b542-0467683e0b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b232d1-d415-486f-977d-123dcbdbe58f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19cbce6-b970-44b0-8b74-92ee6d6223c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9796e9c8-c14d-4fd2-94f2-1a5996fb70e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea3fd29-23dc-4d50-839c-69882eca6d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc43c64-47f1-4be1-a790-29dd8005b6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3aa9c6-617e-49ec-bb2f-7dd59d19b050",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b39108-8d39-4a9d-a885-f778bc4c10c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad6dfcc-404a-40a1-a834-997c974ca44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431c7132-bfa3-45e7-8729-c8f5ef1122c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ca0982-834d-4a8b-a19b-0be4da541e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ab3bcf-9611-43f2-a4d5-f753e2b7247c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d5596d-bcdc-452a-bd2e-014b417f9720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd0f3fb-d0b5-489f-bc36-e91ade588083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32b143c-10de-4e88-95d4-59913f145ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46799a4e-2514-4064-80a3-ec131bb8cb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735c1d2d-3e4d-43a1-9e0e-fc38c0288ee7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443d71c1-142c-4936-903e-8f013f670b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e5144e-e66d-4ff0-901f-22bb277bc739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4163ee7-57c2-473c-bd4f-ad1fb28cd5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6db5a439-1763-48d4-b1e3-ef6cdabb02f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc39a842-2c70-4815-b2fe-3dde6b7ab210",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77cd37a-f812-4887-93ae-7a64d481453a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cd7680-4890-4e9b-a000-1d15fa3dcff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c69490-43dc-45f7-a904-9641ebd184ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ed9219-46c4-468c-81e2-324bd5296332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea44d04e-dbb5-4c72-aa61-9588d6d658c2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81767bac-d5ae-481b-bb99-cd7177fce367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f88d01-befd-4b1a-b834-79916e4be412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2c0970-fd35-4530-bd29-9c7a860270e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e25cae97-963f-425c-a174-fba6ed36bfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63eb0ffb-8c1b-49b3-a561-a8822aaba030",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35100326-4ec6-4244-be07-2ae86ecb7ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999c80c6-8ae2-4105-8785-1245f739ecfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8d9807-5264-4c2c-a24b-6f137b2ed6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "491cdd28-4c70-4e4c-8e54-8dbee56ab770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad237ff1-5888-44ee-b51a-bf7fb28d23f6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c5ef3f-40b2-4395-ad5a-dfed7ca8f551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911cfd6a-f61e-4373-8302-f16612d6d5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10c195d-0d7d-4db5-a1d2-c3592b6b2e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ba34dd-537c-41a4-91cc-8b0dc54b3c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b1c549-1e9d-473a-9d56-baf633fe4f69",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ba54bd-06a6-4070-9de3-6900bdc5cf19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa76b586-06ed-4b3d-b152-30fa2bfc3b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acf709c-1d8d-414e-a466-959648b355ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d43c2804-414e-4414-b04b-ccc672a00c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a068776-695e-483d-964a-8bb2926ed364",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d44093f-a8c6-4642-8d65-852386392d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6573c6d-b08a-4d7a-afbe-70684bae3011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac0b54e-27ff-4f20-9ebc-3d5ed4c61eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34c64d9a-fc86-495b-acaf-db9b2abbc833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709879db-1c40-405e-9289-2908c2cbb44f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f9b250-e8cb-4c59-9a6d-f772ee245a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58321f3b-0f02-4590-9537-afeb9e99665c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f04094-326b-43f0-862d-964cd29fa99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bac09d7-695b-492f-b830-38afd527a8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088b35ee-07f1-44e8-9988-d0fd0c082a8b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bab4399-4596-4e5a-ad7d-cac5ad8721e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a32b8a6-fca1-4b95-a88c-cf8ef9dd9f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacc4ef7-f285-4c5e-b997-81642142cf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad2e190-45c1-4699-a22d-cb39f9fe0412"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6bd8d9a8-b8db-417c-a104-0101c2771022",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "411e86dd-a73d-4e8d-a079-22514e8e7b9a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e1d1c2-f803-4465-ae65-8918d9cddac9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "83fd67d8-733a-43ee-b643-ca2bf2e14ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "738067c8-db06-436f-be39-33b71a7dbccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f797a34a-a599-4a1d-a5fb-e33f5f464ddd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a752c38-a97e-4bc8-bbca-ab967e1e84e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31af4629-4a3a-41c8-9bda-cd31b177ef83"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5470a665-b408-44be-8ff2-5ee9dfbd6687",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83f357f9-cdaf-44ec-9cb1-ac74cbe041e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe627d18-3ab2-4407-b813-0d320386726e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c5c4e84-0f1b-4986-9a22-1641fe48a3aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "110f693a-982c-45bc-bfac-317721ea372a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7027def2-5733-4a1a-84d5-d3d170661b8b"
            }
          }
        ]
      },
      {
        "id": "4fca720f-27c5-4091-889a-199a84f3caf2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "766895f4-2399-41b9-bff2-40dcf3992640",
            "name": "Negative Testing",
            "item": [
              {
                "id": "730d604c-1ab6-4a18-8ecd-734d92fa9e7c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8cd89abf-8831-4eaa-a8bd-cb21f978c1de",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ee5f06-abb8-4584-8a07-a338c14d01ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09725316-bcc7-4941-ad28-f72aa4667fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc80c44-cd0d-4f2a-b2ed-dd2f6c9ff29e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd16bc8f-d536-435c-b89d-089491f67dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0baf0b-4f2c-4bec-9fdb-a1de78509a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ef8b51-2437-445c-81ff-23c29721e02f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5086dc-36a7-4128-b333-db9b844a7ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e75d7b2-c180-467b-a136-fae4a4de7236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895ed98e-c5a0-49aa-8e6c-27b71a7a3f76",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176969f4-b968-45ca-aaf8-f0f120964510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8dd0ec3-6786-4ee3-96ef-ab8ba008edad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f12bd2b-1c7f-4591-b2c6-cbdfc407493e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0651b719-8e83-4cf1-9608-833d26376317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d5c96b-e0c6-44f1-9729-7292b536d341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56e4669-5585-4b91-a392-85e01b2561b8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b29bf4a-e576-464a-9201-a87c0f76a566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c68890-cd1d-46f0-baf8-7ca2fc959f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc02e35-561d-40c6-9a6e-85df78a822d9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f8509c-3963-4d67-84f5-8635c02291e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc5ff44-66cf-40bb-9b32-539230e653ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbafb67a-49dc-4d77-84ff-953ca188faa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2a4c86-ee7a-4626-90eb-881bf6fd53a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd1eb62-98f5-48bc-acae-57fe31fb4fc0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d410726-bfbe-44e0-8c4a-83a2df038a52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c1b6802-aadd-4558-881f-e11d7444b294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ae702d-0048-4a28-b784-6a4b17af5701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b4640d-cb29-41c9-a55b-429e45d3e9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fdb328-6e5b-4400-b0c8-1350093f2ccd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b49740-0ac5-466e-93e0-2f22e4d2f067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de751c95-cd88-4155-977f-8cf441cca006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f50470-2104-4df6-9451-cea1269de017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e046f944-8ed7-4f15-9a85-129d9f86b13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc6c541-0355-4adf-b27e-882e64806936",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7f3079-48f8-44bf-99d1-07fae4a915d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a88c8aee-cbd0-43b9-990f-07583ad17e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd5c8cc-3f51-474c-853c-cb46361a8fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19254d57-82f2-414e-8de9-e7a6f13e4aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b3494e-8df7-4c82-86c5-53ae7238efe3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4035e555-5d1b-43ed-b4ec-5cac42d505c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42f2834-0e12-4265-a497-a6f3a8c68ebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd86f5be-299b-4922-bdb9-9d6197fef58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72de5957-d6be-42dc-868d-e25530fb5b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593d745b-462e-4724-8428-54988192d744",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eaf5048-523c-4b4f-a6a8-0e7c6592c946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2a91dd-f642-4226-bec8-e0da39bbaf59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a0db72-d748-4975-85ce-8049b46fa4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a453d005-2ce6-4f0f-a4cf-ef7eb3b9f7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08980d3c-32e0-4846-84b2-00c7781f7c6c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1d324b-6ce8-4526-b98e-a241ced3655a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "033b2250-08d6-41f9-9152-fb0d37783a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1d4b1f-6d42-44d8-bc35-1896082be7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5cbc8af-51a9-40e9-8e2d-d0781f790092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de204193-4bda-426c-b51e-adabae63a4c4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3001fca-d3c2-4543-861a-55deab2689f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e52a7a-f967-4cf8-8b76-aea50ad53d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f2c479-bbfe-4997-b34e-a93fe2f1c923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ba34fa-f82a-46bb-9373-e4ad6a35d545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91215580-60ef-491e-a9e5-9c4318dcc361",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5840ecb4-2596-4d77-bcda-057bb8852000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56c056d8-6539-43e4-92f0-23e80ece0189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4c09fc-51a1-43a0-8358-1aa058543c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a5426a-c559-4a02-b77d-d9b61291704c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b03aa9-18d2-409a-ae98-2a0d8ff0e96e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340e222c-53a8-401a-81c8-8fc1f1f2546e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86e0c244-9366-4581-a568-81dd2ebe7de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e974a8d-8c7c-4aca-9609-fa6301ca9c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a5abae-2924-44f7-91d9-65af56129f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86a609a-9548-4a67-83b4-86c12a58d3c3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069aee6b-6409-4777-80dc-3f0d68f9f191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c31dd00-7d8a-434a-8b9b-c6ae80c41041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028184f6-91c8-4fd8-9257-b6e22d119253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed04e249-35e8-46db-9e0c-91cd7d67649c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d040fa45-0b4c-4a77-89d0-07dab354c55a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947dca13-22a2-427c-87f5-ccd73c688375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e1b506-456e-4626-b640-6321db479c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7799711-9d8d-4c34-9403-16245ea7a642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4ce67c-0344-4d61-9aea-917f28939e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c47b16-a857-44c1-a86a-0f12b6263180",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f64dc8-9c65-40c3-904d-14ea2e945b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a6de45-7acd-433b-8ec0-446cd9bd7a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29bff51-46f9-4b5b-828f-047ee5ed8b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a454b08-426f-48e6-b947-24af1629e268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65f227d-6dd8-4c4b-9005-6d16d18d17ad",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4823870-a23c-4279-b924-4a996ffd7c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232ca7ec-4895-4675-8681-81da04ca5158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612188de-ba01-4ed3-9e6f-26c2b5fbf79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864fbd35-25e7-433b-99d2-3c9ce182afb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1929824f-5ef7-416f-8bec-86f0efd4826c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c81b16-bc24-4c9b-8211-72f4afe2fdc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20178e45-2036-4490-8d23-41a5b807d777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f925dd8-e18c-4db9-bd07-ed6be2d8010f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ade167-c29e-4024-8c38-5901ea1b7162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f087bc-8a0b-4dbb-b860-43e3e50990f2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d643ad77-ff81-4075-8b2e-4018f3e1efac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423a4231-76ae-48e2-8f20-fd41cf7094c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8567bffd-f8d8-4c75-9b25-2049838fb7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc72a55-73dd-498c-9eb1-03cb9f854b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7444154-4211-4c75-a58c-12c403c968a3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfee736-cd02-447e-9824-3c5b45a03ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc93dab-926e-491a-b1a0-7a629c2c6174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19edcdc1-27d1-47f0-a2aa-642007a2694c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d65e83-9c6e-4d64-a93e-20f75d35855f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f196d95d-b4aa-414f-b7e8-c81975dc5647",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0755d924-9ff9-4bbc-a5e9-aab488f3e2ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dd3f14c-ab58-4f20-b812-9ecb59169fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1664ee3-dfe9-4f5c-b8ea-e06d249399fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e11580b-b11f-432a-b131-d9f6c8f26cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fec9e7-b763-4d12-b519-b0588948b3b9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2489a826-e03e-4d4d-bdb3-ef5360d3bbac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cfb8041-97a9-4d44-8a73-64f48927afbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e527740c-9765-41da-9298-2c5669e777f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d53958d-28c7-4a65-8ebf-79d8bb375ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215592c6-5d97-4876-bb2b-24c82241e9d2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9319b34-004c-4578-b0e9-1eabde30f147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b276d78-b55d-4114-bd0c-fedfcd5702bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3797862-3180-46d3-b8b7-517351e786c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658c3348-5821-40d4-8281-c37b9a3e953b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aea4542-d1fe-4c36-863a-61a79eca3c1b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749c6ec1-3239-4580-b430-4f75f9b968c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49891745-fc38-4e2e-a0fc-b377098acc88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6213200a-7991-460e-9653-8045de06bde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c5e60a-4745-4697-a183-17daa08123f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c1d766-32f3-4a93-b301-326f795c5f65",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dfcc36-55b5-48f3-a560-74db72ef6f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df37f113-32fc-4319-b060-788c3bdf128e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1564b70c-1d45-4b00-9086-a62a9fb49bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b5c632-902a-4c47-a0ec-e4965f709d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5173964-6653-4bd1-a5ee-d63b43c3380f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f44666-bad1-4fcc-9504-b41ced894dc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb853e2-85f2-44ad-bf90-1daec53b4cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8f86fb-2123-4e15-a65a-72bcc9d168b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f0921c7-16a0-4122-aee0-6fd113668bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41933fa2-2934-4152-a341-719d7029f5e7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd57901-33d3-4772-a9ad-25f105eb1487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2c70096-7e8e-462d-bd4e-adf34606cc31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4928d07-b54d-428b-861d-6d6c585a42f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a30ad1-8ab2-44e2-8e15-0cfef0e67a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bfe7ba-9212-4033-a8ed-4839d31ba363",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634bae5f-8cbb-40cf-8fef-b4a2367f3808",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a04c25d-c212-46f6-875b-c0cd2574fec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c025f81-37fa-4f57-a27f-00ef3ba49e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22de5cb-b77a-4cd4-aba1-3c88540c6605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7c4572-d3fa-42b7-827c-8570028b8142",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84aa4465-6990-476b-8035-b3b13572b41e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98f70f71-a3c0-400d-9ecc-2e82b93500bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b33d1ee-0026-4545-895c-4525beb7e7f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de1551e-4be4-4420-b971-34594f3ba48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0366346-39a1-43a0-ba0f-e6956623a7cf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420e13f5-1a6c-41b6-8a21-deb92572b502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ceba668-e02b-4b0c-b1f4-1adf6f8e82ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b185bd45-96a5-4e91-a007-10c302dba6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bffdbd3-5a49-4237-9189-2c63092aff4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1df87a2-4297-47a3-84ab-b4da5a6f2a4f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f29fd5-9d4f-4b09-b5f3-0c719427ce7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfa53abb-a1f5-458f-8693-c0bb6c214a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c983f1-dcde-4f78-913b-f2dcc6608394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4155bb8c-c4c9-494b-814f-a1344ab9a201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e5742e-211e-47f9-a966-ea158047bce5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2d8e52-d4ae-4728-b53c-38cdce098720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438e4b94-8244-4a49-b103-d5f6a293fdd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4dde02d-1517-41af-b99f-070420af3435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ff63f9-f739-42a2-b537-6763025ab1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73c826f-0c52-43bd-8217-2252c6c6d243",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69aebd27-b89e-4702-a3d5-0257248907b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc0c35c-8c2f-496c-bf4b-7486ab2b0990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cc16df-1ba1-4f6f-9754-2545edec0ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad08e10-3fa2-4f75-bec5-7605a83941f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c872dec6-f392-4699-9167-e9e5e43753db",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41160f9-100c-41ae-96da-f1b5924f5b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ac3625-7f64-46a0-8e13-ff32e0b34b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc798c7-0693-4d6d-bedf-3e5735cfaa5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec75868f-3fbf-445e-a3e9-25c88502770a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da76ac1-f235-4c2f-924a-a1e24d8e8203",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881f337a-dbdd-490e-86a4-40a3fa74dd4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422050b3-0277-492a-b6de-d984455797d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9231aca3-5505-47bd-b67b-00f5e6fec8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e24744-a0fa-4904-a769-48073b7394bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ac6fd1-3787-4b1a-93e9-590b79c58b64",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d689bb-212d-4554-8995-456e640f92c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67974777-76ea-4485-89ad-20f125a54749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f9bc33-fe61-4838-8974-8088868a586c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59e0b49-faa6-4f49-8874-4629fa042e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6f497e-be48-4eea-ab62-5bb064fc5fff",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92ccc68-b793-4cbe-b5a0-5e9067a07ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624d1396-31d4-44b6-8990-2ac8c67626f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86303e29-793b-422b-9336-eaf7d540b005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d4d79f-d606-4e1c-898f-d639318bc163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d946c2f8-c57d-4573-8200-c9b1927c8f62",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f066a4c-506a-4b2e-a6f2-0802e2984512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd089ed3-ba68-4ecd-8624-0975e8bcdc0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "728041d9-398c-4f9f-8282-5d2fb602b694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba29176-88f8-4558-822d-ff26772c10ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e99413-ccb8-4051-995b-25ad1b9cdd94",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb90f4c-fa3a-4ece-a9f1-9efd0df6ffb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0132438d-bf44-46c0-89a7-020b3e9636af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624fecdd-8665-4097-95a6-8905c009f46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fba64fb-6ac7-44f1-adfb-072a27b78c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca91862-18cf-4145-836c-7ab5c3e0a02d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a135d98d-5598-4122-8bb0-039b65e9ce40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee512d2-f8c1-4711-a6a0-b861073dad38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70e0774-47e2-4797-a283-d34dc0adda87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4213926d-27f0-4aa7-ae87-3e82d41d73a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807a8d8c-4a60-4e85-ad81-d0bc8aec7835",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b6d586-678c-45c9-9b54-a48560caf043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca229ac1-5053-4f7f-94d7-55246ef2699d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b6bd5b-de4d-4b94-af81-2c91d4cf57d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6b541c-099c-49a5-a601-ae3991854f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8430af2-ab85-4157-adf7-587d8248d333",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf51827-54df-4c6b-bef8-2618b47a2022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a24356c-f18a-4cee-8284-08f9465268b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33a2951-f6b7-401c-bbe3-2d6dba191f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87557993-67e4-4a99-a53e-6952438c804e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190a5a8c-3b85-42ac-8b50-ed21d468e105",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afc715e-aa98-4e10-a779-65b5efd2f4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451850fb-37ea-4cd2-8541-f45a4ac157fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd58f35-48f2-43ed-9f90-fbebbca52006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc7bed5-b6cf-4e3d-a4f4-52c2a1fde6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9c806b-0bda-4904-b145-917b85f69e51",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d25c990-9e74-4305-9514-39f4e95b4c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00709e26-96f2-441c-8292-8e4dbfeb7a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbb5a79-5416-4d8d-a78e-98a31c80c6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1da222e-9817-464d-8404-3251229eafa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347552c2-1334-4b27-946f-b0bdc3f31db5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5225f39-fa1a-4bd0-9661-4e1a94c2859e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68fd4036-7cf4-43a9-b65b-720f74b7df1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8037a9c-4368-4591-9ee8-734ddaa6a520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6255bdc-5026-4d46-989b-2e7e2e8a95e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07592b16-9ab9-4f8a-9fb9-48be7f0a7a40",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39fe273-aad8-40ab-9178-ae2998f8de44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c39fce-25fd-4296-b919-6bfb56b940c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b943c3bd-934a-4929-97c4-06d93a3fde22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465ef2a1-c596-4573-a007-eb77ab041201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190cb5fc-3cf4-4dc6-ba66-73a1ae30a619",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9984e08-0aab-4c3d-8c17-4f1dae750159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ae2f11-27c2-4bee-bfa8-da0c06616375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9f0c73-5bc8-4e0a-a557-a075fc6cb10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ae2d34-f55e-4e73-8985-532e16731a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf62a1aa-0de2-4e31-8e86-887648c4fa1e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f38c343-eb66-4d96-a588-892b88e17e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049974f3-5ff4-44e5-b87e-ecbfcae452bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b22b55d-92e9-40fc-afbb-85fe1fa74b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efe4fbd-5713-4264-b76b-fe48dfc87256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b55031-f02e-4fc2-a589-3c41a1e1eb27",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf85fca4-2af7-48f0-afc3-0d8f1b48694b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0139ded-65fa-4f9c-86c9-c12d73eaf71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9448c89-6b30-4baf-a11e-a08c3d116009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a16a3c-f9b0-412c-862f-7d5e4cd4e434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07927e5-ebee-4dec-8a32-4a1ae0014478",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10146c00-6225-444c-9982-52a6e197cbe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec2bd66-7dfa-41a2-8f9c-a6d9c28fb247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85bd5f6-2e9c-4bb4-b4f3-0f1bcc35409e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f18f626f-fe11-431b-989a-916d665c3f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be4c51a-dff0-447d-800e-d3f5ed3a3b13",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5000eb-0f72-4f03-9ff9-77fcd4ff1d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bddad92a-1268-41e3-b312-14749d7014e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002a3d44-3240-4e11-a31f-424ac48ddfed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321775db-48f3-4e88-ac09-e2bf3e65e3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce63aece-2e75-4a71-8a9f-f31eda784224",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ebcf26-c991-47fa-aa6d-d6ed7a3a4115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b05a00c-369c-4447-89a1-9ad3ff46184a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7caa28bb-bb3d-4a53-86e6-c7f8b3def5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcc30e9-711d-4204-8b57-2d534cef71fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5615356-5100-4fe9-879d-6478afbab5e1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3c19fa-f0f3-4902-ab09-438ac591f98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ace2ed-762c-4b79-87ea-5a2200dc396d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2b0b2f-2a4a-4211-b34b-44919184c662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e02889-5274-41f2-981f-74dfff1386ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492be6b9-975e-4b0b-9acb-107c7d83ea94",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdbd3f6-a8e1-499b-b627-280d7c673900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad15452-8005-4d72-86ad-b979774c420a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5731214-6daf-4d59-b970-8a0df04fe7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1d4b3f-f130-43ee-a4b2-03055490d574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cb8f0a-7202-439a-9bfe-6ac462281f31",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50845c18-8375-4f3e-8b45-f134fadd1bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ab4428-16af-4f89-9707-474c3a434e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9e601a-b49b-467b-b46f-b8c528d47765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618fcdcf-b000-4c75-a3f1-da7f8561668d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762be977-ff66-4628-a0fa-112372f419dc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc23102-678c-4d4b-9e84-8a1154a68036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0663ab-129c-47a5-ba98-55fa64965d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6592a0f8-de5b-4e3c-b7d7-d2a1d34f5bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c96cb8-5f7a-40b2-a843-4d3d3750ece0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31616c0a-065f-4526-8da3-e2baae7584fc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112bc920-b15d-4597-a3ad-f1335e99cdce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde91d13-8eea-4671-8088-c823d61c31aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a158c242-3e48-4866-b9e4-dadf8b987cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab0db93-bdd9-4774-b3ed-3088efb20a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a1a0fd-a487-4f44-9f4d-e3e247923d09",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfcf85e-660e-4d30-9166-e1fe56b43964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4053b7ee-ac46-43a3-ab77-24c95046a7b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0162bd7-9baa-42d0-85a5-c9157b556c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe677bb-4468-45b7-90a1-fee74cec6dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0b59bf-9d76-4af5-9a07-90c1cf069946",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39677e75-fca6-4865-bb04-eeaf9364e377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fa0a18-45be-4657-83f9-9afccb90ebdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e91924-759f-44c3-b40f-2ea3de7645ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bb4534-307c-4a2b-87b3-7783c547c35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33db71a-4f7c-4852-b5c9-04eb3e40742d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e7d9c0-42df-465f-862e-453565630301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7befe49-3d72-466e-8c50-cbc306cdc5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd764dcf-adbd-4645-80cd-2732d4bf80a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa114f7-72d3-47a7-8a37-13e2cc40d9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c34290-1f83-4726-94ab-f1df5984d595",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82ff90a-4fba-40b2-ba53-62a0149c6537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "996d3f07-9be1-4d44-b882-ac4b0a0fe413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7b9e7e-dbcf-4321-8933-59ce3358b242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52cd0bb-3d9a-42a6-8e5f-80e3391ce4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759c0727-34f8-47d6-b2cc-9570b82051b3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c26334-f59e-4990-bed2-1a4cc1ec970e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ea7f36b-2e19-491e-851b-b282188e4256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b878b8ed-0bd7-45ad-8955-e81ec893a837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc27bbdb-47a5-46bc-8a1b-1a3feb32fc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc413834-dffb-44db-9f3e-acf041d9e29b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d3d97e-e43e-42a5-b9cf-afc649338c25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4fb695e-d7ae-427a-bb74-a5f3ab556071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9286e6c-7552-4047-90fe-e3d0fb208719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ae738d-09fb-4a15-b7d4-c33df1f1724f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2aab1e-39f5-4451-a4a5-a03c2ac07ed9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5593257-7004-4e60-a1be-f8c883422a27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0338ee1-898b-495e-bb16-2d517b390829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e6dc2b-76c2-4e24-a8fb-14e64c91a3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde1f188-02da-4391-a4bf-999284d7525a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67590f29-e951-468e-abfa-23402b3e1c5b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb98ff22-327f-427f-86f3-614df1e96a8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "316693a3-e390-459d-9776-c3e6b857d78c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6033645-9aa2-4f09-8d7d-001f78940cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1dc1971-f848-4ef9-abdd-2c9c55f84c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d41e475-a85b-4a08-b095-5312013161cd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9efdceb-db3a-4870-b400-841a51ad1b61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c216d2c-8e6e-445f-a52c-120f01085cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44dcec9d-829f-4e89-bc26-b21caee38f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da03c415-fe11-4ebc-8b93-ab1c17451ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e545d6-24d3-4ba5-b959-f7f409076217",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61484e06-e7b0-4df9-a1b6-32fa082267d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dd3ceed-b589-433a-8bde-f754170ed64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "146a55e3-df5a-4dec-b9b0-10ad398d32d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40420010-1fc9-41a8-81aa-a8491a5b68db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd501e7-67a3-4632-b881-d3bd74f0cb67",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72bfdb1-bc58-4d8a-990f-c7ce4d120d3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24e4363a-0ca5-47b0-802f-7c473d07841e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8daf64a4-0298-4e9f-a432-0124de24c5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25bc591-6a15-4867-9edf-2f251897fb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e9b7a2-4e6e-40d5-9295-9245553651af",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ebc54f-22a3-4940-a7b2-e56d90c74e5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40876af3-3ca5-4af4-8c77-8182708f31df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75563051-bcd1-4bad-877c-db7aeaf84794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1966192a-3d56-44af-8592-db04f086bcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec29d04-858a-4014-9a6e-ec20466ca98a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062ded3c-508a-452a-812f-f8032d7d0e70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bc526e5-44ac-44ed-ab5b-0b6eb6e0cbfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a265f869-22a9-4269-a67e-86f1d648f7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc35628-fed6-46d9-bc84-41338894cad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4437f6-8d8b-42a5-a3a4-e9daf1a8f28b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79682cd0-5aa9-4814-9cd9-58e78f90909c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4b04c4c-d1fc-42e0-be8c-2998390bc5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc2e978-2754-4fd0-b867-beeeb8f36e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e4658f-f275-4889-9e12-990940d778f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8e0d08-eb43-4f46-8773-975089273a5d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb06a15-528f-4845-96cf-27045570da74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f21985-e2ac-46c9-b541-154a9e0270b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d785c7-c633-43b4-b9db-7b1985d68536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e00fe90-ae7f-4930-ade3-a1567202a4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cd3bda-2fd7-4ac2-902c-aa0cea6b4483",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae926f16-bb44-44f5-9ded-80a10d639d3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4274a594-7f0d-4fe1-8fba-f5e557308503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84210878-f1b8-412a-a65b-85547d2ca52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f7b8e3-334f-46e2-9a04-266c3608eaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90afcea5-05c2-420d-a90b-b950559e2584",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb976418-1a8e-4d08-b4d6-5ed1cebf8919",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89d3156c-c9ed-4c7f-8e14-487a3d2f8d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd6fc36-4414-40b0-a3c1-3d25f0057ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8429c87-5331-4616-91ac-351570415c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df599fa8-795b-4761-965c-ef0124ae16c7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d6f339-93c5-40c7-a3dc-a1b159fb5e3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d42a8e0b-bb93-4e8e-8f41-1b13a64d4f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bde034d-4cb7-4a29-b74b-49268ea727d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925be2f4-2080-4779-931f-73c29b0926c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c29125-ee26-4850-9512-c9a3347e8e10",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0784192-afad-40f9-b68a-dbdd83303038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "746f7873-905d-4fc3-b684-dffaeae6095f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43231b9-7d5f-4b30-bb40-069937771d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd31612f-5228-4015-8005-7dae0b28498b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76b041c-9400-4422-aa39-81df81cbc0bd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7d4926-cda7-4ba3-a848-6860f7a77ad5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adbf20dc-b548-41bb-ba26-bb375d584d86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9025178-b3c7-43cb-9991-f2cd2e06f866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef5f303-53ba-411d-88d8-6c2b4b316205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e5bb63-9ec5-42f3-8465-4475985b99cf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7eeb808-558d-48b0-a341-11f47f0ce6c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d40ae8e4-c973-49b6-b3db-14cacf407a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac35fb8-48d2-4da2-bce6-f34a56faf06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ddf30e-e86d-4122-8f5b-70047d72eaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341719a5-fed5-4598-91ac-7c70852ed073",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1488be5-a236-4ef4-a36b-f1df12309a3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70efe88b-e51f-4415-94d2-01e61d7ad952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3066a7-df1c-4f53-8eac-87d6d21ce1f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d22391f-686b-4571-9c25-2eeabe433c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd3fff7-cc24-49e9-8183-d69aa5d95808",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0091be9-bf7f-4123-9752-36b231e7038e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc3eec3-2f62-4cf5-9c66-9d7c45e5b77e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cfeda2-a56e-4494-a7d9-0ed67a5fafd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5359d72-386c-489a-ac6e-5f1c8db116eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bce0a6-1247-41a4-a0fa-72c0dece6191",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f17e2ca-0971-40d6-baed-6818662895a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b8788ac-c883-4d2e-882d-11c5c21789db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64881720-7161-4e9b-8573-4e47af7fede2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a235c7e0-41c0-4184-a9e7-2fbfb76c49d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77de1358-16f7-4e5b-b847-098587ffd59f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91be0c28-042e-4df3-be69-991f0ee82757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d495f88b-c820-43f6-9079-cd4f6990f1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd2a962-812b-4902-92e9-60cc85f3267a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35692d9-fbdc-48b6-ac54-63b7ccdd6511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784717b3-c7bc-4246-8102-67a253ae9020",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf0bd13-c94f-44e9-be8f-af0d3e0780ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cc98d40-08ea-48d8-9df5-a7c1c472f3d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb771b62-ca07-4307-9f74-ce94d3f1aa62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24bce91e-ecc9-4b84-a047-7581fb620b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e455150-6afc-4818-88b2-4b35d8e95365",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738776de-1124-449b-aeef-ead5d49205ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8da799ef-1790-493a-b77a-d3a40d6f6889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e918a14d-f266-4838-8a8d-970906dd5ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70282f45-f362-49fd-8839-28e4fb929f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d9fe34-3d89-4c39-8942-a9d3faa4f8e9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf1340b-9b1a-4b69-96f4-68717413c196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "723cc8f5-af84-44af-a5f5-d60eadaf0cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46711cd9-453f-4aed-a626-1d38e8de80b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e212008-5019-487a-89f5-79a5c64e9c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecf4ae7-9670-4d36-a911-ea5736dea171",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0701c9-5c23-478f-a4ca-d067b5b594c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d8bb57-887e-49fb-8199-99e527965389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "155bd55a-4920-4673-9065-34a182ca12ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1ca226-d7df-4a9d-9914-0760c839c5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10828e2a-7d13-49b2-b97f-73713ba9d39c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0402c78f-f3c2-438a-986e-b0d67d1cdb6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa6b19c9-b0f2-4897-9b36-8f519bf2cf0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8beb01e-6c34-41fd-b01a-008df635e929",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510a5bb0-488d-49a7-a35d-2c8dbaa4f50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa15488c-19a6-44a4-a719-90779ac51d7e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c451ce2-a716-44b9-aef6-10717c088777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2a07da6-af02-4531-831a-2e1438dae06a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9619da1-e264-4dae-8ef2-6ea7b1355d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e978851-40b6-4045-ba3f-45d2b3728ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d744275e-f975-4e85-b305-2b135bfd9034",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7307a441-044f-4f0a-aee8-c48fdb8d7495",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "290ec193-2e3c-467b-8d6b-4ced2139cc2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd735924-b6c7-4daa-babe-1e84bb5352b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b63880-2365-406c-a78c-9d911347e6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f96126d-d9b2-4a55-8a8f-156fc2b4a954",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234d2bdb-64db-4925-a8d6-363e423a9dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8dda575-5624-4bde-8a89-257dd4f67427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ac86de-f3e4-4de4-b252-c8a628790f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06484bd-8833-4f4d-97b1-d1e6471fcc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63db125b-8a6a-4627-ab12-aca7ceb8fc13",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916639d6-bf5f-40dc-9a98-ce77953da305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3afc2c4-aa41-449a-8851-faa375fefae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77230278-d49c-4add-b953-20762cb27446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c9c8df-aff5-432d-a941-18d177e72ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6399c3fb-f743-4355-a34d-93d24a7e32af",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd97164d-e79f-45a0-932f-3585cc61e711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ef8e8ee-217f-43a4-af54-77b1a467fc10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f16246c-549c-4366-97b0-6f240bfc8ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e21a2a-afe9-4bd3-88a3-1141df5cb172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450f1950-5fc7-4f65-9886-5c3057d79e88",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99426fd-e276-4e72-a4d2-ff89426a9cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16033966-6230-4634-b2ec-17fcab62e921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ed53eb-6683-4bc1-863e-dcfe651d33b6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1f2da3-36b0-4131-ae64-cf8c458ee136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfeb8e51-b47a-4b24-96ab-fef998f7230d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec82aae2-6872-4c02-913f-3fce1dfc8080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff3bfe44-4253-4049-b4b8-e8c1942a62e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0aa45cc-1cc3-44ac-8d7f-7584beac76da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80852fb6-c0f7-4083-9efc-0086f33dd9fd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b083b4d9-d83c-47d0-bfdd-5d6d47e53521",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5532af79-5ac6-46aa-9db0-3e012df327b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d9f5397-ebd5-4b04-9f85-9351fedb40e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23a21fef-0b67-4dea-8d81-35c1ba8cffa2"
                    }
                  }
                ]
              },
              {
                "id": "0a348b42-aec2-4a77-ba20-30eab78372a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d1dde36-0571-427b-8e8d-55e4a8666d6d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533136a9-0ea2-4814-a94e-244d0edf388b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ae66bc54-2510-4de6-b102-0b2286483d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623accf6-5dd8-4896-99e4-cf865e8d2dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d6319d3-f874-4bbf-a12b-cb911790386f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21a444ef-379b-49db-a741-f9b040a15bcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6659e54b-34f8-4fb4-bec0-940d39a8ed64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2170fefe-5ea0-4b8f-bcf0-fb09879ceb9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc915a1d-8241-4406-8f9f-990b97dc8d99"
                    }
                  }
                ]
              },
              {
                "id": "75a1647a-fd17-488c-8352-8cdcb325f993",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2d51f142-818c-4aff-b71c-1b0522ad0247",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80693ff-f068-4d84-a052-691f6cff7ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4533bec0-f6d4-4177-9e78-2e486d18d448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30af3139-5e77-4d72-80bd-ec4ca8548096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f2242d-cfb8-4742-af7e-b817cc5b24e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ef5c88c2-82b3-4f97-9d1c-6fffc6001b47",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9459105b-f7b9-4e82-a04b-42d482abc423",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c24789d-3894-4830-b564-8f1dbf631a4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6ecdc317-99e2-46ff-b743-cbefd634c015"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9870c01-776b-4d89-aba1-8cff2ccffdd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39ccaaa6-18f7-4489-8851-0bbf29cced20"
                    }
                  }
                ]
              },
              {
                "id": "70aba349-cf8b-4f17-ad08-17de50fabf9d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b598cd4c-9e4b-48a0-b905-a1af7f10ac2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "97cfacd8-75d5-4171-9478-39784fdf93b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7943ddfb-43b1-470d-8530-02d01013aac7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb596419-4dff-4b70-908c-fa5a97600209"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3ba6a3c-8300-40c8-9f27-cc0cc7f47ab0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c25c2287-cdfe-49c2-9798-f13070ed13a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9169a76-eccc-451e-b6f6-deba819eda30",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "766e7731-7367-422f-a321-48c328f6ea73"
            }
          }
        ]
      },
      {
        "id": "c8490e4f-33e1-44a9-a2b0-b29728cb9522",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4d582a12-589b-4055-ab73-cf8797812493",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a79ff7e4-d1fd-48f0-83a0-7d003269c5b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d799af1e-7bc5-4f4a-bd75-9a4b19b8a59a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2705d4ca-2012-405b-b1ab-6febce812930",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "45bbc989-43af-4d5a-b647-69a6ae5645f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6f1a9e-29f0-4b3e-a937-21ab9e6bce84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ccfcca4-5661-46e0-9622-f0ef5671e32b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d48e6ea5-1189-47bf-afd1-991aeac13100",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1c0d5bc-56d8-49ec-9e0b-70ecd73601a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16534e0f-3fe0-40a8-b6ac-081feb7c42dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cf86a57-2ef2-4583-9e5c-129d4c91352a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "feacff56-b341-4f2c-b705-03c59fa759dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6d532412-bb11-4111-b9dc-8c2e47ddcb81"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "476381c4-ecaf-4160-b2a3-5399dfefc5e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55b290a8-5dfc-473d-898f-b477c12979fc"
            }
          }
        ]
      },
      {
        "id": "ae25346a-19a4-4dad-a61e-05325de654f8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0ff97021-c624-4dab-889e-21e82f43f176",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba570508-ab46-42ed-a98c-3cae298d2fcf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87f5fa52-1d8d-4df8-a3d8-3ca0087f2476",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a819e5d-27c3-4736-98c3-ea3e9bc442a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "596336a7-b6c6-49bb-855d-715345dd2e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62632aa8-0e21-4497-8cfc-5ed3a737e611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73ef0b60-f199-47bc-b5fe-a412787fc033"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c238b66-671a-475b-a9c2-b1d1851cdd52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb73658d-0d3d-4cf8-9e0b-036ce43b3584"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f82dca8-b5f0-4355-b6cc-a90fe2f31524",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b56bf49-8af2-4ae0-bfd3-06e7a45a5ebe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ef693e5-a160-4201-a2a0-ebed6e60476d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f636d4b1-1ff3-4696-8b28-8444d577a309"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a7f377e-3fe8-4546-942e-14768bd931f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27d366c7-66aa-4356-8836-d968f582d244"
            }
          }
        ]
      },
      {
        "id": "8f9544b6-7492-4b01-b6a0-61791bdd68da",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ebc6061d-aa92-4ea7-89f6-6778a4049008",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d65ff32-22ad-45bc-bd38-3f48eee18c15",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2962bb0-df73-468d-b03d-8280a1cc0fec",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0569e7d-9b77-46b0-9ada-53bae7befa0c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c909c57b-5237-4f40-bb8c-69562174022d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08dff0d-6bbd-4483-b66b-056a33eb53fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0282e25d-554c-44a4-a2fa-568ae453e78f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "280fcfce-790b-43ee-b9c3-c76743028229",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "903b25b7-f78f-4cc8-bd0e-3567b34bce4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6125309-abef-4ad5-b72f-75d73f6e5999",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6559e90f-2372-4d4e-9a3a-fc0519e21a01"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85f2fa04-da0b-494b-82d3-f72bae40b51d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6c83f942-b1ce-4ee4-b7b5-3715700f1a06"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "faa0c123-15a9-4d01-91d7-1b40a1041d04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0133c7d4-2fc6-4ad7-af1f-0a4c8c629370"
            }
          }
        ]
      },
      {
        "id": "23c05398-0366-42cf-a873-c08cb8276c42",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca09bd50-96a5-4d5b-99f3-50ca20c24064",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "718d06b5-9020-4c21-8def-5c6e435ceeed",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "106e290c-45d6-4d89-9009-134577f52f08",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "434321da-a87f-462b-ae1c-6ce9372db4e4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf1040c5-2d7f-4cab-bbcd-de45fad889ef",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 96.05952380952378,
      "responseMin": 4,
      "responseMax": 4921,
      "responseSd": 437.49933381873444,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1712104457912,
      "completed": 1712104490454
    },
    "executions": [
      {
        "id": "fb1f6048-9151-408b-ba5f-df2f9be6c868",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a2907784-4615-41f6-a5ac-b8744d191142",
          "httpRequestId": "43eaee1c-1464-47a2-bc21-0214cac41669"
        },
        "item": {
          "id": "fb1f6048-9151-408b-ba5f-df2f9be6c868",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6f255bb4-791d-4258-80c0-f59a1aa57c52",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 0
        }
      },
      {
        "id": "4a12f0f1-9a1e-4e90-9232-3b56a5be68c9",
        "cursor": {
          "ref": "fab159f5-6816-4099-b35b-649ad3f56d0b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "894fb295-5158-4012-b4d7-61f2f9fc864f"
        },
        "item": {
          "id": "4a12f0f1-9a1e-4e90-9232-3b56a5be68c9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e0a2a0cb-c367-4802-89ec-faa59de3b4e1",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "2554849e-e995-4ba4-becd-d45c4aa261cb",
        "cursor": {
          "ref": "f409727d-13e7-49b6-9b81-bdcb1004526b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9f3c59e0-7abb-447d-ac33-08733a1cab4d"
        },
        "item": {
          "id": "2554849e-e995-4ba4-becd-d45c4aa261cb",
          "name": "did_json"
        },
        "response": {
          "id": "d7ffda1d-71a0-48c1-8b7e-35fd184ad45e",
          "status": "OK",
          "code": 200,
          "responseTime": 237,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b984808-9898-433e-88b3-62cad4b0b6e5",
        "cursor": {
          "ref": "bf97fa4d-4a9e-45bd-a392-b2476f1c984a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d72370d9-ad3b-4ca3-ab26-3d8b6ab6f3a8"
        },
        "item": {
          "id": "9b984808-9898-433e-88b3-62cad4b0b6e5",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab54b85b-d4a8-4632-b21d-4e901b8445e6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 482,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b984808-9898-433e-88b3-62cad4b0b6e5",
        "cursor": {
          "ref": "bf97fa4d-4a9e-45bd-a392-b2476f1c984a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d72370d9-ad3b-4ca3-ab26-3d8b6ab6f3a8"
        },
        "item": {
          "id": "9b984808-9898-433e-88b3-62cad4b0b6e5",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab54b85b-d4a8-4632-b21d-4e901b8445e6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 482,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1cc52f-a28d-48e5-9d70-3ca19529b95b",
        "cursor": {
          "ref": "23418bdf-b052-43b9-93a5-17afb3d35d02",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "217db9dd-ba92-4f27-a9b9-25b9553916a2"
        },
        "item": {
          "id": "1b1cc52f-a28d-48e5-9d70-3ca19529b95b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4b56e543-4c76-4358-9c5e-48fafca3b4a8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6134eba3-dee8-436b-9306-09f249dc723c",
        "cursor": {
          "ref": "c29d8c7b-873f-4c86-8d02-0f2849bfde33",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e7a56e25-8b3d-4bfc-a3be-308105e49053"
        },
        "item": {
          "id": "6134eba3-dee8-436b-9306-09f249dc723c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "371b96be-99f8-45ba-b215-dcbe9d3be743",
          "status": "Not Found",
          "code": 404,
          "responseTime": 17,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e3ad12-5f0d-4631-aa40-29bcd28733cc",
        "cursor": {
          "ref": "6bb2646f-fa04-4d10-8fe9-67355eaaa366",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7cdc82f0-a80b-445b-94c8-3054fd80f857"
        },
        "item": {
          "id": "c4e3ad12-5f0d-4631-aa40-29bcd28733cc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e79ef1e9-d07d-4ce4-b161-7e8ddace57d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1225a71c-fe21-4f4d-887a-9eda241b049a",
        "cursor": {
          "ref": "1260d3d1-eac2-481d-b1a4-5a183db80000",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d8c33297-251c-4da6-8034-44a5ef2dbbcd"
        },
        "item": {
          "id": "1225a71c-fe21-4f4d-887a-9eda241b049a",
          "name": "identifiers"
        },
        "response": {
          "id": "d806b061-311e-49b8-8a43-6a26c03346ed",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3d15c2-e7aa-4571-befd-1512400c4347",
        "cursor": {
          "ref": "27bcdf7a-df8c-4f58-bbb5-110953518886",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "aa7dae90-bfad-4dc7-a645-52eb382a6bb8"
        },
        "item": {
          "id": "6e3d15c2-e7aa-4571-befd-1512400c4347",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9971af11-1213-47c3-a736-04debc5d965a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab857bf0-5778-42ef-a21d-abdc2671732b",
        "cursor": {
          "ref": "e16e1fca-191e-4d2b-8ae1-f61c3b838c08",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "149b6447-e043-4e80-af5a-721f4fbe9467"
        },
        "item": {
          "id": "ab857bf0-5778-42ef-a21d-abdc2671732b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a5932285-1833-405c-bf20-0ace90e74498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4a8a9c-f321-4448-837b-e26da4d4b0f9",
        "cursor": {
          "ref": "32966619-c78c-4c60-98ba-dfb35ceb06ac",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c65c7e7f-fe98-4098-910f-771d08bfa005"
        },
        "item": {
          "id": "ab4a8a9c-f321-4448-837b-e26da4d4b0f9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "941dc78e-5b3d-4e96-a18d-66dd0e75c2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07c5fb2-34b9-4479-b5fb-7e8fc0d77d36",
        "cursor": {
          "ref": "84917f38-0fa3-462e-8221-11b5c335dbd3",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "babf1c05-a6ae-43d7-9d01-4417eaca0d42"
        },
        "item": {
          "id": "c07c5fb2-34b9-4479-b5fb-7e8fc0d77d36",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0f047d82-348c-4d02-b698-2f83036ee95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b24c44e-810d-4aff-b6bd-bfd3901e99df",
        "cursor": {
          "ref": "c27e58b4-1ccd-4626-9a39-6888898895f8",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4fc3de3c-97db-4303-95a9-5aba71f7fe04"
        },
        "item": {
          "id": "4b24c44e-810d-4aff-b6bd-bfd3901e99df",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cdc59fa0-fe74-41d6-927b-5af00edf54d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36407027-f574-427a-bdbc-ee67a9b80c36",
        "cursor": {
          "ref": "b8ef5374-27b2-4046-b0b1-069c344b1eb2",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "96305e94-d2a7-400a-9b63-bd542f8bff1d"
        },
        "item": {
          "id": "36407027-f574-427a-bdbc-ee67a9b80c36",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2eb3bd02-3e68-4ed7-aaf6-88f72a6ce4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9a8dcd-8e8f-4356-88cf-fbd04083ba90",
        "cursor": {
          "ref": "64c5dbbc-fb96-4202-8139-1cf463f1dcb3",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ebca61e4-b2cc-45ec-b3fb-657848bf405e"
        },
        "item": {
          "id": "1c9a8dcd-8e8f-4356-88cf-fbd04083ba90",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "73319003-db32-4c1e-b754-dc139c3cf5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d5aff0-35ae-49d3-8e48-c4dbe45ef9cf",
        "cursor": {
          "ref": "a6d6705b-effa-4bc6-bbfc-1491dffe9b85",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "372b6cf7-5967-47f1-b195-568af1b18b99"
        },
        "item": {
          "id": "f6d5aff0-35ae-49d3-8e48-c4dbe45ef9cf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "690b1834-b65a-4829-b6f9-d7cfde764b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d154b8cf-7749-447f-b07d-dc9c7c15783c",
        "cursor": {
          "ref": "2bb43563-479f-4e90-ab1b-fed88308db23",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "aa154518-084a-424d-924a-7529c14f2f6e"
        },
        "item": {
          "id": "d154b8cf-7749-447f-b07d-dc9c7c15783c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7312a424-80ff-433e-9d62-f940dee400bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffa4d72-e56e-4aca-bfb1-7c2216006e62",
        "cursor": {
          "ref": "2d09823e-47bb-4917-99f1-ec0540ccae21",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "436bf742-a343-4440-ab90-a814e14b8e62"
        },
        "item": {
          "id": "cffa4d72-e56e-4aca-bfb1-7c2216006e62",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c1216be9-991a-40d1-b0cd-ed6e9bd77ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610194a5-f368-4aac-b289-8c59cf9860de",
        "cursor": {
          "ref": "d6bcd3c5-766a-4aa2-ba16-98a28a4f6e63",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "05af4cf7-bb44-4504-8bc0-2dd3cb973b94"
        },
        "item": {
          "id": "610194a5-f368-4aac-b289-8c59cf9860de",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "75e5ca8b-8b38-416f-848e-ab0c1618bfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b2d0ed-e99e-429d-bdf3-86e3b95de081",
        "cursor": {
          "ref": "6c9b30a3-cbb0-425e-b6df-c4f779faf1e2",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e170132c-7f6a-4d81-9f60-9503828da535"
        },
        "item": {
          "id": "21b2d0ed-e99e-429d-bdf3-86e3b95de081",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "984bb06b-ac57-4efe-b49e-2064fbb911f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ff5ec3-7695-41a6-911a-434820fc9e0c",
        "cursor": {
          "ref": "9a53730a-d9fe-42dc-a350-e41f6cfb85a5",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7a1c539c-c981-4fee-b5b0-1818ffd83066"
        },
        "item": {
          "id": "31ff5ec3-7695-41a6-911a-434820fc9e0c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "44044400-f8f0-4b7d-94bd-263cc9f77cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c99e1a-8517-49eb-a222-cecc8d9fc487",
        "cursor": {
          "ref": "fff58b89-e3b7-424e-a1dd-bcdbe97c6cc5",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "992cfd94-af46-4712-856d-13ae86686b6a"
        },
        "item": {
          "id": "53c99e1a-8517-49eb-a222-cecc8d9fc487",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "de358710-ce9b-4f0f-8a82-36f5d660c40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9511e4fc-2c23-4130-91c2-d61b09a52611",
        "cursor": {
          "ref": "6382e35c-25df-4c2b-9016-fa865a371c4f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "58f0a115-7582-42dc-902d-153896da7005"
        },
        "item": {
          "id": "9511e4fc-2c23-4130-91c2-d61b09a52611",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4e5848f4-f707-4ee6-a25e-d5c1230cc0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536c7ccb-077d-45de-81df-9c1110e1b6a1",
        "cursor": {
          "ref": "dcaba8e2-3128-4c78-bfe6-640fea281191",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bf1b0ba5-8fe7-4106-9989-e8673f86f7e3"
        },
        "item": {
          "id": "536c7ccb-077d-45de-81df-9c1110e1b6a1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d3258e4f-e5e9-47ee-a90c-c21b37d701e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2258fcab-aca3-44bb-88d2-0a5f8adc249e",
        "cursor": {
          "ref": "04bb21a4-e7c6-4e20-8702-3265203d9724",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "640fa233-a70c-4ec2-985a-d0d1801fab75"
        },
        "item": {
          "id": "2258fcab-aca3-44bb-88d2-0a5f8adc249e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b0aa939a-c6aa-4fd2-ae53-f1e004eae93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d2751d-978b-4e9b-a86a-50a6bd773dc9",
        "cursor": {
          "ref": "6dc4948c-9625-4f8b-bfe0-80ea0cb1559f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8f5bf5f2-cb52-4589-962b-03dd8cfc8c41"
        },
        "item": {
          "id": "34d2751d-978b-4e9b-a86a-50a6bd773dc9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3de9b278-2ceb-4274-9c53-ef58475d7372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7a5152-cabd-441b-a11e-8b8800b541eb",
        "cursor": {
          "ref": "b0795dbb-6ca8-43f9-8ace-56fa602ae0a0",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c312f806-ee6c-4dd6-b76d-54695b69a761"
        },
        "item": {
          "id": "3b7a5152-cabd-441b-a11e-8b8800b541eb",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c56e7140-81ac-4127-9081-739b909b5eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98e78aa-e87b-49e9-a94d-d6d635f82dbc",
        "cursor": {
          "ref": "a6c932e3-4f86-4f77-bb48-125a95b028b7",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ca6e4fb5-0837-48e5-8d87-715878fef257"
        },
        "item": {
          "id": "f98e78aa-e87b-49e9-a94d-d6d635f82dbc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fe9a0d07-edfe-4426-ac0a-ef70a258c601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23ea337-9525-408c-bdbd-d805311f3a59",
        "cursor": {
          "ref": "527e7bef-967d-480a-abe9-4865257d6d85",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "263fcb28-5a33-4015-93a7-08ab84aa6af0"
        },
        "item": {
          "id": "b23ea337-9525-408c-bdbd-d805311f3a59",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "61b41b2d-9354-4eaa-a66d-da823b69a325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01925551-e6ea-4cce-b12b-91d2f52fc16f",
        "cursor": {
          "ref": "b8d41cea-0b56-4e45-8326-26b1b4f3d137",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5227682e-121b-474a-9dc9-b5c81389ce77"
        },
        "item": {
          "id": "01925551-e6ea-4cce-b12b-91d2f52fc16f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9e1cb047-c1eb-4b8c-b5f0-f4faa645e279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63f185f-92dc-4400-8487-c6580afd4201",
        "cursor": {
          "ref": "b5c11151-ce8e-479f-9d5d-fa9e7baf6d0f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e6a54d5e-ba47-4d34-9ba3-5c071fb742ea"
        },
        "item": {
          "id": "b63f185f-92dc-4400-8487-c6580afd4201",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a00ead74-53f1-48e1-9858-b605b57cd86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff35228e-423b-4571-a181-679c2560bfb5",
        "cursor": {
          "ref": "27f80d21-1710-4b98-beaa-682435d3fb64",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "cb809cbf-ec74-4786-84b6-da09a1bbf867"
        },
        "item": {
          "id": "ff35228e-423b-4571-a181-679c2560bfb5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4a617b09-ae65-4d83-9cbd-02b636f0e57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8a9fa0-13df-4ca4-bfd1-ae413984cda9",
        "cursor": {
          "ref": "32247fb4-595e-46cf-a6c7-9ea4f6f1b42f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "343d42c7-c5bd-4c62-9688-8926ac885d0c"
        },
        "item": {
          "id": "dc8a9fa0-13df-4ca4-bfd1-ae413984cda9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9042578a-f82b-4448-86d1-603c87d56704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5be2867-d3a5-4d01-8ed2-43653a79937f",
        "cursor": {
          "ref": "13d0cd26-4692-4b94-91a7-c9318137cb6b",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "21051ba2-a6ca-4fdc-ae97-a256476ec76f"
        },
        "item": {
          "id": "a5be2867-d3a5-4d01-8ed2-43653a79937f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0a2f6cae-f2f5-49bc-b482-3483f11d45db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6412948c-55eb-40e9-bcd3-438391a7d345",
        "cursor": {
          "ref": "9ea3ad87-39b4-4903-8d0e-e2065a307f75",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "77c62ace-f1d3-4c1f-93b2-9e6f11ae5bbe"
        },
        "item": {
          "id": "6412948c-55eb-40e9-bcd3-438391a7d345",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "56b001cc-c76d-4d66-af11-e02b892948ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482f766e-3c26-4bed-a0d3-108295b9f017",
        "cursor": {
          "ref": "5eb83292-0142-4622-a93c-27b10d8d6c76",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "82cd07ff-7d71-43b5-8dbd-a8f94d1c7954"
        },
        "item": {
          "id": "482f766e-3c26-4bed-a0d3-108295b9f017",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5473df6c-6c28-4121-bca1-b5da41b50fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665029b8-7760-4224-8d0e-3b496db90143",
        "cursor": {
          "ref": "c021921f-6568-41b3-a638-62a129ec665e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8e7a42fc-f3b4-4543-89d6-6422bf2eafb3"
        },
        "item": {
          "id": "665029b8-7760-4224-8d0e-3b496db90143",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "920b065a-2a75-42b9-9403-326e54f6ef86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750705bf-dfca-4e76-98b3-e1d341d8604e",
        "cursor": {
          "ref": "357ec4a2-802e-4dd0-b851-15f7e2268c31",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5b1d3ba7-6ec4-4c0c-bd92-ef156f0e120f"
        },
        "item": {
          "id": "750705bf-dfca-4e76-98b3-e1d341d8604e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2f0c248e-f021-48d5-a2b0-17f439aa198f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f5e6fb-8818-46d3-82c7-ddc404bfb4f7",
        "cursor": {
          "ref": "9ec6bb10-459a-4fcd-ba05-9d5ad73498e2",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "39148a7c-777b-4070-95c8-b2f9528e2e8e"
        },
        "item": {
          "id": "e7f5e6fb-8818-46d3-82c7-ddc404bfb4f7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6154596f-8a67-4d64-8fd6-ccd986a8b7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e192831-b2f4-4dd0-bb50-e58e23d54f7c",
        "cursor": {
          "ref": "9c449158-afd9-4884-93b6-9a0158031ad1",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "20bc3038-31e3-4a35-91fe-5a3c049a4f99"
        },
        "item": {
          "id": "5e192831-b2f4-4dd0-bb50-e58e23d54f7c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "069dc8e5-7439-4093-a071-0c75af946e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613459dd-0a69-4325-902e-e0d2b5fc574a",
        "cursor": {
          "ref": "fe7ba568-3671-4481-80f7-49500b96058e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "594e27cf-68e0-471d-942c-ff0040fa9173"
        },
        "item": {
          "id": "613459dd-0a69-4325-902e-e0d2b5fc574a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d97c43da-e6d2-4aa8-9bb2-7f1a68eb49ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69a50da-cdd5-467e-8e70-161988ad3923",
        "cursor": {
          "ref": "92f99efb-5d2f-4bd8-b85e-a0866657438b",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6815d4f7-4d0f-4fc6-a01b-cdda975e5e98"
        },
        "item": {
          "id": "f69a50da-cdd5-467e-8e70-161988ad3923",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "44457a23-2023-40f3-aff0-94595e1ca609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c059dc6-ff82-4dff-904e-6a65daecf1f2",
        "cursor": {
          "ref": "f7b703b9-98ca-4c93-9bfe-8d093d03428b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c00acd58-cab2-44bd-bc6c-90cff698cbdc"
        },
        "item": {
          "id": "2c059dc6-ff82-4dff-904e-6a65daecf1f2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "055f748a-82e2-4f9d-b52a-5a6d420df274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c1faa0-ae95-4e2b-89f8-e4f4eec68872",
        "cursor": {
          "ref": "61d6c761-70ff-4f3e-925f-2c15e92268fe",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a7efa550-2e19-46a2-9f4d-9b599aa69a47"
        },
        "item": {
          "id": "68c1faa0-ae95-4e2b-89f8-e4f4eec68872",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0d492035-a07c-4d61-bf0b-08f237214924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d887ad-542d-4694-a4dd-f329a37a7c0d",
        "cursor": {
          "ref": "d6db459e-f6eb-4c65-a50d-0dea6b2a3c93",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1a46ed06-2c3e-4651-aad8-37a1cb4761b9"
        },
        "item": {
          "id": "43d887ad-542d-4694-a4dd-f329a37a7c0d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b72bdad7-4b0d-412e-9e1a-b644c54555ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa267ce-e685-4a47-a698-881fe045f765",
        "cursor": {
          "ref": "a1d25892-5bc8-4393-81df-6aa59f3cedea",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a9878b76-0ca3-4e58-b2ee-fee74e20a6a9"
        },
        "item": {
          "id": "7aa267ce-e685-4a47-a698-881fe045f765",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5608e450-587f-4a7b-a836-38b12bd6d15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e13cec-9a9a-4d12-828d-6cb17e10dead",
        "cursor": {
          "ref": "5de64c57-0ac6-482d-803e-a8d8a85ebc9d",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a9f3853d-f993-4ac0-99b8-d9788f386d72"
        },
        "item": {
          "id": "d9e13cec-9a9a-4d12-828d-6cb17e10dead",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "855b923e-eec0-4073-8da7-603df2b5f89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8d3686-afb8-4249-b14a-b93bbfc59d57",
        "cursor": {
          "ref": "da515539-68d5-45b7-998a-aa4a40673428",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fce44065-6df0-41a7-a6ba-f68db7b72ff7"
        },
        "item": {
          "id": "cb8d3686-afb8-4249-b14a-b93bbfc59d57",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "33778e6a-79ad-499c-b1d9-e7810d5bd37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93df965-baa6-4f29-b64a-c5b5591b6b54",
        "cursor": {
          "ref": "4a6834e8-63d8-4fac-9aab-fa29864f5ee7",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "59b8adf6-76be-42ce-9038-a4e1a55869b7"
        },
        "item": {
          "id": "b93df965-baa6-4f29-b64a-c5b5591b6b54",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "efc84a62-38a2-410c-bc01-19ee92a89ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee9c17c-6fa9-47ea-bb31-54e199d882d0",
        "cursor": {
          "ref": "cf08fb63-dee8-4e93-afc2-965dd0001954",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e363015f-a80d-4607-9b9f-af0848604d35"
        },
        "item": {
          "id": "6ee9c17c-6fa9-47ea-bb31-54e199d882d0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bc465a63-6801-4dc0-8c23-f3f8933d9432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066be3ef-783b-4448-998f-9f98f03fc9ce",
        "cursor": {
          "ref": "795271e4-c158-440a-a23b-5efe1860e8ae",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b53becdc-bcc5-4857-9e5e-6c6520903598"
        },
        "item": {
          "id": "066be3ef-783b-4448-998f-9f98f03fc9ce",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "199f8e12-2614-4f3e-9240-69041fefb87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cda8a9-86c1-46f6-afa1-fafeff4b1b3e",
        "cursor": {
          "ref": "9eeca8ca-8861-4bc9-9bba-d5112d8c4977",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bd0a8980-b860-439e-a514-abf18a2e6598"
        },
        "item": {
          "id": "21cda8a9-86c1-46f6-afa1-fafeff4b1b3e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ee47e7b6-6237-4f7f-b516-eb88f52cb921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539302bf-b021-419a-9b5c-befb54e76aeb",
        "cursor": {
          "ref": "9091a8a7-0afd-451b-a6fb-0be0441e4951",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "22104762-ba09-414c-82ab-836ca7d2b4da"
        },
        "item": {
          "id": "539302bf-b021-419a-9b5c-befb54e76aeb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5451f571-8cde-4392-a981-3a7b18fab48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b3db94-316f-4a90-8af6-4806811d4155",
        "cursor": {
          "ref": "15696726-48d4-4359-bfa0-c0a523a6b882",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f3673314-779d-42ba-8c21-8f2166947977"
        },
        "item": {
          "id": "b4b3db94-316f-4a90-8af6-4806811d4155",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b20a4fe5-2205-4ea0-9daa-2c6f3fc57858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa19c434-59ca-4446-9b15-f66a59100261",
        "cursor": {
          "ref": "d54a49ca-8ef6-4de1-8f97-42a12202f9d0",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a614c8aa-727b-450b-8466-8908c7f971aa"
        },
        "item": {
          "id": "fa19c434-59ca-4446-9b15-f66a59100261",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d6908a90-b01e-48e2-a1a7-995a112b2651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c51b32a-2f98-435d-9c12-cb15e49d1705",
        "cursor": {
          "ref": "77cf5d8e-09e3-4cbc-b80b-26d7b8167d17",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "eabc406d-c261-4f78-937c-71aedf4dd203"
        },
        "item": {
          "id": "2c51b32a-2f98-435d-9c12-cb15e49d1705",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2d56af29-3d7f-4712-aae6-ec1c23b0fb20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06abf20b-3b23-45b4-8c7f-d2e334a0b404",
        "cursor": {
          "ref": "4167de6e-b5c3-4634-a105-b1ce5337322d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "37465208-a864-4ca2-83db-bc7515d854c6"
        },
        "item": {
          "id": "06abf20b-3b23-45b4-8c7f-d2e334a0b404",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1fe8cacc-54ea-40a8-af76-67e9e603bd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d8a73c-9525-43b8-9198-f967b94e3b83",
        "cursor": {
          "ref": "3f483da8-3017-4233-b2b5-7578c844222e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4319138c-81ed-48ef-871b-85601f787c1f"
        },
        "item": {
          "id": "41d8a73c-9525-43b8-9198-f967b94e3b83",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "74f24aa2-1fe6-452f-9c79-7d8b388561e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfef4b3-61c8-4edc-b77e-3d2f25ac0864",
        "cursor": {
          "ref": "6964af68-db74-4b46-8074-605f102d9ed1",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9bc90df2-74bb-4656-a42e-b15acce464f1"
        },
        "item": {
          "id": "6cfef4b3-61c8-4edc-b77e-3d2f25ac0864",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "64959149-71b7-452a-abbb-ec106f2cc5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8e0e96-9375-4842-985c-cd3cdc4f8df9",
        "cursor": {
          "ref": "841b14dc-101a-405d-a33e-30dc6a056870",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0fa80b6c-47b2-4c5f-9573-f377b87cdad7"
        },
        "item": {
          "id": "0c8e0e96-9375-4842-985c-cd3cdc4f8df9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9a53619e-cbc5-420d-9db3-ba2c805cc576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2837cc-3db0-48fa-8ffe-b1340107ddd7",
        "cursor": {
          "ref": "7253a8f3-7db8-45ce-bf7e-703b7e77d4e7",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d2823e6e-dc73-4a40-8a68-c5553fb81022"
        },
        "item": {
          "id": "9e2837cc-3db0-48fa-8ffe-b1340107ddd7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a33bd939-88c5-4384-8657-07ee82a5a205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edebab4-4287-4a48-8db7-c45396d9172a",
        "cursor": {
          "ref": "110492f5-d7a2-41e4-be77-a4f4c51c22b1",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a9f81f14-4b73-42e3-9eae-ff81de21a46f"
        },
        "item": {
          "id": "2edebab4-4287-4a48-8db7-c45396d9172a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bb1a3f51-205c-4d84-aca3-86af43521ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fda1c1-0ec7-4f56-9247-8a1f7970b578",
        "cursor": {
          "ref": "92dd033f-d94a-4afa-9749-79eede6293d4",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "95b1594b-0080-421a-84ea-089459c1ac0c"
        },
        "item": {
          "id": "30fda1c1-0ec7-4f56-9247-8a1f7970b578",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0ac7fc18-1f05-4f77-ad70-836207a01d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84eb1aff-bb3c-4dac-8425-25209ca41f72",
        "cursor": {
          "ref": "eca15e26-907a-4882-be72-65d920ae38d4",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "92598ad8-95db-4616-a829-692de27739a0"
        },
        "item": {
          "id": "84eb1aff-bb3c-4dac-8425-25209ca41f72",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e2a8be4e-33f1-451a-8a9b-a366f0d2c745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018aae4c-7a66-4161-8757-5a00dee6e4f1",
        "cursor": {
          "ref": "7d2ce423-6ef1-4d97-ab6e-f2a8a5e20adb",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6906291b-2bb8-4eeb-a6a2-39ab664f3e07"
        },
        "item": {
          "id": "018aae4c-7a66-4161-8757-5a00dee6e4f1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3bc63617-8a8b-4852-ae4b-3209fde918f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26f0f81-304a-4410-8ea2-11a085a094b1",
        "cursor": {
          "ref": "019c0503-8997-413c-ad57-a38fdc436f4a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "39175787-b643-4913-97ae-c88cb5ea487b"
        },
        "item": {
          "id": "d26f0f81-304a-4410-8ea2-11a085a094b1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6634ca74-f9bf-4ca9-bd8b-d054c0027c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46889b92-86da-41e0-abd3-f118b696ea9a",
        "cursor": {
          "ref": "446717c2-c504-481e-a5e7-ea7e35787fa8",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0ac6f102-b968-45c0-ae4f-df8f91bd4d76"
        },
        "item": {
          "id": "46889b92-86da-41e0-abd3-f118b696ea9a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c18525be-4389-47a2-9d50-83028a57fb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d713fe-6c2e-4bb0-a922-2fb178ae0430",
        "cursor": {
          "ref": "8cbf8d3d-462e-4a17-82a8-8f0c06ba742e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "be7691a0-3f95-497c-b18e-cbae41c85715"
        },
        "item": {
          "id": "42d713fe-6c2e-4bb0-a922-2fb178ae0430",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "872f4f16-9b95-47d8-b075-4d19f27b837a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187284b1-89b5-491e-be9c-54ffb7143712",
        "cursor": {
          "ref": "c0c5d27f-52d3-4d8c-b823-88bd9e81a0df",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "74d9bd8b-badd-4070-888b-af2425873143"
        },
        "item": {
          "id": "187284b1-89b5-491e-be9c-54ffb7143712",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a8423ae4-57b3-454c-8ea9-cb31d4a5e319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b050d6ac-07ec-4c22-a981-dcf9d0e5da9e",
        "cursor": {
          "ref": "8724a3dc-82d3-43d7-a952-a6b07e25873f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4397ad2a-f0c6-4e62-bfab-4de4bfd1d509"
        },
        "item": {
          "id": "b050d6ac-07ec-4c22-a981-dcf9d0e5da9e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "239aea48-8323-41ec-9610-295a4bf429ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1c733b-cd4e-4bd6-8169-f832fb57a253",
        "cursor": {
          "ref": "8afdfd3b-778a-4f04-bb00-be0bd6b89551",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "946ae743-ab0a-4d1d-9c0b-d2c84ff37526"
        },
        "item": {
          "id": "cf1c733b-cd4e-4bd6-8169-f832fb57a253",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bd59ab32-d4a6-488a-b6b3-831a6ad53283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4583b341-687f-4c7c-8319-a8db73e52999",
        "cursor": {
          "ref": "5f8c105e-1c56-45b6-914e-489fca573b25",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d6329234-e79c-42c0-a559-9ece4e9bf95c"
        },
        "item": {
          "id": "4583b341-687f-4c7c-8319-a8db73e52999",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "809cd09e-d552-47c9-97e5-cc039fbeb46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae30a1b-adb6-4ea2-9a16-46d43bcdc411",
        "cursor": {
          "ref": "403b70ed-8f6c-44a8-991a-1028cd0ea7df",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c5ce1831-8c20-4e29-b803-fc6dee60f284"
        },
        "item": {
          "id": "fae30a1b-adb6-4ea2-9a16-46d43bcdc411",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "dca8ccdb-6f7c-44ca-9693-c8778c5b46f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34c3c0a-aa8b-4856-94b7-9420ea123ebb",
        "cursor": {
          "ref": "c774f2c9-0a3b-4700-a7f6-9d8a9d7a1a6b",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2fe6ecfe-5fb8-40a4-b8f5-a35fa6604b4e"
        },
        "item": {
          "id": "b34c3c0a-aa8b-4856-94b7-9420ea123ebb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5accda12-dddc-45ad-a5a3-d46023c87dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb3edcd-f78f-44af-adc9-2e6b5a6ec99a",
        "cursor": {
          "ref": "1ee246f3-84b1-43ae-9ad1-549c824ab182",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "53c2fb18-8b17-4247-9c13-8c0f83475663"
        },
        "item": {
          "id": "8fb3edcd-f78f-44af-adc9-2e6b5a6ec99a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "842b003b-06d6-48c7-8f1d-f71336e9ba73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d70af3c-e4d4-407b-9af5-c29cf1ba8a2b",
        "cursor": {
          "ref": "5991b7e1-42cf-4445-9841-351d56e15156",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d69f1ddf-b800-4fe8-8541-401ab89f1a5e"
        },
        "item": {
          "id": "8d70af3c-e4d4-407b-9af5-c29cf1ba8a2b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c47f943b-e650-4811-9515-9f3831367cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9469d5-4f70-4921-896b-ae0156f597d1",
        "cursor": {
          "ref": "202eeb6e-1edf-41b0-ba37-45cac1034f68",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "01b03a51-0eb5-4f89-932a-f0927299e1fe"
        },
        "item": {
          "id": "9c9469d5-4f70-4921-896b-ae0156f597d1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "10ddd0fb-46ad-4b79-ad85-c3bc5babb44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e95ecd-3010-4226-877c-7a9c9cfcf3d4",
        "cursor": {
          "ref": "01fc3210-740b-4fd2-9fcb-98a367f41582",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b59cac9d-9860-4e89-be85-a0578b8fe699"
        },
        "item": {
          "id": "25e95ecd-3010-4226-877c-7a9c9cfcf3d4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e940f956-8e5e-4dc7-ac59-6b84116bee7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc29e87c-df70-46ef-a7d5-9b2c0277fb36",
        "cursor": {
          "ref": "27cb0f91-fe2a-4dfb-a5b1-756d3d748edb",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2e6185f1-e18a-4622-99e5-db8db82a1df0"
        },
        "item": {
          "id": "bc29e87c-df70-46ef-a7d5-9b2c0277fb36",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8fa8336c-95ae-4ece-891c-54595acd170a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4d8a6b-abb1-4fe1-b013-ba2addc9d10f",
        "cursor": {
          "ref": "8491318c-e849-4e2c-b4c2-4736c0c7637c",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5cde1718-4a9b-42e5-a706-3a9338f023a8"
        },
        "item": {
          "id": "6c4d8a6b-abb1-4fe1-b013-ba2addc9d10f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c936bc74-b405-424f-92e8-fc5712186f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339a9925-146f-4a9b-8e52-220d1b2835bf",
        "cursor": {
          "ref": "a885796f-2515-48fb-bb70-4e088a9808b0",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a41d31ea-9297-4367-aa2f-9f5fa693d204"
        },
        "item": {
          "id": "339a9925-146f-4a9b-8e52-220d1b2835bf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7e3dfa33-a63a-4f4a-bc88-0326ae39d920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4efa39f-94ee-44dd-ba7e-42c39dc7c3f7",
        "cursor": {
          "ref": "9fcb72da-35ea-4112-abcf-70ef420676fe",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "678d1413-2ced-4c66-85f8-a573f443ac20"
        },
        "item": {
          "id": "e4efa39f-94ee-44dd-ba7e-42c39dc7c3f7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8d085d71-9312-4770-aa03-d5e0ddf4efd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6dab8c-57ba-42c2-a06e-f9625cec729f",
        "cursor": {
          "ref": "fc6015d9-7dbc-4f04-8fb9-7391190df1f6",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5f30667f-de4e-47bd-b890-66b07401dabd"
        },
        "item": {
          "id": "df6dab8c-57ba-42c2-a06e-f9625cec729f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "370e541f-bfa2-441b-8e3f-87e1372b6ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7c52b3-2fba-49ff-b9b7-630b55dbf128",
        "cursor": {
          "ref": "80c88911-9a45-416b-9569-24b9ff4667d4",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "feff004a-99f5-4adb-b32c-926ed175a121"
        },
        "item": {
          "id": "5e7c52b3-2fba-49ff-b9b7-630b55dbf128",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f48dcbce-63e8-421d-ab2a-39a57e6fe78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b73fae-a466-44d5-b6f5-5150e1a72c64",
        "cursor": {
          "ref": "1114c638-b619-4b5c-bbff-f6d4b02afa68",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0bf1c7b5-ad69-47fa-a489-19e61bd1325e"
        },
        "item": {
          "id": "37b73fae-a466-44d5-b6f5-5150e1a72c64",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6508b0c1-7236-433e-8e1a-a4a247b7f197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cda1941-2347-4c5b-9d70-3a8bc966765b",
        "cursor": {
          "ref": "54d81ace-ac4d-41ee-8f21-1c6d0bfee8f3",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4b094006-ce2f-447b-bea8-80ff858cf3b0"
        },
        "item": {
          "id": "5cda1941-2347-4c5b-9d70-3a8bc966765b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "32434a45-c717-4536-82d7-cfdd7de2d5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89205541-dbc0-4fd0-90af-43fc0ef71b56",
        "cursor": {
          "ref": "c8471ce9-b898-4848-a561-f686465105d1",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "78aad0f5-b0ea-4d43-bc1a-2019a4b5f054"
        },
        "item": {
          "id": "89205541-dbc0-4fd0-90af-43fc0ef71b56",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0922138a-a33d-448e-8e0e-132c54165a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fc1b11-d38a-4b4b-a56d-c3e5a0d778a4",
        "cursor": {
          "ref": "08a0a6fd-e2d7-438c-901b-242d132e7c5c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6b79aec3-f3cf-4ed9-9648-023dc14a43ba"
        },
        "item": {
          "id": "32fc1b11-d38a-4b4b-a56d-c3e5a0d778a4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f3767195-af08-43ad-b24d-d19b5b4aa8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32da149a-1214-4d96-8373-176e0b2d4415",
        "cursor": {
          "ref": "a914225e-7a53-437f-9a73-67c8ce28e924",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d26648aa-4fcb-44d0-979e-446d82238d9c"
        },
        "item": {
          "id": "32da149a-1214-4d96-8373-176e0b2d4415",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d7e0cade-712d-4263-b369-6343e7fe6013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cb4432-9bd3-4e01-bed3-ef49f63069a7",
        "cursor": {
          "ref": "f2cf50ed-614e-4789-8173-0dc54fabc305",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "22349f11-5c2a-493e-a4ac-ac64b7197e23"
        },
        "item": {
          "id": "13cb4432-9bd3-4e01-bed3-ef49f63069a7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b9c97351-f1da-45b1-b086-fe996344218e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf22abe6-75a7-40ee-be09-a821eae40c31",
        "cursor": {
          "ref": "e9b9efe5-80ae-4cfa-841f-01afb332c8e6",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "71963ee8-d790-48fa-8db7-721aacd4142a"
        },
        "item": {
          "id": "bf22abe6-75a7-40ee-be09-a821eae40c31",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3f752635-64c1-4e30-9514-46b3565291e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69511e07-aa96-4821-9721-2b9d687036c9",
        "cursor": {
          "ref": "fe83d90d-4080-474e-864e-f4146df59a3b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6171729a-da8d-4164-abb5-781aae301c11"
        },
        "item": {
          "id": "69511e07-aa96-4821-9721-2b9d687036c9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "60944ca5-f1db-45cf-9413-3ba75d12cf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ffdd15-a88d-4d5c-972b-16542ce988a6",
        "cursor": {
          "ref": "58fef31e-8c1d-4253-98c8-043e086b69fc",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "770473bc-2452-4423-bc7d-7bc759e36e54"
        },
        "item": {
          "id": "94ffdd15-a88d-4d5c-972b-16542ce988a6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1f53e197-9eb0-42cf-9761-df942e3e7a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8345cbf-e156-4e2a-8d9b-d4e58140bb4c",
        "cursor": {
          "ref": "9322ba55-7cd2-4e10-af94-ee5d37663471",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2450778c-543e-4f51-a145-3a0f385a009b"
        },
        "item": {
          "id": "e8345cbf-e156-4e2a-8d9b-d4e58140bb4c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3814c9b5-81d4-4c70-8a33-41638ec45db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e86fcde-28bf-4d21-ac2f-fc3c6724220b",
        "cursor": {
          "ref": "f46605e1-6fff-45be-85cb-2986fa12f6a7",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4151e628-855d-4eec-800f-a6c03bdaf0ac"
        },
        "item": {
          "id": "8e86fcde-28bf-4d21-ac2f-fc3c6724220b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4bd4da47-a290-498c-b363-f229aff38b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6aebc7-0e8d-49d0-a7d5-afc5e5e3f6f2",
        "cursor": {
          "ref": "66552efc-8a8a-4574-9664-18848ec3b2bb",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "38e97ff5-81d5-417b-8660-dccd491cd009"
        },
        "item": {
          "id": "5d6aebc7-0e8d-49d0-a7d5-afc5e5e3f6f2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c2b421e0-be53-4aa0-a1e2-35519c8ce6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc41554-d6e9-412d-917b-f0b42f8a179b",
        "cursor": {
          "ref": "12fe0866-0968-4f78-b759-5cfe9ad2f78a",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ca6bb863-fcc7-4b26-ad43-e1cbb7398104"
        },
        "item": {
          "id": "7fc41554-d6e9-412d-917b-f0b42f8a179b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4640b093-2502-45f2-a7be-7d02112417fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7fb411-bced-499b-8302-12ea03e07f53",
        "cursor": {
          "ref": "4ebb777f-b3e8-444c-9d80-a8d6bffd72ce",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ab744b05-e7f1-4831-a7c3-4fa4bb01b3e7"
        },
        "item": {
          "id": "1f7fb411-bced-499b-8302-12ea03e07f53",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bb0a85ae-e9fd-45ad-9d18-1438a426efcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6d9093-f9b6-4c7d-b699-80470b53309c",
        "cursor": {
          "ref": "a8e3056b-9ef0-4b22-b44e-f3ac9ff2608a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a576555a-27de-4835-a0c9-fe229fbe7285"
        },
        "item": {
          "id": "da6d9093-f9b6-4c7d-b699-80470b53309c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "98d704c3-5160-4118-a73c-43a117100ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114a5275-118f-4d65-a700-3ba536308868",
        "cursor": {
          "ref": "19ff8f1f-acb0-48ed-a763-e954f84c2dd9",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cabf72e7-c685-4670-9ff1-2817adabae61"
        },
        "item": {
          "id": "114a5275-118f-4d65-a700-3ba536308868",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "68c61097-4b4b-4e8e-9a26-71880dc6b817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9031f45-1aa6-4953-8ef9-7bfd9d1d2a1e",
        "cursor": {
          "ref": "8a3cc8fb-8865-42d9-8a74-e9aa739b5ad6",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4522b99f-c675-4634-ae9f-2590daaa061a"
        },
        "item": {
          "id": "f9031f45-1aa6-4953-8ef9-7bfd9d1d2a1e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "902d37c6-f008-423b-a881-17668e235080",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea4c642-18d6-4d6d-b64d-a132a2e85e22",
        "cursor": {
          "ref": "26c1c231-8a44-47eb-9ec8-0a615db6d660",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fba03186-940e-4433-a26e-79bfc9e37b52"
        },
        "item": {
          "id": "9ea4c642-18d6-4d6d-b64d-a132a2e85e22",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c4a56c68-34bf-4fc1-a88e-d3b3e551cd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "cd98ff16-7636-45f6-9a07-365832e351d6",
        "cursor": {
          "ref": "3aa711e3-448f-4a3c-9a3c-39faad448098",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f6d31e5f-6eb6-4504-9a93-2df0be00e20a"
        },
        "item": {
          "id": "cd98ff16-7636-45f6-9a07-365832e351d6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dc67e1f4-ea8e-4954-b47c-5a3468b5e85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0e38211a-2cc9-4aa3-93c4-d30daed67b30",
        "cursor": {
          "ref": "46dc9337-302e-4ea7-b150-92c1517129d4",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d899190f-d2a0-4ccc-894d-b7455feffe78"
        },
        "item": {
          "id": "0e38211a-2cc9-4aa3-93c4-d30daed67b30",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9b51f400-a24b-493f-85da-339df2906e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "03f2da68-44d5-41e6-9a1b-e070c8c94ee2",
        "cursor": {
          "ref": "6450618f-2274-4b43-b783-1fdbceab5319",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e3518cac-0b5f-4ee0-8584-40d51d29af2b"
        },
        "item": {
          "id": "03f2da68-44d5-41e6-9a1b-e070c8c94ee2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "90e54475-5b2f-4b7f-978f-c8fce8f2e85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5002e52c-4fc3-4582-be34-05e79d141493",
        "cursor": {
          "ref": "eb756329-01c5-4d11-8e0a-32774ce3836e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "683f70ed-dd8c-4aba-951c-280712f856c7"
        },
        "item": {
          "id": "5002e52c-4fc3-4582-be34-05e79d141493",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e614ed4f-7035-417f-8681-495557c30d67",
          "status": "Created",
          "code": 201,
          "responseTime": 4921,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fe4a78-f824-4eed-94d0-fe67e147d39c",
        "cursor": {
          "ref": "ea8ad987-ce31-4116-9cd1-d3475425a76a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "68e5ed91-e2f1-4337-a618-e5e04b6c12ad"
        },
        "item": {
          "id": "e4fe4a78-f824-4eed-94d0-fe67e147d39c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f2789a9a-7fcf-4473-b9f8-4820357e731f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3d55ac68-7c48-46aa-8d08-050b367b0c88",
        "cursor": {
          "ref": "e8ec3fe8-f783-48fb-9c35-2a790bf2aa2d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "418cd7fe-7e64-456c-bddb-08f0c8b16773"
        },
        "item": {
          "id": "3d55ac68-7c48-46aa-8d08-050b367b0c88",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c27c55f3-d59d-4e04-8380-af3c5cc5139a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "56d8ec55-d236-45ce-b948-48e959ebcf2e",
        "cursor": {
          "ref": "4b6005dd-b32e-441a-89c6-51b39c5ded21",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4a58a6b4-2172-4b24-b4cf-6a1a2c6ed8c1"
        },
        "item": {
          "id": "56d8ec55-d236-45ce-b948-48e959ebcf2e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c8a299d5-10c8-4a29-9a2d-9f0b13f75c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb91f4b8-4503-49e8-be70-d25704b2722e",
        "cursor": {
          "ref": "79f7ac3e-3f8d-4c54-bb1e-9e800f523a23",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f9796bd8-cb05-498c-a5ed-985cc5d2a130"
        },
        "item": {
          "id": "cb91f4b8-4503-49e8-be70-d25704b2722e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2ec6eb3c-ed1d-45fd-9ee7-b6f28912e9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 925,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7429a8aa-8b9d-4d49-9def-ddf0fe93e46d",
        "cursor": {
          "ref": "0b8aac1c-99f1-49b3-9cc6-91236f681c0a",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "244423fc-70ed-4b08-aa2f-66fe514954eb"
        },
        "item": {
          "id": "7429a8aa-8b9d-4d49-9def-ddf0fe93e46d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "02eed6ef-7bd4-477a-a428-caaf18604df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2044199-c0d7-4852-9101-e7a5e9844712",
        "cursor": {
          "ref": "1d359e72-b727-45b5-b526-54b5844fae42",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1d6c3fea-fca9-44a1-89eb-57f309b79c39"
        },
        "item": {
          "id": "f2044199-c0d7-4852-9101-e7a5e9844712",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5c70b15d-aad5-426b-8f97-efd8be923f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792ef972-bc46-4607-9b9c-c35445dc92e3",
        "cursor": {
          "ref": "b4a4352e-209b-4e8a-a37e-75c72b93a90d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ca25eb9c-a713-4b75-8d0d-51aafa7edfc0"
        },
        "item": {
          "id": "792ef972-bc46-4607-9b9c-c35445dc92e3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "eba555b9-4519-4110-9efb-0e63523c1dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27da2bcb-04c5-4eb6-ad30-3b0613d0a3d0",
        "cursor": {
          "ref": "0852acf9-acef-4ddb-9877-ccaf412edb8d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1326b4af-aef9-4985-8da2-202661b13f71"
        },
        "item": {
          "id": "27da2bcb-04c5-4eb6-ad30-3b0613d0a3d0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "df546160-d0f3-4066-951e-536463ff658e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a0dc2c-4211-4662-9270-12f246618061",
        "cursor": {
          "ref": "ebbb5ce2-f158-4c64-83c3-2fc1432593a6",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e2be1778-9638-41fc-a71c-5f55b470a183"
        },
        "item": {
          "id": "36a0dc2c-4211-4662-9270-12f246618061",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6a0a7976-9551-4ad9-906c-f83e4c1da154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8884a93-c56f-4c65-a637-707f827490bc",
        "cursor": {
          "ref": "2e4c4d64-dc9e-49a0-b017-7846298fbae8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c2bba827-fb8e-4304-8c88-9f43db5407ec"
        },
        "item": {
          "id": "b8884a93-c56f-4c65-a637-707f827490bc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b365eda6-4799-4244-bb94-08cb1530dc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0baae29-4850-483d-bb10-6d99e4cc4bb2",
        "cursor": {
          "ref": "f0726126-60c4-4589-9a9b-93daf30db076",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6dfebedb-bdd2-437c-a337-84f7e42107e0"
        },
        "item": {
          "id": "f0baae29-4850-483d-bb10-6d99e4cc4bb2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d0afa7ad-a38b-4e05-aa71-e5032d45d175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8561f62e-508d-4fc8-9f62-5c1beeb53e99",
        "cursor": {
          "ref": "d47dbe5b-8087-4f7b-a059-1b0bbede399d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ee22365b-cffc-4d3a-84f0-96d733339cc6"
        },
        "item": {
          "id": "8561f62e-508d-4fc8-9f62-5c1beeb53e99",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "33c84512-84be-40a7-a5db-7978512253a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9224633-6bac-4109-a592-ceb53afbf9fb",
        "cursor": {
          "ref": "7e1d5aff-1cc7-4fbf-9141-4596215eb3ef",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "62c7954a-ccb1-47a4-b3ff-b0a03f3b71f7"
        },
        "item": {
          "id": "a9224633-6bac-4109-a592-ceb53afbf9fb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ee62ff05-1c90-4ab8-9c97-0ab7191bd9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac18097-b04f-49b2-b624-2698cf4fa7fe",
        "cursor": {
          "ref": "42a78f8e-faf6-4fa7-9c31-fe03de16b181",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6d6f3f35-9fdb-41b6-afe3-2125c90b884e"
        },
        "item": {
          "id": "aac18097-b04f-49b2-b624-2698cf4fa7fe",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d5f310a9-84ab-49f0-b360-a89e572e9e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33ebe62-31bc-4ea8-9dad-8007a02c6f49",
        "cursor": {
          "ref": "3bbf3300-70b7-4b2e-b9ad-828aaf5ac23c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "10259216-866c-4f6d-b38d-00b3739d645d"
        },
        "item": {
          "id": "f33ebe62-31bc-4ea8-9dad-8007a02c6f49",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "55b8d060-efff-43cf-9914-e9b773484e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d2495b-c930-487e-8505-6ae0d5daeeeb",
        "cursor": {
          "ref": "4efb3fc5-913d-4c42-960f-9ce61c1d6a0e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "160414a5-a663-44b2-8fb1-f9b9528e66ce"
        },
        "item": {
          "id": "52d2495b-c930-487e-8505-6ae0d5daeeeb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7640efbd-5ee3-43ea-a008-671d58e10b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c5fd11-0edf-4f38-92cc-c4effb2d2dce",
        "cursor": {
          "ref": "2818c5d2-17b8-4e43-8d1a-5ed395dbc446",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "892a7bd6-1840-49ee-9c53-c14952dc71fe"
        },
        "item": {
          "id": "52c5fd11-0edf-4f38-92cc-c4effb2d2dce",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "802b7613-1d18-4fa5-b170-036e1109ec2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa4e226-3209-44ae-b05b-e4010870d7bd",
        "cursor": {
          "ref": "51a80801-8aa9-4fca-bf76-cf13b6329621",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c1c8b4f5-2b6b-438c-802d-d37b43888c03"
        },
        "item": {
          "id": "eaa4e226-3209-44ae-b05b-e4010870d7bd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f69b94a6-510a-445c-a86f-bb2374bf622b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dba177-7fa6-4f64-8076-47947d9f13e0",
        "cursor": {
          "ref": "e8499251-cafb-4ac5-b9fc-5a027bf5dde9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b650914c-cd4d-4d6e-b426-a2a8d794ada4"
        },
        "item": {
          "id": "70dba177-7fa6-4f64-8076-47947d9f13e0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e35355ab-a420-4225-bd7d-e7dd067314b5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "7ee2460b-9397-4bd3-98f4-f6543a6ab57e",
        "cursor": {
          "ref": "9a033d8c-5d64-4fd2-a4cf-aee2dd12a31c",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c4009a96-863d-4534-83b4-5b2c3fcbf751"
        },
        "item": {
          "id": "7ee2460b-9397-4bd3-98f4-f6543a6ab57e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ab0f4241-a1f2-4c75-9914-61e9c8f42e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f26b1d5-f8d3-496c-9bc5-cd0372b50f9c",
        "cursor": {
          "ref": "c4421f85-ef08-499b-9726-bb938070771e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "aafec495-a1f5-49ac-9104-6692b2b6e213"
        },
        "item": {
          "id": "0f26b1d5-f8d3-496c-9bc5-cd0372b50f9c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c4d748de-2bd3-451d-a402-dc5c8b0979e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d59ce5-e2f1-4c85-9219-c98048520d8f",
        "cursor": {
          "ref": "a319e45a-ad0f-4e79-a9b5-fef7554eac1a",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0d9519ed-3f85-4864-ac14-cac629bae914"
        },
        "item": {
          "id": "42d59ce5-e2f1-4c85-9219-c98048520d8f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7c1b7e96-f1f2-484d-ac14-f412e3bfb11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1298439-91da-4110-9e48-b2118a338f5b",
        "cursor": {
          "ref": "6af2458a-b497-46a9-b06f-5731af2ef95d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9424fa2a-ff55-4487-a52e-b5e4996d9425"
        },
        "item": {
          "id": "e1298439-91da-4110-9e48-b2118a338f5b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e50abf85-3c8d-4ac9-a6bf-f9db46579e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0c9d8e-5b78-4786-8fd6-26d4d8e8e9e5",
        "cursor": {
          "ref": "53041d5f-3538-484f-8b9f-e6ec5635ffff",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3335f473-e5bd-41e7-8baa-5c3efe9a5187"
        },
        "item": {
          "id": "2c0c9d8e-5b78-4786-8fd6-26d4d8e8e9e5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e4a43142-49aa-4b6d-924f-986ad3913f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232eec8f-9680-41e3-a73f-a336c237d319",
        "cursor": {
          "ref": "2e9cd017-5a88-4517-b46c-7783301dbb87",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "16849162-004e-416c-82b9-005befa74e80"
        },
        "item": {
          "id": "232eec8f-9680-41e3-a73f-a336c237d319",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "01eaa31f-4ef1-463c-a687-43af28090295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3c7a5d-6a17-42e3-a6bb-e72bca6187c7",
        "cursor": {
          "ref": "b7324335-0ee7-4165-ac5c-906ce9be351b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "aec59058-c85d-4ed8-a946-54fe863a8a49"
        },
        "item": {
          "id": "fc3c7a5d-6a17-42e3-a6bb-e72bca6187c7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "64796ea4-909f-4517-8d22-3e5a2f797bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb77c39-5943-4073-a255-0c96d5e677e4",
        "cursor": {
          "ref": "f0428980-0d28-4edf-aabe-017c63aa1c61",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "eb100de2-ca37-4fa3-a4ef-4c3eabd573bd"
        },
        "item": {
          "id": "7fb77c39-5943-4073-a255-0c96d5e677e4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "84578c0d-45ed-4130-bb64-87f713993e80",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "69b232d1-d415-486f-977d-123dcbdbe58f",
        "cursor": {
          "ref": "1b22724f-13e6-42db-8b98-ba6b3ab3b704",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "51365431-7f10-4e61-b78e-f6e292d2fcfb"
        },
        "item": {
          "id": "69b232d1-d415-486f-977d-123dcbdbe58f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4c3f5396-4e5b-472c-b5d6-ee15d841b3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3aa9c6-617e-49ec-bb2f-7dd59d19b050",
        "cursor": {
          "ref": "d48d178b-a51e-4788-b172-46bd47497900",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e9e37809-c37c-4bd9-8f44-1595293c540a"
        },
        "item": {
          "id": "cd3aa9c6-617e-49ec-bb2f-7dd59d19b050",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ff420060-502e-49f2-8990-044805ce929f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ab3bcf-9611-43f2-a4d5-f753e2b7247c",
        "cursor": {
          "ref": "376ba417-446a-436e-9b60-10bb5a508a7b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d63623b4-7877-48c6-8153-60629f8ae9d6"
        },
        "item": {
          "id": "96ab3bcf-9611-43f2-a4d5-f753e2b7247c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e19ac9f2-799a-4218-965c-8ea171215a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735c1d2d-3e4d-43a1-9e0e-fc38c0288ee7",
        "cursor": {
          "ref": "0a510ac3-127c-453a-a731-ba90ad9ba625",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d2d1f430-f512-42b7-87fe-9d5956f23f43"
        },
        "item": {
          "id": "735c1d2d-3e4d-43a1-9e0e-fc38c0288ee7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a860d6c6-1af8-45bc-8492-f7f93ae78cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc39a842-2c70-4815-b2fe-3dde6b7ab210",
        "cursor": {
          "ref": "9f95d9cd-6cb3-4bf2-a1a2-a1522b5184d2",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8b8b86ae-a144-4803-bd08-6d066559eaeb"
        },
        "item": {
          "id": "dc39a842-2c70-4815-b2fe-3dde6b7ab210",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "da9a1f3a-8834-4e88-a3c8-5b61b567b7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea44d04e-dbb5-4c72-aa61-9588d6d658c2",
        "cursor": {
          "ref": "b6a74841-db6e-4139-a527-b2c56675c8f4",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "09e86a78-9b53-46f3-b80f-953824e2fee7"
        },
        "item": {
          "id": "ea44d04e-dbb5-4c72-aa61-9588d6d658c2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5912c06c-59dc-491c-80c7-dc41b9cdafa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63eb0ffb-8c1b-49b3-a561-a8822aaba030",
        "cursor": {
          "ref": "a81027d2-c726-41ec-8bbb-33d02d85133e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "29176302-4200-4038-8f55-e8b98e95e637"
        },
        "item": {
          "id": "63eb0ffb-8c1b-49b3-a561-a8822aaba030",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "72b24237-a0b4-4ff1-9b04-771a8d40e828",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "ad237ff1-5888-44ee-b51a-bf7fb28d23f6",
        "cursor": {
          "ref": "20561037-3c53-4708-b359-37cf2bcae285",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bb07ccb7-16c1-4552-915a-545061086198"
        },
        "item": {
          "id": "ad237ff1-5888-44ee-b51a-bf7fb28d23f6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2a322a57-e446-454b-b8d5-b2e5da5d857b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "b7b1c549-1e9d-473a-9d56-baf633fe4f69",
        "cursor": {
          "ref": "dbe110ef-52e5-4934-a67c-60950a163368",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e111619f-0424-4c84-a807-f9672b13c24f"
        },
        "item": {
          "id": "b7b1c549-1e9d-473a-9d56-baf633fe4f69",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5c2bf2a5-d191-4972-8ef0-eee8a57009f4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 124,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "8a068776-695e-483d-964a-8bb2926ed364",
        "cursor": {
          "ref": "33b4343b-c6b6-4f8d-aaa0-9b664fa96ba6",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "99c125b4-60f5-41a1-94aa-ed6da856e46b"
        },
        "item": {
          "id": "8a068776-695e-483d-964a-8bb2926ed364",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a3ff04d0-3439-4f34-a70e-0821d156c7cd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "709879db-1c40-405e-9289-2908c2cbb44f",
        "cursor": {
          "ref": "6cffadad-b762-4c00-9362-9af3c0a28d35",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a16cae32-41aa-4e3f-8733-af811d04376a"
        },
        "item": {
          "id": "709879db-1c40-405e-9289-2908c2cbb44f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "67dcdd29-9c82-4132-a0c8-af0c040cc399",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "088b35ee-07f1-44e8-9988-d0fd0c082a8b",
        "cursor": {
          "ref": "721fcc57-d30b-41e8-9c5d-53ed8fc4184d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b476f5bf-062d-46a8-a3d9-07326e297c7f"
        },
        "item": {
          "id": "088b35ee-07f1-44e8-9988-d0fd0c082a8b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f8f67984-dbac-4eea-b239-25888efa95ea",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "411e86dd-a73d-4e8d-a079-22514e8e7b9a",
        "cursor": {
          "ref": "c15ad328-0125-4533-814e-c985c42cb7e7",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "99944567-598d-412b-9f07-bf8bf5772ce0"
        },
        "item": {
          "id": "411e86dd-a73d-4e8d-a079-22514e8e7b9a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7b0678a1-bedc-4170-b50b-35f5f025e0d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd89abf-8831-4eaa-a8bd-cb21f978c1de",
        "cursor": {
          "ref": "affbdc3f-6010-4dd0-917a-c613c3d0aa8e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4d920e9f-b3b6-4f82-90b5-2b7b641cb353"
        },
        "item": {
          "id": "8cd89abf-8831-4eaa-a8bd-cb21f978c1de",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "501dfc8d-2023-46dc-8fa7-0faab7dfb7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc80c44-cd0d-4f2a-b2ed-dd2f6c9ff29e",
        "cursor": {
          "ref": "316c32b3-5cc9-4703-b17e-783d43ced67f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3c2f9631-402b-4b59-94f6-e3ca834209df"
        },
        "item": {
          "id": "ddc80c44-cd0d-4f2a-b2ed-dd2f6c9ff29e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6dde1301-ef5d-46f9-bd3a-83739afa58ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ef8b51-2437-445c-81ff-23c29721e02f",
        "cursor": {
          "ref": "a1e429a0-153b-4b88-bd7b-fdd6e6a2a540",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cacebe11-c1e6-4572-97fd-0cd9026201eb"
        },
        "item": {
          "id": "c3ef8b51-2437-445c-81ff-23c29721e02f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a658f643-8f1b-4045-9e26-e798e99fd498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895ed98e-c5a0-49aa-8e6c-27b71a7a3f76",
        "cursor": {
          "ref": "3f3995f3-6872-4f05-b5e0-935e845e6aac",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "efdc0c6f-003c-4654-80f4-559dfc812ba1"
        },
        "item": {
          "id": "895ed98e-c5a0-49aa-8e6c-27b71a7a3f76",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "78dee1c1-1686-4702-80e2-88bc5a5fa1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f12bd2b-1c7f-4591-b2c6-cbdfc407493e",
        "cursor": {
          "ref": "5b78aad2-abb2-49fc-b104-53298f07c5a8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f2a7d574-17ff-43ca-b557-1d4dfeecec80"
        },
        "item": {
          "id": "5f12bd2b-1c7f-4591-b2c6-cbdfc407493e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dd3280ed-9f8c-42fd-8540-9acaf9bf10e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56e4669-5585-4b91-a392-85e01b2561b8",
        "cursor": {
          "ref": "717e8126-cde1-4054-adc9-3fa405ee6c1e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "dd17862b-5e5c-4756-b7eb-763b1feca92d"
        },
        "item": {
          "id": "a56e4669-5585-4b91-a392-85e01b2561b8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e2130969-8260-4bd3-8c2e-9abef1579352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc02e35-561d-40c6-9a6e-85df78a822d9",
        "cursor": {
          "ref": "4709e098-3cfb-4a89-8904-f936e0f6983f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8854f97e-0879-4f62-aa64-3c6b9de3f187"
        },
        "item": {
          "id": "1fc02e35-561d-40c6-9a6e-85df78a822d9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ecee2918-34e3-41d5-bd29-e2fdc230c5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd1eb62-98f5-48bc-acae-57fe31fb4fc0",
        "cursor": {
          "ref": "027b10f1-f354-4f1b-9232-df77e9bcab1f",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2c4b0ae0-5682-4903-91b4-4022f74d8b56"
        },
        "item": {
          "id": "bcd1eb62-98f5-48bc-acae-57fe31fb4fc0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f3497e43-258e-499b-b7ed-f1bb93868693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fdb328-6e5b-4400-b0c8-1350093f2ccd",
        "cursor": {
          "ref": "cef71ec9-ba9d-467c-8ea1-1f5e2ff90750",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cd274320-82cb-43bb-9a6c-0b64aaca0abb"
        },
        "item": {
          "id": "50fdb328-6e5b-4400-b0c8-1350093f2ccd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6779a388-653e-4087-bb0a-80036003e5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc6c541-0355-4adf-b27e-882e64806936",
        "cursor": {
          "ref": "c2246469-0188-4232-a36b-b282155bd7a1",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4d242104-22a3-49f6-a85d-05737c0d17fd"
        },
        "item": {
          "id": "5cc6c541-0355-4adf-b27e-882e64806936",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c19e1be1-96f4-4cb0-92a7-0c23cc0fbd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b3494e-8df7-4c82-86c5-53ae7238efe3",
        "cursor": {
          "ref": "26b12081-fb11-4c33-aa9f-bf6d60ff6f15",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "24eb6076-422a-4923-a0ab-12d0f3517829"
        },
        "item": {
          "id": "e1b3494e-8df7-4c82-86c5-53ae7238efe3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d0180de6-9929-41f3-98d1-2b5faec499e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593d745b-462e-4724-8428-54988192d744",
        "cursor": {
          "ref": "43ad384a-a4eb-4f47-98ea-9dc62bf17074",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7b7e1587-322b-449b-b22e-380e15bbe6e2"
        },
        "item": {
          "id": "593d745b-462e-4724-8428-54988192d744",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "370ff123-67a6-4198-b692-3d7cbe1294b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08980d3c-32e0-4846-84b2-00c7781f7c6c",
        "cursor": {
          "ref": "bd1c9354-78d1-44db-bbc2-d170d5e8418d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e6436c4b-aab7-4c0b-8542-a154f60ae951"
        },
        "item": {
          "id": "08980d3c-32e0-4846-84b2-00c7781f7c6c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f74c1935-0b82-4b04-98c4-cec9abd24b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de204193-4bda-426c-b51e-adabae63a4c4",
        "cursor": {
          "ref": "3efe6006-cff5-4347-ab63-f14bfda543e2",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "208d149d-2a06-4b4c-8c77-6cdd58947b8d"
        },
        "item": {
          "id": "de204193-4bda-426c-b51e-adabae63a4c4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1bcaebd0-3a6a-457c-b4e5-7c6eaa8f2d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91215580-60ef-491e-a9e5-9c4318dcc361",
        "cursor": {
          "ref": "1e7daa8c-0aaf-46a0-bfd8-cb0d2e94a7fa",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ce0b6ee1-14db-4945-9ced-1d775db974d7"
        },
        "item": {
          "id": "91215580-60ef-491e-a9e5-9c4318dcc361",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fdd292cb-2e29-4149-abe3-0e1b7a6a82a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b03aa9-18d2-409a-ae98-2a0d8ff0e96e",
        "cursor": {
          "ref": "b9a3cc9b-1c11-4703-a61f-0fdba6868ca6",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8476f69c-9191-4cf4-9761-6cf4db543934"
        },
        "item": {
          "id": "c2b03aa9-18d2-409a-ae98-2a0d8ff0e96e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9281a033-5e45-4f12-abd8-8690e68bd683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86a609a-9548-4a67-83b4-86c12a58d3c3",
        "cursor": {
          "ref": "386aa39c-974c-44d0-8f19-5420c3686a1b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ada9570f-5402-4049-9f32-de57b97edb63"
        },
        "item": {
          "id": "d86a609a-9548-4a67-83b4-86c12a58d3c3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0f80290d-2c2f-4473-9942-97a894cd5bbb",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "d040fa45-0b4c-4a77-89d0-07dab354c55a",
        "cursor": {
          "ref": "fbf1c816-ab5c-4c1d-8d26-0e888967140f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "34ee7586-bad6-4572-ae79-53210277ab3c"
        },
        "item": {
          "id": "d040fa45-0b4c-4a77-89d0-07dab354c55a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e05b3652-283f-4e8f-9a64-b319d0bdf1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c47b16-a857-44c1-a86a-0f12b6263180",
        "cursor": {
          "ref": "3dd38573-e163-44a9-8229-0a7d1faa4c99",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "05dafa7b-46a1-43a6-8baf-0234f403e7ed"
        },
        "item": {
          "id": "d9c47b16-a857-44c1-a86a-0f12b6263180",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5c16585e-f3aa-4ff1-bea3-35709c8a17d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65f227d-6dd8-4c4b-9005-6d16d18d17ad",
        "cursor": {
          "ref": "e1efd6b5-8cb3-4ce1-a8c8-f8783d7519e0",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4dde2338-ff6b-413f-b4e3-85fa4f3322fb"
        },
        "item": {
          "id": "c65f227d-6dd8-4c4b-9005-6d16d18d17ad",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "08cd8b26-5f3d-424b-9aed-758101e6371e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1929824f-5ef7-416f-8bec-86f0efd4826c",
        "cursor": {
          "ref": "b563cdf5-4fd8-4e4e-882b-8411643b2413",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "79b64e1f-4fcf-4df4-b0a4-bd89736f0ccf"
        },
        "item": {
          "id": "1929824f-5ef7-416f-8bec-86f0efd4826c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "171b6731-e9b7-4ef3-9924-d67e7f8c1e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f087bc-8a0b-4dbb-b860-43e3e50990f2",
        "cursor": {
          "ref": "6cdb1bc1-e294-4814-be42-8f0d48f9894b",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bfc2421c-3e45-4d49-8dd6-5eeeea469014"
        },
        "item": {
          "id": "c6f087bc-8a0b-4dbb-b860-43e3e50990f2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d3091918-b85d-4c48-b2b3-d9c4c8c84976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7444154-4211-4c75-a58c-12c403c968a3",
        "cursor": {
          "ref": "4c432542-ae25-4471-8a82-c4c74ee7160c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c1b766a2-ddc3-4a23-ac83-34f9da164d4e"
        },
        "item": {
          "id": "e7444154-4211-4c75-a58c-12c403c968a3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fd2cdbf4-ba69-4ae6-a04a-15350fd0b872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f196d95d-b4aa-414f-b7e8-c81975dc5647",
        "cursor": {
          "ref": "aa2e0ec5-d3cd-4d31-b52f-1218b9cdfad6",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "41825b0a-909b-437b-9536-cac06b3e67e8"
        },
        "item": {
          "id": "f196d95d-b4aa-414f-b7e8-c81975dc5647",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "07e81a39-80c8-4b99-8c80-764f7451eee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fec9e7-b763-4d12-b519-b0588948b3b9",
        "cursor": {
          "ref": "2218a9cc-45bc-4ae6-bc93-90fee7e25ef5",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c6424798-fef3-4351-b562-d3650fda7b5b"
        },
        "item": {
          "id": "51fec9e7-b763-4d12-b519-b0588948b3b9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "001456b1-a8f7-473a-8be4-6ee026aef4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215592c6-5d97-4876-bb2b-24c82241e9d2",
        "cursor": {
          "ref": "78f1bc00-ede4-4915-b46e-5d062f2ae3c2",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e323d616-2074-4178-9b14-917933ef6706"
        },
        "item": {
          "id": "215592c6-5d97-4876-bb2b-24c82241e9d2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5cbabfd0-4ddf-401c-9992-f806fb6c2149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aea4542-d1fe-4c36-863a-61a79eca3c1b",
        "cursor": {
          "ref": "c52120ee-c7ae-45e3-928e-86c261e5b864",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b97fb790-b109-4518-ad8a-af4844daf3b3"
        },
        "item": {
          "id": "3aea4542-d1fe-4c36-863a-61a79eca3c1b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6c0fba39-5df8-4bca-9583-3056d334626d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c1d766-32f3-4a93-b301-326f795c5f65",
        "cursor": {
          "ref": "aa886537-5f42-406b-ba96-d9905ba874aa",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1233f16a-a6c7-4ee9-a6f2-2887ce876011"
        },
        "item": {
          "id": "89c1d766-32f3-4a93-b301-326f795c5f65",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3091d220-d3a8-4753-b49d-88799659898c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5173964-6653-4bd1-a5ee-d63b43c3380f",
        "cursor": {
          "ref": "8b4a04c7-8497-41cc-a29e-368db84fd727",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ee506dd2-4307-41ff-8e06-3ee1cc6a57f2"
        },
        "item": {
          "id": "a5173964-6653-4bd1-a5ee-d63b43c3380f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3364ea9f-1d3b-43ab-8558-47c9f994ccf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41933fa2-2934-4152-a341-719d7029f5e7",
        "cursor": {
          "ref": "30ae40a7-a4e9-472e-9a5e-21f7cf440225",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7705390e-2703-4671-8420-390d88f68d3d"
        },
        "item": {
          "id": "41933fa2-2934-4152-a341-719d7029f5e7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "01c09c60-1ccb-497d-9328-c8014c6e1733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bfe7ba-9212-4033-a8ed-4839d31ba363",
        "cursor": {
          "ref": "5184ae47-5fee-4fdc-83a1-5bd9063679ef",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "80e529e3-8fe4-445c-9f34-c49e75b8b7bc"
        },
        "item": {
          "id": "a1bfe7ba-9212-4033-a8ed-4839d31ba363",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "589baa2f-9b7a-4d0c-ba32-30c642dd9556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7c4572-d3fa-42b7-827c-8570028b8142",
        "cursor": {
          "ref": "bce3dba4-82b9-465b-82c1-1af25fc94ac6",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7e746cc3-e7d4-40a6-bf87-6bd9057a5bcc"
        },
        "item": {
          "id": "aa7c4572-d3fa-42b7-827c-8570028b8142",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "181e154e-3bb4-495c-af25-dfb092bc0c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0366346-39a1-43a0-ba0f-e6956623a7cf",
        "cursor": {
          "ref": "b088f9fd-e217-41ee-b887-ef687957b45e",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "15ade120-7a1a-4847-981e-9733e4c64a00"
        },
        "item": {
          "id": "c0366346-39a1-43a0-ba0f-e6956623a7cf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "54f87a78-7eb6-4655-8e22-593995e99143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1df87a2-4297-47a3-84ab-b4da5a6f2a4f",
        "cursor": {
          "ref": "0a24c675-451a-47e8-8f2f-8a4abdce0aa9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4fa39369-4b98-4d85-b82a-e0fc2c650c48"
        },
        "item": {
          "id": "a1df87a2-4297-47a3-84ab-b4da5a6f2a4f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7d3ca2f4-f0a4-4348-9b5b-ca5971f2c77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e5742e-211e-47f9-a966-ea158047bce5",
        "cursor": {
          "ref": "b94be3cd-3616-4ec1-bd75-158eff5ac9d4",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e013689e-e7d0-4ff3-8f55-7c9a2d17ec0c"
        },
        "item": {
          "id": "26e5742e-211e-47f9-a966-ea158047bce5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ef0c273e-3f6c-48bf-a552-78eff54968e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73c826f-0c52-43bd-8217-2252c6c6d243",
        "cursor": {
          "ref": "54697dad-7d59-4c83-9623-0bbaa5159855",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cf18c376-64ab-4ee6-87c7-3d7307bb051e"
        },
        "item": {
          "id": "b73c826f-0c52-43bd-8217-2252c6c6d243",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b225f952-2eb1-4eb0-b9b1-60d2c702d8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c872dec6-f392-4699-9167-e9e5e43753db",
        "cursor": {
          "ref": "ec7f62bb-c92b-49cc-bc8f-043c9f3af646",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "022e80b9-dc22-45d3-bea7-a5f9e1e48b4c"
        },
        "item": {
          "id": "c872dec6-f392-4699-9167-e9e5e43753db",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "086f8936-138d-43d6-adce-5cde6ad7c096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da76ac1-f235-4c2f-924a-a1e24d8e8203",
        "cursor": {
          "ref": "e5eb7178-f5fb-452e-a72e-1f212775474f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "381057dc-3ab7-43cd-ad94-3b6dab3dfe62"
        },
        "item": {
          "id": "5da76ac1-f235-4c2f-924a-a1e24d8e8203",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d5f9814d-1ff9-4bac-be21-93a99d91309c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ac6fd1-3787-4b1a-93e9-590b79c58b64",
        "cursor": {
          "ref": "f09b6a10-d316-4bee-a0c7-c19f40a84fbc",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "02ca7897-c496-4c26-817b-fc5b18beaf02"
        },
        "item": {
          "id": "a5ac6fd1-3787-4b1a-93e9-590b79c58b64",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "19f5ca7f-e992-469d-9282-e1d34d96a134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6f497e-be48-4eea-ab62-5bb064fc5fff",
        "cursor": {
          "ref": "1fd4c7d4-07ae-420f-8778-5217e2b3e6a5",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a1ce11ae-a14d-4697-9f89-52f74a48cfe1"
        },
        "item": {
          "id": "0d6f497e-be48-4eea-ab62-5bb064fc5fff",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e05916a9-4a46-46d6-94b0-1ff6140bf353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d946c2f8-c57d-4573-8200-c9b1927c8f62",
        "cursor": {
          "ref": "01ed0b23-8114-4689-90b1-754a0dc17e75",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "151ae9db-b942-4171-95ea-56663f80c0b7"
        },
        "item": {
          "id": "d946c2f8-c57d-4573-8200-c9b1927c8f62",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "363793f0-1766-48ab-807f-1a989282cd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e99413-ccb8-4051-995b-25ad1b9cdd94",
        "cursor": {
          "ref": "fc0d25ea-80cb-42ad-907b-9e7e3df29960",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "07f948a6-38f9-4a73-90b2-437a3a3866b4"
        },
        "item": {
          "id": "58e99413-ccb8-4051-995b-25ad1b9cdd94",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0a0f3459-f3e4-4285-9b93-6f84b7090a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca91862-18cf-4145-836c-7ab5c3e0a02d",
        "cursor": {
          "ref": "58a7305a-8fc2-47e7-b369-59829acd5287",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "752fb9ea-eeab-4b4e-b3ac-98ca5b85f8c9"
        },
        "item": {
          "id": "dca91862-18cf-4145-836c-7ab5c3e0a02d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a2dedaa5-2bab-42d4-a543-67b972204cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807a8d8c-4a60-4e85-ad81-d0bc8aec7835",
        "cursor": {
          "ref": "77a3d12a-e58c-4e36-953a-2185fd2f9ccd",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b8616393-892e-4dc3-b7e1-a84b6c0c940a"
        },
        "item": {
          "id": "807a8d8c-4a60-4e85-ad81-d0bc8aec7835",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ef9a308a-86a9-4b3b-a043-f1a466f80560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8430af2-ab85-4157-adf7-587d8248d333",
        "cursor": {
          "ref": "ac6d7d54-dd2d-42b5-bdee-62aad465fb94",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "11f33040-4669-4c7d-9eca-46cf567b45bb"
        },
        "item": {
          "id": "b8430af2-ab85-4157-adf7-587d8248d333",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5a30f3de-5af8-4bbe-8570-2606e4774abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190a5a8c-3b85-42ac-8b50-ed21d468e105",
        "cursor": {
          "ref": "17f47e00-cc88-4d16-8cb6-5155babe00e8",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "82122cdd-299c-4f2a-afec-dc2a5d3fefc8"
        },
        "item": {
          "id": "190a5a8c-3b85-42ac-8b50-ed21d468e105",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ac4f45ef-274b-4905-aad5-b71d101a570c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9c806b-0bda-4904-b145-917b85f69e51",
        "cursor": {
          "ref": "e670d055-f29f-4421-91ea-e8016087c2b1",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "62b2b10e-f7d2-4dd1-9558-c99bede1f6f2"
        },
        "item": {
          "id": "4c9c806b-0bda-4904-b145-917b85f69e51",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "517432fe-b1cc-4d35-9d20-2e5a932bce28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347552c2-1334-4b27-946f-b0bdc3f31db5",
        "cursor": {
          "ref": "422c81be-b521-44b6-a0fb-bbfe987a91ac",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "eeeb3ec9-88e6-4499-8d1a-fd6eb908ca3f"
        },
        "item": {
          "id": "347552c2-1334-4b27-946f-b0bdc3f31db5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4949ce09-0580-4d75-8846-5a57acd9ff98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07592b16-9ab9-4f8a-9fb9-48be7f0a7a40",
        "cursor": {
          "ref": "6c269cd3-9161-451a-a517-4cb5d6498ef3",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "12c4f7e4-2420-48d4-bf62-9d8b8ed7b157"
        },
        "item": {
          "id": "07592b16-9ab9-4f8a-9fb9-48be7f0a7a40",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1152d06a-186f-4807-b6a6-177561575453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190cb5fc-3cf4-4dc6-ba66-73a1ae30a619",
        "cursor": {
          "ref": "8e0d20f1-694f-4aeb-bb6a-c80bd29a05a3",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cde3fd30-737b-4622-add0-5f6f5cc71fc5"
        },
        "item": {
          "id": "190cb5fc-3cf4-4dc6-ba66-73a1ae30a619",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f9b55276-df7d-4947-a0c5-6d827115cd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf62a1aa-0de2-4e31-8e86-887648c4fa1e",
        "cursor": {
          "ref": "2cef16cb-dec3-4b83-a5cc-22f2d431cb86",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a03990fb-fc54-48bb-9a51-d97e62bfce5a"
        },
        "item": {
          "id": "cf62a1aa-0de2-4e31-8e86-887648c4fa1e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e0ba7805-1e0f-40cc-a389-5c63dfc6c56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b55031-f02e-4fc2-a589-3c41a1e1eb27",
        "cursor": {
          "ref": "c6f04331-6593-48b7-a06f-07dabce2427d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8eeefa5d-4f0e-4d5a-b2cb-a6529bfcbc9f"
        },
        "item": {
          "id": "a7b55031-f02e-4fc2-a589-3c41a1e1eb27",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "accc5eb9-6558-4a9e-a4b6-884e750a98d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07927e5-ebee-4dec-8a32-4a1ae0014478",
        "cursor": {
          "ref": "7620f662-4950-4e75-bbad-718094a53e98",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "889024e8-deb8-4a7e-9add-5ecec66f4804"
        },
        "item": {
          "id": "d07927e5-ebee-4dec-8a32-4a1ae0014478",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0fa72c75-1ae2-4eab-af65-d6ce18c0a5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be4c51a-dff0-447d-800e-d3f5ed3a3b13",
        "cursor": {
          "ref": "4ebc13bb-896c-408a-b1b5-a0839d7d1c21",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8070db78-c89c-4b82-992e-77a0aae8fb9a"
        },
        "item": {
          "id": "0be4c51a-dff0-447d-800e-d3f5ed3a3b13",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ee3e3e80-0a45-40e1-b8f9-c943c79814af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce63aece-2e75-4a71-8a9f-f31eda784224",
        "cursor": {
          "ref": "0867dbde-98c0-4e73-997c-0158abf406db",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "29a9313c-7f28-4786-946e-8aac3e1c5adc"
        },
        "item": {
          "id": "ce63aece-2e75-4a71-8a9f-f31eda784224",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9276bb80-60f2-4a23-af6e-16147d9c8850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5615356-5100-4fe9-879d-6478afbab5e1",
        "cursor": {
          "ref": "1b820f61-fc74-4d3a-96be-509f03045b4f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "52a513c3-d4e3-45ff-9b72-1f488bfbffe5"
        },
        "item": {
          "id": "d5615356-5100-4fe9-879d-6478afbab5e1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "33aafb95-fab8-4beb-8d02-9dcdc6d7987a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492be6b9-975e-4b0b-9acb-107c7d83ea94",
        "cursor": {
          "ref": "2dfa1790-b33e-49bb-bbd0-233a0db9162c",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2e6b381b-1257-4030-9ec7-00cb07586233"
        },
        "item": {
          "id": "492be6b9-975e-4b0b-9acb-107c7d83ea94",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ab214dd9-9df4-4125-97f0-f8289b639732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cb8f0a-7202-439a-9bfe-6ac462281f31",
        "cursor": {
          "ref": "231aa8bc-32a5-46de-bda2-db7f2ad8cf0f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "020734bb-9ea5-40e7-966a-f704274b419e"
        },
        "item": {
          "id": "41cb8f0a-7202-439a-9bfe-6ac462281f31",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "17d6464c-e7ac-40eb-8197-50c23c75564a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762be977-ff66-4628-a0fa-112372f419dc",
        "cursor": {
          "ref": "f88f89ce-80bc-45c4-87cd-f44133768484",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ea9f2125-52d8-4fbf-ba30-71202711ec15"
        },
        "item": {
          "id": "762be977-ff66-4628-a0fa-112372f419dc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "df9baf5a-dddb-493b-be0b-09f6f980ff97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31616c0a-065f-4526-8da3-e2baae7584fc",
        "cursor": {
          "ref": "17ee719b-d394-44a8-a44a-c9c5f6b8b05d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "dc8b0767-896f-4f1d-86f9-030ab83d2c83"
        },
        "item": {
          "id": "31616c0a-065f-4526-8da3-e2baae7584fc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "27e2c374-2c96-41fa-84e4-b6d2273462d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a1a0fd-a487-4f44-9f4d-e3e247923d09",
        "cursor": {
          "ref": "bc4e0fb6-bde5-438f-b863-66d9d654917d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8ea4cd64-75a5-4b75-9fc7-57f92bcc706b"
        },
        "item": {
          "id": "c5a1a0fd-a487-4f44-9f4d-e3e247923d09",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6d36548d-b009-4f9f-be21-0a0dbaecd4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0b59bf-9d76-4af5-9a07-90c1cf069946",
        "cursor": {
          "ref": "3fd5efde-5c47-443d-8f32-d37fe20d73b8",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d02d04ca-a4a1-4bc1-8b3f-fdb150012bd6"
        },
        "item": {
          "id": "5c0b59bf-9d76-4af5-9a07-90c1cf069946",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f2746796-bff4-419d-8cb7-e93b3992369a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33db71a-4f7c-4852-b5c9-04eb3e40742d",
        "cursor": {
          "ref": "64f96e10-b4c3-4314-87b9-add2117a28df",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5d28a6d3-be64-49af-b4ab-7906d0396c2f"
        },
        "item": {
          "id": "e33db71a-4f7c-4852-b5c9-04eb3e40742d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1f8f511b-e57a-4aa7-96fb-e041146021fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c34290-1f83-4726-94ab-f1df5984d595",
        "cursor": {
          "ref": "64763b9a-4453-4222-9545-6fdde8682df9",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d50d1e72-2cef-4a6b-8054-c3138a92b7c4"
        },
        "item": {
          "id": "55c34290-1f83-4726-94ab-f1df5984d595",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "376465d9-aa87-4b55-9d29-f383daaf2426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759c0727-34f8-47d6-b2cc-9570b82051b3",
        "cursor": {
          "ref": "3e314a4a-8ef1-4a6b-847a-9f254f552cc8",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8e903dba-ebba-4770-9b38-776eed5571bf"
        },
        "item": {
          "id": "759c0727-34f8-47d6-b2cc-9570b82051b3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1dbdc89e-b880-4118-a0e7-db5caa813fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc413834-dffb-44db-9f3e-acf041d9e29b",
        "cursor": {
          "ref": "b3a7e72e-b749-4194-a00a-2013ea15cf09",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "de947c86-e85a-482d-bc26-84c193096043"
        },
        "item": {
          "id": "fc413834-dffb-44db-9f3e-acf041d9e29b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "39313fa0-ecf7-475c-b260-f5b43c79e59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2aab1e-39f5-4451-a4a5-a03c2ac07ed9",
        "cursor": {
          "ref": "de65bea4-8086-444a-8a57-f9a9f09e9fd7",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "02d66cec-23a8-4a86-9827-90cc3fecd221"
        },
        "item": {
          "id": "8e2aab1e-39f5-4451-a4a5-a03c2ac07ed9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ee047fa1-ba9b-4779-ab72-065cadebc782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67590f29-e951-468e-abfa-23402b3e1c5b",
        "cursor": {
          "ref": "244dcfcc-1d70-494a-b828-6d811c9fd211",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cecee2cd-d742-47af-b447-a06575b6258b"
        },
        "item": {
          "id": "67590f29-e951-468e-abfa-23402b3e1c5b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "42e73cdf-4249-4eee-b604-6900c8413459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d41e475-a85b-4a08-b095-5312013161cd",
        "cursor": {
          "ref": "ff92c6aa-f095-4c4f-969a-8deb973761ad",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5e09203a-1715-459e-a322-376512822533"
        },
        "item": {
          "id": "6d41e475-a85b-4a08-b095-5312013161cd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b7179da3-840a-4a55-9894-b936f5cf35d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e545d6-24d3-4ba5-b959-f7f409076217",
        "cursor": {
          "ref": "665a85cd-553a-4ca1-b791-4baf70173b21",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "185ecec9-c4c2-4fdf-80a7-29ddbdd508d3"
        },
        "item": {
          "id": "87e545d6-24d3-4ba5-b959-f7f409076217",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cedd0bdf-e2f8-4130-ad5c-85212afcf7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd501e7-67a3-4632-b881-d3bd74f0cb67",
        "cursor": {
          "ref": "e6c5a80f-8572-4cd7-b623-2ccbf6511530",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9dc06648-5c5c-4cdc-985a-0a69cea9ea78"
        },
        "item": {
          "id": "0fd501e7-67a3-4632-b881-d3bd74f0cb67",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dcb27754-9cd7-4037-a581-4e17c0b21b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e9b7a2-4e6e-40d5-9295-9245553651af",
        "cursor": {
          "ref": "757f1a41-798e-4185-b489-262539419a72",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "59fb0af0-f583-4a4f-86aa-4a99ecf36006"
        },
        "item": {
          "id": "88e9b7a2-4e6e-40d5-9295-9245553651af",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f753977a-c097-447e-945d-04fc6c1b738f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec29d04-858a-4014-9a6e-ec20466ca98a",
        "cursor": {
          "ref": "7bd119bc-bb93-4009-a73e-885e1b7a54c9",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f21b4a03-aa19-4cd4-910d-36160f326a19"
        },
        "item": {
          "id": "4ec29d04-858a-4014-9a6e-ec20466ca98a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8540cdfe-4ff7-4624-a94d-3caf021e2ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4437f6-8d8b-42a5-a3a4-e9daf1a8f28b",
        "cursor": {
          "ref": "b280eb7c-216f-4b60-907b-43d3b91d0b60",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c143ed44-b6f8-4d5f-9030-76d984bf5273"
        },
        "item": {
          "id": "be4437f6-8d8b-42a5-a3a4-e9daf1a8f28b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7f0d61d2-0202-40da-a854-cad462a2327b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8e0d08-eb43-4f46-8773-975089273a5d",
        "cursor": {
          "ref": "450a3e7f-4940-4396-8978-103839337bc5",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5793e77f-4d43-48bc-9fee-44ce1ac8689f"
        },
        "item": {
          "id": "ed8e0d08-eb43-4f46-8773-975089273a5d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4316bb88-beb9-4a4a-8a99-cce5c9d471c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cd3bda-2fd7-4ac2-902c-aa0cea6b4483",
        "cursor": {
          "ref": "c5c0c2d8-00e0-480b-b0d5-4e3ca113fd8f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d5267b04-e557-4f75-ba4b-45761f08d86d"
        },
        "item": {
          "id": "51cd3bda-2fd7-4ac2-902c-aa0cea6b4483",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "706ea1c0-b272-4b38-95f0-ad998cba2406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90afcea5-05c2-420d-a90b-b950559e2584",
        "cursor": {
          "ref": "eac999a7-3ed9-4653-ae48-ae2d4d15ec04",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fa60f677-c44a-44f7-8463-c9faa17de24d"
        },
        "item": {
          "id": "90afcea5-05c2-420d-a90b-b950559e2584",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "df61de94-9ea0-47e9-afe9-240964b7debd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df599fa8-795b-4761-965c-ef0124ae16c7",
        "cursor": {
          "ref": "98570787-45ad-4b4e-9890-683036ebcead",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "15c99104-96b6-4d5b-a8b6-6f96521c4da8"
        },
        "item": {
          "id": "df599fa8-795b-4761-965c-ef0124ae16c7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e5183dab-5124-49d8-a753-7f1751850f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c29125-ee26-4850-9512-c9a3347e8e10",
        "cursor": {
          "ref": "e9444eea-4fc6-4985-ae5f-5b7154931a76",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ad24f347-7ced-4cf3-8870-8ae3250473d7"
        },
        "item": {
          "id": "f7c29125-ee26-4850-9512-c9a3347e8e10",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1327c61a-5b25-4470-a7ef-487c2f784742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76b041c-9400-4422-aa39-81df81cbc0bd",
        "cursor": {
          "ref": "c7352e4a-bb25-4be5-8e5f-92f3171be8f9",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "adab5278-c1bb-4357-9cd8-6999f78d56e0"
        },
        "item": {
          "id": "c76b041c-9400-4422-aa39-81df81cbc0bd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4b64f0f0-a27e-4828-ab84-70e818e3fa3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e5bb63-9ec5-42f3-8465-4475985b99cf",
        "cursor": {
          "ref": "272fe1ec-875c-410e-9ffd-ef549ff1ff15",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1e2f09b2-c892-4131-b1a5-4c912cb859a5"
        },
        "item": {
          "id": "66e5bb63-9ec5-42f3-8465-4475985b99cf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c1e7e73f-8540-470b-80c4-c7228ee3e307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341719a5-fed5-4598-91ac-7c70852ed073",
        "cursor": {
          "ref": "7595d107-9a4c-4e5e-83b8-79ffa689201f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "316882ab-73de-4dab-8b05-9802abf6d54c"
        },
        "item": {
          "id": "341719a5-fed5-4598-91ac-7c70852ed073",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "afab065c-10b0-4dbd-a0c2-c208cc7113de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd3fff7-cc24-49e9-8183-d69aa5d95808",
        "cursor": {
          "ref": "3e2a5249-7073-4fad-9b9c-d97db6baffb0",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "771cc44a-d2c6-4e97-9038-9dd7a5a61616"
        },
        "item": {
          "id": "5cd3fff7-cc24-49e9-8183-d69aa5d95808",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "10a89200-e94f-4a67-8c33-e0c827fae121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bce0a6-1247-41a4-a0fa-72c0dece6191",
        "cursor": {
          "ref": "52c3f342-f5cf-44b9-b6e8-9ebc27434a99",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "95992d8a-1bb0-45df-b35d-576b83e62d83"
        },
        "item": {
          "id": "90bce0a6-1247-41a4-a0fa-72c0dece6191",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a7f848de-d6f6-455b-a330-e95eb1bbdaf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77de1358-16f7-4e5b-b847-098587ffd59f",
        "cursor": {
          "ref": "4743002a-2afd-480c-b7a9-490d991bab88",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "15aad53b-167b-4ffc-a100-c47e7e7ffa63"
        },
        "item": {
          "id": "77de1358-16f7-4e5b-b847-098587ffd59f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c9e62406-3097-42dc-910b-c2fe1238a7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784717b3-c7bc-4246-8102-67a253ae9020",
        "cursor": {
          "ref": "7d6d3f06-fd62-4f42-b16f-170bdcae84ff",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b9af2412-92df-4bab-b02c-424523f101d3"
        },
        "item": {
          "id": "784717b3-c7bc-4246-8102-67a253ae9020",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0014b37d-a60d-465a-a711-a61ee231dab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e455150-6afc-4818-88b2-4b35d8e95365",
        "cursor": {
          "ref": "39a3a9d6-b4c1-4210-ba8b-8512b57fe136",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8e689a49-5c98-4256-aaa6-0f0a94c00ed8"
        },
        "item": {
          "id": "8e455150-6afc-4818-88b2-4b35d8e95365",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "574bd151-57fb-4ebd-9d74-a11af91c3c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d9fe34-3d89-4c39-8942-a9d3faa4f8e9",
        "cursor": {
          "ref": "43c3ce32-a34d-4398-b1b7-1d2922f5057b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "89877c21-1e97-4df1-b1ad-0675dd875cff"
        },
        "item": {
          "id": "10d9fe34-3d89-4c39-8942-a9d3faa4f8e9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b1477dfc-88aa-4796-a6a6-2553408c3e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecf4ae7-9670-4d36-a911-ea5736dea171",
        "cursor": {
          "ref": "1b85970f-1892-4ae1-b9fe-2e5a134cd06e",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "97698f2a-2c96-406b-b80c-fb21ce7cee5b"
        },
        "item": {
          "id": "9ecf4ae7-9670-4d36-a911-ea5736dea171",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "494064a9-30b8-45fd-97d9-10180901bef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10828e2a-7d13-49b2-b97f-73713ba9d39c",
        "cursor": {
          "ref": "70ebd267-40c4-4fb7-a643-6498d3fa9e96",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f4f7f069-8e44-4b54-8da0-566d5dd83b0c"
        },
        "item": {
          "id": "10828e2a-7d13-49b2-b97f-73713ba9d39c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c52934ad-b4e7-46d2-9ddc-9e83e768b28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa15488c-19a6-44a4-a719-90779ac51d7e",
        "cursor": {
          "ref": "6028f3b2-42ab-4884-b59c-c8883f1ee307",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "705a9dcd-ac9d-4018-a7df-1c032e15000b"
        },
        "item": {
          "id": "fa15488c-19a6-44a4-a719-90779ac51d7e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "27fb1e9a-b063-494d-8ea8-416266307223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d744275e-f975-4e85-b305-2b135bfd9034",
        "cursor": {
          "ref": "791c9958-b854-411d-82fe-322bea40e754",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9e8cc12c-aa69-42e7-86ac-0ebe3653f331"
        },
        "item": {
          "id": "d744275e-f975-4e85-b305-2b135bfd9034",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "458bcd44-20ca-49f3-8c85-1335ca1aa9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f96126d-d9b2-4a55-8a8f-156fc2b4a954",
        "cursor": {
          "ref": "b6fc495c-edbb-4c27-8afa-d8d9779d1464",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "454d5936-d8b5-41ee-a13a-85a612bd57c8"
        },
        "item": {
          "id": "7f96126d-d9b2-4a55-8a8f-156fc2b4a954",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d95ff9c2-544b-402c-a6d8-79bcc62e163a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63db125b-8a6a-4627-ab12-aca7ceb8fc13",
        "cursor": {
          "ref": "8602a53b-e7c8-41cb-a831-915769384c9c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f8040d07-ba62-4cc2-82db-319afaa1cad9"
        },
        "item": {
          "id": "63db125b-8a6a-4627-ab12-aca7ceb8fc13",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "51727b17-a78c-49ce-940c-8c101e8506be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6399c3fb-f743-4355-a34d-93d24a7e32af",
        "cursor": {
          "ref": "00fb083a-84eb-47a2-926d-198264cacae5",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a32ede5d-c03f-4087-93d8-8f48edc4c8a9"
        },
        "item": {
          "id": "6399c3fb-f743-4355-a34d-93d24a7e32af",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1904c95b-f9e0-4f95-9a02-615fa30c5e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450f1950-5fc7-4f65-9886-5c3057d79e88",
        "cursor": {
          "ref": "2d029347-7e99-465c-bc62-72a70f8dba1a",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "76465626-a0fc-4634-b868-6f686bfd2931"
        },
        "item": {
          "id": "450f1950-5fc7-4f65-9886-5c3057d79e88",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ba9ceafa-b1f2-4562-bca6-97d9673d95ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfeb8e51-b47a-4b24-96ab-fef998f7230d",
        "cursor": {
          "ref": "507d8714-4af4-44c4-bb38-dd28e8cd04ed",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "51eebb04-a613-40a9-b3a9-ceacee361c98"
        },
        "item": {
          "id": "dfeb8e51-b47a-4b24-96ab-fef998f7230d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1d8dc3c6-4482-4b26-ba5e-74c5332cba3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1dde36-0571-427b-8e8d-55e4a8666d6d",
        "cursor": {
          "ref": "bf58c3db-da32-412b-b78d-a7fed1cac754",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "20e370be-e208-4007-b12f-178c4379783c"
        },
        "item": {
          "id": "7d1dde36-0571-427b-8e8d-55e4a8666d6d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d6aa8d21-1389-40fb-85ef-38943371f3ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d51f142-818c-4aff-b71c-1b0522ad0247",
        "cursor": {
          "ref": "b675111e-2d6e-4000-a508-7cbbe4febb58",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "095e25e6-f092-4a29-bec5-e53c30b0142a"
        },
        "item": {
          "id": "2d51f142-818c-4aff-b71c-1b0522ad0247",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8cfbf13c-60b3-4154-a019-8b0ef2702256",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9459105b-f7b9-4e82-a04b-42d482abc423",
        "cursor": {
          "ref": "58be15aa-29e0-490b-85c7-4908f43b5e72",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "03d4034e-3454-4eec-9abc-84b26895549b"
        },
        "item": {
          "id": "9459105b-f7b9-4e82-a04b-42d482abc423",
          "name": "credentials_verify"
        },
        "response": {
          "id": "97b422d2-b1dc-466c-b039-d6a2a0984714",
          "status": "OK",
          "code": 200,
          "responseTime": 2752,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "70aba349-cf8b-4f17-ad08-17de50fabf9d",
        "cursor": {
          "ref": "736d661e-cdbc-4c6b-a353-5a080d18fa67",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "abe3e317-23d9-4431-abfb-15e7c5621f1d"
        },
        "item": {
          "id": "70aba349-cf8b-4f17-ad08-17de50fabf9d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "df2b84d4-4c9d-445a-8b1d-6f0348682494",
          "status": "OK",
          "code": 200,
          "responseTime": 3831,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d799af1e-7bc5-4f4a-bd75-9a4b19b8a59a",
        "cursor": {
          "ref": "68be4409-7efe-45cb-886b-2c246dca436a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e4fdc8a6-bd12-4650-9241-ea1398273244"
        },
        "item": {
          "id": "d799af1e-7bc5-4f4a-bd75-9a4b19b8a59a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1248ded7-e468-4d6a-b049-a9912138fb43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d799af1e-7bc5-4f4a-bd75-9a4b19b8a59a",
        "cursor": {
          "ref": "68be4409-7efe-45cb-886b-2c246dca436a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e4fdc8a6-bd12-4650-9241-ea1398273244"
        },
        "item": {
          "id": "d799af1e-7bc5-4f4a-bd75-9a4b19b8a59a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1248ded7-e468-4d6a-b049-a9912138fb43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f5fa52-1d8d-4df8-a3d8-3ca0087f2476",
        "cursor": {
          "ref": "84bee731-1513-4742-933f-5b9068c8c612",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2ef95326-aff1-4bfd-858a-1a9cefc5a1f8"
        },
        "item": {
          "id": "87f5fa52-1d8d-4df8-a3d8-3ca0087f2476",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1fe0e834-8eb5-4f80-b123-bd866f943442",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2962bb0-df73-468d-b03d-8280a1cc0fec",
        "cursor": {
          "ref": "3b94ed8b-449d-45a2-b3a2-0395b2231213",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2064d6c4-b79e-4dbc-9a0d-236f6f20a023"
        },
        "item": {
          "id": "f2962bb0-df73-468d-b03d-8280a1cc0fec",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f07f9495-fc29-49c4-81ca-283713309c34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}