{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "76a3207d-66a4-4e57-8cef-7d3bd661848a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8cf70f2e-9df9-4836-b325-a27f9d361df7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12f4d267-21cb-467c-8e1b-ca449bbdccd6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6e4ee0c8-a0c6-413a-9537-4307a32beb6b"
                }
              }
            ]
          },
          {
            "id": "64d1ba96-22a7-4cbc-b2d4-d66dce094d20",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1cf8d59-0434-4d6e-ae2d-6602050c59de",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "24ca79c7-d4d8-41ae-9667-66da9f2d603f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f2be8aa8-f17a-41c7-82c8-f3da61d61706",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b8ffb9f1-f5ff-46f4-a89a-5388210ac12b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d5ef611-8321-43ba-a99f-8e1e6017bd79",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f78caf6d-ed56-4fd2-9edc-2b20c83113e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5f2fb39-b7d6-4d40-8770-67d20a50c195"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99634226-5cb8-404d-8569-cfb7d6c535d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "749cb0fc-8591-4ebe-bfe1-519a723ac383"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "651c4e58-3a32-4e48-a184-b8c72d16e209",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11e70686-2fce-4b32-906e-6bc702861f9f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "520671e7-2d4b-4588-9fc6-f65bf1f5c761",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "15367042-1351-4423-b375-e02c8834a7c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2beaeb7e-16ec-4e89-ae8b-65ce3e080bc9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "351db886-2e18-44c5-b06a-6b5834994037"
            }
          }
        ]
      },
      {
        "id": "42cbbf48-97aa-4195-b97c-1df63f7894df",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5afb321c-9ac5-4ab6-98ae-492558f4c1da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "505cda11-2767-4ad6-9378-ba9cb1f94bb5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d391a8f7-c838-4c78-a57e-ae63cb31fadb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88481986-fe94-4b68-a631-2f6bc78a90bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22447a02-07d1-40e9-87f2-2355152a6e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4163c23-6813-4e46-a87b-483bd239738f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377458e6-eb5e-4706-b870-fc46bdf0c933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edef57cb-326e-4a0c-8b1a-795454712eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687861cc-1cdd-4128-85f6-935cb830a1e8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a816caf-c789-470f-99b0-5350b2cf22e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac5a1088-bbee-4003-8acb-bd3600165d86"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9f1cd85e-3f79-41ce-8862-61995a8d9d74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf7ef88f-eecf-420a-9b1a-fe1d3e1fe8e5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a109889f-de40-4fcf-b994-7d477a9185bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85d7ed33-16cc-4988-89bc-d64e593ecb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d1d882-2a41-4a11-b6e5-3c9c6ad3c042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d87184-77f2-42df-9548-fd5c8c820025"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2d436099-e31a-4dfe-9746-8e1c21b4c74f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e52c6e15-3042-4190-9877-23a6ed32e031",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0344b24-5725-438e-ad66-972cca9d32f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2538ac26-03ba-44da-9c5c-85e58361d228"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8775e51-b9b0-4b8f-8a93-a087a79cfbdc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "23749e2c-ee40-4839-88f2-e8cf31bc42c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5e40d0c-ba7f-4e13-807d-f54563d7b5ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c2cb64b-2afe-4a0d-8986-728e130713b3"
            }
          }
        ]
      },
      {
        "id": "46ed6ccd-9bd8-43d3-bf08-a1b539d59309",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "24df5904-04da-4fe9-95f8-df8e2e563dfa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbd349af-15eb-47af-b8a8-e78f2ac286fb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ce3324a1-4f91-482c-a9b0-beb072da5cb4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0e4121-0cc0-4a23-b5db-313f7b1885c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393e7306-0b07-48b4-8992-60ee25a981d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68410e9c-3507-4238-8518-d6640cbccd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df86bec7-e56f-451f-8e0e-bac8a90a1f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304951f4-b7ed-4c77-bf4c-b88c397c2f04",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fec6f3-e1b6-41ef-b673-296c83fdbaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f11af3-4216-46c9-8662-6a8c302d2a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628f0454-c30a-4810-9479-0e8e6ffba85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65ec8070-23ea-44a7-ab59-4b433ebee888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfd3e4a-07ee-4cfa-89aa-ddca7b8d4c39",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7321eafb-b545-47c5-8156-fbc763fd6b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477c9470-4f6a-4923-983b-bf6d23e732f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d446da5-b69b-4489-be73-6c39d5f53141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb6ce583-b78c-4ab6-9b48-48d5ae2c7351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b11444-3d30-4e9b-8d46-024186c0a220",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2179da8-b187-4df2-a6a6-6e2dab09cf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4069aa32-d697-4463-bc46-89fbcb17a88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c962a8a-43f7-4d43-aa0f-a89cbf939bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab867049-c5a6-45dc-826e-2cc5d8941417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83391a59-d608-49b1-b0e9-f484fbc7ad3a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce39820-707d-4cf5-bac8-b1d33e2e3a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7373effd-5a4e-490f-9afc-3b0d054f65b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11a84fc-af4f-401d-bb3c-e769bf557216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dc36712-b8a1-4b23-8c0b-b759e13338b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe17a62-602a-4a68-bcaa-19e5f1ff9468",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0b5a70-a7a2-411f-a44d-6d6a390ab245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac11cbf-21b7-49fc-8833-da382f4deb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a1c3ce-0ef8-464c-9e8e-3dd422fe3e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dae46ba1-cfda-473d-bc6a-f67133ef9d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8637a939-8d6e-401c-9c63-3a7b19c12ded",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e47cc1-1687-4aac-a97a-7cad1bb42720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc251e3c-cdfa-4fc7-89f1-ee3e7759abaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166f50a3-2c20-450d-87db-c62d9842ab80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "deac96a9-e77e-4d0f-9987-80e03c503c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057e5207-119f-4751-a32d-f1385af73ac3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967306a3-d62c-4633-acb2-815ac1918824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e07d94-aab3-42d7-b3cc-4f260562febf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d588253-9af1-46e5-8a0f-0df1aaef081a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "161325c5-65a4-40bd-adf1-7eb0c4b1181a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4b37c8-7aa8-4a10-a528-3fc26006d58d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b5ed68-9520-4e12-a472-dbe550416d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225897ba-4d19-4a28-beb7-f1058c00def1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70719eb8-e0db-4cde-949e-49a867d4ff78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bffec2b-0d7e-44f9-a0de-3616572d364f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2fb786-8217-47d1-a227-12ed20717fd0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd0bbf1-8379-43e3-b2af-affb18ce8791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f72ebd41-75f0-4720-9a81-5335ede63f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960ee340-8e49-45a0-b89c-0da58c8ce0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6391b67d-bb4e-4eca-ac15-f38cda1c5514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b3034c-7117-438b-a91f-3fa3c1467d0c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f07247c-387e-431f-be74-b0a993054a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c140184-d1e3-44bd-b262-55af54eef0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629582bb-055f-4f9c-9a22-dc70b6879d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52067f1b-2e86-47df-abe6-a6b34d9fa979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fa0b70-ad25-4cd5-a10e-ad262b0a987b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c55f80-ecc8-4db0-9bb9-dfa8b260bfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd802f86-6684-44f4-9146-81a348216537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3c3d2f-692e-4b10-8466-21bcd6aec17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8ef9894-892d-4450-be98-b310789c2a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480ac472-3baf-4903-830e-f44324c9cd6a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ddbc4b-34bc-46d9-9541-63d078db13a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a1a377-4260-4fbb-8a1c-95435acbc586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecd05e3-e9c2-4f0f-89f7-3190a06febcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77105924-8a69-4226-a047-24ef81abc555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e219781e-6410-43be-8fd8-42c587dfcf88",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e128505-937a-4dfd-ab7a-0f558132bb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9624634c-e883-4533-a4d0-26834842818d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b16f1a5-1df6-4c95-8d61-506aaf8c5c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c277e2b-8aed-4551-a489-ee65b0f59dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298b39ea-f75b-4235-a3ba-ccd40ae09f0d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95cc282-cb26-4ccd-8667-21bfa93f8b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30ef295-e90d-40b6-8e37-1ffebda9ff37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb0b72f-9b9e-4cd0-85ed-2eecf834a736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be1236e9-f906-4167-86f6-208cb8e7c455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a034916-cd8f-4387-b39a-95e6a072b03e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79eb99bb-b0de-4db7-b881-bf7f80c2f5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c6b003-4f7f-4f0f-88a9-c34fbbb10db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebc67db-8566-424e-b837-192eb5dc0d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "130fbf34-fd0a-4192-92bf-12c70332ad46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c497642c-5b7e-49b8-ac58-bdfd52393027",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89c9448-3f39-4f55-9abe-2159d680305e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b096c6d5-ccdd-4517-8480-db3cfa99d9b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469bfb1f-daae-431d-aa31-07eb1343ae6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f76669b6-fa40-4293-be88-e8b876677fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacbc4c0-eea5-4eb4-8b99-a3703386f2c7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c08e815-094b-4c74-9174-491b1a0d66f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fa7e2c-82c2-4848-84d3-735206990869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37ce1a5-8443-4486-8dde-108dfc0f7008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "97c7898e-b56f-4428-adb3-55413f79c9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b82bb0e-b38b-4f51-9bab-0a93230c6e10",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23143b69-2ffa-4725-a370-d174181f9fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f633ed62-644d-432c-bc92-5c9f48ddad96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a825e8d0-d09a-4db1-95e0-bf34622e699d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09997466-eb45-4ddd-9770-c620babd6b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5013e5-357c-43ff-ad65-3fd99eace44e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edec2df6-5ba9-49b7-ac6f-f0f5813f77e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fb11ff-4861-4b3d-877a-0d5982657cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a57397-c9c1-4282-9937-bdd4df66b8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc7aba2-7d0f-47aa-9d03-347068dd42fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29f4280-aa41-4e7e-b05e-6e6b83f5cd25",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8768400-ee0f-4428-80cf-90638f88b663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0fd994-34e2-42f0-beeb-26a45bb9f4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361839e2-9270-4f7d-a50a-0ddc197ca2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10a354f4-b790-40f9-adea-61684f1f2e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0415efd9-d0e0-41cd-8b8c-30065e631868",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ab9029-bcd3-4921-949e-678aea6fc3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916762ea-d4fd-4b95-8b25-06f4f04594c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f139196-9695-4871-a1bd-a1f0cbfcc304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ebc197-99a7-4381-ae98-ed35e52e297a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2457c070-f2c6-4c24-ae74-979905b26fcb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fa2918-059f-4295-aff0-6052f3e41982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181cb185-61a1-4b5a-b448-e5fb49cca669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dda3fb8-b5bb-40e7-997e-2fedb2e92f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e25479f8-521b-4e22-85ea-596ca2055a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2527fd8-12ed-4d6f-896a-5f5c24684cb5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d94ce9-db4d-4dcb-abb2-5b4c3db8c951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36846cb0-4dea-4b8b-b22f-26fd8ca38a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5efe3f8-03ca-4b82-9327-5a570d6bfc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bda3478-776d-4998-bc72-42933e7d507c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddc8bc1-d3bd-4181-8d55-7c9f2892e95f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35ffebe-2319-4443-bd07-f261fa57f2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da09d66-02d1-484d-b567-0d6a37426667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8420aa7-a307-4701-a865-456ba43b89d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "921b1395-a4db-4493-b9c6-3f255438389e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a65b376-a978-4fc8-94f9-a56c8aa93dbd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c956fa-15fd-4d93-8f27-c345d8518719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcfd3e0-b8a6-489e-b498-95b53b3347c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1222dcb7-77cf-4b64-bb66-59318da8cd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e769910e-5127-4e67-8c04-4f98646a7152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bc3fb3-fca4-409c-b0d5-1e3f8700ab8d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2efc29-f4f1-4877-9478-59dd03ac239c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5597553e-ff6a-451f-b85f-1c24d51f9978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31aa5ec-897b-43c0-8174-90ff7678674f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6acc659c-ca5e-452c-9b17-b1ad9c8dacca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ae513f-d6eb-4f6f-b749-39e14a01c1e4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f5fa1a-2c97-4e13-ae98-6de9c975bd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0759ba1-041f-48f1-81e0-a36df2c769af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf252fd7-253c-4b8f-9fe2-430aa209a3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8213823e-45d9-4294-905a-e5f6cfa358f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a851373-0c3c-4dbe-a5f5-696f0af1d6ec",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac6d567-32c5-4678-b649-ec0a509b7aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74a511d-4983-46fe-b3ef-60e82420e5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2fa535-793d-48b5-9782-b755232ab029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18f4dd7b-261f-4e35-91a2-71d8ffe8f32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedc8e6c-655e-41a4-8687-2dfe37651170",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48d3eb9-39c1-4cf8-b7cd-e3e240953c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abb39c6-4f75-47ca-8646-9c8adb1b932d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b266681-fb84-46ac-b151-044cee993454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d97474dc-1647-43ba-8164-08e45a498642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d182e0-7ed8-46fb-a4cd-3f1de649b129",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba2eb30-1ddf-400c-99c2-850468a85f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36512618-31e4-424b-9237-cbc90f5ae6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257813c2-95c8-42b7-93ae-cc51f7f266b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9396862-aa8b-4c8a-9d0d-e264ffcb4cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cb5372-7637-41c7-adfd-e666982f9216",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af4eea5-2cbf-4898-85d0-3a70bb78a8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94960668-2548-4581-ad7f-d166d5dbd428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be18f711-3444-4a72-960f-aea1434a7314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e45ea40b-ad17-4700-973c-dc27043ce7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac817576-5352-4b6e-9e8b-6ef4b6329913",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fe21d6-643a-45d0-9baf-cf0abf37a01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07a0305-0466-41a8-8a41-0e952e73e9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a7f38f-d54a-46cd-a09d-c88a057b58d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b54d5fbe-3b10-4b5e-90c8-66feb6713b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9b62e7-2e7f-4b10-b208-19bf3dcc6f6e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee6aa36-843c-4b14-9412-0387d8e557f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a0371d-54d8-47c2-8fdf-e438c2fee753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04954968-8496-4de4-8f23-a122ade8d8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ec5ae9-9bc9-4431-a552-d44a5736253c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa14fec-8186-4348-9d6f-9c6541878c1c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5b85ef-0b1a-4ad6-b77f-9a6a37fb5857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6344cb9e-5660-4bc4-87be-61b38938aa36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8b6973-dd24-413c-a814-192b7214d1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c394329c-4724-45db-9f2a-7c10af0fc477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6172bd55-ee93-4dc3-9390-2ef29df61b17",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25443010-9e42-4129-8216-494c340de411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3263cf0-02ac-4a23-93df-74a0ae7ea6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3a8032-86a4-41c9-b354-0db7c87298a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6eb2d8f-ae3c-483b-9aca-e7f5d554d9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6532bc-f0b5-41a9-92e8-3839c0a8ed21",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914fb0f5-8de7-4ad4-ae96-43920c2a5138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437aad57-f073-4796-8742-ef6961e04f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e6bd03-611a-4fb0-83ad-94f626f1afd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ec4a04-188c-4181-afc4-50fe59e999f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94573161-3557-4b28-8385-cd767d799218",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2b71ef-e7ff-4c9e-bffb-8d697b7a3077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec33293-24ca-47f5-9cee-50ab3900f887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0b8017-06b0-4b82-b4fc-3a15a8dfa60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "85ec6b80-fce1-4e5f-a56a-04dddec7a106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e7f483-8f70-454f-ad4d-00a116a8e29e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2a1220-6a64-4d87-8a73-3d8102baace4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b707c633-805a-4b0f-8435-274f0a0fcaff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663879f3-8008-4dc3-aaba-df5a1650192b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a42f70f2-d9a9-43e5-a85b-577e32cbe6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6526849c-087c-49c6-9898-92402f126130",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e598ddba-682c-4122-a7f6-6f0d2d96c534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6dfd1a2-2043-4b6f-8df4-b29b946424d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c51aa3a-05f6-4b02-9903-c91088788fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "48f567fa-603b-427c-806a-1385a4b32c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1b68af-86b9-41ba-848e-04f8c4d0e8be",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf12826-53ca-4519-8a24-89af71242713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b87cd7-9a7d-4698-8c48-06b07d8948d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688e1aae-310a-4616-bf32-5526a337e159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a17b23e-093c-4532-ae18-f0b4bd2dc1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5699cd24-f5c6-4486-9d89-4cf1247691d7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec911119-8d3a-4ce0-8784-3504a4211136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dcec88e-15a9-4c6b-8216-4f25cdbabbac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1f5bcf-9817-44df-91ca-6295c5b48d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3e34ab-b1c1-4b4a-95e5-50403d0558e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f6d2df-9b58-4114-aaff-a3307d1c0700",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9719e184-ea7f-43cf-af1a-ea36e244ace5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920093ea-f011-4139-9322-959a8406868d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d30ab3-facf-4c5f-a664-6360193a2c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff82ca1-b12b-4cbc-9545-5cd5fe2b62e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4698bdd-d15d-4c04-84cc-1c0facc73ae5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61e8f6d-9e2e-4dba-8960-62d2154af23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fbfc49-693a-43ab-9891-4a88a9b1bbcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6e4baa-8832-42ce-85ee-a6e5458b3d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "119e0337-22b4-4bda-80b1-b9123c4d05d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7c9f34-5251-4313-8b1f-e6c2d38c9cd9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9508f3-0cb9-471f-b575-80d6bdea6d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae660613-1222-40ff-bc1a-344274a30fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899c9a63-cd2b-4995-a855-9969d35b01d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dff550c0-1ec8-4e87-acf8-766c1b05516c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aff5b85-201b-4fed-a58a-eb1200917038",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc740526-6c1f-429c-a4cd-bad9a81288e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78e56e1-dd09-4bdd-b44f-05299577886f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c439207-d844-401f-8cf7-6ffc32d9d61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "686eba42-737e-493b-afda-b8135ed59c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9295dc4-efde-4a0d-94d9-d7c574974428",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b414dd0-598c-4ab9-9beb-669b90d19e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dec2593-5bf3-4975-9e6f-990bf0210a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3462e4b7-f578-460e-ad40-f1c914992fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d07df22b-11ee-46a1-b4dd-ada84eb13c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3aebae-9bd9-4045-9d42-27ef3520e159",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917fe87d-4e1c-48ed-a15f-a321c5bb09e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e63dc5-b9d0-4bb4-8146-876aa8a7c93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af18bea-2577-4bb5-9172-2d146d5c7d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "888367b1-900e-477e-94b9-3aaf1f47d808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d34eb26-4672-48eb-ab2a-f9b06729d6b0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4d176e-52a4-4039-b1a0-299c1f950d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719d7f96-7c04-4541-ace2-396db9250d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8480fcb5-ebd0-4b71-9d1e-9292ea4525de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "abbf1a2d-3c84-412a-ad1b-fc181ee6c9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87518898-4167-4835-9e35-a1dcd1737259",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef9de3e-dcd4-4aee-82b8-f4bdc6ead62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ee61d0-430f-42c6-bd85-0b944e8d9987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27dca5e2-25d5-450a-97c6-ada3d225ab54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2fa599f-0743-44f2-bf7c-617c51925287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68010b7a-9506-4879-9dc4-e2f7570863d0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244355fc-004d-4f4e-8e0c-9b6b30b42c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d829cccb-cd3a-4d0f-9243-2f3b8ad8e048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16e6ab5-98ee-4700-8225-437fd65f87ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "913a60fb-c6f5-4f19-bcbf-c8c45e26d546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9d2906-f86f-4eaf-ae5a-d843220b263e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324aaf6d-75ed-4da9-9e7c-9cce8dd4fc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5660d652-51e7-456b-a9ec-5cdafb6c7025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abad3eb1-fca0-40d4-ad1a-e868fb9bbfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "46c6f969-e4bd-4a35-867f-e5f54118cb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce8be87-f31e-43bf-a647-5b9a6909b70a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732e4f60-7958-47df-a030-cf4d679f99c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6774ad-b1e1-4588-8052-8f71d28d84d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee913d1b-c622-4c14-ac0b-ee1e18b08789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b131d02c-e4d7-483c-b01e-f2ce736e182e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4189f5a-4c3e-48a0-83d6-c38fae6f2fbf",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73fa12b-a7b6-4e3d-ad48-291d596f4376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df1c5b8-d87e-4ba4-a6b2-25b6690ba2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d38dee5-e53c-48be-afef-c1e2b2f49540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0cda71-771b-4664-a8d0-583c5c9a431e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3e308d-a7e0-4659-9b3b-3876c1e7b0fe",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52e4698-5ea3-4940-aeac-eefea441bca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba01fdf-2802-437f-8373-b810a7ee4005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ed162f-29c6-4a97-99f7-36e1a2567fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "584201ec-f05a-4365-906f-2917ab71dffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae54f7f5-8ad8-4860-808b-892483c6199d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1032f633-13ee-4e9b-a8a7-683cee711faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ee9fca-8117-42d3-856b-83f1104c0073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35e7d8d-69e8-46d4-b40a-bf7d57802a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "34db6595-2906-4eb5-b4de-2b8f22eaf091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcd5a5f-0206-488c-816d-5056fd359355",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6413e18d-0a31-4108-b526-b83b5046b89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0110a4ce-63ac-4184-8bda-e67140e444e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb73414-ee4a-4141-a722-63d09943925f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7fc7856-7654-48af-86f4-189f69775e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51688c1-2fca-43b3-8434-303f9b8b74eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e31a5b6-d3fe-493a-b46c-560acc404bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c49bfc4-fd68-431e-9231-e217161e5dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed5b7eb-50c4-4ca7-be6a-de2fc8b3ff6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e92a7ae2-2a59-4233-a302-c8bd6e644126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045fd61c-a99a-4f15-bff1-741f29017a44",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f0dc6f-9b2c-4378-a95f-dea4c2fc734d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d8fb3b-dad2-48f4-a03b-5ec617907e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaccc432-d6ca-4f5e-80ed-32bc5ede16ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f667f7-aa6f-4faf-b305-f3f8ae98d1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f504e03-edfc-4176-ac88-4b8363a7253c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffd9362-35af-4a22-a5ec-74f4ea63874c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246ac27d-f835-4d99-b785-ecb11e5f453f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0aae114-4f1a-425d-916e-80232cc2a99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d40adf3-6f70-409f-8a72-b1cc42d56e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534294a7-a40b-4c0a-891d-075f057ec095",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb05cd47-e711-4e2a-972c-02e7855f2212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fea30bc-ef20-4aef-b26c-fb3df01e23d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14732fae-4298-420a-8222-3086b4027d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b97595ba-b6cb-4691-9273-239474713a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e78ba0-e69e-4555-99b2-54ece547ddeb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009ce518-8b58-4c33-af18-8a459eea8b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa91e7b-0670-4a61-af4c-f8cd6e0c3974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8582fd9a-a7b3-4183-9fc1-5d766500fb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb25721c-afa6-4af5-b7f8-f495ea1127f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886c6a8f-fff7-4295-a621-b24708a36dfd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd62a72-2c1a-473b-8e3d-cc9b6abc62dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7047f6d1-3ee3-40bd-9883-44cae21f0749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b537825-33f8-4a29-9cc4-8e9bdb25905c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5501a9-c4a6-4baa-903e-6a0483a977eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ed5a3b-5ac3-4d3d-bd5a-6167c305a40e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637b9c6e-8c1d-46ab-a01d-0092218e2738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7604cc65-724f-447a-bcb9-f4f95a284424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8bb2b4-780e-4feb-90f3-329fdba998c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f027ea00-3909-422d-891f-475e9a93c8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4593328-e634-476c-95d1-efcc0bd5016a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23c2108-f4f4-4730-ad2d-e0fc47b62863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b398c1e-9fe2-4a09-bcbc-e0be15a1b576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454a1a35-d77c-4765-891b-2c6bd99a8bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3261c02c-1669-407a-b454-60bab71a3e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4102d4-48dd-4a0b-8578-d1333bd424df",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebb3e66-f010-45cf-87ef-08febf0598db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122bcbdf-3712-482c-a446-95ae26439abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a1c470-f31b-4c91-819c-0ab8cea61be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b365656f-429a-4a93-9398-e646c71ce6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a810952-d470-4074-bd08-b388d2882015",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99112855-4adc-4677-b35e-f34e98dbe465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf45b620-0a7f-45ed-9ba6-0d9b80e9e6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39d3503-d0d4-4cbe-999f-27aeb409e9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69ab29b0-fb1f-481d-83cd-f8db7c150bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd95cf51-7f05-4722-84fe-e0b86b755155",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ba4462-f514-4b28-a687-194978099b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364784ae-e25e-4f74-8974-ab1b157dfb20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc103f7a-3bc1-494b-894b-d4b6ece5c00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c54057-d09c-40c8-beef-6c0613ac9126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eeb2ac0-fd86-4279-8aa0-91458b9bf656",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acb0a6f-5027-4501-94a8-e8d99f4f0363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0255d1-980e-40cc-acae-29d402a59dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c48818-425c-49cc-8e1c-c724eeb40cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16023b02-8314-496a-9d50-a264fb1b8e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74190f3b-850e-4cec-b4eb-bcb60147603e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66524aa0-77d5-473a-9c37-499ec9951bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657353e2-2ca4-4fe8-9f0f-1f612242578b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee6291e-19a8-41ec-9229-715c1e21426e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "949b2b8c-7ecf-4a25-a1dc-7a0be209efe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c9e090-e7f8-4579-9deb-2019aca3e067",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1433b1c1-d1a3-413a-a29e-0dfca83dfd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f954b1a-6d3b-4fca-90df-2384849da00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13eaaf1-2fc6-4462-87f6-2888799976e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b36b42ea-f78d-43ca-8669-e27158429a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957632d0-84d5-4633-a7fd-07cafe1f1b8e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205d64bf-17f2-43cf-9ed1-fc9d139ce2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd35a4f-2fde-4d68-8506-be83347ffbe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead84382-e721-46c8-a74f-9d9c34df115d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8577850-170d-4b50-b530-22d7ad09c334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a0ef7c-6c69-4ac6-8444-3118029712f3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a83cee-42bb-4985-a2f2-7d0f5d43c188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92690039-b83d-4273-a1be-c407554a2e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c82eab1-5e4b-4320-ad99-c3bc8518034a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a76747-f603-43ea-bfbc-8b8ef38ee520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d241dad9-e90d-4c58-80b6-ca2184103dd3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e19e7c-77cb-44a8-ac0f-07a6be4eb15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c54034-4dee-4a42-9132-e9548fb34607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831578e9-eff9-49b7-932a-d081cadfc614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc35591e-8593-4d07-865d-5f91e7515823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735e4684-3256-4224-bb29-da26be0783de",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea82bd1b-a8d2-4aca-b108-62bae9642966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400cd9b2-8557-446e-9683-ecea1f861ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f55acb-6ee5-46a1-9aac-97c06af0a969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e510cde2-06d5-43b2-bbe0-2fa38d63007c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a1c868-c3d0-4529-9bc4-530c378f9cc7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751f7ab8-af04-4dbb-9f3c-e869122af6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80adf7f5-1a55-474d-905c-ccfc7032d833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37418203-e5cb-45dd-9801-5fd51ec8c697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e82a2f31-803b-4110-bfc0-2d509cc2f3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1e2880-2fae-4343-945f-de53b4552c2d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd81966-e829-4e1b-849f-037591c787ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf4d659-1bf8-48f6-a522-58d6cb0e917d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3571c998-009e-4d12-af41-c8d1b2234d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d10c945d-63e0-4547-b2ca-279d3b12dc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27228385-a1b8-4eef-b5ac-26d608f535ea",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bb82e4-0d6f-4bf9-8179-54a8598f18b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb76a1d-4505-4a83-884a-634911c55e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ed4d09-76b7-4114-8209-444c1f6d7f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80e14b83-05f9-446a-8fed-ba327faf9ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1abe0d-9ef5-4a17-99df-978c76136b30",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5058b4-7f74-40e9-9371-c288914bc76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e34388b-3ee6-413e-bc31-c66634cb5891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee60dbb-95b7-464b-bbe0-35b2232b7720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59e8a21a-77a1-4cf1-b789-30fdc2a20a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3b1377-2cd6-4f09-baec-875d02411691",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc09adcf-2bd2-44cc-b313-ad119e1c80ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e733b382-9dce-4c84-8be4-4131605c1ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a6d963-7df7-4463-9284-489a1a8d2185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4f54b2-9d77-40e3-b592-b862f4efe0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e48bc0-df39-46ca-ac26-c432abd77815",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74418d47-9b43-4aa1-bd68-ac30fbaa1dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03133ea3-ec87-46ad-89f8-fb5ae6021348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08092706-2298-41a7-aadd-bf1ea4f7f01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "679a8c43-4357-44b7-abb0-339dad0c168d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5117a050-2205-446a-91bd-8db7bed0a067",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc3ea9a-f76d-4dfa-98ba-41d52b799e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b90bdcc-8de1-49fe-8864-e63f34b04eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee3f840-32f2-4028-b4df-223d9d7f646e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "037f43e8-e21e-4644-a8d8-40eaae6950b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddccf699-fc02-491d-882b-ac863c9832f6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb62637-3883-402f-b6e4-8ce3f5aa9c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e0a946-4b7b-4026-a4f2-2c1b6f2489f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca77dff3-2629-47fe-b0e0-8ee5945f449b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dfee206-ab76-4d33-8d53-ca1b84a76a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9091c094-4b56-4e65-97f5-975e241e6854",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56423b53-20cf-4c1f-be90-176e5794bc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73c99c0-d195-4763-830f-09125a8f27fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5cd6d4-156c-458b-84d6-bab00148d6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e62e19c-042d-48e3-a764-f611deead7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fecfa05-b28a-484d-8d43-1392d4aca03f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da69d334-516b-43f5-9c0b-48d876449cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73f1955-6250-43ca-99f4-1656e8ce19d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a0ccb1-bdeb-4249-b446-44267b7f9814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f18cf6-65ab-4851-9f04-162eeb2d835a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dbb981-d16f-4cf3-9edb-8ae53ab4cbc7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d38659-4b04-4a3d-808c-1145b7a6ba6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c0aa43-110f-45e7-8013-4d7ec823cf84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc35419-73f2-4f25-b310-f3f6be05ed2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6adbc927-7a44-4362-87f3-657e3e729a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c815725c-ba72-42e1-b808-e62018a565fd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9276f99d-fc50-4f91-92da-be3a40b9cf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015d17e9-6dbb-477c-a20c-62c1022e1567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b971f1a-fcc8-4b4b-aefb-f122d1962808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc5873b-b0bd-42c4-bf6e-37785b138fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddf53a2-1f72-44bd-bed0-0cfbee22c1db",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51368889-5bb3-4b62-b796-d863a78992b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc07fccf-4b05-49c8-8e7d-84d464fd7781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b0c10f-d740-4f7b-ac03-af64e2f98357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "55fc29e7-185d-4026-9ffa-971609a8539b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29e86ae-e5fd-4d4b-ab81-582522a10f5d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb6ee59-57f2-4743-972c-060a8b9daf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c269292-2bf0-44e4-bc09-0c77d88d6ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee635b47-83c7-43c0-9791-f477bf248cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1de81b75-76b8-4c81-a5d2-b98aca3bf79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30239ab-4b79-4047-9dab-b3c61874dcda",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9466ff26-6cd6-40af-adc0-4b3f03d867cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9363c32-3c52-434c-9d35-54decf61ddbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9272db9f-5c10-4db5-97c6-712f89c323de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "54a9c72a-9c8d-4ea9-931e-469cee89f46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b856a1aa-bf78-477f-8995-1345743f9188",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615b4971-ba58-4115-9d8f-847ddf9fa49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0e1128-8165-4fea-af7d-48e341becc5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcee138c-4b36-4470-a5fa-3b59af7208a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7c8eef-c73b-40aa-81a2-d740418ab79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d660528-6c4f-49b4-a386-7a6605416781",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed9b121-9c35-41f1-99b6-a5788094f2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a855eed0-4878-4d24-8c27-288e41a6ff83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304888a3-05cd-405e-a6b2-39782c0c0206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "def87e87-b01f-4213-8a6e-cfe22057dd70"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e16f507c-719a-4b74-a7b6-8cd49ef593ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4b3967d-8e04-4ebb-81c3-7d92d978ab1b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41382c3-a69e-452d-b4c0-0b9416cfb6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa03d15c-f936-4cb9-ad32-8f9fe13a3687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ac7292-dd06-457c-91d7-52bb55ae1974",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "008d1542-4591-4836-b3a9-e8b65f3e3d3c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aca823fa-8ca8-4e26-a124-368fd35b8e27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56aca1fb-1993-46e5-a7d9-e45200520c0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2631a149-e1c9-4b51-ba46-e237db95aa14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3f8dedc-913c-4956-a03f-b008e816b2f0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ab7c805-2b2e-4b73-9bdf-ee9094fe13d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bfa8111d-d72c-40b3-9750-873c5f9ad5cb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e53ebef9-dcfb-42bb-952d-ba54dadb8820",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3940fdc-5993-467a-9b5f-4dc1b3fc8c7f"
                }
              }
            ]
          },
          {
            "id": "bd1727a1-0f57-4df6-bf37-e1f1a7e5a4b2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "530cab3e-6089-41f1-85d1-24729cebd2d4",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a8af266f-cfdb-411b-8f00-8adffd5b0253",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad40da5-c4a5-4ccb-b335-28a0a1e3495a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "83666bfc-10dc-488c-8bb5-3554b05ec836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fb620f-0ab8-420e-b19b-d8c16e00eb30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90958834-deeb-4ea9-8786-92216d73b8a1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b76affa8-923e-4094-bff6-4515eebf30c8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "602de525-cc29-46ea-ba05-4c143177a52d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51004850-4351-4750-be7b-c552901d3950"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8613c021-79b4-40bc-9a6f-618fcd5085f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ba1ddfd6-eab8-4f8c-a6a2-60b3561a1253"
                    }
                  }
                ]
              },
              {
                "id": "1aac459b-3ab2-476d-b004-b58e4cef5348",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "977aca71-056d-4d23-9124-b0823ca998a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6905fc7c-3dd0-4dfb-92ce-7956685fa1ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35a9a9df-88b3-4b89-b64f-5908cc4e5304",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a6f621d2-5a77-4831-8a75-4f0d348f68b8"
                    }
                  }
                ]
              },
              {
                "id": "71cca81f-5a6a-463f-a0d3-589386aefde5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b9f59e7-1262-402c-84e5-4f010692d9db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c039568a-75a9-44e6-b972-9ea9036e0459"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ea7a966-a413-4c58-bece-990d4a848f80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f2aa6b8e-527a-42e9-993b-e1a147a7df86"
                    }
                  }
                ]
              },
              {
                "id": "d964dcef-8bf2-41c5-997e-a6a9c70a738a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6432adaa-e03a-424e-9300-f35404f694fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bc0e5f6-12d3-46cb-bd0d-871cb8a77198"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c28d552-307c-4c0f-8756-e5111796cd2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "195fac27-dd59-45fa-a930-b0209e1d605b"
                    }
                  }
                ]
              },
              {
                "id": "9f18e024-6c29-4edf-99c0-8db0d8e244ee",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f819a628-fa22-4b08-9812-c3c9db7cd152",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9e0f3ee-80bf-4f19-a8ae-a7ae635f9811"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00c7ce1c-64d5-489f-b333-eacbb5e7baaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2fee5f0c-7eef-416a-bae9-c0c05e61b121"
                    }
                  }
                ]
              },
              {
                "id": "87cebe16-5f69-4716-9d50-f4c3030d338e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4aeb17fc-d487-4557-8499-b9ce11b3994d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52ce6827-70df-4168-baca-e02ee28f46f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aaabd8ff-a230-4e4d-aeb8-c686bf21c7bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca9d3b25-18ed-4f2c-9f9e-d1941eccd6f0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2126df8d-bdcf-4292-9a1f-1d1c99b8a1e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4bf5fbf-f77b-44dc-9cf3-e2b85bac943a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a7231ff-be6e-45de-8a94-2d0a3a9895c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a455f773-4592-49a4-9d04-33c0ad49ea8b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94c6b1fa-aceb-4b13-9289-072dd5802a13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7041854a-ac03-43e0-9473-4e78da2cb768"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d40ba14-ae95-4dc8-ac1c-a73696eff93d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "250d8d63-c5fe-43cf-b255-fd13a6e73e76"
            }
          }
        ]
      },
      {
        "id": "5e4b4f54-3ff3-45c5-a66e-7709dceedd70",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "980ef4b3-4fb4-4000-8267-21324e87ffad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22751970-211f-4611-965c-3faf612cccc7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d8e252fe-93ff-47cd-a7ef-629993b554b5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a469f64-73ed-41a2-8afe-6889b2e82c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8448bf82-c634-4535-a6cd-1fb420b01748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e188bc64-31ad-424c-8cd0-5c2e1544309e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d12f151-4264-4402-8fe4-91a9a3384cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e4e411-e409-416e-8ff2-15900bd208c0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703d2232-2c2d-4676-b051-a66c686b0aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b5bd9e-343e-4d5f-9ba2-385d3e4f280d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8cd5aa-cc81-48fe-8d61-5ab53f4abea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f465b1-0f82-4ad0-9ea0-add63e080dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5518318-7e70-4af9-a82c-76bdf3eae435",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e9761a-5bbd-4231-92a3-15a316e2f740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371aa744-21a9-4493-a8c8-98d25d57c5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4632fbee-71c4-4634-8b05-da2cd3425a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef88800c-7284-4373-9584-6922b3656ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd88af7-5c0f-4ab9-a4a4-7f735ab4f958",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56718b64-b320-4872-a57f-e774940940e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5702e26d-163e-4e47-bce4-e979a4617926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd840f0-d8be-4316-a6bc-cd69d8bb00c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "145a9928-b255-4674-bf83-eb386537416b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca10337-06ff-4da7-841f-e0ebd17e7e96",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f656fbf3-c111-49ea-bae1-d87245d8bb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a348d045-7c87-4581-97ab-bd91a1a21e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681a5647-e7a9-4aeb-9d2c-3056b4a3e4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b5632a-8101-4330-a988-b19faf9ed0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736f4686-6d80-4df8-9154-894a37f45215",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2150c934-c38d-4ea0-90cd-b758de4cb4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc3db92-1a26-499d-9daf-b3616a8d41a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb64b997-42cc-4746-9627-c8054f51f29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d969e5b2-eaa5-4079-bff5-b093fca1e333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eefbb0e-c00d-45b1-9030-f066230e45fc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5111ac7-353a-4bbb-8a51-d38007660ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3089d5-c9cb-4f0b-98de-847931d81ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a0cafe-f937-44dc-80a3-8d70941e1b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3b0ac1-f2f2-4c00-b5fd-6df9ca7470f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33f25b1-8ce2-4cef-8d51-acbd889a0039",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe31d142-6087-4f4e-99f4-6be69e06316b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6d083a-c997-423e-b206-7284dcd53f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb85e8b-5e6f-4875-834c-d710c9965a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "576f4caa-79a6-468b-ac07-4ce64e5e53a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bd9b1e-abbe-4420-bb56-911d5d69997d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "befe24f4-353a-477d-888c-73ab538c001a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5573c56f-12c8-48dc-a49c-85bcc1efb148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaf6496-7628-42da-9f4e-650e00ae0573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e469ca-eaec-4d8c-a0d1-84baea26fa40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfdf7b3-4625-4c1d-9c6e-8f9aae59f6ab",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dd9efe-b3c7-4241-9b2f-3e5f854feafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d7e497-4273-4fe3-b5db-ad7bb0b127c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091d5c72-e77c-4094-bccf-e1f5006afc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32bce060-fd0d-419f-ae87-5e4bc800e041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a867516-9ea3-49df-92d4-3be0804edcc5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fea608c-7660-4b9c-b650-23266c7d5315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73446f3e-02f6-4c64-88a8-b24764e31c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7c0179-fec4-448e-b190-39468f39a0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc5950d-b1d8-4e5a-804c-f43873e5272c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a23964-8604-4459-9b9e-b1525d0bd45c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c412543-cebe-4186-9bbe-3dbaab988f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020e68e0-505a-455d-a6c4-5eba220e76df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b679e731-4243-44b5-89a2-8d8bb67bc946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93abe43e-c83b-4093-9314-981305567284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d4a92e-7edf-420b-94ba-dea440f26edc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60324f26-e123-4b7f-b1f2-b052a3674a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b132470a-c9c5-4440-a223-0f95141454a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a056a5-d0e1-40a1-9a6f-84e8ccf1729c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c923ee8-3837-4bcd-965c-b927db0a3954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc4391c-f15e-4e65-b2bc-fe859c05dcc6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efa24a4-2dc8-45f6-87a8-928e0e72e7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff40cdf-8c15-4537-9a47-bb9a89613d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bacfe4d-4fa0-4d26-be47-6f5e2cda9c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9429d5-c8b8-45a8-8299-bd75aeae73b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df96b24-7ca1-483b-ade8-0b1c387cc5b6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4512aa25-26ed-4034-98a0-c70ad7e730d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471d82cc-3ae1-4515-afaa-6b86e3aafebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbbd9cc-7ab7-4578-af30-9c4fc396cf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "338fe00c-0709-4879-8109-21cc4834f32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc500f7-35cb-41a9-8e4c-c92e68275c3d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e352ba05-be6c-4a85-9564-eef4043af3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbee7a63-0a7c-4079-8090-6c3e48f9da82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b11246-7a1f-49ab-b619-2b7164c9b7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "52f2dd58-fd1f-4224-be6b-6abdff252203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06911ce7-030a-4176-bc8e-265741ef3597",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79edea8d-c707-4085-aeb6-b489e9e898cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d63012-fc13-4b48-8452-882f097664b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d53bb9-e810-4b8c-a3e9-94fe20499714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7be30bf3-063f-4477-a65b-950cd82766a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b70210-8859-4b27-88c4-cf10cb0e3339",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa1e5e0-5022-4839-a6fc-5f4ecdda47c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30452588-6f60-406b-bcaf-0a0a377e9a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699dba9c-1141-4b40-b313-731193eebe4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3d915c-7845-41fe-8c20-70d06cc04c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130cb9ab-3fc7-49a9-a605-082ca2b5fab7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688d3cbd-e831-41e3-b6a2-734d49a7a907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd63eb94-bada-4359-b6e2-6f81aa0d9a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6960dd4a-baf2-40b9-bedd-b970c5a915a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38554512-82a7-4029-86fb-9f44118ef426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f890a79-cab3-41c1-9329-f39393661246",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb51664a-a28e-493d-8c42-a43a9fed7664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ed0593-edd5-4e8a-af35-5fcf85d12e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d59d77-21e7-4477-8e83-d5713ef81b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff4f18a-1f6f-4d6d-8d87-f87a31c0489b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52141d7-e333-47f5-9faf-dbc141fae3f2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9693374b-459b-4755-a8df-90cbbfb3ea47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e6c6fb-8dcf-484a-b5c0-20539e108682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3eac82d-a442-4fde-94c0-7c33bbd26370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d652dc4-c29c-47f5-8837-7b36ab5d8cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b701e742-78f7-4994-8e47-5034e55eb119",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df41c02-464b-4eb4-8aae-f02b0d76890e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f4917b-ea8e-4bbb-a06e-3caee12237f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d051678-d4a3-470c-a1e4-df7a9f78140f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc850d85-d399-407e-9874-e9e74481f353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9c786d-8265-417b-a184-51f4dacf2536",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb10b2d9-3d9e-4d55-afcd-9d03d395a009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897c039c-6ebe-428e-aa65-f3d577d71151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea7071a-ee62-471a-8304-add66d3efd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63eb79c2-0997-46a5-a03a-00cefc5d4b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd220f7-5928-4752-9f09-0d4da36fca93",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322ed6d4-c9c0-44ee-9eb9-e3005cf7c27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf067987-f25b-46ed-92d0-c68e826d9e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff853ef3-7515-44ec-a28e-b782f3ae7b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90e6640e-d466-41a9-84f7-315b1e3378c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e77654-eede-43b3-9d97-e33754a9c590",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c339e85-37d3-4849-be1e-ab8850cd4685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acbdce4-9e1b-467d-940a-46c5bdf70b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e46c6e6-ea1a-4a4d-8f8c-f7035b660652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce440f3-e24e-43c9-ac30-9c509551aecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebcbde7-c966-4dad-bc31-1a02df0ec904",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd330f18-b330-45b8-9d92-053388db3ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce34d34-2cab-4b7d-9a66-af0326c152d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d83ed1a-bf82-4d15-a11d-da9c947d9aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6579eb2f-3408-4cf8-b6a8-b4e03fa38cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f42a30-e222-4fbc-afd6-f5394e589264",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9287961-dd1b-4110-8244-6c0c5426efdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9289e5-c6ca-4d1d-8508-c45010f62edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e3085d-8dcf-4739-95df-b65d469479d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b28f404-1bc1-4e7f-89aa-00358f33865e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b47ea9-676f-4522-9d4b-3ed89d031328",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83842da0-9b49-4978-aed3-baab7daf454b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb085425-279a-4044-b111-3d28f3fc4a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31489037-23ee-4cb6-9a47-71c719f78098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5de5ed6f-64e6-4df8-85e0-e876dc060fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf89c03c-87be-4114-b5e8-cd485d1a02c3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d384b417-6f85-4a73-8110-60b7fca0c69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51cff40-5cf8-4637-ac2d-b71c00036b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a4547d-021b-43ec-a2ba-3101e8a40dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5bdf56-d034-40b5-a402-e5c69f3a43c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2467bdc-4c70-463a-9e9c-8892836a3dcd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21714cc6-ab99-4c47-9a5b-7f05a856dd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce45b8e-b6cf-4bd0-9761-7af6423a367a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9966561b-35fb-42bc-b020-8847f3304ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec1450f-ff2d-4d04-9ead-131767218f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9eb9763-bd80-41bf-b905-3efddc03b8ad",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7493fdb4-6bf0-4c89-a069-51d4e31b427a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97937ed6-b884-4724-8d37-c82f13c9d5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b3e316-155f-4f76-8772-a2250cbe1c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f64c997-baf7-4772-839c-1ef8b5aed3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f1c80c-5dc1-4994-87e6-23cb48c3033b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84688e6-223e-494d-be8e-52646a8c84f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed86c21-20d6-42da-b5d8-ba4611317cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1718317b-a82d-470a-a4f7-90a01c60aba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70e42d5f-0656-4d3b-bdf8-9a257ebcddb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa16c349-01c5-4cc7-bb1d-0ef3558d5347",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0cdbb7-9777-4094-9cc4-9a86c1a1acfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f773469-62db-4a2e-b9c1-b96a5614e7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6019c967-4e45-4abb-9852-d643a19544bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f3a780-a14b-4ee5-be40-824a27a92ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0179e586-418f-482a-8d31-16be4247435d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f129a12-55e8-40f7-b0c7-37d06c29d236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13ee39e-4d71-4e42-ab07-92161df0ea5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122e27c2-9264-4794-ba66-7b69b1ad210b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20167089-7bb9-404b-a459-fcacf6df2f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2dbca11-0249-4905-a483-4b154dc7a581",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb52800-f380-4fa8-8c67-8e38d0e74b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd82b9e-5356-40d0-8811-10c3d9c8219d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c526ae-4aa7-44be-81e0-585b1fd62b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0991de21-af95-4e74-a991-72fe430477be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe9283d-7cb2-47e7-8939-04f47b580b85",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e587f03-cab5-4510-84ae-c49ae2ab8fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940b9854-78d2-43c3-9307-6b215765d715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c91b80-af76-4b4a-8d48-49cee0d6745d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4032e708-e961-4cae-aa0f-ecc3788ce73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb4e92b-40db-4e0f-bcb4-d555605913db",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59f5ca3-58dc-4833-9d70-9b1724ff7933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a922a88-105d-4878-ac8a-4c5843422310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13af5926-cad8-487d-ac99-f1e4ac825eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44fafa3a-56b5-479a-bf6c-3671bacc3ce5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b5c55140-c775-4af3-82f4-8657a953f254",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e134d1b-4e1e-4d6d-802d-79e00edcbf1f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bab43b7-950a-4b04-9d02-5d071d2a2d18",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c4c8f9-155e-45ac-bdfd-480f7d286335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba61e4c3-c25a-493c-a544-328aee1ec318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4968d8ec-b98d-4e17-b07b-1585e0448e8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45df6c3d-f57a-4082-ad7e-fdba299258e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73342696-b9e5-44ba-b758-93e04b5fbcbb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2e387f7-61bd-48ee-a3b7-def5eb3b4b1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13116e52-2273-42f8-a52a-9d253ecaf05a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2548874a-fe0a-4c3d-9c4d-24676abf925e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3eec1534-85ad-4403-8bdc-1b9951ff44e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31c437cb-93f4-4d72-b52c-fcd708c08434",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64f9e145-b4e6-4ccf-a5f3-642df672ceca"
            }
          }
        ]
      },
      {
        "id": "8ccdc3b7-4e51-4377-9de4-cc4a31b436f8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3feef301-4a9c-45e7-9af7-95b78ee2ec34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cfcf63d1-5026-431d-9ec7-6913abc2e151",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b6dc69b9-6b07-43a1-b4cd-a295dd0c3a80",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c82c82c-2640-41d8-a9c0-7a6ee11c5a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47a6f01-1aaa-4b25-b3d8-73ced441fce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb0a571-5063-4ed1-9386-145434261134",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87b8e12-5979-4463-bce6-ddffb69a18a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b4f93f-fb6f-434f-b5ae-ee0afa78edca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdf7d68-6054-473c-a81a-851008b801a7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97631f72-8d13-467d-a720-c07269a155fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f100df-29ec-47f1-bc80-a6fa36fa7136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570a9ffb-d633-4cab-a0f0-6cd5292e2bcb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cee193b-f030-4c0c-92a4-1adff8bddc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ae565e-9355-466f-a9d3-13b5e5df3c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71856dd-e0d6-42a3-8156-82f61820a333",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78694fea-b807-4e10-93bf-7af86e776d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41120884-50cf-4127-b5fd-428e1625e6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b5cfa1-99f3-4760-8a1c-9e9e2a73b261",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5299d400-d4dc-4724-a30f-bec5055b27ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f88cc6-ccd1-4779-b29b-16185ccd0f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20cc0250-6ea8-42a7-b26f-417805f42a21",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074d0dbd-8fc2-4329-99cd-0e2809b896d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abbca0e0-e936-4eb5-9329-12599ca83e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75ea397-b1a0-40e1-ba50-8bc0e5fd1e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd2147f-d9ff-4f19-bc9b-bd043326b166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcea924-9002-4351-b75b-3ec76d597631",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0597b8-aedd-4f8b-95c2-88780eff113e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5203866b-fbc4-496a-8623-cdf602d6c77b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68408c1c-2b7c-4f15-a807-96f48d1698b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff97a16-0abf-4a0c-a7e8-4a91663341fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa6cdcf-1486-4511-ad1c-ea8c28b71e0f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8c8c76-2c1b-45f0-b635-310bef1a559c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb6448e9-39ec-4c1a-9676-b07f7f5078fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5572827-e61d-43b6-be0b-1b8d9ca3f0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e77e72b-cad8-4c22-8cff-3fad2709f043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038ea736-e72f-4d00-88ab-a4e4e68b9fd2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9361be99-24b0-42e9-ab62-419521a3db94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ee17a42-00d2-4c46-998e-97e93ef6a857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea029472-7af6-44bd-8749-5ce7b1f40635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3381b030-d79c-4d7b-8975-5cde552dd22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b171528-20e4-4e5b-9bff-4527c9810603",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b365a921-54c3-4c19-b618-6b8a0cc626e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb88c66-7b5a-4b48-bd40-cbbeca5647d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8992f601-24d7-44d7-91af-78b3f58ba7d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68bb101-ca3c-4f14-b0bc-8a3431d9ccd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5aaa3b9-bf6f-46c2-864c-855abf227d36",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4884592-b7bb-495a-a5de-194492f67624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111215db-5202-4e68-9dcd-aeaf19199b09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "771f0d9d-d86a-4cbf-b18f-fdd678089f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928acf1e-a928-45f0-8da3-ad74e7a76b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da5ef04-6400-43dc-bd26-e6b08bf630a5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3489d39a-3927-4ac7-9832-d5819c443e81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82ac86e4-27ab-44dc-8c3f-8f9d5e03395a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661cb713-9aeb-43ed-84d3-86ce341667f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb71962-08a2-474f-92ca-cdcc8d43e861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2db2987-ad78-47dd-b042-8c54d47a18f3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535521aa-d2c3-4b02-ba8e-e97add9cf65a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9672aa42-9596-4098-ad8f-280c4f0dcdf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a55c894-a868-4acc-9283-1cdbb9b6ca63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98317564-19a6-466f-8a90-4c855d3a48da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc61348-14d6-445b-98a2-cbf7e9954e4f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bbc1d6-2712-4c8a-8251-1bb1feb5c4fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcdd7fc2-3897-4c46-b2cb-06504c4fbe41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71678cf2-d2e5-4248-8942-f3ab81f3b5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d870968f-9510-41ba-9769-68e952066f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfe10f2-e945-4499-ac62-d6221e746e8d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b69fe14-80cc-4d09-8f7d-3d3dac981e45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68abe297-2ee8-4128-a1aa-77e6ca3267dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41069a38-1f38-4c99-93d0-5173f824de87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fb6052-b528-487e-81aa-781032a03fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8bceb1-a19c-4a40-a114-fc635ca5a6a5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556cbc1f-627e-4a84-af40-b107850eb593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2c0428-c021-4c71-80ab-3a29122c56b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4e39cc-889b-4cea-a900-94825764a8ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdb056e-dd69-4af7-a427-2819403d8347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511d1833-1018-45d5-a5fc-f22095336ecc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfb41a9-408f-4a06-8e12-9eab66ead656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bd7e5d-7961-4faa-9905-c22d783dbcce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057c0d85-9a1f-4107-b936-ffce52be80d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89dfc382-6e4f-436f-a7c5-6148fe4d4694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd0cb8c-2a6b-4d60-ae7c-04ee2988e1cf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d46de59-f894-44ed-9d4c-f8dd033979e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10cd21cd-ebb4-46c1-898d-04e473662a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "176ca557-b9c6-469c-a424-ed5348a9c558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a69f05-e363-4143-8950-59a42cc6165c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59059563-28d3-4e3c-be65-8c535f3c9d6f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a25b10-b6f9-42c4-9cbf-581caeb01477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca177ceb-238e-4729-8fd8-b22bf369c212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657433f8-79f3-4563-a912-b00edcba6724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7fb520-a1fe-4c7e-91ac-4ba4f78c6784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1a0d7d-6141-41cf-949a-aee6d0826db8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e60e17-a36a-4eed-9285-7c9675f4ac2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5bff958-629a-4ef7-8a78-6c4a94bde816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2098eea7-b108-4b85-ac4e-f6364ac90bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada78a6d-bf4d-4273-bc4e-58ef8b4d3bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb129a89-3344-4012-b932-d984c7cad4fd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b5efdf-3e1f-4d4b-b238-10107f5c112a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b61180-9793-4756-a926-ad45db60918d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8c9403-a9a0-4702-ace8-a6d513e87525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1df138-a550-4e9c-b0b5-efdb8a1e370c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cc84e8-6b16-4cfb-8f71-369a0783f39c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4caa4d3f-2f6a-4e1d-a1ba-619c0f6f830f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfa0285-701f-432d-bf52-6a8b9da9953d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60e0c55-c2be-4243-9754-8205b964a0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ec1f79-780a-4a06-88cf-a6cc5094ca94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49836d62-7fd6-460d-a68d-5fcfb9798ce3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87cc5f2-5818-4a38-b638-2f617e688bf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4fd4e4c-dfe0-49ca-874d-3c829831fa20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8b40cd-79fb-48f9-8c30-c371ea42e488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229e6b1d-e91b-4ec5-84f0-e0bd7091b6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cdb1b7-9f0a-475c-8a38-5278b7b8e9f5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff78b629-7010-4765-8eae-f2f2179abdfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9df5c055-12f8-4e89-a239-383ffbfd8105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d300a246-cd55-499b-b1cc-c453ea61d9d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff25890-542a-4f41-81cf-6bac3de31501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fec1ef-ac3a-4a2e-90d0-f5fcc4100d97",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9029bf-3dce-4d3a-9637-f5b627c964a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "077699bd-ba02-41c2-9572-5f583aca8ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d373122c-cc6e-456e-83f7-2b1d06e62f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d79553c9-aa3c-4f9a-88d0-b5e0902317f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aadd7e6-b956-421e-8d5b-a2b087b1d55d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d8433f-4f70-4bef-ab58-d2b6d47f072c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09fc8b48-45a6-4956-8673-cd1838534ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02996333-74bb-4eb1-94ac-1eb322f8d51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9390d06b-178d-42ab-8427-f5944987a100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21befec9-c913-41fb-92db-65ad8b062238",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c22125-96cc-4cf9-96a4-958666d3d209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08435b7a-35b1-4fe0-b2c8-e1988f608baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ba9b2f-44ac-4d0e-9468-a9cf4ff5b01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59845768-bbeb-4ede-a8b3-bc2fde2410c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f076b047-c110-4615-bd78-173431af819d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0012039-b33e-4d50-a2db-7d119c4e35b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b6d7367-faea-49f2-877e-5dca35d1866f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6c1774-22bc-453d-975a-e43f1adbb432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee01b73-29ae-4372-afdb-3ffa224f3fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2f5843-0961-4591-bd0b-b43df304f155",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6070c49-c347-4978-a908-a8cb0669bc4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8422370-4ad1-4c8f-aa21-1c146d022725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "180b67e3-8888-4bc2-9568-48408df9f7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2206e80c-f24c-43c9-bb9f-9ed5a5154c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85d9da9-702e-4e87-9679-12931a54eb8c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fe77ca-735c-4fc7-8550-106b60b2ee06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "760be235-57ca-49e8-83f4-3c405badd5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2a2cc5-e439-4c1d-a2a8-22f1072859db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ef2a4b-5824-4ac1-a7d3-e8b861164561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d55297c-69d9-4858-9010-9007e1d02df6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e4808a-d989-4683-acf9-57c872ca5011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58c52292-4f74-485e-94fe-e0e00ccb2969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aec0f86-d58c-47a8-bbbc-b5c3240f32df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164dbeda-baef-4406-ab10-dbe635db9770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4a4056-63c9-4b31-8ac8-e0044a4982b9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361b8c53-8ac9-41e4-b523-ec12207f7cf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e695cbf9-f933-4a33-8075-1e69a7c05cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3bd5ac-a3c3-48df-8b02-ac6615098d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ecd3ac-8a70-43a5-bc53-214117b042e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3214341a-a5d9-4e0a-8429-851011c7d380",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e34718-5cb2-4e01-8ba8-7bc8e646b83f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c44ce4c-91e6-4567-9856-556536f22ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362efc06-a6b3-4e45-a307-93ccbe322a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d489233-4801-4f7f-ba2d-f4c9cbb8816a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3e7be5-723a-4dbc-b0b4-88e255fff4c4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1757d29e-374c-41c4-988f-8196a90beb9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee380709-6d18-402e-bc69-a9782c250a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b055f04-eceb-4dca-af1f-b42610823c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6a96c3-06f1-4a0a-8184-ab2d26615644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258e0373-e896-4119-965b-7caf2411d264",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316e847c-72cc-4d24-9ab6-5955c7934c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b6c287-f015-4e4e-845a-858188f75517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99983b8-7d96-4a51-a863-3124623fbbe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8129d7a-69ce-403d-bb64-fb2cd9841958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc96d3a-0077-4a2a-a2f3-a52cf2900ad7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d798e004-9e6e-421e-bd31-c7a10d522268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc757a1-83e1-4ab1-bd92-20d01cd494a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3084df7-2c79-4749-9438-1a52bf6becc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d1d373-ae4f-468b-9ddf-9187fee70425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ff2fda-6895-4554-9953-f79fbdd1ef4e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e90a1ee-d896-434f-b649-34fcc4598469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a73151-9cd7-4d0b-bd6e-80ce1387570b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae916a3b-c8b2-4cce-a5e7-f84b03609d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf85de2-b2cd-409f-a222-b5eb04b253a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8825c035-6966-4e78-954f-16cafb27c8e7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322bb3ad-c3d8-42e4-818b-50a461c76f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613d75ef-36f1-470f-844b-26f571121b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87627fd-fd0d-43ef-bbfb-ba37dfa4eb58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcaceca-43e2-488d-88e2-b7c369b651ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167998d2-24bc-443c-8c87-3a9acd57466e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589c952a-56ea-4df3-b565-fbd341ac1b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c04969-ecde-424a-9d7d-686613b5b359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1196f6-8711-41cf-8c49-85e98bc3c3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d8a05b-51e4-4803-8697-b1a2daf2d62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdfc2bb-3a18-44bd-9d54-4257eec35d6d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b637d7-98d1-4d3c-a436-c37238c8d07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177e7b83-ca55-4656-b6f2-d8c1fcb9c057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa72db9-a2bf-4a6a-85ba-33c4d29322c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b375eba-4d65-431f-8d93-7012fbd04bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc985a93-c4a8-4373-bbe7-f8c9b44d55dc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4baba0-5e03-4e07-8d1d-135cdf2aca2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5830387f-150d-4074-b4a5-d30dd2d996e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cac88f-a331-48a1-a68f-0dac11d37e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae5b24b-2e87-456f-97dc-40f3a34fa385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a816a6-d3cc-4aaf-b42a-983e7cf14d2e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a11047-ddea-460a-932b-030f6c23c58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ce1cf7-58ad-4b7f-a62c-3e4d840a80ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da63d9f8-4fa5-4e60-95bb-89bd28476d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33724f00-907b-4f14-81ea-63b8ac8de516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b581f9-b00a-4ac7-94b6-01fbb9de221e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca86f3b-bd5e-45ab-9af0-02ec16caa609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f048372-08b7-4769-a890-c96d1a7a2a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230f926e-a865-4de2-8116-85cb3551a528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5983b22-b008-4c1e-9415-8e02c13c6dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4b3d3a-7b84-4132-aca5-a8a3039ac939",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9946dea8-d6b2-4396-97b8-073c202c5f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a098113-c6e4-4ada-b7df-56d06e5f3f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d50569b-451c-4e95-8c83-c1f50fd7a70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b907dd7e-1310-441e-a902-eb6a82e68f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135bc186-f574-41f8-99f3-8dec67cdda45",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80abcc8-3f7e-4a3d-a1f2-ef1666c2875c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11721374-7e3c-4a61-9ced-484205f55702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb430af-1260-459f-8bb2-1117f64ee542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2dce329-22d4-40c6-bce8-ed97f4c48003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b523b014-154c-4831-a5ff-ba2cae9d29a4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5462510-a374-47e0-b753-1577661d456f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61476d2a-00a1-4a2d-80f4-eb9784ae47ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b94c8a-66fb-45f9-8c9c-c0df56c74edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a219dd6-b7f7-458e-b854-3307c575c12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2154c28e-215d-42e9-9393-b2f19386aed9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49781742-5439-41b2-8146-9ca591cb2a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b43822-e898-49b3-9067-c95a4be340d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d446ed82-d24a-4570-8978-f716333cb753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d3a46a-b5ec-4bbe-ab1a-08e176846b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e51e5f2-da25-47b9-a713-ff7efe67ba2e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa145de-3448-4b87-af3c-19ad9abbff9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29b92b8-4f74-423b-8c8e-9e6a51f12e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4329b56c-8fb0-42ba-96b4-3d8f16a22ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d2a256b-d7e6-4a6b-9e02-c24bf396e0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dfb63c-fcb3-4775-a7b3-46e03a7785e2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4441ccca-835c-42d1-9c6f-71af459cd63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54dd5266-439f-404c-a24f-3b37f8585bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1d4015-3198-42a2-ae69-6d432de8fa2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806cf9a5-1f37-4a88-bcaa-f4ef2b1a3875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b157ca52-d36e-4e30-bdad-163a53ffa0d1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56096659-5bba-4bc0-a45d-e373bf9aa7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3446e96f-8ff6-4c92-b93f-dcfda16380e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d618fa0-55c4-4a7f-8344-0882124c6066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9967911-43da-42ec-a8b4-66bab9faacf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89ec642-9f79-4900-bda4-f78a44655058",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05235b9d-d2cc-4531-ba9b-97e8156c1e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637df38a-92db-4fcd-a0df-80a76f882975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9373075d-2cc6-4ae9-a63f-82755757e682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5690ed-79be-4472-a0bb-bcf2c7e86565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba2aca5-0107-401a-b163-6a8f0c4e9b1a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38919e90-8cd5-4397-b1a7-7188051faf89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426b9b90-61e8-4ad0-b58c-c1f01b77276d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb31f49-5f7c-4e2f-8d2a-1d60627e4233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51c5b17-a9da-4310-b401-496e2a73ad03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34bc240-4a75-443f-b01d-7cfc9f793644",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e46111d-aa07-4ffa-8ad7-310884e40b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125b5468-ad17-45bd-876e-5356f15aba3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "486784f7-cdbe-4545-8623-608d5adc0ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bce131-5ef6-40da-af7a-1c7a61864af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08abd34-2242-47a8-a8ae-834d216b4ccc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47be3e9f-59bf-4895-a7dc-c0db17aeb2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384f429f-a3f4-4cfb-b894-5dba637e9aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cd6fb5-96a4-4ba1-8424-1204b331870c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf6c6d1-30cf-4918-8c71-986459ace589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65354230-be93-4a17-a68b-07fa2c28806f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18b8eb6-4b28-4729-bf9f-ff9f6fdc2470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1a1689-10dc-49fe-9360-32d8dd67725b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d17fe55-cccb-43cf-9580-a96f7fafda3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee8daf5-9993-476e-82f3-1c8431e9df6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b919b8d8-45ca-4992-9b60-0b8de575c54e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927ca9a3-775a-4db2-a7cc-55e6b1dba5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70df649-073e-4639-822d-c28155154686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6fe8dc-8d30-4166-a6a6-05219fba4372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0ba2c3-7fbe-40b7-8504-defda172fc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32228023-6ac3-4d2f-bf4b-a07bb1aa67c5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d94ea2-25d7-4c62-8e57-9d8a51a183ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59dd9038-33da-48e8-a9cb-7d6abd17b469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949ef574-adf3-4fea-83e2-c0fc32758841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567fc46c-aff4-4ebf-b12c-a5ec6a8eba8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74b2cd0-6d3e-42b7-844f-482568a9fe41",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2126fb-88ae-44b5-81bd-6cf543ccc0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec4d396-98d7-404b-82f9-d7e04ababccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34652263-7c9c-439f-a925-f01fc7db5ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc189bf-168a-4816-9eec-70e708715f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ccbfbe-5200-4283-a457-106c8cea936f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4e3e6c-1caf-444e-9000-80874ed0aa9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b486f18d-a1b4-4bc1-b174-5e93f2de8a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f54e80a-6fb7-485a-96ab-22a38a2c50c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71aa55b9-a514-48c2-ba75-4262ee5685bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ce2006-faf3-4aa5-bfcf-9f0b7b195cd6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02aef2c1-80d5-4f35-a6d2-8a2ff19c6c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97149dc-bf84-4e3f-8e24-6449900cf238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a310290f-8387-49e1-a719-de94322c47e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affcc85d-9b41-4bc0-a29e-6be9c99fd172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f433a720-4158-4547-a39e-448ed4bf869c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e876ca-e1d1-4197-bb26-e2ff24f6b905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14404b93-3407-4a45-8d37-1a1005efa97f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c875945a-7d23-4126-a0c1-29f951660eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a213bced-4105-4ad1-a520-f1dac6c05df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb800c2-340b-4713-ac57-5281a6092cf3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b4c3bf-aca7-4902-bb4b-b45d5f7c9dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca141297-cbd6-4534-9eba-bac0c3751f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93858465-c940-4e93-9eba-9a31c156e024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592cb267-445a-4440-bc9a-36f05bbf2d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd685daa-4a5f-45ef-9b9f-90531796422e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1cf59f-ec8e-49d0-ae6f-1d357cf35c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47bec5b0-08fd-4500-b56e-af04e8f1055a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0117ba4-6417-47cb-a3f2-39cbba4e7296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f17fa8c-654b-4e77-9683-b9673d13a733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568d6aff-ea6d-47c8-bf0e-d0f50d136816",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df35f111-4b28-4ba6-9de3-13c51154c34f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "861ba7c4-4aed-46c3-bf4e-b1113ee5072b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f874d128-bab3-47cd-bdc8-bf1d1bac75d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22aa83d-8014-4f09-afc7-33ff3d56188f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c81b90-e9e8-4c32-9955-173ba0ed8d7d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53a6ae9-3bb8-4b08-9fce-8f9032e26c8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adb6e5ba-4373-463b-bb8a-b38911367eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60e05f7-684f-4009-b5ca-f1f74932251a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a94e3f-4fad-4eb9-af8a-5c6b7db88035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466c80a2-4cfc-45d9-8004-491688a68ea8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0bbdb0-591b-4773-b455-9379a586db02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd29622b-af33-40a0-9d40-67423c337a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d1a0a4-21d8-46fe-bec0-d836d0f579a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110b4ddd-5273-477d-af49-2b249559e5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d47a4a-7dcd-4881-8aa4-466954e5439d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936bed05-b4e8-4f8d-848a-173d3e7f9bfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23bb63aa-f1a8-4947-bff8-dc6c96726fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "827c2208-1918-4353-b56c-0eb1f2004f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b1c813-74b3-457a-b27a-85fbccabc053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4ca672-b348-4361-a1e5-a1f83d550bdf",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1227a30-d842-4724-8a1e-07b5f9d672ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5e322d3-4186-4b01-be72-15194b7aa090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc64aeb-24ff-4330-ad63-2a19c2fc741d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5fe307b-45e5-4797-85e0-7d3886b92146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f0084f-9563-43a9-bc53-c3e1f8a1515a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6ad8a9-08e2-40be-b361-d553b52b6853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be1bc9e9-0c97-4788-a4de-fa3c88dbea7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc8496e-aa84-4978-bc19-5204b9fbf3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae3e781-e564-43a0-a0e3-f8668176c224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54812669-91e1-4ea4-a5b7-68b0fd7da038",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855dc121-0b8f-4bc2-ac2d-9a1fce2606b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cca38965-1140-4208-8a62-9e0bce80f8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070c196e-3e91-4a76-9687-3515899fc467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d57ff39-dfd7-473c-a46c-2069fcd8be14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9171b9-c885-4cec-8b56-5a0fcc901991",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39d9d2d-2043-4625-a857-5e15be039716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d361cfd3-8180-4312-a58e-36928c1cab1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274d8663-4814-46a1-b75e-c9a451a49ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764f0605-6b15-4588-bdf2-a2de430ecddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57a98f3-6802-4595-a239-0c4462c37dc3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c445315-88f9-4760-94d3-27d64a704b61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfd77b3f-47a8-44fd-805e-f8c258693cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da14b38-c08f-4d85-b62c-9249a21fae9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c27a8f7-456f-4395-8075-353f040f2ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efdb8c6-1dcd-465c-9baf-74f27931b6de",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b4d2f5-80a3-412c-a250-5f8443ad6912",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2ac2153-6975-4f68-8117-8f1293f1d68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5e8276-6b64-481f-9286-21cb5dc0875a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d188ebd-36fb-471f-bef1-a07500f89881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088481ca-940d-4727-ad14-c340022fdedb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0ad87c-a58c-4be8-a62b-50c54017ad08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ef59096-a933-4237-901b-395aa6405816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a8bfdd-2aea-4c9e-b644-377bf1265cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f5c42b-5e79-422e-936a-f5f19d7e3de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518eee10-46da-418d-b03a-ac78edcd23b0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a94082a-53e8-47a9-bb59-2ce00f3bfb5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6300cdab-c84b-41f5-a489-aa678ab0f1a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e408fb-f3eb-4997-ba3b-bac64236ee02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "badd4a0b-708c-462d-a005-64fdcda30913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd34fe63-ca20-4132-b210-4927d64216a0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4f8ce5-3b57-4324-8b59-7e86f6efa7fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ea0c0ea-df55-4025-8464-b4f4b0a1086a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d80e79f-b4c9-4bff-a07b-cc4d5ee8e23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50de6e3-dd4a-46b3-b5cd-5682e5ed24f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e38e05a-38b2-4d0e-888f-ea548c6d007b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2232d3c7-8a21-419a-a3b1-44c33eab4b9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e049b8-c93e-44dd-8942-a9d9c3d88bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "213eb6de-5ecd-4fe0-8589-14834f246ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5e8b81-23e7-4bc1-ab0f-4885a48ec44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c675c44-e1c3-40be-a919-b3464decd2c5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a320d4e8-5de1-481b-b9ce-e74be67f6e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "805d99c2-7907-4158-980d-817e46baf6e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9511807b-47c6-49a0-9e8b-7f9f5ff2c738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206bb01d-3f57-487e-9d06-c5fbe00c8971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f205a94-b02d-41ec-8619-1b5eafd7964f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6afe10c-6112-4e55-a922-88c55d8d2bf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6645f048-d4ff-4bdc-a71e-98d1596f28f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47253894-022d-40bd-95fa-8aec411c5a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f96883-c1d1-42d3-9840-ae1e1c4b2b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0890b5-9c57-47d6-8cb0-729d3f574658",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450e72ad-1534-471a-bebb-840c953b339e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "542a0acf-1afa-4583-bd11-a8afea915a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee966bb9-7c7f-4d63-b11c-a91e8f4f123e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d38759f-9426-4aeb-bdbd-bf069b65a6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e5f77b-9afe-4426-98a3-53528e445638",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30de634-eb6b-4a91-86f4-afc40211cd41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "159aae1c-d912-48ff-8dbb-21324b680c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b39366-8733-49a2-bd02-0a96695aee85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06a3ae6-d979-4163-b506-b5289fae74ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27aeae96-aae9-4ed3-8095-af69c482136a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37397d1-6617-492c-8382-f7a493eace4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e138d0-ba28-4612-acc3-d9977944761d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f087659-34d7-40d0-8ff3-c04a3f2b4aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bbf41b-e779-4d8a-a76a-126f94cef02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555ffa22-58b1-4382-8644-a2a6815b98cf",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af518934-1546-4af9-bdd2-caaa59226821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a4fbb36-8f0d-4979-b375-4c95706c0c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3024c0fe-52ec-4022-97e1-3056ae8d9949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963789c6-717d-4ef3-a2b3-567aaf088b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4a5353-f83f-4911-8ea6-cdc832d50268",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cd3348-4820-43fa-b53b-7e8e17e32734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17b9b53e-b326-4699-80b2-9c065e92ed6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edaf6ef8-47c7-4ffc-aa2b-54519eecc4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e20ab59-831d-444f-9b03-a6818b09da22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa11adc-4bd5-4889-8c03-536a829c6ce6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78279809-e67e-4dfd-ac16-b5b733959501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98a6ec70-d908-4180-a5ee-8e75c9bbb4b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4224ddd-8722-4974-a39a-b9678c15f123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6553a46-3ecd-483d-a468-8192bc5f1f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15afa689-4975-44df-b6f8-5909701aff8e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d223cc-a2d4-4a13-a883-e9fbaa190d0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "befdf4ce-0cce-402f-aa12-83511cabea88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32304d2b-7547-4519-aa71-db76d5f6e986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08504245-fa68-4719-a751-1e5bf9b2f37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fd875f-c226-46e6-a81a-2c99d49dfe6c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3dc8643-df59-4809-b457-19deef5073fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e283f7c-368b-40e5-ae01-1b7e7b195d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9275df-6dda-4c3d-be9f-28589237a60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84eff5d9-be1e-46bf-93d1-80d442dee5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ec26c6-3475-4deb-86b7-aeae9d65ebb1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b93c1b-8145-49d1-9408-d5df1e54b0b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "578c1db0-6cf1-43d1-9560-c820dc2325ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "815e0814-0cb7-47cf-9d4a-67cbf5988f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0579f695-51fa-4539-aff6-1ce1a6dd197a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc01f40-e0d1-4134-8f8b-b2b77ffdb155",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45037994-be1b-48a3-9b1d-35899dc78c03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c1503d-85d8-4b87-8919-38c34906893e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3968b5-7071-4e01-9dbd-60d90e8aeee1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e31e5e4-ac6e-4f13-95a1-315e8b225919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3ad21e-e553-44c8-b675-82fc4c35eed0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d2589b-6cec-48a3-a319-acdedd8bf109",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ce5f499-9856-4099-802d-4bec3d317e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62faf378-0e3a-416d-9070-53612856576c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ae566d-f534-4d9a-a562-fe5307849b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb73f71-a442-4adb-a563-e2d4de58ea4d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8dd28d-ffb2-410b-99a1-d8dc5be7b356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e2f46d-85df-4a04-b381-5492ffb44b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8436ee-5ccf-4caf-82fa-c78d33cf6659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c49018-2cbc-476a-bae3-bdd9c79b7d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023994c0-64f7-4b12-9f47-b9a82b2f5f3d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e47320-2220-42ce-bdd7-943bbcb9cae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c9b6140-3d1e-4602-98a1-3ac4f10d6a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd990588-d144-490b-91dc-a2a28cba519e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf716a43-1062-49f7-a0c8-be42ac7df88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6411699a-ce80-4907-8238-e844739af7e4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef6b4e1-407e-4e2f-a052-c2972bfe9a1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f23c7b3-a2b3-48ff-ab94-d09e6fbddbe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a613f42f-a7c8-46e6-a38f-1e45845698d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15dfc252-3fd0-40e4-8148-ea4a03643369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b03b9d-43df-4a69-87c8-32b271734e45",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51c88c6-cd35-41ff-bec0-28daf04c7264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec61bb69-b0d7-4ccf-a62f-4a8ded8876ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a37e96-b341-4208-ab04-7a02c9eabab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a622fce2-a029-431d-9653-356a13d06adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04725725-2992-4257-b7b7-13adbb3635df",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72aa5c11-ba0c-4cf8-af06-7315f22a7794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95265b1d-eba8-4cbb-a8df-ba2e782cf7c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b627b4d-7d9e-4f19-b719-98b439e41d58",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0efbcbc-3924-41ad-b32e-e8e4ec28b607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20174f35-88ec-4f5b-8008-1c498299d7f8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a54fdc-19e5-4791-a0de-9c482c27cf8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "088bb1bc-3d91-446e-9d39-1a327382a95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29840846-07db-47ba-ac1e-b078f1b7434a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba2ee59-ef72-468d-9c2a-a6d2297c7e4f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb13046c-0ab9-4145-b316-ad19a486a873",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95f9114e-a0f1-4963-8e97-f7c631c3ddf5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f6e0719-2e8f-476f-8da0-d1dd4cb0ef27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "143555ce-b5c4-4bed-b252-638020e1adcd"
                    }
                  }
                ]
              },
              {
                "id": "618af310-0ab8-4928-98bf-b4f6c34f23e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb0deb5d-e902-441e-9460-f06f634fe4f4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe45b74-3f83-4906-b21b-f2a6a105b3a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3357d55f-8b4b-480e-b407-821e10ded90a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f9d0b4-29a9-4c54-b49d-1b83a92f5869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76b0622c-1acc-4a08-af0e-629906be9b68"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa57bc5f-5067-4f28-8e1a-4e3f13eecea8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb89721a-348b-4b64-8010-094bcd8e1c19"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f13b4d4-7dae-4d52-b653-563e0cbf138d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a58c015-f8cf-4888-ac3f-e5ec09a641bf"
                    }
                  }
                ]
              },
              {
                "id": "5a01dd25-e178-4479-9436-55d9b1613046",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5bf2a323-76d6-41c8-a954-3ede8968fe19",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4b1823-3fe3-485c-b023-422d2dd4aa6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4fd207e1-e2d8-49f3-8cd3-96fe99413f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d258a476-73b7-45a6-8b6a-01a836838720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43d8127-c621-4b0d-ac15-7a0a48b625ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e821eb04-addc-4a03-82d8-6e2bcc3e3910",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd8089c0-899b-48c7-a637-9aa958c6b96a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd105212-9759-4aa7-9d90-ba222ea6a39e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "22a51108-34dd-41cc-a79d-0a1d0ba70b91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02a228be-231e-4f02-8bcf-e1cb642b3e28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c00486c-c97f-415f-9cf5-2ea522af155d"
                    }
                  }
                ]
              },
              {
                "id": "f68e0df8-9d1e-489c-a233-c7d31296a1da",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbd67fa8-b6af-4454-a2a9-c96d97095303",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7d71bdf4-3bee-44ca-86c2-2d8b422cbfd4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "808c770f-461e-49e9-b37f-984869f5129c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84e7afd2-a6ef-4460-8cdb-17b64496fe68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b6575fe-744e-4331-94d7-2389c3537249",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6028e9cc-1495-424c-95db-b6c6b7b0b35c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a9d6c44-ff6d-4f9e-b573-3d72943294f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5a134d0-e35c-4925-a58c-5d8db1af17c6"
            }
          }
        ]
      },
      {
        "id": "6d3589c4-bcda-4572-bb51-d068ae215c72",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6ee2c201-8bdb-4931-aec0-a4b09f52a230",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a73d626-a5ec-48a8-a3f0-f03995a92aa3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18a5a161-3493-4a7e-9df0-e145c5f1e9d2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73294efc-a491-4919-a828-055b97c38420",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0666c65d-c6cd-46a8-9ccb-7780febf3dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f09a4c-e183-47d3-8a29-c22101089bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a56ed9c7-b83c-4c03-9c0e-3345fc67e965"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ce23a37-f80a-4560-ada7-13b405930f4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9caee945-aae0-4fa3-9e29-3513f14de003"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fbbaa51-71d6-47c4-bf27-2996b78ffa39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf5ee6db-fe2a-4ff8-bd6a-c9038517780e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b0c5503-943f-4a09-b114-2a3f32289889",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e15eb359-888a-4404-a33f-658c8a12cedf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48e8014e-9599-45c4-b88e-be1d594ef40f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30492854-ead1-42eb-9c47-54e19f9f2e09"
            }
          }
        ]
      },
      {
        "id": "ca7cc7a4-9261-46be-aeeb-a83d8cd84b26",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b891c802-6ac6-4431-b8fe-9656e681312e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f4a6cf9-9835-41ea-9de5-44b6b9c3d4b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6360bd1f-cf81-4927-9830-ad7fcbdc56d6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47d964a-def3-4722-a809-5db27e5f486a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45f304b3-98a9-4cdb-b7f2-b97979050253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f982694-5939-4795-acac-df0e6f985d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4de618de-0cad-462a-af9d-ed22e663e553"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cc30916-7ece-424f-95c5-206c58ca67a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "994fe200-a178-48e9-9651-7ea5f9f716e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba6f096a-4121-4252-aafb-f273ff2a7e13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83b477ef-1728-497e-bddd-5a299467e2fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e346ccf-f408-470e-9f86-27e22f7fc383",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c16ad53c-e2ac-44c2-a7c4-59785fced8e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "481b2330-59fc-4956-aa2f-3ac957893ecd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26aea1ce-cb1c-465a-a710-87b6bd40444b"
            }
          }
        ]
      },
      {
        "id": "53509a96-226b-451d-aaa0-add765df0b27",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6c46e143-0a36-4ccc-9d81-25799fa03331",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f618c6f5-9d0d-4c1e-a3d9-be94fbbe8e17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4614854-fe75-4f06-9f9f-035a0e30edd5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae55efb2-f54f-470c-8c7e-63c646e02da6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84d2c325-00fa-4066-a394-1c614915fc83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dccccd-2540-47dd-8c63-7d1538f497e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b396b301-5599-45cc-b351-7251ef695d0e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9155da3a-b46a-4861-887f-725d4f8dabf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5be017cd-50cc-40fb-a4ae-fadc9e80a3c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11581959-07c1-4510-ad03-6346cd8add8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e56313e-9ae5-4653-a241-c3416b48e2af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44f7f2cc-8477-4c60-a62c-fd5a2d1c726b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "03c3e763-1bc6-42f3-8c0b-ebf12b44631d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ce662de-80ea-4d99-a1ad-5d8a778cf5a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36d98913-314a-4151-9e9e-90d5da410187"
            }
          }
        ]
      },
      {
        "id": "ca80ff48-ae6b-463d-ae39-d008815c1451",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1e6c5d8-0c4d-4366-865a-3b5d921aeb6f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76c12c3e-549e-456b-9f19-7b7421281cd8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fde3933e-6ff3-4df9-9864-91ce51cf581b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31a64ca6-0b60-4a39-aab1-db37e62013ad",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e835f994-0064-4d28-aadc-afd0954f07f8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 26.46825396825397,
      "responseMin": 7,
      "responseMax": 262,
      "responseSd": 25.098278733093814,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724287315798,
      "completed": 1724287330574
    },
    "executions": [
      {
        "id": "8cf70f2e-9df9-4836-b325-a27f9d361df7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6bfed057-b5d4-4e8f-8052-6f34cac60392",
          "httpRequestId": "d4825b94-0cdd-45dc-9083-3721e3ac73b2"
        },
        "item": {
          "id": "8cf70f2e-9df9-4836-b325-a27f9d361df7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "89526ca2-6b96-41cc-9791-eb7d08f96f48",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "64d1ba96-22a7-4cbc-b2d4-d66dce094d20",
        "cursor": {
          "ref": "89435113-e6d5-48de-af32-4ee25f3994eb",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dc845d93-a8ee-4172-8876-fa0ce97e00e1"
        },
        "item": {
          "id": "64d1ba96-22a7-4cbc-b2d4-d66dce094d20",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e1d4d71b-4915-4267-906b-e138a0a02546",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "3d5ef611-8321-43ba-a99f-8e1e6017bd79",
        "cursor": {
          "ref": "17b526a9-4e0e-4e2c-bb21-cb3d437ea2fc",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e4445e38-8cdb-4d01-b8a7-024a9790d72e"
        },
        "item": {
          "id": "3d5ef611-8321-43ba-a99f-8e1e6017bd79",
          "name": "did_json"
        },
        "response": {
          "id": "e6110395-cf79-484f-8705-981bd8c657a7",
          "status": "OK",
          "code": 200,
          "responseTime": 247,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d391a8f7-c838-4c78-a57e-ae63cb31fadb",
        "cursor": {
          "ref": "42ae2aac-b7f1-4138-81fa-0d9aff223285",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "88ccd3bf-8f08-4e84-b578-9776d0211139"
        },
        "item": {
          "id": "d391a8f7-c838-4c78-a57e-ae63cb31fadb",
          "name": "did:invalid"
        },
        "response": {
          "id": "99d0f1bb-0ecc-43ed-8802-bbfac8ae1cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d391a8f7-c838-4c78-a57e-ae63cb31fadb",
        "cursor": {
          "ref": "42ae2aac-b7f1-4138-81fa-0d9aff223285",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "88ccd3bf-8f08-4e84-b578-9776d0211139"
        },
        "item": {
          "id": "d391a8f7-c838-4c78-a57e-ae63cb31fadb",
          "name": "did:invalid"
        },
        "response": {
          "id": "99d0f1bb-0ecc-43ed-8802-bbfac8ae1cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4163c23-6813-4e46-a87b-483bd239738f",
        "cursor": {
          "ref": "ca51579a-1a3e-4097-b4d0-022c180d94a7",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d7b90ec6-8d83-40a8-9477-dd0b93f5cf84"
        },
        "item": {
          "id": "f4163c23-6813-4e46-a87b-483bd239738f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6cd13ce1-61fc-4802-a258-c4bb69c5ccc4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 84,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687861cc-1cdd-4128-85f6-935cb830a1e8",
        "cursor": {
          "ref": "613c853c-d6b9-4dd5-bc62-7d5a7bc648ed",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "98db80bc-a4cd-472c-8f33-19869a8e21c3"
        },
        "item": {
          "id": "687861cc-1cdd-4128-85f6-935cb830a1e8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9b9ec8d1-26d0-43ae-8904-2322774e96d8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 24,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7ef88f-eecf-420a-9b1a-fe1d3e1fe8e5",
        "cursor": {
          "ref": "9087ee51-d423-482e-94e9-7848623787c5",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2f2c4f5f-f194-40fb-918b-f13be634b9ca"
        },
        "item": {
          "id": "cf7ef88f-eecf-420a-9b1a-fe1d3e1fe8e5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4ae8c149-2104-499d-9c19-eaec03c0e62f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52c6e15-3042-4190-9877-23a6ed32e031",
        "cursor": {
          "ref": "7da274a5-aa9d-4ca5-91e3-8383666a657e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d9a2f23a-005a-464d-ac26-d49fe8acbfed"
        },
        "item": {
          "id": "e52c6e15-3042-4190-9877-23a6ed32e031",
          "name": "identifiers"
        },
        "response": {
          "id": "a4c95951-9897-408c-8da4-d12b07623e75",
          "status": "OK",
          "code": 200,
          "responseTime": 262,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3324a1-4f91-482c-a9b0-beb072da5cb4",
        "cursor": {
          "ref": "9b3fb1bf-13ac-4c9c-9e81-3bb4b5a250c2",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8509d670-ea19-4afe-8eeb-c4c8a682981f"
        },
        "item": {
          "id": "ce3324a1-4f91-482c-a9b0-beb072da5cb4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7f3f90a5-54a8-405e-bce1-85443cabc1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304951f4-b7ed-4c77-bf4c-b88c397c2f04",
        "cursor": {
          "ref": "a48dc59d-c67f-4b03-a800-66de4ccd2f4f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6318f84e-d043-4c82-b2c7-3fffd4cd685e"
        },
        "item": {
          "id": "304951f4-b7ed-4c77-bf4c-b88c397c2f04",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8fa8910f-91a2-46bd-bb15-b7e6b2d6c23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfd3e4a-07ee-4cfa-89aa-ddca7b8d4c39",
        "cursor": {
          "ref": "96b10bf7-1681-4396-ae6c-91faf0e58a3b",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f3c4bf15-3786-4222-9b8c-0c19f93b441b"
        },
        "item": {
          "id": "1dfd3e4a-07ee-4cfa-89aa-ddca7b8d4c39",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6307ca61-17a4-4860-a730-e6eb8fbaaf8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b11444-3d30-4e9b-8d46-024186c0a220",
        "cursor": {
          "ref": "e23c1122-6ace-43a7-a7fd-8b39f05b0693",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "db09326e-65af-448e-ba12-ae51f8416220"
        },
        "item": {
          "id": "a6b11444-3d30-4e9b-8d46-024186c0a220",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8174961d-28c2-4d8e-8e63-094e61c7f425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83391a59-d608-49b1-b0e9-f484fbc7ad3a",
        "cursor": {
          "ref": "581686a3-0c00-48a0-8698-cd3feae289a7",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1192c5fb-0470-446c-ab5d-a5c7d0e07dfa"
        },
        "item": {
          "id": "83391a59-d608-49b1-b0e9-f484fbc7ad3a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dbbf3755-a52d-443e-8b55-d24ebed95ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe17a62-602a-4a68-bcaa-19e5f1ff9468",
        "cursor": {
          "ref": "47476175-9d92-4892-9107-538eecf82b40",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9e042594-8b12-4e87-9083-f56391f0ced3"
        },
        "item": {
          "id": "dbe17a62-602a-4a68-bcaa-19e5f1ff9468",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "dcceba37-180c-4676-91ed-cc2fb5bd0f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8637a939-8d6e-401c-9c63-3a7b19c12ded",
        "cursor": {
          "ref": "46b48259-23ed-4e62-90e7-fda315add799",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ac90f1ec-1e76-441d-b5e2-944a52c0203a"
        },
        "item": {
          "id": "8637a939-8d6e-401c-9c63-3a7b19c12ded",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3b9d384a-87c2-459f-99a6-ea73aac06a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057e5207-119f-4751-a32d-f1385af73ac3",
        "cursor": {
          "ref": "d5d3477c-251a-4381-988d-4cf19cb4a202",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2e95fe55-67e5-4b61-bb70-8ba27769aba5"
        },
        "item": {
          "id": "057e5207-119f-4751-a32d-f1385af73ac3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6f8affb2-88ba-4884-831a-406e6e8ae9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4b37c8-7aa8-4a10-a528-3fc26006d58d",
        "cursor": {
          "ref": "94e1da9c-fa24-45de-86e1-d9f9ac94f886",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ff64a872-fed3-4454-82d2-68cca75f99d6"
        },
        "item": {
          "id": "0d4b37c8-7aa8-4a10-a528-3fc26006d58d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2c7c9fe5-d1ea-4484-8b3c-07e6ffd29809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2fb786-8217-47d1-a227-12ed20717fd0",
        "cursor": {
          "ref": "8816192c-986a-4ef8-8ae0-aad9f7e2d712",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e2c0b89b-cecb-4106-aa2e-ed9541ac5f74"
        },
        "item": {
          "id": "8f2fb786-8217-47d1-a227-12ed20717fd0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "11e816a0-31bc-40c2-bfc7-278edb6d7796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b3034c-7117-438b-a91f-3fa3c1467d0c",
        "cursor": {
          "ref": "77f092f9-f4a3-40b0-b8eb-60b04fd62946",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1dfe1984-6b4d-41d8-b6ee-404f081b36ef"
        },
        "item": {
          "id": "49b3034c-7117-438b-a91f-3fa3c1467d0c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9f6b5299-c012-4688-ac14-0fee6adaff99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fa0b70-ad25-4cd5-a10e-ad262b0a987b",
        "cursor": {
          "ref": "6c8fea0b-fda2-4ff0-9078-7b22243ad601",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a56e32a4-c2e3-4bfe-a7c3-48d381b6b360"
        },
        "item": {
          "id": "43fa0b70-ad25-4cd5-a10e-ad262b0a987b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "15c8bccb-c397-404f-b31c-2790fe7d2a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480ac472-3baf-4903-830e-f44324c9cd6a",
        "cursor": {
          "ref": "40f6675a-d305-4770-81b8-28e0c7e4ede4",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "328fe83d-771d-476c-a54a-bd9be22d91b2"
        },
        "item": {
          "id": "480ac472-3baf-4903-830e-f44324c9cd6a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5dbd5f47-fb6e-459d-b67a-fde150b06c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e219781e-6410-43be-8fd8-42c587dfcf88",
        "cursor": {
          "ref": "e3d3643b-7fcf-4327-90f7-f441877551a7",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a79f3c7d-faf4-4b63-aac5-ff0df4de5d38"
        },
        "item": {
          "id": "e219781e-6410-43be-8fd8-42c587dfcf88",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "99123e12-8353-4bc7-bc88-a24dd9d60f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298b39ea-f75b-4235-a3ba-ccd40ae09f0d",
        "cursor": {
          "ref": "ba629ef3-41ce-4234-abdc-5daae23b8da7",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c7af8779-2de5-4c96-93e9-cf743b22b0f8"
        },
        "item": {
          "id": "298b39ea-f75b-4235-a3ba-ccd40ae09f0d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4edcd37b-6c51-4c20-a4fc-ec737c0be3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a034916-cd8f-4387-b39a-95e6a072b03e",
        "cursor": {
          "ref": "c73068f0-d5aa-40ff-b56d-fead0bd27fcf",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0a5d6469-8d23-484b-8ccb-1242728a30ee"
        },
        "item": {
          "id": "9a034916-cd8f-4387-b39a-95e6a072b03e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e81b7856-5a82-4c95-a96a-c1e224e21648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c497642c-5b7e-49b8-ac58-bdfd52393027",
        "cursor": {
          "ref": "556b81f4-dc20-4f45-ba73-f0a4a6f8fba3",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2616b5b5-a2ea-4bb8-be24-bf2797fec401"
        },
        "item": {
          "id": "c497642c-5b7e-49b8-ac58-bdfd52393027",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dad3ec99-cef7-4af6-b39f-e6b7023af0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacbc4c0-eea5-4eb4-8b99-a3703386f2c7",
        "cursor": {
          "ref": "37024b39-629f-498c-9201-b3f9c92da0fc",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cd19f17e-91e5-421a-b8e8-bb0ba0608aa7"
        },
        "item": {
          "id": "eacbc4c0-eea5-4eb4-8b99-a3703386f2c7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "882ff51c-6ff2-42e8-93f0-86fd2726f72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b82bb0e-b38b-4f51-9bab-0a93230c6e10",
        "cursor": {
          "ref": "e9100dde-a849-4b5d-ad0a-6ea23a399786",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9c349b12-4f16-4966-a4a3-07bffcd18035"
        },
        "item": {
          "id": "9b82bb0e-b38b-4f51-9bab-0a93230c6e10",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "af1e95c5-037c-4c01-a917-3c6ae7caebdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5013e5-357c-43ff-ad65-3fd99eace44e",
        "cursor": {
          "ref": "34f1682a-389e-4428-9c74-c6768e4120ed",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bd238fcf-8a6e-4581-afee-f90571fba9d6"
        },
        "item": {
          "id": "ee5013e5-357c-43ff-ad65-3fd99eace44e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "24f4243e-0d7c-40b0-aba9-cd52f7d62dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29f4280-aa41-4e7e-b05e-6e6b83f5cd25",
        "cursor": {
          "ref": "a574a948-8437-46ad-9c2b-ff1ab9a3c107",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9a99ae3d-6fc6-4eca-909b-d3f6d982e535"
        },
        "item": {
          "id": "e29f4280-aa41-4e7e-b05e-6e6b83f5cd25",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "67deaf52-3242-4d2c-84ed-9843c4782559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0415efd9-d0e0-41cd-8b8c-30065e631868",
        "cursor": {
          "ref": "8c1c026e-a739-49d4-a7f5-2db4d88c4f27",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7a19a286-0148-4b33-8517-86deda1cbb16"
        },
        "item": {
          "id": "0415efd9-d0e0-41cd-8b8c-30065e631868",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "04f7479d-325a-4487-bb8b-8cd766677aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2457c070-f2c6-4c24-ae74-979905b26fcb",
        "cursor": {
          "ref": "c68ac8db-c8f7-42d7-8b23-693d809fd5f5",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "643e1e39-6205-43f7-a16c-da3b2f0d5ad2"
        },
        "item": {
          "id": "2457c070-f2c6-4c24-ae74-979905b26fcb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "96bebb30-9cd4-4e6d-b8cc-d2a688679eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2527fd8-12ed-4d6f-896a-5f5c24684cb5",
        "cursor": {
          "ref": "49d6169f-f416-4d5b-9d43-90cc4d5193a9",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "64008963-83e5-4b67-be65-54a29185f284"
        },
        "item": {
          "id": "f2527fd8-12ed-4d6f-896a-5f5c24684cb5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cd5a7f25-c81c-46a8-9c7c-17e74bcd95e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddc8bc1-d3bd-4181-8d55-7c9f2892e95f",
        "cursor": {
          "ref": "f4ca1f5a-00e3-4336-81bd-466cf29165f8",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2ab08626-f2c5-4eab-a2ca-041f07cc2543"
        },
        "item": {
          "id": "1ddc8bc1-d3bd-4181-8d55-7c9f2892e95f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "de89af95-b125-4efa-8c3d-0bda3e1a872c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a65b376-a978-4fc8-94f9-a56c8aa93dbd",
        "cursor": {
          "ref": "ef9cbc53-ae62-42d8-99ca-f893463780a2",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "63144405-3343-4789-b1a4-fb5c10361d35"
        },
        "item": {
          "id": "4a65b376-a978-4fc8-94f9-a56c8aa93dbd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "573e4c12-cf4e-438c-8e23-bb384ea394f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bc3fb3-fca4-409c-b0d5-1e3f8700ab8d",
        "cursor": {
          "ref": "3bd3547c-08e3-4403-9b4e-409c9277d0dd",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4558c032-3f7e-40c4-aee2-de38366b1afc"
        },
        "item": {
          "id": "69bc3fb3-fca4-409c-b0d5-1e3f8700ab8d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c4158e74-c4a0-4cdb-b4ae-fdb4fbaf21dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ae513f-d6eb-4f6f-b749-39e14a01c1e4",
        "cursor": {
          "ref": "4b0008f9-0804-4089-a7fc-fc0a9b20b065",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c4a1f05b-7846-4197-ace1-69cc389c8168"
        },
        "item": {
          "id": "f1ae513f-d6eb-4f6f-b749-39e14a01c1e4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "38544e4b-2898-4a2e-a07b-183ad22bd2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a851373-0c3c-4dbe-a5f5-696f0af1d6ec",
        "cursor": {
          "ref": "1ee93208-8336-4b71-95cf-caee6d4b624d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "166917b3-368e-473e-aef1-a0daf8f60d49"
        },
        "item": {
          "id": "4a851373-0c3c-4dbe-a5f5-696f0af1d6ec",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "aed1ae27-b4f1-4ed4-9762-3fe5b90a8eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedc8e6c-655e-41a4-8687-2dfe37651170",
        "cursor": {
          "ref": "ef936150-e93e-4cae-a22d-e09421df438e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "44a106f6-1e99-4fb8-a7e3-07821ab3375b"
        },
        "item": {
          "id": "bedc8e6c-655e-41a4-8687-2dfe37651170",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6a41009c-8220-459f-9f33-590d8cb9b5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d182e0-7ed8-46fb-a4cd-3f1de649b129",
        "cursor": {
          "ref": "cd1d0d5e-be13-43fd-a817-e8b8ce0117a5",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "01c2b0c7-0fab-4daf-91ae-3176d1175c95"
        },
        "item": {
          "id": "b0d182e0-7ed8-46fb-a4cd-3f1de649b129",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2dabb54c-5d70-4614-9b07-9e814928c81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cb5372-7637-41c7-adfd-e666982f9216",
        "cursor": {
          "ref": "40dccb71-fafa-49fa-a579-de1e8935e030",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5393663f-0e0d-4df9-8924-ba636bc414b2"
        },
        "item": {
          "id": "03cb5372-7637-41c7-adfd-e666982f9216",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cf1b497e-1232-4420-9de0-4df4d4ba5492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac817576-5352-4b6e-9e8b-6ef4b6329913",
        "cursor": {
          "ref": "52228ea5-c05c-4d86-8190-9b195766640a",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "36817867-5408-47ef-ae84-9691b8092060"
        },
        "item": {
          "id": "ac817576-5352-4b6e-9e8b-6ef4b6329913",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d25fad18-e7ef-44cf-a0d1-a50d24873a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9b62e7-2e7f-4b10-b208-19bf3dcc6f6e",
        "cursor": {
          "ref": "919a837f-3311-42ce-bec0-f38db4c976a5",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "431b47ac-1dce-4cc6-9f6d-f21e9eea4ae7"
        },
        "item": {
          "id": "5d9b62e7-2e7f-4b10-b208-19bf3dcc6f6e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "530f6c5b-5630-4874-9ede-0beac288ba72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa14fec-8186-4348-9d6f-9c6541878c1c",
        "cursor": {
          "ref": "442eee30-c132-4f9b-8c06-3d7654de3ce3",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6abff1bb-6151-45a5-abdb-194d4b82e738"
        },
        "item": {
          "id": "8fa14fec-8186-4348-9d6f-9c6541878c1c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "868ca6d3-6db1-48fe-b378-376a8e3678d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6172bd55-ee93-4dc3-9390-2ef29df61b17",
        "cursor": {
          "ref": "c4f4693c-a30c-4255-9302-702d78179be3",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "63ba4d7a-936a-4499-b0f4-176514479a48"
        },
        "item": {
          "id": "6172bd55-ee93-4dc3-9390-2ef29df61b17",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7c6429d8-7f49-4b92-951c-e572c2cbcc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6532bc-f0b5-41a9-92e8-3839c0a8ed21",
        "cursor": {
          "ref": "8261b5a2-9a01-4701-ac28-4c9684d4769f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "835315cd-7bff-456b-90ce-50f6b2690da1"
        },
        "item": {
          "id": "fd6532bc-f0b5-41a9-92e8-3839c0a8ed21",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "03071363-5250-4a7e-8db0-075c7ca29f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94573161-3557-4b28-8385-cd767d799218",
        "cursor": {
          "ref": "477c8159-739a-406f-8b3d-b5eb3b6a011c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "417c7004-7519-4afa-a74f-b168121a11f9"
        },
        "item": {
          "id": "94573161-3557-4b28-8385-cd767d799218",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "94ac8631-3eb6-4e6e-8800-edf3110d8af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e7f483-8f70-454f-ad4d-00a116a8e29e",
        "cursor": {
          "ref": "37b9856a-2e1d-4b4e-9606-2bb39f051192",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4c60b041-0619-4984-9664-b7e8e0e728ee"
        },
        "item": {
          "id": "f6e7f483-8f70-454f-ad4d-00a116a8e29e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a05bd476-d348-4cae-b99f-e361c7959884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6526849c-087c-49c6-9898-92402f126130",
        "cursor": {
          "ref": "638e68a7-351a-4121-a532-0023bf230580",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4de6b156-5a8f-4d6a-8482-ea92f21e951d"
        },
        "item": {
          "id": "6526849c-087c-49c6-9898-92402f126130",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0a79cb01-0339-4a4d-91c2-ccee16ff8181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1b68af-86b9-41ba-848e-04f8c4d0e8be",
        "cursor": {
          "ref": "c3be17e5-f2b7-49cc-b122-03a8a7e7c609",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "027f9375-e3f9-4196-893e-082345d51317"
        },
        "item": {
          "id": "4b1b68af-86b9-41ba-848e-04f8c4d0e8be",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "105fce33-2815-4fe8-b0e5-bedbf132ea30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5699cd24-f5c6-4486-9d89-4cf1247691d7",
        "cursor": {
          "ref": "48f4497b-e479-4e93-b20b-4ef20de9a76d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "de5e2753-9444-49d6-81a1-9982eb9cb240"
        },
        "item": {
          "id": "5699cd24-f5c6-4486-9d89-4cf1247691d7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "21401811-abdb-40b4-9174-5c1c089724d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f6d2df-9b58-4114-aaff-a3307d1c0700",
        "cursor": {
          "ref": "73e4c23f-284b-4615-a8a4-f9638d51ba80",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6620cabd-725a-445b-acdd-ff7c336eba49"
        },
        "item": {
          "id": "37f6d2df-9b58-4114-aaff-a3307d1c0700",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2a5ef8c0-ee23-4de4-99a1-6816d13e3256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4698bdd-d15d-4c04-84cc-1c0facc73ae5",
        "cursor": {
          "ref": "f256bd4a-9559-4429-9bfc-fa96a92b03a9",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "637b8a34-6eb1-437a-9b56-7aca65456142"
        },
        "item": {
          "id": "f4698bdd-d15d-4c04-84cc-1c0facc73ae5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4059f17a-77b9-44ef-9ddb-9fb13df948bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7c9f34-5251-4313-8b1f-e6c2d38c9cd9",
        "cursor": {
          "ref": "ccb50884-b30f-4aba-83e2-06a8ca6d4695",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "742b31f4-df57-41be-9183-4418ac052bfe"
        },
        "item": {
          "id": "3a7c9f34-5251-4313-8b1f-e6c2d38c9cd9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "43e0d0f1-685d-49e6-ba45-92eec4081da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aff5b85-201b-4fed-a58a-eb1200917038",
        "cursor": {
          "ref": "fa5e90f1-fb81-4e1b-bbdb-44992dc69400",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5ae8b1f2-4138-4fdd-ba63-fe19ea403963"
        },
        "item": {
          "id": "4aff5b85-201b-4fed-a58a-eb1200917038",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dae6299b-80c4-410b-b463-b66ae11d7d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9295dc4-efde-4a0d-94d9-d7c574974428",
        "cursor": {
          "ref": "6c459422-33a2-4316-b259-4b022588aa47",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d8ba1dbd-41f5-4d5b-bb17-9dd5c21264e2"
        },
        "item": {
          "id": "d9295dc4-efde-4a0d-94d9-d7c574974428",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "18cbc47f-54ef-4d4b-80c3-171dca73d718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3aebae-9bd9-4045-9d42-27ef3520e159",
        "cursor": {
          "ref": "b66c9932-fc6e-44a4-9ab7-83fa069712d6",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "73f5bfcb-9bec-49a3-ac77-7db3d0c8bc49"
        },
        "item": {
          "id": "4e3aebae-9bd9-4045-9d42-27ef3520e159",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a233cd8d-5ecf-4c0a-8f36-7f3889ee497c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d34eb26-4672-48eb-ab2a-f9b06729d6b0",
        "cursor": {
          "ref": "c9544476-dd74-457c-8e15-fdadd9609128",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9e1a79f5-9ef9-4aa1-8fb7-96ce128d852a"
        },
        "item": {
          "id": "6d34eb26-4672-48eb-ab2a-f9b06729d6b0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ac64338b-6c17-4fd1-8800-fb0651ad2a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87518898-4167-4835-9e35-a1dcd1737259",
        "cursor": {
          "ref": "c43fb192-e34c-4c53-b0a8-2ffcaf91ad2c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3382d621-474e-493d-a9f2-b0d98973235c"
        },
        "item": {
          "id": "87518898-4167-4835-9e35-a1dcd1737259",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "32eb7f02-96be-4aa9-bdeb-1736668d6e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68010b7a-9506-4879-9dc4-e2f7570863d0",
        "cursor": {
          "ref": "f33e2ee0-43e0-4794-9519-b2a272109cbe",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c712659c-53fa-4508-83d1-8f62f3d0e4ba"
        },
        "item": {
          "id": "68010b7a-9506-4879-9dc4-e2f7570863d0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "19139a11-e9b0-4575-8a7c-600770c657a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9d2906-f86f-4eaf-ae5a-d843220b263e",
        "cursor": {
          "ref": "32f23725-8cff-49ed-9c8a-75c9138b2bbe",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fc01cc13-3e42-46ee-b5b0-30de0fc5ee9a"
        },
        "item": {
          "id": "bb9d2906-f86f-4eaf-ae5a-d843220b263e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e43a1670-8473-4642-9fce-593536bbdca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce8be87-f31e-43bf-a647-5b9a6909b70a",
        "cursor": {
          "ref": "77d2fa7a-7881-4ecf-ac86-1bc27c506977",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "530ee595-5b7b-4a01-b716-1a3e99b8530d"
        },
        "item": {
          "id": "1ce8be87-f31e-43bf-a647-5b9a6909b70a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6d4f3039-a0c6-4fb9-bbc6-9e4e8ce9fa22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4189f5a-4c3e-48a0-83d6-c38fae6f2fbf",
        "cursor": {
          "ref": "a6f53607-bbd3-4b0c-8fb1-edee6db48fe0",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3333308d-bec6-4d32-b664-9d9726984d9a"
        },
        "item": {
          "id": "b4189f5a-4c3e-48a0-83d6-c38fae6f2fbf",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a531631c-88d7-497e-a484-70392d3c3323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3e308d-a7e0-4659-9b3b-3876c1e7b0fe",
        "cursor": {
          "ref": "a4a91a5a-3831-4f44-91a4-6aaabd9f31c2",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "12c96a2d-6deb-46ee-a7d3-c9245fc11bf0"
        },
        "item": {
          "id": "0f3e308d-a7e0-4659-9b3b-3876c1e7b0fe",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6c354606-380e-42e7-9dcb-ea28056b67b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae54f7f5-8ad8-4860-808b-892483c6199d",
        "cursor": {
          "ref": "0542d48d-651e-40b0-ae89-8df93143e895",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "572c68c7-a77d-4a4e-aea7-6b0aaa2c1d16"
        },
        "item": {
          "id": "ae54f7f5-8ad8-4860-808b-892483c6199d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b9b8108c-a062-499f-938c-aa49c5197b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcd5a5f-0206-488c-816d-5056fd359355",
        "cursor": {
          "ref": "fd3cd1f7-c6ca-4e3e-a035-ca1bc314ff9f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6c69faee-09a3-409c-8903-ce886f6deba4"
        },
        "item": {
          "id": "1bcd5a5f-0206-488c-816d-5056fd359355",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3257f6fd-fb06-41aa-9131-7e1575ea878a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51688c1-2fca-43b3-8434-303f9b8b74eb",
        "cursor": {
          "ref": "02eba312-4c5a-4691-acfc-fe1916db4468",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "30362072-44e1-4b94-af84-203a1208f469"
        },
        "item": {
          "id": "f51688c1-2fca-43b3-8434-303f9b8b74eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8f7f8856-609d-4297-898d-ef428ffa0c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045fd61c-a99a-4f15-bff1-741f29017a44",
        "cursor": {
          "ref": "299b5b0f-e74f-479e-9efe-5665c1633a88",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "75132c50-5dd0-4cbb-84b0-d5f96a6798c8"
        },
        "item": {
          "id": "045fd61c-a99a-4f15-bff1-741f29017a44",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1cf04ca6-60f9-44de-b512-693accd7d885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f504e03-edfc-4176-ac88-4b8363a7253c",
        "cursor": {
          "ref": "656f6ddb-a293-45b3-a5ea-c0af99f392f1",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "03f744d4-1391-4315-a6eb-ff83f1f8e40e"
        },
        "item": {
          "id": "2f504e03-edfc-4176-ac88-4b8363a7253c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ab717c63-ab37-4bbc-bbc9-786e97dd7de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534294a7-a40b-4c0a-891d-075f057ec095",
        "cursor": {
          "ref": "eda70b13-8069-4d83-b725-bf610b7bb5a3",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cf8d4a02-daf8-4725-8058-a5a9b732f978"
        },
        "item": {
          "id": "534294a7-a40b-4c0a-891d-075f057ec095",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "810c9533-6eac-4c0e-8886-5ec87a5098c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e78ba0-e69e-4555-99b2-54ece547ddeb",
        "cursor": {
          "ref": "fc3f31f1-8054-44f2-a548-d4fcf75e84ff",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fcdff500-5e19-41ad-8ec2-dd3ebdf1001b"
        },
        "item": {
          "id": "d2e78ba0-e69e-4555-99b2-54ece547ddeb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "12dfb87f-6a5b-4197-bd69-c8c34f335b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886c6a8f-fff7-4295-a621-b24708a36dfd",
        "cursor": {
          "ref": "fe27052e-661e-47c7-818c-bb3c81a1cd7b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a75194dd-bc31-461e-8fee-a9a26ad58c39"
        },
        "item": {
          "id": "886c6a8f-fff7-4295-a621-b24708a36dfd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "af4c59b2-9590-4f61-b0da-b6ef5a07c3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ed5a3b-5ac3-4d3d-bd5a-6167c305a40e",
        "cursor": {
          "ref": "e8f0d511-b836-4d1b-abeb-703559c667e8",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c17d3747-dbbd-4a4a-8f4f-eefc4799c96f"
        },
        "item": {
          "id": "b0ed5a3b-5ac3-4d3d-bd5a-6167c305a40e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9947ee55-8e30-46f7-b01f-d5c48ef08da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4593328-e634-476c-95d1-efcc0bd5016a",
        "cursor": {
          "ref": "e693257f-dc6e-4237-aa29-41f2f2949309",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f5546888-6def-4275-ad25-d05f8bc22160"
        },
        "item": {
          "id": "d4593328-e634-476c-95d1-efcc0bd5016a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "84214c43-8fb3-4d21-91a3-0cfad6276fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4102d4-48dd-4a0b-8578-d1333bd424df",
        "cursor": {
          "ref": "c91238f7-41af-42e4-9b1a-18daf9a8b638",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "798dfe3e-633f-4a0e-a32d-05b7ef81f983"
        },
        "item": {
          "id": "9e4102d4-48dd-4a0b-8578-d1333bd424df",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "36eda075-1fe1-4477-a9cb-aebf5fb0e65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a810952-d470-4074-bd08-b388d2882015",
        "cursor": {
          "ref": "124f7211-1c74-411d-9a85-bf928148a3b9",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "96e9cae9-aaa4-4ce8-999c-b8f3bdb85ec3"
        },
        "item": {
          "id": "8a810952-d470-4074-bd08-b388d2882015",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8150cb8c-8684-447c-bda4-8e4e137607ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd95cf51-7f05-4722-84fe-e0b86b755155",
        "cursor": {
          "ref": "23fb7c76-06c8-4611-9b63-f74ee10f8eb7",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2249c596-181f-40d3-8da0-8236b17417d9"
        },
        "item": {
          "id": "bd95cf51-7f05-4722-84fe-e0b86b755155",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "24111138-b3e0-4942-94e7-e0d22968ab67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eeb2ac0-fd86-4279-8aa0-91458b9bf656",
        "cursor": {
          "ref": "3377f433-b99b-474b-80f2-648d1b925325",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cb1388c4-7d07-49c2-b4b5-e1e58cd54d2a"
        },
        "item": {
          "id": "7eeb2ac0-fd86-4279-8aa0-91458b9bf656",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "823292af-d7e6-436f-a718-7c1c5d6e7087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74190f3b-850e-4cec-b4eb-bcb60147603e",
        "cursor": {
          "ref": "a8e8594f-9e86-4355-b099-68bebf404f5f",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "17217994-5fe7-49c2-959c-59dd83e7eb81"
        },
        "item": {
          "id": "74190f3b-850e-4cec-b4eb-bcb60147603e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b2c658bd-c67b-47d9-b890-9fb6ba475711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c9e090-e7f8-4579-9deb-2019aca3e067",
        "cursor": {
          "ref": "2cd23d25-2ac1-4657-91d3-7aaa5cb84ab8",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d888d0ae-68f4-401e-b957-7df19b597085"
        },
        "item": {
          "id": "c5c9e090-e7f8-4579-9deb-2019aca3e067",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "25769e00-e9c4-4ba9-b10d-d328caa2a934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957632d0-84d5-4633-a7fd-07cafe1f1b8e",
        "cursor": {
          "ref": "576b194e-c1b7-471f-82ae-0cbebbad2f6d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1101e19a-2028-4b89-8b41-9882bcb8f5e4"
        },
        "item": {
          "id": "957632d0-84d5-4633-a7fd-07cafe1f1b8e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "387fd9fb-225f-4ea3-aecc-e5492d89d01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a0ef7c-6c69-4ac6-8444-3118029712f3",
        "cursor": {
          "ref": "871ba9e4-2863-4ddc-b8ac-1651f757529b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "eaae809b-b6c6-4a90-934a-9355c3b18f02"
        },
        "item": {
          "id": "d6a0ef7c-6c69-4ac6-8444-3118029712f3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "75ed7a48-c190-4cd1-add8-70c66407399a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d241dad9-e90d-4c58-80b6-ca2184103dd3",
        "cursor": {
          "ref": "60268a4a-5153-42ce-b5c2-9ece24456909",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "56602ace-993f-4762-a915-0e4b14c9cd63"
        },
        "item": {
          "id": "d241dad9-e90d-4c58-80b6-ca2184103dd3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8bf95002-fc1a-4e90-b02b-dfc1491beb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735e4684-3256-4224-bb29-da26be0783de",
        "cursor": {
          "ref": "4ea035fe-7659-4a79-9954-8cdbd25f59c8",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3965a91f-a704-4438-8639-2ecc46bb8436"
        },
        "item": {
          "id": "735e4684-3256-4224-bb29-da26be0783de",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fcc21703-96f9-422f-b5ef-06483b0577e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a1c868-c3d0-4529-9bc4-530c378f9cc7",
        "cursor": {
          "ref": "f36b7ea2-ce9e-46c7-9639-11da0f968b9c",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "296b2da2-83d9-476d-8fa3-8540f61d9374"
        },
        "item": {
          "id": "56a1c868-c3d0-4529-9bc4-530c378f9cc7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e8fddebe-337a-4208-b548-cc8932debd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1e2880-2fae-4343-945f-de53b4552c2d",
        "cursor": {
          "ref": "4488ffbf-de8b-4943-8511-0219f90e8b53",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "77e5bd2f-1cc2-43f9-af98-5ac07a3b5fc5"
        },
        "item": {
          "id": "be1e2880-2fae-4343-945f-de53b4552c2d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "510d6eb7-1d13-4091-9e42-830b7e5941b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27228385-a1b8-4eef-b5ac-26d608f535ea",
        "cursor": {
          "ref": "ede0976a-e4a2-4015-82df-4f75359ba991",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "db258923-1184-4344-aefb-ec6576bc3e68"
        },
        "item": {
          "id": "27228385-a1b8-4eef-b5ac-26d608f535ea",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "386237b3-79e5-4a12-8e7f-4e3e60389528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1abe0d-9ef5-4a17-99df-978c76136b30",
        "cursor": {
          "ref": "7dd356ff-6ec9-4837-beef-093cab1653c5",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "33bd4c70-799d-448a-a5cf-d3af4b519755"
        },
        "item": {
          "id": "1f1abe0d-9ef5-4a17-99df-978c76136b30",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d38b7ed2-1b24-4d0e-812e-940618e491dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3b1377-2cd6-4f09-baec-875d02411691",
        "cursor": {
          "ref": "a545baf9-b799-4ec5-b8a2-16a01e32c89d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6d680646-b67a-471c-80bd-1e760a55f133"
        },
        "item": {
          "id": "ac3b1377-2cd6-4f09-baec-875d02411691",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6bb25ace-8d39-4b00-add9-a7a3d9d9ad66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e48bc0-df39-46ca-ac26-c432abd77815",
        "cursor": {
          "ref": "461b2f59-6809-4bae-85fc-73b97bf5f59e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fd4f082c-9c38-4936-87ca-038d374cfb68"
        },
        "item": {
          "id": "58e48bc0-df39-46ca-ac26-c432abd77815",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "46d0f7d6-13c3-4791-bf5d-ddada7270f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5117a050-2205-446a-91bd-8db7bed0a067",
        "cursor": {
          "ref": "781ec989-1bcf-48e0-ac40-29e99a583a18",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5e54304a-1e8f-45fd-be13-b8711a4b1ea8"
        },
        "item": {
          "id": "5117a050-2205-446a-91bd-8db7bed0a067",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a031776d-0fea-4cfe-a07c-0693f8b54f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddccf699-fc02-491d-882b-ac863c9832f6",
        "cursor": {
          "ref": "19608654-bfa2-40d3-ab8d-e69e2185c33f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0154db22-cc63-400f-8af5-094d5f013609"
        },
        "item": {
          "id": "ddccf699-fc02-491d-882b-ac863c9832f6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d7f66dfc-0c85-4645-8ca0-6ad194187a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9091c094-4b56-4e65-97f5-975e241e6854",
        "cursor": {
          "ref": "b8ce3798-1170-4982-a27f-0e8daba86bee",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "44bba1dc-10ae-4ed4-9488-df9908344146"
        },
        "item": {
          "id": "9091c094-4b56-4e65-97f5-975e241e6854",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f362d4d9-bae9-4ed0-bebc-169d5c5c149f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fecfa05-b28a-484d-8d43-1392d4aca03f",
        "cursor": {
          "ref": "d270f738-8c22-4769-86b4-bb2b5ebf0083",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5b8b9ef4-c693-4993-825c-6f1d33d8746f"
        },
        "item": {
          "id": "4fecfa05-b28a-484d-8d43-1392d4aca03f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "09f1d938-3c56-41be-8cb8-ff43575d5ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dbb981-d16f-4cf3-9edb-8ae53ab4cbc7",
        "cursor": {
          "ref": "61afb105-b592-4ddb-ab44-0cf3360fad92",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f7461657-6caa-4d1f-933c-39ded3e7e652"
        },
        "item": {
          "id": "f8dbb981-d16f-4cf3-9edb-8ae53ab4cbc7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4c901eac-7078-458e-8e44-c887e5d3da6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c815725c-ba72-42e1-b808-e62018a565fd",
        "cursor": {
          "ref": "1276d1f2-9ef6-4a9e-beed-2f8790bd8ebe",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f5ffc184-2480-4be3-aba2-962bcb626844"
        },
        "item": {
          "id": "c815725c-ba72-42e1-b808-e62018a565fd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "622e1657-cf14-44ac-9f88-eecf470eb3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddf53a2-1f72-44bd-bed0-0cfbee22c1db",
        "cursor": {
          "ref": "502da789-dae0-4ed9-b50a-cde0fd9ff091",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "51ce9751-2847-4cc8-8c1d-97bff4e688de"
        },
        "item": {
          "id": "4ddf53a2-1f72-44bd-bed0-0cfbee22c1db",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "38fa823e-a909-4889-9e39-6c370ca9b23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29e86ae-e5fd-4d4b-ab81-582522a10f5d",
        "cursor": {
          "ref": "ad9a1b7e-6acc-45a1-9c32-1220dda32629",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0e86c098-404d-4e7f-a790-42bd10eee712"
        },
        "item": {
          "id": "c29e86ae-e5fd-4d4b-ab81-582522a10f5d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "86b387d8-f337-4336-9340-17150adcbe43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30239ab-4b79-4047-9dab-b3c61874dcda",
        "cursor": {
          "ref": "a63c6452-7c18-4ef2-8b20-e1c6198ab378",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a7f2d2c0-a14b-45fa-98c4-b16e3abac9a6"
        },
        "item": {
          "id": "d30239ab-4b79-4047-9dab-b3c61874dcda",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6db76e03-734e-4bb7-a751-5c4f7ac1d1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b856a1aa-bf78-477f-8995-1345743f9188",
        "cursor": {
          "ref": "06f6014f-4ee5-4d1e-bce7-c54a5b455d8b",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ff77fdbd-d54b-4754-b058-18581bdce86d"
        },
        "item": {
          "id": "b856a1aa-bf78-477f-8995-1345743f9188",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6cd3cca7-aff4-4b8d-91c0-f48809eb5946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d660528-6c4f-49b4-a386-7a6605416781",
        "cursor": {
          "ref": "8ce01fcb-e8e2-4916-8a77-50d79fe55458",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "30280e89-fcfd-4109-a884-0a3c42df02d3"
        },
        "item": {
          "id": "5d660528-6c4f-49b4-a386-7a6605416781",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a4b5d94e-627f-42cf-919e-d6f4fb98e9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b3967d-8e04-4ebb-81c3-7d92d978ab1b",
        "cursor": {
          "ref": "5375997e-eeb8-4347-849f-2ef1feee9267",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "41c80a54-81f4-4a3d-b9d6-a98acbfe8794"
        },
        "item": {
          "id": "a4b3967d-8e04-4ebb-81c3-7d92d978ab1b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8430cb25-f805-428f-90fb-df18997fe9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8af266f-cfdb-411b-8f00-8adffd5b0253",
        "cursor": {
          "ref": "c3e56b15-4f6f-4ea7-9bb3-2a92fccd6ba2",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "702e74c0-cebc-41aa-ab34-1c1dafa4bab0"
        },
        "item": {
          "id": "a8af266f-cfdb-411b-8f00-8adffd5b0253",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b81fc9b2-7b54-4cbc-a0dd-0414f5acd694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b76affa8-923e-4094-bff6-4515eebf30c8",
        "cursor": {
          "ref": "0b4df1db-e70c-4b6c-b1d2-bd1a5adfcc78",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "87ac7732-6fe3-4822-95d2-0b40f024dd2f"
        },
        "item": {
          "id": "b76affa8-923e-4094-bff6-4515eebf30c8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2cd06f60-ec6a-4bf6-8f71-17d2c60968e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "1aac459b-3ab2-476d-b004-b58e4cef5348",
        "cursor": {
          "ref": "91e90f59-12f2-4369-afb0-e4df4893cdf0",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "500e389e-8588-453a-ad3b-e6d6bf18bc6e"
        },
        "item": {
          "id": "1aac459b-3ab2-476d-b004-b58e4cef5348",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dcdbc4b0-26a8-46f2-92cb-63cd0ea67656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "71cca81f-5a6a-463f-a0d3-589386aefde5",
        "cursor": {
          "ref": "781c1c7d-97a2-460f-8e51-86d4dab79714",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b7624063-a4dd-45de-84a3-e9236fbd7131"
        },
        "item": {
          "id": "71cca81f-5a6a-463f-a0d3-589386aefde5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "aaaa70a9-c072-4b5c-977e-377dd941f446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d964dcef-8bf2-41c5-997e-a6a9c70a738a",
        "cursor": {
          "ref": "01468857-e091-4a72-98a1-5699bd0b0d19",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7f21b469-7c6e-4d2f-aa47-0ef9cb551980"
        },
        "item": {
          "id": "d964dcef-8bf2-41c5-997e-a6a9c70a738a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8fa416b4-b589-44ea-a915-3a54d27d29d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "9f18e024-6c29-4edf-99c0-8db0d8e244ee",
        "cursor": {
          "ref": "4c36a411-7e28-4d34-b4fb-01c752b98fc6",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4de2ca41-c891-4a4c-a706-6ae4e1d18138"
        },
        "item": {
          "id": "9f18e024-6c29-4edf-99c0-8db0d8e244ee",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ad9d8b8b-04d1-4442-a762-e1cb78c86051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "87cebe16-5f69-4716-9d50-f4c3030d338e",
        "cursor": {
          "ref": "8c5d8a90-977c-4488-ad37-f1f1d74b5051",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e6e36752-172a-4ad4-b570-3a8479aaafa9"
        },
        "item": {
          "id": "87cebe16-5f69-4716-9d50-f4c3030d338e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ed4fedbd-717a-4379-9f09-acb14dc6f7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d8e252fe-93ff-47cd-a7ef-629993b554b5",
        "cursor": {
          "ref": "2d68b225-a643-4ff6-8846-855e2c9eabcb",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "735649d8-cd4d-42d0-9dad-3e21865b5847"
        },
        "item": {
          "id": "d8e252fe-93ff-47cd-a7ef-629993b554b5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0a303ea4-3890-478b-93eb-92497a3f4146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e4e411-e409-416e-8ff2-15900bd208c0",
        "cursor": {
          "ref": "3cf35abf-8391-4d0d-84ad-ee0cb4c47aa7",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8a281e58-e393-4dc2-9bf6-239876f66b94"
        },
        "item": {
          "id": "56e4e411-e409-416e-8ff2-15900bd208c0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "05bf07b9-cc38-49e4-aca6-ceae4c4a33d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5518318-7e70-4af9-a82c-76bdf3eae435",
        "cursor": {
          "ref": "d9d1d31c-24b9-42d3-97b3-0fe872936c9b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e9e363c7-e596-4c9f-afb8-f471c81dbb81"
        },
        "item": {
          "id": "c5518318-7e70-4af9-a82c-76bdf3eae435",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "39666f24-5a24-4bfe-ac7a-8b1e650ec141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd88af7-5c0f-4ab9-a4a4-7f735ab4f958",
        "cursor": {
          "ref": "7b9b6f8f-7faf-4ca9-86fd-c48b3d15d040",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8d34f0e7-558d-4c8e-98ed-a2e157c3f0c4"
        },
        "item": {
          "id": "5cd88af7-5c0f-4ab9-a4a4-7f735ab4f958",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8cdea523-1c99-4b63-b7fe-898587361b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca10337-06ff-4da7-841f-e0ebd17e7e96",
        "cursor": {
          "ref": "bc65982e-5fe6-4a31-9b90-a50d886dd4ce",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4abc0de2-6a98-4236-ad4c-3b87f3e0011b"
        },
        "item": {
          "id": "9ca10337-06ff-4da7-841f-e0ebd17e7e96",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "62d6abea-4342-44fd-a661-58c88b060653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736f4686-6d80-4df8-9154-894a37f45215",
        "cursor": {
          "ref": "0c8a1a89-85ae-408f-bb61-792f24c8dcde",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "38662e5b-c1a8-4e72-a122-4fcca482df52"
        },
        "item": {
          "id": "736f4686-6d80-4df8-9154-894a37f45215",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "55d44997-85a5-4280-b29b-6a90703a3364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eefbb0e-c00d-45b1-9030-f066230e45fc",
        "cursor": {
          "ref": "e07bb122-8dd0-408f-9d61-1c2b27e1f42c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2c3e2905-c502-4e3c-8494-4827f86fdffc"
        },
        "item": {
          "id": "4eefbb0e-c00d-45b1-9030-f066230e45fc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bf458204-43c1-4cff-9724-a9b915111dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33f25b1-8ce2-4cef-8d51-acbd889a0039",
        "cursor": {
          "ref": "f2d11f07-4e0a-4346-8356-e59e8b36c859",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5236411e-46fa-4822-9087-34e8a59d7399"
        },
        "item": {
          "id": "a33f25b1-8ce2-4cef-8d51-acbd889a0039",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "68ffe1cc-bbb7-4191-a663-df064d9e7fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bd9b1e-abbe-4420-bb56-911d5d69997d",
        "cursor": {
          "ref": "583a342f-8a62-48a7-bb67-6ac8dcc25f03",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "65a8d0a8-960b-42ab-86c7-0c79fe805df3"
        },
        "item": {
          "id": "b1bd9b1e-abbe-4420-bb56-911d5d69997d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4e1bddf6-33a5-4529-9014-eb3ac48ad0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfdf7b3-4625-4c1d-9c6e-8f9aae59f6ab",
        "cursor": {
          "ref": "cbefe355-74ed-445b-922e-2564b7c9b5fa",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e74d3c79-8eef-4af0-9f80-45efc8a20cd8"
        },
        "item": {
          "id": "dbfdf7b3-4625-4c1d-9c6e-8f9aae59f6ab",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "69add311-1c5e-4353-89af-b790e8a0a5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a867516-9ea3-49df-92d4-3be0804edcc5",
        "cursor": {
          "ref": "5f9f1cff-0615-4e39-90ef-d88a05606b3e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "90bc1f71-4323-4984-9a9c-a494ecb6088d"
        },
        "item": {
          "id": "0a867516-9ea3-49df-92d4-3be0804edcc5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d8964356-e74b-434a-9cb7-51ec80b59e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a23964-8604-4459-9b9e-b1525d0bd45c",
        "cursor": {
          "ref": "2f0a4b26-1489-4c2d-82d3-ac91565ea4de",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "35d845fe-343e-4c23-8a86-2d76ba63b659"
        },
        "item": {
          "id": "39a23964-8604-4459-9b9e-b1525d0bd45c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7ec95113-a01e-410b-a321-d2fae7fd26aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d4a92e-7edf-420b-94ba-dea440f26edc",
        "cursor": {
          "ref": "4479ce8e-0d3c-4921-a923-f2175f31c70c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "551a0b9c-7fa2-4a9c-896a-765f421de423"
        },
        "item": {
          "id": "c5d4a92e-7edf-420b-94ba-dea440f26edc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "78694d95-cfcc-43a3-8462-ae3d79459d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc4391c-f15e-4e65-b2bc-fe859c05dcc6",
        "cursor": {
          "ref": "543d81de-5ed3-4889-8dd5-ee3c54dd69a6",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0a113ae0-5cda-4de0-9da9-ef3e30cda946"
        },
        "item": {
          "id": "1cc4391c-f15e-4e65-b2bc-fe859c05dcc6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "280ebe38-e9f8-49e2-965a-48de30731a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df96b24-7ca1-483b-ade8-0b1c387cc5b6",
        "cursor": {
          "ref": "73db88d5-cded-4685-ad66-927b4b3880b7",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "57250277-c3cc-415c-ad25-c16bc5b78204"
        },
        "item": {
          "id": "1df96b24-7ca1-483b-ade8-0b1c387cc5b6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "941ef616-7afb-43e6-b70b-2c0a45d75f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc500f7-35cb-41a9-8e4c-c92e68275c3d",
        "cursor": {
          "ref": "742fd445-4f97-4c58-98c3-58c02827cba1",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "11d6777f-1625-43fb-96b1-b97cb1ac1e30"
        },
        "item": {
          "id": "0dc500f7-35cb-41a9-8e4c-c92e68275c3d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3fbcb3ca-75de-4ab4-b413-5ab36ee0617f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06911ce7-030a-4176-bc8e-265741ef3597",
        "cursor": {
          "ref": "07ec1e7b-933a-4c08-9752-1d51c19fd194",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5feee71b-1e40-4f11-87ca-698f147759e8"
        },
        "item": {
          "id": "06911ce7-030a-4176-bc8e-265741ef3597",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "59af7f6e-d549-491d-ae2d-3728f3cac0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b70210-8859-4b27-88c4-cf10cb0e3339",
        "cursor": {
          "ref": "872ed2fe-124b-4f5f-ab1f-42fabeeec011",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "af675c72-42e3-451b-a150-7cfedffda9a8"
        },
        "item": {
          "id": "16b70210-8859-4b27-88c4-cf10cb0e3339",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "78734b82-15c4-4ce2-96e3-2e71eb98cad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130cb9ab-3fc7-49a9-a605-082ca2b5fab7",
        "cursor": {
          "ref": "bb838f6c-7f52-404e-8898-2215548384af",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1829a09c-3702-4618-956f-04541613924c"
        },
        "item": {
          "id": "130cb9ab-3fc7-49a9-a605-082ca2b5fab7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d07d3129-de42-4d0c-b6a6-c56f71c175fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f890a79-cab3-41c1-9329-f39393661246",
        "cursor": {
          "ref": "72d50bba-81f5-4bb5-b9ed-5192204116e1",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c0431153-2601-486f-8462-70d2bdc3f680"
        },
        "item": {
          "id": "8f890a79-cab3-41c1-9329-f39393661246",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8fa089e0-4ea7-428f-ac86-79386295f55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52141d7-e333-47f5-9faf-dbc141fae3f2",
        "cursor": {
          "ref": "e2186724-1056-485f-a17f-eee1de4d9225",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e46fa088-86fa-4369-84a6-e8f7e75eefff"
        },
        "item": {
          "id": "b52141d7-e333-47f5-9faf-dbc141fae3f2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ce504bc6-e068-4b2b-bbd1-44d7210000f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b701e742-78f7-4994-8e47-5034e55eb119",
        "cursor": {
          "ref": "786ef73a-8c31-49da-b490-b6c39336ab9b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d4ee961e-5700-4f11-9875-4f6f43194e81"
        },
        "item": {
          "id": "b701e742-78f7-4994-8e47-5034e55eb119",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a952e6d8-962a-4027-93f1-4290d778f4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9c786d-8265-417b-a184-51f4dacf2536",
        "cursor": {
          "ref": "8c7c38e8-9d82-4116-bb37-e3715d755053",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8fe908a3-a963-42b2-a5b6-adf1856e7719"
        },
        "item": {
          "id": "ec9c786d-8265-417b-a184-51f4dacf2536",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3f1e4f3b-86d5-4291-9c58-24e7031b1953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd220f7-5928-4752-9f09-0d4da36fca93",
        "cursor": {
          "ref": "27294a33-7b2c-4e25-a96f-9af0e8056df7",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2e8ac32c-9125-4050-addb-cfaf45a79566"
        },
        "item": {
          "id": "9dd220f7-5928-4752-9f09-0d4da36fca93",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a1cc65da-77d2-4661-82b2-64609e036565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e77654-eede-43b3-9d97-e33754a9c590",
        "cursor": {
          "ref": "fbd00786-6483-42dc-a93a-e94380099fa5",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b6fe74b6-eff5-4277-97ad-85e797e648ef"
        },
        "item": {
          "id": "c7e77654-eede-43b3-9d97-e33754a9c590",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f8f88f9e-f44f-4014-9342-cee426da6ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebcbde7-c966-4dad-bc31-1a02df0ec904",
        "cursor": {
          "ref": "35a90553-bfc5-4aa9-9413-5ad84065fc36",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fd4bf049-5e56-438a-98ec-c2881e97e7fc"
        },
        "item": {
          "id": "1ebcbde7-c966-4dad-bc31-1a02df0ec904",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5bb38312-5fd1-427a-a60c-514a2a60b106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f42a30-e222-4fbc-afd6-f5394e589264",
        "cursor": {
          "ref": "d346021e-1301-4245-80ec-e7b1cffd1065",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "079c9d9a-946c-42dd-8ef2-15ac51087cc9"
        },
        "item": {
          "id": "91f42a30-e222-4fbc-afd6-f5394e589264",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "052ba77e-d1b4-4e0a-8c7f-8c49d52c082b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b47ea9-676f-4522-9d4b-3ed89d031328",
        "cursor": {
          "ref": "1cd74d9b-8b0f-4613-ae73-8ef09f3eb556",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "38606801-f27c-4321-99ef-96d7ea6d3c28"
        },
        "item": {
          "id": "c4b47ea9-676f-4522-9d4b-3ed89d031328",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0fd535a9-5a76-45ad-937a-90dcc6d4be70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf89c03c-87be-4114-b5e8-cd485d1a02c3",
        "cursor": {
          "ref": "2a49ff72-5849-4f3c-b976-66439ae98748",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c488d809-3a85-4cf9-9b53-d3cd590a7960"
        },
        "item": {
          "id": "cf89c03c-87be-4114-b5e8-cd485d1a02c3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "46cd0e05-d730-4921-bb8f-3bb501046be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2467bdc-4c70-463a-9e9c-8892836a3dcd",
        "cursor": {
          "ref": "fba77321-c26c-42d2-9dea-00cd0b521c40",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "14683ecd-e30a-4560-a2ae-0ef2edd60910"
        },
        "item": {
          "id": "c2467bdc-4c70-463a-9e9c-8892836a3dcd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "00084dfe-c42a-4be3-a1f5-e641417aeca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9eb9763-bd80-41bf-b905-3efddc03b8ad",
        "cursor": {
          "ref": "9a633728-a66b-4d47-9a3e-9d962fc2694c",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "eba67986-19c7-4476-b1c2-b5bec1268881"
        },
        "item": {
          "id": "a9eb9763-bd80-41bf-b905-3efddc03b8ad",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "67b2455f-058d-407d-941c-1cabf7355eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f1c80c-5dc1-4994-87e6-23cb48c3033b",
        "cursor": {
          "ref": "f74ebcc3-f669-4770-8f7e-dd5b4146e8c7",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b8c837af-e1af-44f9-bb0f-d7763a42898f"
        },
        "item": {
          "id": "64f1c80c-5dc1-4994-87e6-23cb48c3033b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "11cbe9e7-bcd6-4473-8565-c2597fc5b244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa16c349-01c5-4cc7-bb1d-0ef3558d5347",
        "cursor": {
          "ref": "551e0ada-7f89-404c-a17d-7a8669582a0d",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "096d8df2-c924-4d72-841a-39bc10d1a36d"
        },
        "item": {
          "id": "fa16c349-01c5-4cc7-bb1d-0ef3558d5347",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1907402f-a3aa-4c68-b6de-a803660c537a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0179e586-418f-482a-8d31-16be4247435d",
        "cursor": {
          "ref": "8603e2dd-9e92-4d97-8037-a5bd16c254e3",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1cace9ea-79f2-45ed-ac05-6ca34df82dc1"
        },
        "item": {
          "id": "0179e586-418f-482a-8d31-16be4247435d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "dde06e1b-5268-48d4-b981-91e75b10d940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2dbca11-0249-4905-a483-4b154dc7a581",
        "cursor": {
          "ref": "d84156c2-bc7f-4f0d-87f7-466ca68d69a6",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "354906c3-4312-49cf-b306-e6893b470431"
        },
        "item": {
          "id": "a2dbca11-0249-4905-a483-4b154dc7a581",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "74dcb371-38d3-43e9-a44b-a2b64ea884e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe9283d-7cb2-47e7-8939-04f47b580b85",
        "cursor": {
          "ref": "9eee8a7a-6c5c-4f51-a959-e01f089bffff",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "281d5d74-edc5-4606-88ad-2fdb0906da68"
        },
        "item": {
          "id": "7fe9283d-7cb2-47e7-8939-04f47b580b85",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "57592b3a-0fce-4cc2-94fb-f50ce69aa0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb4e92b-40db-4e0f-bcb4-d555605913db",
        "cursor": {
          "ref": "408ce08c-1a58-4fb3-8732-65ffd2bc57d8",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9f22e40c-8561-4c39-ac88-279a3805e7e2"
        },
        "item": {
          "id": "5fb4e92b-40db-4e0f-bcb4-d555605913db",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0e26519e-4f77-4aa4-9ddc-a0fe7e82b5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e134d1b-4e1e-4d6d-802d-79e00edcbf1f",
        "cursor": {
          "ref": "639d527f-98df-489c-9fe3-40f80c934881",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5817b5dd-defa-4684-98c1-9856fc28ab81"
        },
        "item": {
          "id": "0e134d1b-4e1e-4d6d-802d-79e00edcbf1f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "14ea8df8-891b-441b-9e58-5498e3303baf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dc69b9-6b07-43a1-b4cd-a295dd0c3a80",
        "cursor": {
          "ref": "3ca8aa05-62ad-49a9-8103-7f71919e4af6",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "68eff40d-9c93-4e4b-9ea1-d251edb214ad"
        },
        "item": {
          "id": "b6dc69b9-6b07-43a1-b4cd-a295dd0c3a80",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c3fca950-94ee-44a2-8a31-7a7f9b4cdc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb0a571-5063-4ed1-9386-145434261134",
        "cursor": {
          "ref": "a8beabcd-c3c1-4cc8-a692-ac89d612f339",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ffec9104-8c8e-478a-b4f1-41e82185b39b"
        },
        "item": {
          "id": "afb0a571-5063-4ed1-9386-145434261134",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3fa043ff-1fb8-47fc-bed1-7cda26a9a586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdf7d68-6054-473c-a81a-851008b801a7",
        "cursor": {
          "ref": "fb013fe9-eb23-411a-bd93-4ad865d38014",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3196ec49-1e8a-49fb-a179-d021e8958468"
        },
        "item": {
          "id": "afdf7d68-6054-473c-a81a-851008b801a7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6623a8b7-3ff8-463e-a009-ed12a9f133d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570a9ffb-d633-4cab-a0f0-6cd5292e2bcb",
        "cursor": {
          "ref": "d2c8dced-349d-491d-8e86-b6cad229bba1",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4e5d7ecd-a14d-4675-ba46-6a0bd57d04d6"
        },
        "item": {
          "id": "570a9ffb-d633-4cab-a0f0-6cd5292e2bcb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4edd3b0d-8d25-4147-8858-b28cc55c09f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71856dd-e0d6-42a3-8156-82f61820a333",
        "cursor": {
          "ref": "ec433b61-7176-4cd5-864c-932f5b2c92e7",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4c6dda5c-57fe-40d5-b762-fb2d8f20bb75"
        },
        "item": {
          "id": "d71856dd-e0d6-42a3-8156-82f61820a333",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e899bda4-f80d-4d68-b5f2-d073a7d5eae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b5cfa1-99f3-4760-8a1c-9e9e2a73b261",
        "cursor": {
          "ref": "de549413-abaf-4cc7-8096-a47fd3dcde84",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7d7955b5-af7a-4f60-8b48-f924a1a50fce"
        },
        "item": {
          "id": "77b5cfa1-99f3-4760-8a1c-9e9e2a73b261",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "94f40f2b-c777-40ec-9e4f-5edd54e74a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cc0250-6ea8-42a7-b26f-417805f42a21",
        "cursor": {
          "ref": "cf374006-115d-4197-86ff-537db48a942a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0b0150ca-297c-4cdd-9698-28ff2a775630"
        },
        "item": {
          "id": "20cc0250-6ea8-42a7-b26f-417805f42a21",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "70409599-8652-4ed8-a8e6-0d37b15efea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcea924-9002-4351-b75b-3ec76d597631",
        "cursor": {
          "ref": "82f5d611-4c64-4383-b433-0023c7dd209a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8c97ae97-6510-4bf9-b8a5-39d2837c8683"
        },
        "item": {
          "id": "2fcea924-9002-4351-b75b-3ec76d597631",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "27927ae2-4917-4ed0-80c5-8a70ae7db068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa6cdcf-1486-4511-ad1c-ea8c28b71e0f",
        "cursor": {
          "ref": "591b9e52-2467-41fc-bf15-c7527dad90b1",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5380860a-41c4-41cb-9a5c-262fa16f7b06"
        },
        "item": {
          "id": "0aa6cdcf-1486-4511-ad1c-ea8c28b71e0f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2e5e66b1-26e8-4959-901c-36f92c949a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038ea736-e72f-4d00-88ab-a4e4e68b9fd2",
        "cursor": {
          "ref": "333233f3-6c06-43af-8447-29fce8e467df",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "576b04f5-15a3-42ce-aff8-ae6c0ff85450"
        },
        "item": {
          "id": "038ea736-e72f-4d00-88ab-a4e4e68b9fd2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6a0235f3-6b11-4168-b689-82b14be16909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b171528-20e4-4e5b-9bff-4527c9810603",
        "cursor": {
          "ref": "ca7d5f98-c70b-4e76-a462-dd1d819c9702",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "aa080f99-d350-45e8-bfa7-23962cfed678"
        },
        "item": {
          "id": "6b171528-20e4-4e5b-9bff-4527c9810603",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "91c144e0-f9c8-4df4-a8db-9dd9a4717bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5aaa3b9-bf6f-46c2-864c-855abf227d36",
        "cursor": {
          "ref": "6329b6ff-fb92-4f3d-9d9d-111f2b16ba91",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bac049f1-84b2-4945-bc8a-6ef3081d12ca"
        },
        "item": {
          "id": "c5aaa3b9-bf6f-46c2-864c-855abf227d36",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4e98dc19-167f-4652-9bbf-6df2a496cff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da5ef04-6400-43dc-bd26-e6b08bf630a5",
        "cursor": {
          "ref": "3c7c9919-6067-404b-b7f4-d9f0217c26a7",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3c2bbafb-462c-40ca-8d29-791af814bb86"
        },
        "item": {
          "id": "0da5ef04-6400-43dc-bd26-e6b08bf630a5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8790fa63-707c-49b5-aeb5-84bc4e4012ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2db2987-ad78-47dd-b042-8c54d47a18f3",
        "cursor": {
          "ref": "b946a0e3-f1d9-417a-b706-7f5d3bcb60ac",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f3a0b6bf-adb1-4742-8f0f-9a7c28e96769"
        },
        "item": {
          "id": "d2db2987-ad78-47dd-b042-8c54d47a18f3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "266485e6-aacd-4515-86b9-9abfddda1247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc61348-14d6-445b-98a2-cbf7e9954e4f",
        "cursor": {
          "ref": "74e2fad7-03ba-4aa1-b98c-fbfcab4cf6ee",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6ab2afa1-107a-48ce-baba-96754ddda908"
        },
        "item": {
          "id": "4dc61348-14d6-445b-98a2-cbf7e9954e4f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4ce24d8b-f759-46aa-88ee-ca314fe1beb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfe10f2-e945-4499-ac62-d6221e746e8d",
        "cursor": {
          "ref": "cc89747b-34a2-456f-ac38-6a887d8f8fe4",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "40e2da24-6987-4999-b341-d7d08bf76511"
        },
        "item": {
          "id": "dcfe10f2-e945-4499-ac62-d6221e746e8d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5a908950-fee1-47a6-8e0a-587e0409c25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8bceb1-a19c-4a40-a114-fc635ca5a6a5",
        "cursor": {
          "ref": "b1edf0b0-53b7-430b-b1bc-9c91f4ee800f",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a965517f-ea91-4732-8e50-df06169684a6"
        },
        "item": {
          "id": "ac8bceb1-a19c-4a40-a114-fc635ca5a6a5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7a4733b3-c551-4c51-90e5-0b0db9feb7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511d1833-1018-45d5-a5fc-f22095336ecc",
        "cursor": {
          "ref": "1909396d-fd97-465e-9284-db1898c7a14e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "48bd1156-d4de-46c4-9c38-5aeafc85f8ec"
        },
        "item": {
          "id": "511d1833-1018-45d5-a5fc-f22095336ecc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ea2b580d-f654-4aa2-94a0-4727ea1f20a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd0cb8c-2a6b-4d60-ae7c-04ee2988e1cf",
        "cursor": {
          "ref": "2335f5d2-3d30-4892-880c-5afcd78213e7",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "64ac52bb-1f83-4df3-b9f7-c38526c14397"
        },
        "item": {
          "id": "3dd0cb8c-2a6b-4d60-ae7c-04ee2988e1cf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0d59079f-b7f7-47cb-b3f6-b1a15dd8e305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59059563-28d3-4e3c-be65-8c535f3c9d6f",
        "cursor": {
          "ref": "63c92714-4560-4113-b194-3255800918ee",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d2acc0fd-e13b-4967-9bcf-5cd5318bd4f5"
        },
        "item": {
          "id": "59059563-28d3-4e3c-be65-8c535f3c9d6f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "48a33bcc-52ac-4e80-b127-dab1a4314b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1a0d7d-6141-41cf-949a-aee6d0826db8",
        "cursor": {
          "ref": "b2468f80-98de-4737-ae06-e8603dea3fc1",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f1e0df6a-bdfe-4fb3-b9e8-3de79ae9804d"
        },
        "item": {
          "id": "ca1a0d7d-6141-41cf-949a-aee6d0826db8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "41f0f017-d28b-492a-9b21-1da6353b7968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb129a89-3344-4012-b932-d984c7cad4fd",
        "cursor": {
          "ref": "b4630dcf-a2c1-4229-af97-dc8f89d9c1dc",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cd364d1d-82b3-421f-b17b-640ae8c86b1d"
        },
        "item": {
          "id": "eb129a89-3344-4012-b932-d984c7cad4fd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "aa5457b0-de3c-4241-8cdf-fc6ed4e19dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cc84e8-6b16-4cfb-8f71-369a0783f39c",
        "cursor": {
          "ref": "adeae93b-3b1b-4876-ba75-5912a1e83ec4",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0383d2df-2fe4-438e-81bf-66c0926b79c9"
        },
        "item": {
          "id": "24cc84e8-6b16-4cfb-8f71-369a0783f39c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "eccc08de-97c5-4b19-b1c9-12062d959cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49836d62-7fd6-460d-a68d-5fcfb9798ce3",
        "cursor": {
          "ref": "d22461e6-1ee6-4759-907e-1287dc68edc2",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a83656b9-63b4-454e-aaf6-3ef2e381fd19"
        },
        "item": {
          "id": "49836d62-7fd6-460d-a68d-5fcfb9798ce3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "86dfd614-3b22-495c-b023-6d70612d71d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cdb1b7-9f0a-475c-8a38-5278b7b8e9f5",
        "cursor": {
          "ref": "7d9a8b9d-d6c1-4b0b-bed6-fcf0d9422c1a",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1f5054b6-de59-4316-a2db-a176f99417d8"
        },
        "item": {
          "id": "d1cdb1b7-9f0a-475c-8a38-5278b7b8e9f5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "569e4175-bef1-4870-b747-523be2ac9e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fec1ef-ac3a-4a2e-90d0-f5fcc4100d97",
        "cursor": {
          "ref": "e55e00ae-129e-476c-857f-63906866e615",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9c462200-0a3e-47ea-b8de-8a718f7af357"
        },
        "item": {
          "id": "90fec1ef-ac3a-4a2e-90d0-f5fcc4100d97",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "79d960fa-02ae-41c4-9fef-0df0e4b54f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aadd7e6-b956-421e-8d5b-a2b087b1d55d",
        "cursor": {
          "ref": "12f4a939-1d87-45e0-a357-b3d89896a600",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c9b9c9cd-f352-4f7e-bab3-0fd6a23ded2c"
        },
        "item": {
          "id": "6aadd7e6-b956-421e-8d5b-a2b087b1d55d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a97fdc48-029d-4584-9751-151aba95805d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21befec9-c913-41fb-92db-65ad8b062238",
        "cursor": {
          "ref": "ccc043e9-ae06-4788-bb26-0fb4eaec0fbf",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "560ff61d-6450-443f-ac81-2a2b340a5664"
        },
        "item": {
          "id": "21befec9-c913-41fb-92db-65ad8b062238",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "433bdec5-f4f9-42a7-8ddd-ad9ac35b3cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f076b047-c110-4615-bd78-173431af819d",
        "cursor": {
          "ref": "fcffe3c6-7aca-4423-9474-4844087994b6",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "29006835-a111-42ae-9a15-8b1df3d7b2eb"
        },
        "item": {
          "id": "f076b047-c110-4615-bd78-173431af819d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d18f8b73-1963-49e4-bf04-575fbc39b1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2f5843-0961-4591-bd0b-b43df304f155",
        "cursor": {
          "ref": "0d052d2b-fbf6-4873-9a8c-a487822ff37d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "90928ef3-fa24-4922-abfc-f78a39b6cb24"
        },
        "item": {
          "id": "4e2f5843-0961-4591-bd0b-b43df304f155",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2e8a0baf-158b-42e2-a8c7-d5e5e5c1e7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85d9da9-702e-4e87-9679-12931a54eb8c",
        "cursor": {
          "ref": "c0cadcd6-94b1-448f-a4ad-54a57853fde0",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3e9b3edd-9793-4eb9-833d-d70e5ed58ece"
        },
        "item": {
          "id": "b85d9da9-702e-4e87-9679-12931a54eb8c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d7b6e6b6-a55f-46f0-8433-0c1535413349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d55297c-69d9-4858-9010-9007e1d02df6",
        "cursor": {
          "ref": "c5bccacb-185d-4044-b3c5-f3485252dc73",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "77e072fe-dd57-41da-a438-fec9eb78ca1f"
        },
        "item": {
          "id": "1d55297c-69d9-4858-9010-9007e1d02df6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "92446e5b-3525-420a-b03b-bf120f8c0ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4a4056-63c9-4b31-8ac8-e0044a4982b9",
        "cursor": {
          "ref": "bdffb1ac-907f-477c-b0d3-6f0cbd9435c1",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d2dbcb83-b4ed-44d2-8991-1b1c4279384b"
        },
        "item": {
          "id": "7a4a4056-63c9-4b31-8ac8-e0044a4982b9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5f52c7fd-2a08-4be0-ae74-64546c704db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3214341a-a5d9-4e0a-8429-851011c7d380",
        "cursor": {
          "ref": "7d33bceb-fad2-47ee-8e5f-3cf558d81bfe",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5ced394c-c853-4504-a590-1ba1d23b9537"
        },
        "item": {
          "id": "3214341a-a5d9-4e0a-8429-851011c7d380",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4818ceac-a12c-4122-8199-200f76c4459b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3e7be5-723a-4dbc-b0b4-88e255fff4c4",
        "cursor": {
          "ref": "1d362a6f-bc14-4714-a98a-b04b9a239387",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ec9ede8b-83b5-4a90-9f67-01e4b6155648"
        },
        "item": {
          "id": "7a3e7be5-723a-4dbc-b0b4-88e255fff4c4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b6de36b5-000e-4bdd-a3b7-9b45ceddb709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258e0373-e896-4119-965b-7caf2411d264",
        "cursor": {
          "ref": "fbb44081-aa50-40fb-ad60-5517b88e06e3",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bbb60acc-fe2e-455e-83bb-a7c822362555"
        },
        "item": {
          "id": "258e0373-e896-4119-965b-7caf2411d264",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9421e72c-1020-45b5-a99f-fb830b744cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc96d3a-0077-4a2a-a2f3-a52cf2900ad7",
        "cursor": {
          "ref": "c8abcd7a-fc91-40c6-ab26-0a985d117e59",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "deb08539-2d6f-4d34-b347-d1d4a17f3293"
        },
        "item": {
          "id": "abc96d3a-0077-4a2a-a2f3-a52cf2900ad7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "75b47480-6967-498b-b45c-2029fc98da68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ff2fda-6895-4554-9953-f79fbdd1ef4e",
        "cursor": {
          "ref": "e67c32ba-cd5c-4a67-9d65-be3246777168",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "65d39183-4566-4675-884e-5fb085d9f95c"
        },
        "item": {
          "id": "38ff2fda-6895-4554-9953-f79fbdd1ef4e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ad3285ca-d717-4a90-a1d4-644b8460cf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8825c035-6966-4e78-954f-16cafb27c8e7",
        "cursor": {
          "ref": "240cfe4e-f7a3-480b-868a-0ca87c384940",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "92f04cae-bc10-49f3-910b-340b9a1a1701"
        },
        "item": {
          "id": "8825c035-6966-4e78-954f-16cafb27c8e7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0283fecf-a5a6-48b3-89ca-a7154d568c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167998d2-24bc-443c-8c87-3a9acd57466e",
        "cursor": {
          "ref": "165dc9d0-115f-4064-8e46-41231ae95007",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bbbaa9d8-8b08-465d-8f5d-e4e959e10aa7"
        },
        "item": {
          "id": "167998d2-24bc-443c-8c87-3a9acd57466e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e2bae8c8-d05f-4c69-bcc6-b1c7df77c33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdfc2bb-3a18-44bd-9d54-4257eec35d6d",
        "cursor": {
          "ref": "34172120-cf4e-4189-9275-19ad1975f190",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b4c87048-697f-4363-be90-0cef7f13a73b"
        },
        "item": {
          "id": "dbdfc2bb-3a18-44bd-9d54-4257eec35d6d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ed6e3492-4b7f-47b0-97bc-a2961c874aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc985a93-c4a8-4373-bbe7-f8c9b44d55dc",
        "cursor": {
          "ref": "48513e7f-1e42-4a25-8956-30ec944a4bf8",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a41ba2b3-22b7-4272-b89d-9b5b97906f29"
        },
        "item": {
          "id": "cc985a93-c4a8-4373-bbe7-f8c9b44d55dc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bea82777-b058-402c-8216-75415f220726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a816a6-d3cc-4aaf-b42a-983e7cf14d2e",
        "cursor": {
          "ref": "6c4fde56-ce8e-4f7a-8aeb-fcd4cdd55406",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0d3fc27f-5d0b-4350-b5f7-1baff12b9411"
        },
        "item": {
          "id": "e1a816a6-d3cc-4aaf-b42a-983e7cf14d2e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bb9b7a65-0567-4159-b180-2ac2e87602a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b581f9-b00a-4ac7-94b6-01fbb9de221e",
        "cursor": {
          "ref": "a3f372bd-e9a9-4702-a66a-f239e2b087d2",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "03ba5117-9550-49b2-8699-ec1951a32402"
        },
        "item": {
          "id": "94b581f9-b00a-4ac7-94b6-01fbb9de221e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8e1e5f3a-b43d-4e2f-ae50-ae5f14289bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4b3d3a-7b84-4132-aca5-a8a3039ac939",
        "cursor": {
          "ref": "5581bf94-3604-4046-9789-327d8bda8267",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "95b8a765-8f01-4cd6-a431-d854c1434c8c"
        },
        "item": {
          "id": "7b4b3d3a-7b84-4132-aca5-a8a3039ac939",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cd6cc33e-c1de-4ac6-8fa1-8d1b2f42b319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135bc186-f574-41f8-99f3-8dec67cdda45",
        "cursor": {
          "ref": "3b369f65-20d6-463e-914d-2438f2791340",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6a6a0868-3ef9-4647-b300-1edfd775c31b"
        },
        "item": {
          "id": "135bc186-f574-41f8-99f3-8dec67cdda45",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3605732b-870d-4ff0-9609-cb6fe94a9eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b523b014-154c-4831-a5ff-ba2cae9d29a4",
        "cursor": {
          "ref": "bbc8ae63-407c-4b97-a379-cbabb7cce0ff",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9c7e9267-4372-4365-964e-766a4a0b6325"
        },
        "item": {
          "id": "b523b014-154c-4831-a5ff-ba2cae9d29a4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0c9b173d-6c2b-48e7-985c-b0923a12d71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2154c28e-215d-42e9-9393-b2f19386aed9",
        "cursor": {
          "ref": "7335766c-c632-4f8a-a454-abb6234d50f4",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6aed4bc9-f777-4cb4-aa65-8791988dd637"
        },
        "item": {
          "id": "2154c28e-215d-42e9-9393-b2f19386aed9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "caa83e60-3af8-40ae-8bbb-7544dca98fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e51e5f2-da25-47b9-a713-ff7efe67ba2e",
        "cursor": {
          "ref": "5992a592-a23d-4b68-9596-df95115bb7aa",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "49ba8426-aaf2-47d5-b366-947869bd1f61"
        },
        "item": {
          "id": "3e51e5f2-da25-47b9-a713-ff7efe67ba2e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3896ce32-179b-45e8-9720-2781029d0fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dfb63c-fcb3-4775-a7b3-46e03a7785e2",
        "cursor": {
          "ref": "715f5e5b-2dd7-4095-ac3e-075b96ce0a9b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b53c3938-56f4-49c1-b30b-de5e9efa3d17"
        },
        "item": {
          "id": "17dfb63c-fcb3-4775-a7b3-46e03a7785e2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "662401c8-9397-4063-9596-40f7009ec7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b157ca52-d36e-4e30-bdad-163a53ffa0d1",
        "cursor": {
          "ref": "0a8f266b-4088-4e22-8b9e-e9f1d8ad17a6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "15c166a0-cd46-4795-ad2f-4cca2ff591ef"
        },
        "item": {
          "id": "b157ca52-d36e-4e30-bdad-163a53ffa0d1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "882e9c2a-f409-4c46-b550-c15b4a09311d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89ec642-9f79-4900-bda4-f78a44655058",
        "cursor": {
          "ref": "65447fa7-b270-4de7-9d02-8a94635ecfe7",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9d10db35-d58a-4cdc-81dd-5f17c9d06f84"
        },
        "item": {
          "id": "a89ec642-9f79-4900-bda4-f78a44655058",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b9a831ba-ad2c-41ba-8891-9c8a56efd5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba2aca5-0107-401a-b163-6a8f0c4e9b1a",
        "cursor": {
          "ref": "cf35b0ce-12b3-4f5c-8782-2f7035371e18",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dbe7fdb5-811a-45dc-82f3-239aaf5803fb"
        },
        "item": {
          "id": "9ba2aca5-0107-401a-b163-6a8f0c4e9b1a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2d8a5b6b-50cd-4025-bd5d-d31a4388b19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34bc240-4a75-443f-b01d-7cfc9f793644",
        "cursor": {
          "ref": "7a1944b2-69e5-4d33-bcab-f6044bfbf259",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8fa3509b-26f5-4476-940f-e7ac8bf19096"
        },
        "item": {
          "id": "d34bc240-4a75-443f-b01d-7cfc9f793644",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bcff5452-f283-4e85-a1af-49489e3fead2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08abd34-2242-47a8-a8ae-834d216b4ccc",
        "cursor": {
          "ref": "f7ac90fc-adbe-48a0-931f-9813a5e66e9f",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4cf13aeb-872d-4c15-98eb-4f05ec9a5c2a"
        },
        "item": {
          "id": "c08abd34-2242-47a8-a8ae-834d216b4ccc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8ba37a5b-cdc9-47d9-8a89-9a20f80db550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65354230-be93-4a17-a68b-07fa2c28806f",
        "cursor": {
          "ref": "aecae5d1-4c1b-4306-8bee-63704115d354",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ce85d71f-d705-4dda-9bad-12e627880722"
        },
        "item": {
          "id": "65354230-be93-4a17-a68b-07fa2c28806f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c993fc64-6fe0-418d-9ef6-3d872701b110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b919b8d8-45ca-4992-9b60-0b8de575c54e",
        "cursor": {
          "ref": "ee773c4d-14b5-4f7d-bee5-a63aeb24b8b6",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "55d5d3e7-dea4-44e9-9a71-14c374ab9757"
        },
        "item": {
          "id": "b919b8d8-45ca-4992-9b60-0b8de575c54e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "13decd7f-092b-42d7-8953-5a4ebd79a06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32228023-6ac3-4d2f-bf4b-a07bb1aa67c5",
        "cursor": {
          "ref": "865713e5-50d1-4ee3-bee1-34082e78a603",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3fc3be59-09b4-4dfd-82f7-bd88b19d0427"
        },
        "item": {
          "id": "32228023-6ac3-4d2f-bf4b-a07bb1aa67c5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2b0c236a-92e2-499d-94fd-d6047fa0c866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74b2cd0-6d3e-42b7-844f-482568a9fe41",
        "cursor": {
          "ref": "dfe61005-c6f9-4c10-a62e-e4108d345f94",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "134cfb0b-c20f-4f59-8bbe-bd7715df3df4"
        },
        "item": {
          "id": "f74b2cd0-6d3e-42b7-844f-482568a9fe41",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "eadbedea-a327-42c5-8303-9b18c6cc1871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ccbfbe-5200-4283-a457-106c8cea936f",
        "cursor": {
          "ref": "8e409e49-b1b7-4315-9869-ffb69b36e101",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "056e5a5b-0b89-4810-9b34-68e6dc95e927"
        },
        "item": {
          "id": "80ccbfbe-5200-4283-a457-106c8cea936f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "48ba2dea-ce2c-4d53-bf9f-6275e06fe043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ce2006-faf3-4aa5-bfcf-9f0b7b195cd6",
        "cursor": {
          "ref": "539833e6-e0a4-4127-a1c2-fe34463b4424",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "95d1a121-1695-4f61-8f3c-937b5bf594e8"
        },
        "item": {
          "id": "51ce2006-faf3-4aa5-bfcf-9f0b7b195cd6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ceb4096f-2bf6-4a55-b038-156fd1bec09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f433a720-4158-4547-a39e-448ed4bf869c",
        "cursor": {
          "ref": "e0ba79f2-69cb-42b2-b739-06365af8b469",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f1c57402-c9f7-4abc-94c8-55b224a9da92"
        },
        "item": {
          "id": "f433a720-4158-4547-a39e-448ed4bf869c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7860854e-a581-48a9-a095-87e5c8cc43ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb800c2-340b-4713-ac57-5281a6092cf3",
        "cursor": {
          "ref": "d1590ee2-fbeb-4b40-a56d-6391b6c6f11f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c0712e32-9394-4e12-b9db-ea67b7b8d294"
        },
        "item": {
          "id": "4fb800c2-340b-4713-ac57-5281a6092cf3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a4d1e18f-9d16-4b9f-bbf2-4ff0532af865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd685daa-4a5f-45ef-9b9f-90531796422e",
        "cursor": {
          "ref": "a384e4a8-d974-4f47-a825-6a8b5300ebd5",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bc98d60c-9852-4efe-9024-08340ba59f7d"
        },
        "item": {
          "id": "cd685daa-4a5f-45ef-9b9f-90531796422e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1d9837ff-8512-43fc-90f1-2cb58601a0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568d6aff-ea6d-47c8-bf0e-d0f50d136816",
        "cursor": {
          "ref": "4184ea64-8bd6-409e-8830-6e9f03a06675",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "655e1464-d283-4d30-83b9-0deb424d0056"
        },
        "item": {
          "id": "568d6aff-ea6d-47c8-bf0e-d0f50d136816",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "44b01ef8-9c8c-43f8-9d7e-74361737ce11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c81b90-e9e8-4c32-9955-173ba0ed8d7d",
        "cursor": {
          "ref": "5d1b5002-4d7a-47a7-a074-1f6d87e5b0f5",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c55da661-f5c2-4def-a2db-ab5586a663ec"
        },
        "item": {
          "id": "d9c81b90-e9e8-4c32-9955-173ba0ed8d7d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d1d2d4c5-a745-4f3f-b268-19055d568790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466c80a2-4cfc-45d9-8004-491688a68ea8",
        "cursor": {
          "ref": "b6ce2e0b-7319-4308-977d-757e47e2e455",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e0faa79c-e05e-465b-8c65-8690403bf513"
        },
        "item": {
          "id": "466c80a2-4cfc-45d9-8004-491688a68ea8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "97aedbb7-6de6-4ed6-9a9d-f9426a73431c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d47a4a-7dcd-4881-8aa4-466954e5439d",
        "cursor": {
          "ref": "ee33b107-d2d8-4d8e-9d97-825800ec5880",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "29894866-16f5-4dc6-82e8-839ebfec0bfa"
        },
        "item": {
          "id": "18d47a4a-7dcd-4881-8aa4-466954e5439d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9f9a8478-3c94-4492-a003-e1251870e3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4ca672-b348-4361-a1e5-a1f83d550bdf",
        "cursor": {
          "ref": "913dbd37-6321-4c4c-92b5-47370a46e9bd",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4e265401-aa9c-49e1-80f7-e696b4ff7995"
        },
        "item": {
          "id": "8d4ca672-b348-4361-a1e5-a1f83d550bdf",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f7fd3e78-1dcd-4b6a-a2dd-257faf85ae70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f0084f-9563-43a9-bc53-c3e1f8a1515a",
        "cursor": {
          "ref": "6cb56e4f-d2a4-4ed7-a65b-6acaa126b010",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f4ac9ccd-4493-440c-9f6c-da4aee0ff03b"
        },
        "item": {
          "id": "46f0084f-9563-43a9-bc53-c3e1f8a1515a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "de05bd9e-69d0-46ea-b39a-5ff236e51131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54812669-91e1-4ea4-a5b7-68b0fd7da038",
        "cursor": {
          "ref": "be440532-8895-4d20-ba6c-af175addf7ac",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "abc2c3ea-8e33-4f2a-a331-0fb3d721416c"
        },
        "item": {
          "id": "54812669-91e1-4ea4-a5b7-68b0fd7da038",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4bc9ce5b-8790-4b84-bcb5-3a266e3b0cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9171b9-c885-4cec-8b56-5a0fcc901991",
        "cursor": {
          "ref": "ab332b89-5c32-44ef-b771-f9eab7551d6e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7a20dd9e-51fd-45fe-a514-e28944023625"
        },
        "item": {
          "id": "fb9171b9-c885-4cec-8b56-5a0fcc901991",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f68eddb2-bd66-4668-bdf8-07de4965898d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57a98f3-6802-4595-a239-0c4462c37dc3",
        "cursor": {
          "ref": "3db536ed-703b-47d5-ac36-8db834e73745",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5ce211b6-ef1e-496a-bc6a-021d789b03dc"
        },
        "item": {
          "id": "e57a98f3-6802-4595-a239-0c4462c37dc3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "374a2939-52ac-4a26-bf39-791eda338dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efdb8c6-1dcd-465c-9baf-74f27931b6de",
        "cursor": {
          "ref": "c043c2da-e8e7-473f-9835-25ab0fa40f86",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3d0b48f9-d314-439f-89db-0ee0fd79f0a1"
        },
        "item": {
          "id": "5efdb8c6-1dcd-465c-9baf-74f27931b6de",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d5f9c420-cd81-495d-b07c-513880cf44b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088481ca-940d-4727-ad14-c340022fdedb",
        "cursor": {
          "ref": "ea1c0329-125a-41b7-9e99-bd3c98e4c6ee",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4c09e0c9-c72d-42d4-a712-16ff34a6bca7"
        },
        "item": {
          "id": "088481ca-940d-4727-ad14-c340022fdedb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d4ab25ec-999d-46f1-b4c4-01b7952a7a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518eee10-46da-418d-b03a-ac78edcd23b0",
        "cursor": {
          "ref": "184e0db6-9b1f-4ebc-a626-4c2bc60d794d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "41559607-cb89-4e7e-9a6b-23b74f87970c"
        },
        "item": {
          "id": "518eee10-46da-418d-b03a-ac78edcd23b0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7db910d9-3901-4fd5-bc56-1b6b3e585a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd34fe63-ca20-4132-b210-4927d64216a0",
        "cursor": {
          "ref": "46433641-ddb0-447c-9d60-2b5a6077039c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "796b4318-5d1b-4636-8bbd-010d1b031c2e"
        },
        "item": {
          "id": "bd34fe63-ca20-4132-b210-4927d64216a0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6ea36588-2daa-4f5a-97dd-b531efac80e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e38e05a-38b2-4d0e-888f-ea548c6d007b",
        "cursor": {
          "ref": "04773e9f-241a-4672-9832-8b0f23b344b5",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "199b06d6-b8c5-43a2-85e1-e174a4b542c9"
        },
        "item": {
          "id": "7e38e05a-38b2-4d0e-888f-ea548c6d007b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7a9a7353-038e-490f-bc47-51fa785b60b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c675c44-e1c3-40be-a919-b3464decd2c5",
        "cursor": {
          "ref": "9b570977-fee4-46b0-96e9-f96e1295a4b0",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ec4a24a1-b0e9-4aeb-a000-94fa62f81ad6"
        },
        "item": {
          "id": "0c675c44-e1c3-40be-a919-b3464decd2c5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e012edbf-658d-4844-bc2e-eb6cfb37aae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f205a94-b02d-41ec-8619-1b5eafd7964f",
        "cursor": {
          "ref": "3666397a-19b1-4225-8cb8-875819fc3b76",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "05b286d5-8a70-41b8-916d-1c7061d7702b"
        },
        "item": {
          "id": "5f205a94-b02d-41ec-8619-1b5eafd7964f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ee2f901b-fa03-4272-bcc0-b28b25bde21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0890b5-9c57-47d6-8cb0-729d3f574658",
        "cursor": {
          "ref": "76836ed8-9fc3-4b2d-afe5-7f2d20636870",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bab5366a-94b3-4eec-aec7-704e2ac414ae"
        },
        "item": {
          "id": "8a0890b5-9c57-47d6-8cb0-729d3f574658",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a43587f6-c28e-431b-844c-421e35c49829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e5f77b-9afe-4426-98a3-53528e445638",
        "cursor": {
          "ref": "e24a9bfc-70aa-4392-9522-6f4c853220ad",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4739d9f9-a513-40a6-b780-ec8744f25ab2"
        },
        "item": {
          "id": "26e5f77b-9afe-4426-98a3-53528e445638",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d8e28dec-94de-4c95-ae3e-3bd454385997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27aeae96-aae9-4ed3-8095-af69c482136a",
        "cursor": {
          "ref": "a77d9262-8ffc-4251-95d8-02e82163c4d1",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bfe92934-d249-48df-b000-3b6810fc211a"
        },
        "item": {
          "id": "27aeae96-aae9-4ed3-8095-af69c482136a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "166dd5ed-e95e-4101-a5da-7ad629a2325c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555ffa22-58b1-4382-8644-a2a6815b98cf",
        "cursor": {
          "ref": "41f5c8e3-c050-48aa-9ab1-edc172a1ab32",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "179c1f5f-b46f-42ff-952f-fb5ff9425cb9"
        },
        "item": {
          "id": "555ffa22-58b1-4382-8644-a2a6815b98cf",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "907d2c5e-9332-4e71-96fa-385f263aa24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4a5353-f83f-4911-8ea6-cdc832d50268",
        "cursor": {
          "ref": "615b3071-31bc-41f9-a198-1b62f05b4da0",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8035831b-bcf1-49a5-9bbb-7931e25f5d92"
        },
        "item": {
          "id": "0e4a5353-f83f-4911-8ea6-cdc832d50268",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "85f37657-0e6e-4a9b-96ee-f60ed02ef3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa11adc-4bd5-4889-8c03-536a829c6ce6",
        "cursor": {
          "ref": "c0e67d7e-7e59-4522-91c2-29509ff34637",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "97b7f211-630a-492b-a4c4-b1c134994e08"
        },
        "item": {
          "id": "3fa11adc-4bd5-4889-8c03-536a829c6ce6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "34b213a7-ce5a-4fe9-92b9-43a15ef28915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15afa689-4975-44df-b6f8-5909701aff8e",
        "cursor": {
          "ref": "adb3122c-6046-43a1-8d50-61e5d9ac7cd2",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f5660c62-a56f-437c-82c6-68c1c34a105c"
        },
        "item": {
          "id": "15afa689-4975-44df-b6f8-5909701aff8e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1466d2de-5b5c-4d2f-befd-270a5f05eec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fd875f-c226-46e6-a81a-2c99d49dfe6c",
        "cursor": {
          "ref": "3ca0ca83-57b4-4789-a25b-a9bdd0af2aab",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "351101a9-27e8-44a1-8ac2-9a90af070194"
        },
        "item": {
          "id": "64fd875f-c226-46e6-a81a-2c99d49dfe6c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8bfbc437-dc4f-4342-9b05-3dcd4f90c36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ec26c6-3475-4deb-86b7-aeae9d65ebb1",
        "cursor": {
          "ref": "b6383a05-1bce-49b3-acf5-28f7229a29b3",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "15992724-b533-462b-b3a6-088b3d569f47"
        },
        "item": {
          "id": "75ec26c6-3475-4deb-86b7-aeae9d65ebb1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "681abd80-c456-441f-bb23-8e39dce27f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc01f40-e0d1-4134-8f8b-b2b77ffdb155",
        "cursor": {
          "ref": "89a8dac8-16ef-4a8d-9b24-539a431ea992",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "421192d0-9e06-4b81-b361-33632152b7f9"
        },
        "item": {
          "id": "1bc01f40-e0d1-4134-8f8b-b2b77ffdb155",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4f18186e-b5d7-4539-9e8c-bb39ab855bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3ad21e-e553-44c8-b675-82fc4c35eed0",
        "cursor": {
          "ref": "f5861802-8ccf-4aeb-bd5e-5bb0a80c6a08",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e9224ade-64d7-4077-b7d1-00d896e0b6e1"
        },
        "item": {
          "id": "8c3ad21e-e553-44c8-b675-82fc4c35eed0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4ee3bda5-9add-4e93-a8a1-7d1994365fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb73f71-a442-4adb-a563-e2d4de58ea4d",
        "cursor": {
          "ref": "0d816540-0ba4-429b-9e9b-cfa07a673834",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "289d3882-5445-44df-b7ec-0c89dafb4ace"
        },
        "item": {
          "id": "beb73f71-a442-4adb-a563-e2d4de58ea4d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6004aed8-d162-400c-bda2-37ea5d36f278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023994c0-64f7-4b12-9f47-b9a82b2f5f3d",
        "cursor": {
          "ref": "b91701bd-e510-464e-aa79-dad09ef70860",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a25c7a5c-1524-46b8-9c03-43ce6303adcc"
        },
        "item": {
          "id": "023994c0-64f7-4b12-9f47-b9a82b2f5f3d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b83daa9f-6c73-4f55-805a-a758624a4b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6411699a-ce80-4907-8238-e844739af7e4",
        "cursor": {
          "ref": "899fd082-2c01-471b-9a28-12d9011cc447",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b7f07ecc-bef7-4a7b-b650-81b534ab7ab6"
        },
        "item": {
          "id": "6411699a-ce80-4907-8238-e844739af7e4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cb2069c1-7be3-48f1-8c47-9ecfefbcc5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b03b9d-43df-4a69-87c8-32b271734e45",
        "cursor": {
          "ref": "5be1f979-b5fd-49c9-ae1a-706ce839f9ca",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8f190dde-e552-4369-9372-8ab4aad3b812"
        },
        "item": {
          "id": "e2b03b9d-43df-4a69-87c8-32b271734e45",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6f727e31-f8b0-477e-b89c-323a2400efb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04725725-2992-4257-b7b7-13adbb3635df",
        "cursor": {
          "ref": "2050e917-29bc-46c2-a8f1-7b7e5526ffd0",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "af96c6dd-c7e2-4a4f-9217-4167f2fbe860"
        },
        "item": {
          "id": "04725725-2992-4257-b7b7-13adbb3635df",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "077a9994-60f7-4783-9468-718e01321791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20174f35-88ec-4f5b-8008-1c498299d7f8",
        "cursor": {
          "ref": "5eb0f31c-b8e5-4316-9576-b656f224ff21",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f83c9e08-7428-489a-8490-e6f3e3fc140a"
        },
        "item": {
          "id": "20174f35-88ec-4f5b-8008-1c498299d7f8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8da7038a-63be-4877-9165-abe6e59bd433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0deb5d-e902-441e-9460-f06f634fe4f4",
        "cursor": {
          "ref": "82d2682f-b34f-4eff-a4a8-bd8860e4d1ea",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7af18c0d-161f-488f-9ff1-f42c3216f632"
        },
        "item": {
          "id": "bb0deb5d-e902-441e-9460-f06f634fe4f4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "62ef3e05-621b-4e46-b4fc-c7ea8b8319a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf2a323-76d6-41c8-a954-3ede8968fe19",
        "cursor": {
          "ref": "dda8fb1b-08dc-4203-95d2-ed05c5a2e631",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fa7d2331-e1b2-45fe-b016-339092973c98"
        },
        "item": {
          "id": "5bf2a323-76d6-41c8-a954-3ede8968fe19",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0443eb95-8912-4016-a9a8-105da7b09280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "cd8089c0-899b-48c7-a637-9aa958c6b96a",
        "cursor": {
          "ref": "366ee937-013b-4643-abd1-e4d027486c51",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8dd6fa34-7552-450b-8165-bc9320d8918d"
        },
        "item": {
          "id": "cd8089c0-899b-48c7-a637-9aa958c6b96a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "69cd70e1-6a6f-4a65-b9f0-ebc566700107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "f68e0df8-9d1e-489c-a233-c7d31296a1da",
        "cursor": {
          "ref": "b5132c29-3553-44e3-a2aa-1d5e0ad03d63",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d99d4941-2329-45da-9f76-c8e6240e976f"
        },
        "item": {
          "id": "f68e0df8-9d1e-489c-a233-c7d31296a1da",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c598a914-463e-4136-bf33-b9574b64cc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "18a5a161-3493-4a7e-9df0-e145c5f1e9d2",
        "cursor": {
          "ref": "d453d1d8-381e-45b3-9ddc-73ebcf921c4f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e1d82dc7-668d-4a31-9475-966b02601774"
        },
        "item": {
          "id": "18a5a161-3493-4a7e-9df0-e145c5f1e9d2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "05365557-77cd-40d3-8d0c-5856e2d3de53",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a5a161-3493-4a7e-9df0-e145c5f1e9d2",
        "cursor": {
          "ref": "d453d1d8-381e-45b3-9ddc-73ebcf921c4f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e1d82dc7-668d-4a31-9475-966b02601774"
        },
        "item": {
          "id": "18a5a161-3493-4a7e-9df0-e145c5f1e9d2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "05365557-77cd-40d3-8d0c-5856e2d3de53",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6360bd1f-cf81-4927-9830-ad7fcbdc56d6",
        "cursor": {
          "ref": "a27f40e7-fe68-4e1f-b42b-9ddd79c153d0",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "59379f7c-7b6d-4446-a55a-4963c4fd54fc"
        },
        "item": {
          "id": "6360bd1f-cf81-4927-9830-ad7fcbdc56d6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d02c159e-2758-4f7c-8192-dbab29992759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4614854-fe75-4f06-9f9f-035a0e30edd5",
        "cursor": {
          "ref": "a75d08b7-0048-48b9-93e0-8c59fd1545c7",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dad7f806-b0f5-4f2f-909c-1c448912abe2"
        },
        "item": {
          "id": "b4614854-fe75-4f06-9f9f-035a0e30edd5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f5822603-dd36-484f-baad-b360f02c7538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}