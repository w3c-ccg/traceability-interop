{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e79ccbf8-4160-4bd5-8487-8be5078353e3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "41f2b709-67bf-41e4-bdf3-bc9282969c99",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b926178a-cfc4-496e-b634-81b9ef60189a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dfda2285-09f1-4a0a-8c08-d84435568ee6"
                }
              }
            ]
          },
          {
            "id": "73e927cc-16a6-47a4-8756-76afb0df5d74",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c68e897-33fe-4553-9a1a-eff8ad028227",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ce784262-2278-4143-832b-560d44aa249b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "89e28962-21bc-4e2c-a8e3-41bc313182b7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "65753292-af62-48cd-85ea-cb2c9fb27000",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe17f4da-f162-49c6-97a3-c86e8733b915",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8be45fe4-dbfd-4188-8ab2-decca18b179c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b045b4c-a028-4bb4-b963-9a78d17995b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2ba7d59e-f1ca-4c6e-aca9-02e96b88209c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8dc3519f-805a-4a24-b061-313b91e28761"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "578c1853-eb0b-44dc-888b-ab414500dfbd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cdd7ee96-0275-4360-9594-66444907acb7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec4c71ee-6b5a-48d7-951c-a3b8c1825706",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "85b623b0-ca5d-4251-b2e3-1d1c6174c883"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71dc1f91-a5a4-453b-b418-7105f24f731a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83b1f03d-8f13-400d-abad-a8d041cedf29"
            }
          }
        ]
      },
      {
        "id": "bac92dac-1168-4f37-93b7-df236e0aaa44",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8f2bda7e-73db-4a29-9430-879f3481ef52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4bdfc01-c0e0-400a-aeae-a08d0b811ab2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "178cbb89-a505-4293-983a-69bb2d6be5aa",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c51d15-257e-4626-8d05-8e3273abb7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d7cb639-fbd9-46dd-b3e1-1ecc3fc98a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e376b855-41b7-46cb-911f-910c25bc65c9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645019f3-8e16-4b74-ad2c-fd08fb81c6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f9d965f-0754-46b9-b632-42c7d89bda28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9498c2a-bcc5-48ef-ad71-26c1a9c572f8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7d7007-ffa9-4476-8fd4-377bc2af98bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fb65c3d-a1da-434e-bcd8-b460c730877d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed4a3edd-ea3b-4407-af31-3e1c38faed1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6f5c9ab-914f-4eb5-a1eb-c5cf2e800b6a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c2713a-adba-44b1-a36a-c77a2885225b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "740af281-5277-4e81-8a7b-1a6d536a08ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c1be35-6f17-4315-94fb-77ca33b321da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e27139e-bebe-4e4a-b415-d1b09153f964"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cb563d96-0a12-4c1a-9a01-2739c4cdb4c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c6e1418-7f05-4322-bae0-843693fca2dd",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23dbeb18-f31e-453f-87a6-39670ef11afa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1ed25875-d9c4-4273-b325-fb8f0fb54b75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66431ee3-bd76-414a-b1d6-767337e1bbea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2b429e8e-ac30-4052-8c2d-16d9700f355e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae2c82fe-1a14-4c59-b4ca-2f34a7b64e96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "479d1d8e-5e7c-4a2f-99b8-fad56100045a"
            }
          }
        ]
      },
      {
        "id": "2f9b4e39-9f54-46a5-8ff4-773ebed8fe70",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "592f067d-9d27-4af0-aa2c-41de737bfd69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2de4811-6369-4552-a384-343282ab286f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "59267c64-6bcd-49dd-9cc3-cf8a8376e4bd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38163e7e-7db7-4ccb-8d67-16e443dbd599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e1397e-97ca-471b-8a9c-e09fe2429407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9d078b-5d76-4da9-8fcb-6f6e437a63a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e939169d-6148-4cc5-901b-2d55935fc097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d025c251-c50b-493e-b403-62cfa823b92f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca280e5-7a8a-43d7-bda7-a0f5e5aa7364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4438a471-de4f-4244-9a8b-41ba93c62a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac32d08-5d90-42e4-9ce7-6bdacd2ba075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a1fdc86-db1b-4ebf-8153-68029e9ad91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7513b58-cd43-4b21-8728-4537dcbf1c0a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e454f8b-0561-4011-9693-1fecc5496219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffae6b1-ff7d-42b9-9683-e53796d29f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684e5eeb-40e5-459c-baea-c9fc84ea81b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d72080ea-cc84-460f-8736-82be037abcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5a41ef-b305-4af0-a0aa-17570e9a37c5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e2a360-aa43-4753-8835-ca0a5b71b335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49872c89-ae85-448d-9eb2-2c4901d74903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ecf1b7-ab6e-4cbc-b783-34cc2142902d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "132b4003-6527-45d3-bc85-1826c74dc5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cc5d87-abbd-4a8a-8957-f5af2adc4d58",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0246a578-4570-4ce1-93b7-01d92b0cc111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa9d656-f1b9-4c65-b375-882f77a4fd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9409b11e-4704-4843-95ec-045bb3e64b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6993d3d2-7e5f-462d-948f-80853ba59433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e660e728-d765-4526-966a-a04f441613aa",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588a95ca-0cd2-49da-9685-c0a989594281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0bad302-7970-47ca-aa92-79c5a79ce80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91679088-2b25-4a82-a6dd-8b404f82afa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c50e48b-4993-435e-9b52-69e5364c3844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89877c1-0dd1-4c19-bcc9-d1b3eaeda311",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9241c314-d7d1-4efe-b8ca-8b56912c090d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef6f92c-bf25-4278-aac2-e8f28da9e7a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06eb4d49-9e38-4efe-be21-8214fa7fdb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06755b3f-c75d-4174-809e-abaab5d617ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ec0d03-4baf-4fec-a8a2-099060973372",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2ce64e-47a3-42b3-9080-2444cec9345c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fa4dba-483b-48f6-8302-34a9343120e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51394420-1855-44b4-a2e7-0544fc898879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "799b266b-38d2-4dbc-9aeb-e4e0fd5a7461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5114cc49-708f-4bdb-8bb2-43584552aec2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e750059e-7d4b-492b-acb6-3f4a00bd857e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097b9ccc-5c12-40e0-a0b4-c5e0aaf1e73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ff61f3-b3e5-4011-8850-4b231c38acaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dd6ae36-8bb1-4ce4-ad6c-0a123e1d4a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e583491-ddcb-41c3-ad4b-ed5fba5ce469",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb12b48-bbcd-4495-b599-2738cd7febdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a78e3708-b953-4f6e-87f3-0bcc93054d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775d00b1-c274-48e1-ba43-4b6a58bdb51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "612f476e-13c7-4199-8dc6-9e99214edbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34268c91-3508-4caa-af9c-61a873d3b59a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f64ac3-7e76-4925-bfbd-d3f8a8c5246e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fa3f0f-7bac-4f32-9e0a-a260fdc4e265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17088573-b51f-478e-84e3-9b3f8ddec1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddc2075a-76b7-44a5-832d-1e5e74acda21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f1549e-c02d-4b29-a3e5-5e967107240d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7512f6-32d6-4d10-a9e8-d6049a6d0827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01af77be-3a5b-459a-a169-a700838d62e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70690af7-be55-405e-b075-9be20e256265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6f6aec7-da34-4d8c-b6c8-c91f563639c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35974da8-00d7-461e-bc28-3edd2aface7d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0241e325-4316-43bb-aa14-eab2c039802a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d07ebc3-de2a-4034-9553-db56014f9a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13e777e-7fea-49e8-b744-8f289c82562c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36f73847-2e4d-4ac5-902a-a386929686e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e742107-f538-4e5b-93d6-b1938f0290e5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edc7595-d939-4eef-8452-544aed73c8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78019948-dc43-489b-b110-ab1c6d735090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef365bd-1c79-40c7-a2ae-678b625aca96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28355a52-5788-46d9-b947-c0afc0f92e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043a8107-bf61-4653-9d33-6b71665d3664",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e60c82e-23af-4767-a771-2411f650681c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1642b2-34b8-4435-9b3e-1912606502e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77a796e-4d6d-4b0f-8e8b-936521fdcefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81681a03-e67f-4975-bcb7-ec5581d8ba73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768f2180-71a5-4d70-9898-1f381d721c3b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52444c6-3385-4ede-b1e2-b76877f3088c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ea35a0-9733-4fd7-a350-f796a75de653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b642bc-dd8b-4d87-b361-3f1a35517c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a94cb85-4186-44f1-a2ca-1559cda5b446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc64464-4948-4191-a544-9e6a29a44f4b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de8b851-f95e-495b-82d5-8730cc9751f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbd6c29-60be-49c5-8524-975290f15fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8e1a7e-f4fe-4c7d-ae2b-6631bdcd8e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "801beb9a-6af3-4828-9acb-2c18b43f692e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231edc21-ec4c-4e99-abe7-bcdf3790bbd7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6432f1-64b2-4d2d-829e-e8385f32ee17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1e46b7-e478-4873-a8c8-f1705cb63a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f694c4-33ef-4f8f-bb98-d4f88b63d87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "13f2be62-250d-4217-9bc9-97a87db0582d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7ae27a-bc3b-4629-9ba7-0cf2e975801a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0898d64b-c0c9-40b1-a761-fc1a2fa20f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79602a34-9b80-474d-a389-26fae4b51168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d47d58-35ff-43d8-be36-262d0e414209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82da3fcf-0de3-433e-ad68-ac8ec46d429c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084134ad-f314-468e-9dda-0b7cb9c9f12f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc0f148-bd7f-4108-ad06-cd1f5ef8675e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737a15f2-194e-47ed-b168-ba65031591c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf6a0c4-3750-488d-8795-e60b46357074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d5e316d-8fdc-4328-a6cc-2fa0807e77a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3061ec7-07d0-4cff-9c5d-33427cffdb41",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafca1cf-f27b-432b-99f5-e0e3175d648c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad422e8-d6d3-44d5-98d7-080971c65cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bf166f-158b-4323-9f4f-ca2c5f39ad41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1506c64-e461-4ba4-8ecf-84a2d3188e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e23bf6-159c-41d0-8044-e2443cb56d8c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f74071-7490-4ba7-9d99-d81ece846bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f76292-5073-42df-a15d-eb7e6090e0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9615070e-d851-4b20-a7b2-7b353c807369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6c3dbe-0f53-4666-b644-7979d68f1b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6970759a-e624-4233-aa34-73ec5a2c2b47",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2391b5a-20b7-47ef-b959-001ee0e4971e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e012e482-4706-4029-bb1b-6fcf1ad3c35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29b38a4-c996-4a92-9666-3d2ceaef03fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "157dee23-7799-49ea-9bc0-74b69ddd1c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f306506-5a87-4af5-a620-6b607ee646bf",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdfa8c2-58d6-4eb7-bfdc-428c48c61d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a03590a-7537-4a45-93d9-76155e38edec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31febd0c-349e-42dc-97b3-0936cae51027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed5f72a-af6a-4a64-8e95-fad1c7175f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03048597-074b-4d29-8630-39fa897eec68",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f1b3fe-d1ab-4bca-aa1d-ccbe8d0895ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1cdc0ce-91a1-4487-bec4-dfe3c6ceb920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d636309-3ba8-4a34-ad48-9bf147ac7b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f186609-2ec9-4ee5-930a-c6927878b64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633f52c7-cf02-416f-97b1-cf0a01cdcea6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409a9d4f-de49-4c5d-8db1-428fee705e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1671c4-3303-46ba-993d-b42892677cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca771ec0-e2c6-4787-86c4-821da84f11db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9833833-b23a-47fe-a648-79a9d605e0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d36d9f-df58-4d02-aa61-2988dd3b4a74",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8975762b-ca2d-4064-8d29-94a30f7b17a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ab7bd1-de96-4d27-b88a-69c7bd1d372d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f308bf7f-3fc0-4d07-874f-bf74304e0d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "416b069e-d96e-4ac8-b69f-d38fe14e51ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dce7f42-2550-4d85-a287-869adca476c4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c44efd-06bb-4f84-9774-78e41f6404e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff5cfb1-509a-49b9-8b99-1e0930d67be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edddd16-5f4e-4082-88ea-57e4a370fa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5950ad9d-b87f-4f16-9422-8106beb209cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb9ff61-ee20-4f49-9000-e84e49697eec",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4314cf92-241e-4f2f-ab02-982cfccd7ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4fcc2f3-0f73-48ac-b868-3d3b6d59f4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd76d824-dc67-4f18-90a8-3a7172247fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6285fd8c-6ae3-493c-a676-29b9911f3031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63220c6d-44ea-4cd3-a52a-d48235291648",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbcdce9-9e35-4e3b-919f-8fc48984161e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11b69d6-d8b1-4d56-bb8f-6f35e03bffb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34a1038-4bc8-45b7-b337-917cb782f606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1544619f-b2da-4c97-8520-67ecbdbf9351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a181ee2-bfc1-4ed7-8583-d470895ffd4c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def19c34-ae74-4748-894f-5e9e0c2bb7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b06e113-5218-4035-91ff-2eb37fa1ece6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1fab92-3b06-4fdc-99f4-964a1b89da54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "479d94f0-0727-4799-a872-9bff477de6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997d58ea-6b69-4c42-b722-ff312bc02832",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3f8308-2f53-48ab-9a7b-26a562766c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb7366b-1279-40cd-b4e1-9b8c5e137eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9468b15f-4591-449f-9d2d-7e3f8a0f497a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76d69a2b-b93d-42e1-9ef1-91852b2dc283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47e9c97-ef20-44c1-925e-b42925f8a6a6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca82f81b-efc4-4bb1-b5ab-e0feabb7c642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d766c0-643a-4520-8c25-39d1a6dfbe13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442f104c-52cb-4297-abb0-bed3232aa2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4384ae04-1bbd-47ea-bb65-536eab13763d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aded9ab4-29af-40d2-a98a-fbeb3823a4a8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9a7c06-4527-4b35-83ab-1273cd668155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe459e7-fbcf-44ac-b34f-af5fb039c073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34878f60-cfa9-47b7-b610-a05f6f119f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95bec21a-36bb-4c25-ab4c-81733c5ebb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f9eaac-02fb-462e-9bc2-504367720b5c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4f7b99-bad4-451b-8ca2-722f3556c602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2090081f-b22f-4237-9c23-817b956a9d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16850905-5427-4ed6-97ba-aee583f50d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1b36ea-6a19-43a5-be0d-9fe60dc904eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690cc654-5b11-444e-8f85-d2b68767efb8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a78100-9002-4277-99bb-91e3d36d1394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b360786-e303-4990-88a5-6a41ce6dc0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6111e30-bc8d-4bbe-beb9-53bb3a6b2326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ac3885-c36f-4c59-b8cb-2accc1e4389e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06898e4f-1cec-4c9e-9103-94623ddc148b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4eaf547-f096-4abc-aa1a-72c83c204fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccdfe358-a1ef-4586-8151-874400684883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70caa60-481c-447d-90b2-cf61db1649df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "523dd84b-fbbf-454a-b39e-f6305fbc017e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0601c7-7ec3-4d04-b5b8-06406dfa4ce8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ebec6f-b6d3-42ef-969a-eec92d2b36ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ea6de4-09d4-4d2d-8d1c-fe45cd7cd554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca901fa9-72f9-46cb-8d86-b826a21dacc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "31265ad1-e25e-47ef-aa01-ba9f7630aadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23578f0-ca04-4205-bbb2-ff6534543247",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb52912-9a4e-4712-bffc-183d52a1be79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c89e89-7003-4a41-befd-6885e34d4df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c36ef8-b6d4-4818-91bf-009abba730d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d63f2b68-6205-4b85-b61f-b395b8ef051c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1cc852-3c32-43b6-9853-5e5aaecb9ff1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f1c247-8ad8-4d16-92bf-edb8ed6a3d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90df0f88-dda3-4d8a-bc62-72a2491a1e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3dd41e-c165-404a-a4f7-d032cabfdbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "64d23bbb-702d-441d-96df-c164e0ebb756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9631d1-d2d8-4fc6-865f-316a056eeb1a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff037bcd-c357-4424-b821-a2eb5d7b0241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f271761e-5f10-43fe-bc0b-e707a33eb344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ed946c-6384-4f1a-b32a-346ec881d363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "19fb2b95-5d26-4826-b76e-d1b1546cb0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ba11bb-8f64-4518-bd72-e133ab1b5021",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48139779-3421-475b-a03b-e442b77febe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b68af0-8696-41eb-a88c-b9df35265238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649e600c-57ac-47a2-aba3-3af7286a30b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d09ed5-fb77-4cb2-8ba8-d5d8cc6e6112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d441d9b-0c49-47f8-85ed-47e229673939",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947509c0-964c-415c-a5dd-0b6c328ecfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e8b3c6-c2bc-4cdc-84fa-82c0ca697316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762e6bab-42b5-4029-9c9b-dc86ca61d2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7302b9ec-e436-47be-b20f-c053d71af920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ed57a3-80ad-4f58-99cd-6acbec32a91b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d55e955-7525-4482-83f4-d632836a8742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e584925c-1524-44e4-b0df-3464152a22cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db41a844-c1c2-434b-a4ab-b3bc6353b59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ddcecfd-815c-49a1-8eb5-ca2ead751c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1538480a-ca87-4d05-8d92-3c19b7d25875",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2797f28-c146-4370-9541-f033409126da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f701752b-7651-4d80-a1b0-89507f447c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4b63db-fc34-4fa9-8419-d1e8ff64cc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad10a8b6-1fa0-44b8-9278-f1a8926e7687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75a1097-1728-454b-a9cb-9bb0f53b5cc5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d680b6-f4ad-4ec2-ba36-90cf2eb2e22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981341a5-19a5-40f8-ab23-b4390488c315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b6247c-3c08-4bcb-aefb-a4a6c782676e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94c011e6-3e04-4734-acdc-fef2a547fac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96536fc3-e284-47ae-9d50-1bec2b885fa4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b4ff90-1676-448a-82b7-7fe4be66f0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27d75fd-ea45-4cf3-9801-9d22d2b81262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c25826-5f4b-4dd8-bdf2-83e914a0ec76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2ed7ef-30d9-4ab2-9b50-0280a4933af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9482257-d28f-49d0-9023-e21bf915713e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70c4f11-ea72-404f-9553-348d4b37762e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae83f4f-722b-4a39-85d1-a09ddeed5220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91a3273-d7a0-451b-8a30-c5144300f2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af62b5bd-469c-49fc-a977-cc0977d947c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e060ba-0b96-4331-8947-574d87e7dd71",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db356ebd-e469-4762-92f2-2dcf36a12c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19b99a2-76e2-41b6-ad9b-4595e72bd5d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f160b760-fefb-40d6-87a6-21bdd2f19b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04cde551-a84d-4092-94db-9800dfa39f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67be1b93-f520-4a0a-b281-9773ee300713",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae6231e-f1eb-459e-9c66-d9168376581c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59def5a0-b072-4642-8c07-5bb9d18df315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1823785a-dd31-427c-8a75-7ce46106dd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "625903e0-81cb-4c51-9675-50f2e63fc74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f5599f-6219-419c-938a-c58fad5beba2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c784c1-2cef-4765-9d3c-66e94e1254c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de099026-9e41-4edd-a5db-bb84ae41f605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ea8dd4-b989-4a19-b120-0c9914601bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8029c1-f2a9-4022-83cc-960f34da2edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12879edc-fb73-48c9-b5e4-a2b08f7b6d08",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d1b671-ace8-4bf6-b175-bc27f4a61f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81565446-10c1-4f0a-a6ad-a140e3243950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0e7993-c58f-484c-a31a-089cafcb6c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae14706-8541-448a-8f4d-0f9824eb5b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b7a2fb-954e-44ef-892d-8fdab00fe0e2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c746f5f4-5548-491b-b46c-76db5e77f17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2605b305-89af-428f-8da1-acdd78f145cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba51ae6a-50a3-4486-844a-5d51a3cb8386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ddfd91-4065-4d36-bdf2-0bdedf15bdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d097807-2065-41e6-924d-cd860f4e7022",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9868427-ad8f-4da5-8599-e59271e8f993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c94842a-42b3-4af4-9150-751215c314a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70134799-6a2a-465d-85bf-317931002430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "315c1883-e319-41ee-89d8-c641f1d9b292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a3debc-8ab8-4a26-a077-72a75b519d6a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045246d5-121c-428c-96c7-ab97b28e433c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c428cb8-686b-4c9a-bc91-734f9a360f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8b53b6-4f52-4d8b-b9ae-a5c9fcbc97c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d7f20c-dbc6-44fc-b37d-bed3e2095c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f1a044-f19a-42b3-8d6f-2efd00ce4288",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ca9ff9-723f-4747-a68a-9eccc90a3fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2930da06-5c09-41af-8a00-aac338b3428f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da2d0b7-9b43-499f-9387-c855361a1ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0accfb-ea49-4fc4-a69c-beb1c446f6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651a8ba5-6df4-4752-851f-f4b0ebe45266",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e66c53-3b42-4836-9b53-196e2593c6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11a5ba0-2e95-4a39-ae01-dda2b48e9750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e7ea14-1c4a-4570-9786-d015d2e3bd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "01783733-c1b7-4234-a17d-c601b2a8612b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b2195b-af95-4eae-8b4e-680fd62234aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4395cc9-9564-484d-becd-be09f6bf2c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcde905c-7797-4690-8ef1-95bf6f9fe984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50345b8-5732-4ec1-9647-10387ae78765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f13668-e8fc-44b8-b3b4-b94c4f13029e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5502d8b7-fb1e-46ac-952a-f92e656282cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aded4b8f-d422-44f0-86f0-68b4b82b1051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03fca7a3-f7c5-4c94-a8f5-fda69dad01e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc6dcf8-b555-41c1-8a06-bcfa76a5170d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4714f0c6-e3f6-47f7-9f9c-55576ac85f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac72b10-9c96-4291-b3d1-54d63e178618",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a58615-0012-40d5-855a-b46d7dffe944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1bb583-db47-4918-a607-055f90302a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8aa339-87e1-4745-a5c1-ef770586a3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d074911-37f8-4677-98ab-e56e479792e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3341c7-f57b-4dec-bef8-f86540b6b349",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1592590f-ffe9-43b9-9a09-dcfc9ee6e330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def14e45-584c-4d2a-841f-bfecf03f4caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01fc768-4a32-4dc1-b1b0-c3a5a1e42417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "441ffa6d-e57c-4f14-ab0b-b7e776a543ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eefa674-2bf0-4459-adbd-23368ba3b27e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c4dd2f-0a65-4e62-b8c5-76b28edcfb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d76d1d-194f-4e40-8c5c-7d49f1fb358e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3575c59-d9b8-4a77-8b58-78f5caa5d501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d59066b7-84c4-4a33-bf5f-ce4c819c39c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7421ed56-f400-4e02-837b-d7d98eb8ce82",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb456ef-7f2f-49a5-963a-a3dfc150a3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cceacb8-2f44-4b74-a294-cdfcc1010816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d2bfbf-2587-4a1b-a346-55b085ac6eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "77df3780-c608-4c85-b975-6d4a0205b21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14a4d0a-3851-461a-9b47-7e25caffb08e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7087657-b7a1-473a-8cab-ee90a28eeb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9068de2d-3f3d-4259-80e5-9748c15cd432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ba82be-5666-4c75-a9ae-9c445942f48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30888deb-8079-451a-86f5-9c4760103d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b209d8b9-56b3-4e05-8b66-15ecdb886582",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3e4140-e042-4cb3-8047-dfaaf26a81b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c63dd79-cacc-441c-b3d9-25e126d664a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5c9027-d444-46ce-8400-6015d2c18fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e34bba95-4e37-4587-b010-1d8330f2fdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1793291-c714-4a4b-84b4-338f22ff3144",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0f7363-ad88-4dae-bbcf-2d51fa2f4ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ed6cde-7d47-4015-9e3b-4b3fad1d633c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcab5859-10d8-4b9f-968e-609b3db5cb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0221d0fa-729e-4f94-aa88-e3ea8ebcad41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7852a52-6615-4e45-b4d7-dbd89bc91034",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da32a3c0-8631-4c31-b0eb-ec34935c1c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62fa5b1-5c4c-455c-9b65-1db3dc703e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35da98e-8130-4440-a0f2-970d817295dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4cbcddb-4543-42c4-94fa-705d0ac497a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0eecc3-2458-4154-ad62-356cc1af1c8e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38484e7-a77f-431d-9396-187dbb3e0995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0785a899-5b9e-4235-8127-3cea71f8fc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946726b7-24e0-463a-a9fc-41a75ff06a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "660fde83-30d4-4c2f-b71b-22b500d74458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34baec87-c975-4742-ae7c-9157ef0b9a75",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c15dfe-f867-4a57-8b6f-c98993efbcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785544f8-61ef-4c87-858c-c9b301cc7dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97249430-f0c7-48cd-a5d3-72f80f084874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a92edfe5-134e-438b-8d67-1a73694e2b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3057cb-1ea6-4e85-8b33-37df03628d8d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf6cdfd-b826-4e47-ae94-2c2a7351a6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224f73fa-b193-49c0-bd23-ee73f161921e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18940161-c648-443e-ad01-b092db2ef6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a5284cf-a838-4c2b-84c2-0db0312de5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61465374-7ae1-454f-a2ef-599aea580823",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c5f835-e05e-4cc8-8be5-61c44c3b2556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da56f6a-293c-436e-9a0f-fd3c7a1015c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3eacc58-88f4-4b82-baf1-bfc25ee42066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2878972-7df7-442e-9d21-abd7096717e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07be6e89-2d79-4470-975d-5324330fe455",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ef9f76-9a36-4cd7-8bd9-b12cc048ea19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92958fb9-84e4-4756-a53e-d49810d28528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e9df73-afbc-4c30-a3b0-a5d3f4ad826c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3650ed8-3e00-4ccc-81c5-4f7c9468557e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b2ffd0-b52b-49c5-aa7d-b175e9b03f0c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ce19ce-cb9f-4926-9d0d-88e99c27ce5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31fda443-6802-41ab-9723-e053488dc019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370e02d5-f97f-4b11-9386-ff4fd2c7e741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cadf554a-4c48-4756-bdf0-10f15869c7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a35d2ac-a1a5-4602-bdec-16d67d8ab784",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d04f66-8bd9-4efa-9f98-71c8c46d466f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d64b4f-cf5d-467f-b47d-ec1d3d59560a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7960b5-506b-45c9-92f9-3e4101d6f36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0a78b8-5c63-4aad-9bf8-44a24e76040d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b3433d-a784-46b3-b1af-83e2f3965f4f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef23eae-a3b5-4f40-b6ad-32efa09c85bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a87e3b-663d-4ce4-ae85-0ec70ad6c8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e50019-da5c-4726-baf9-6625803edccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b9562b-37d5-4e50-80c2-13d74cd2b2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76e2baa-c521-48a4-92eb-911f9590b51a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c576af65-f666-4df4-a0db-e12e599775ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a870e3b6-0054-4a74-80d4-ea4f09d7661c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b1a8bb-4729-44cd-bfd9-60815fd722e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64578110-08d8-4012-af66-91c29d4687b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d5e345-8d38-439c-9498-2cb4f2e3cfff",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c295a01f-28f9-4c5b-a95e-2847270ad0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b461bdc0-0e20-473a-ab99-add6fc407a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad083a42-b339-45a4-b243-8064f2ae3546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5a4c68-6019-4bb5-9000-ed9d1e22bd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7a5369-4dae-497b-a293-c3c386142cd5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53967b20-84b9-4fd6-8b6d-bb35b8f6fbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f46e3f-0c1b-4056-8455-6e874aa9481d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f32455-69d3-4bb9-a502-e9ed1b16f18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8be88f8c-9ea3-4d20-8124-094a8c9b89b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d330bc3-2071-4ed4-83f5-34ca4f4e41ec",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e9b104-ebc6-4ae3-baaa-99b5cc9729b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5092663d-b4bc-4dc6-8c88-c45cc8609a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf435fc-5ed1-4257-b916-1668c9768d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc22c86f-e7ff-4285-a8cb-a69c9c6b05ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4592657-8dfa-45b8-ac40-7ed96c8edd24",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b5a2bc-b4c6-4963-837b-4941fa1af60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae69dff4-e50a-4c04-9a77-69e1e2e7757a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df51f90-0f5a-49f9-ab8b-d3377032f92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2598474f-faf7-4990-a820-1283cc9c4538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8b9b40-85a0-4d04-b11d-d3d6f2abcd68",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1fa3c9-7c62-4158-9de2-18eb78485d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1acfb8-c456-49b3-a5e4-70904006194f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79db88bc-6443-4e25-becf-7ed92f452ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b69c018-7fc9-42b9-972a-2ada45297c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bc2907-4dad-44a1-94f7-9dc42c6cfcc2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae98aaf-fcc8-4824-a603-8cc2c1cac8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555c7d91-7d01-40f3-b706-6bbb9e1c0cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c35d0b-6231-476c-a984-78d24ff87d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c399b6-b433-47e9-ac7d-943524e26895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4630a75a-9cfe-45e5-99b3-f9c695449834",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09b4819-26f0-4bee-94d4-8842063d0c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28e6fdd-8bf2-4f05-a259-cd406a59aaf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fe6df9-73ca-4d24-b4ac-dcfbc38367b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7cade2e-0500-472b-980b-4ca8c361904d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d7af4a-702e-4632-8e39-294fdceebaab",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a81979e-7c6a-4860-abd2-6dd1966da62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472d2e83-eb87-4189-b9b7-7e0bbadb7a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c45f5d-5617-402a-9b6c-26c7ee52a67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cd9092-966b-4add-87ab-f08d59230e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbd55e6-7f30-4b01-b6be-7533f7c35f05",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274c5766-2e93-4a6c-8ee2-38d39ae0bff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11fc5c15-a729-4fbe-99d5-c6d1f0eaf560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231f1cd2-d923-4b15-bdc6-ccdd2506d9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "883f3ad1-1754-4d61-948c-4f2372a8fdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57596ba5-0ea6-40b9-b3a1-fd6017c71217",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7655549a-2621-4163-996a-bfb2f940de95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb33baea-c565-4c3f-8c95-8f1da9839ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ef5f67-fa03-47e1-88e6-24bae3fc6c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e67cf85c-c6a7-44c9-9908-50cb7dbbfdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c60e10-7769-421b-887a-b9d2a4a8b51a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e681e7-92d4-4325-a16b-fd7541aa2327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b177dcdd-f1bf-4057-8a43-0a7ce60d3baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb594565-65c7-4685-96ab-031829071786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c57babd-e91d-493d-a77a-831f1272ea8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f244eaf-028f-46a1-877c-5efbdf68ccc5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e45f33-3139-4a84-9ece-f1de3fc7b9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a9a354-024b-47f3-8354-646ed170adb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a4b2e7-cc39-44a4-9238-7382fada92a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "99639e59-f9b3-43f4-a122-62cf860d881c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d194728-53f3-4b6e-a931-2b84b1c8eca8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3590349-e5e3-4e5a-83a3-8d6c098444cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36bebc9d-23ba-49d1-8361-10a437db320f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e083a13-8de9-4da3-a7fe-906e3737e55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf4ce61-01e1-42e4-86aa-89c5d0a585f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30eaea68-b7ea-4ac6-bb53-d52def3f96b6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23802de6-56ed-496a-b3c7-dde7f2b252a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1326c026-dd40-4843-93cf-b900dd696d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6d9ce5-4423-4351-be06-c6fe5474a716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9c10dd-fb89-48b4-836a-d5d6b271fa7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8130e7-2422-404e-8573-0c058964a542",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38eea05-dc6a-447c-84f9-aa347e1dc695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbe255d-08fc-472e-b214-eb15eacfe40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f051d7-1324-482b-a53f-9102ea5d37cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2fd1b56-ff1e-4fa3-bf39-a5eaa89005b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad49c6f5-3e02-4b95-ace3-7610672b0e8e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c114c929-58ba-472f-bf62-51b1e2a894a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "21eb191e-8e3c-4956-a6ef-01af7c202592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc5aa13-9aa2-4ea9-8582-e625fe35e759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f374c0a1-990c-473d-9fd0-02e0b351dd9c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18667a11-7bcb-4687-906c-99b0ed17269c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "daa3ccd8-1303-44db-8af0-2d9cdac79941",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e453a22-4186-464f-98b1-21bad8c6c5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a2fb6a9-c407-417a-9fdc-0674823bb63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c437d51-6505-43d8-b3c4-ea8282405f1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f70d5c3e-26dd-4ded-af7c-262d851daf0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cef0196-0c72-44cb-ad03-9a0a7537682c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42b0f3ba-49d1-47a8-b496-2aeb8b17d20a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "513d2569-4603-4701-b4eb-2785e1ecfec9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34eb66fe-4dcb-4c4d-a947-95a1cd1f31a5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fd60adf3-0860-40ec-891a-f2519e4f94ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac392dd3-fc8f-4757-be52-ec16117bb23f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d4e1d0fe-715d-426d-a653-4f6d06922cbf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1dd3ec2e-b471-4d4f-b51e-d1f60e46c2b0"
                }
              }
            ]
          },
          {
            "id": "5200f722-b3ba-46f3-800d-edf128500543",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d6beb3d2-6a31-404e-9eb8-af8a3105faa5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f51c56e9-d6bb-48e5-9735-9b967156986b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8ea448-94b8-4c23-a5c7-0a2ecdcba8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b1ef2611-cc30-4b92-81e9-6b705c7c6692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578be930-c85a-42de-8772-61bd8dfec2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c165d27-5f69-4328-ba1b-146cfaf97e39"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b45b5a09-e331-4c6e-9546-9db69b40b10f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb31f1bd-f535-4343-8f74-b0346cc390cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fde806bf-d4e5-402e-bd15-cab1efe1c4a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "201542d8-7416-40c9-8d0c-6f16c722b551",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bc44e14a-03ef-4758-b512-0618b939c9ad"
                    }
                  }
                ]
              },
              {
                "id": "d37faa04-1707-4e51-98ee-80c725643d77",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6702f67-035a-476d-a039-6f4a6688431c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5302086-fd5f-475c-88da-4a2a94b7037a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "420d704f-ffdc-4e3a-9e3e-6589ea200fa9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d22c7e11-2760-4ac3-ad30-d47098d802d5"
                    }
                  }
                ]
              },
              {
                "id": "19f1a974-0094-4b35-81a2-b1d130db0a0f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f80a7f1-5b99-47b3-977c-3bcc14d4face",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "693b19c6-e2a5-40e4-8577-f386eec87c1d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87d4eaee-d6c5-4329-9a99-286e95fbcf1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c898a0b2-81a7-4a97-b06b-12c9b0743ed9"
                    }
                  }
                ]
              },
              {
                "id": "6e4df5f6-cec6-491f-bd83-a381102859c1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d3050d3-9aab-40f5-a945-29dd15e27a66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a234716b-47b6-4cca-ae40-0d003847f06e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84f1f811-b4dd-4e17-a7d4-c2be7ba4699a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "daac925f-b515-48cc-8449-288959963636"
                    }
                  }
                ]
              },
              {
                "id": "9807ac92-1b06-47ed-a8c7-8da26b4120f4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46973cad-481d-4fbb-9a79-5168f54a0f4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87da9a97-cbfe-42e7-ae0f-acba15c8bbe6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a49f459a-612e-4831-9121-d63559af0d48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3d886d0b-6972-4fa2-9eaf-dbe51d0f9728"
                    }
                  }
                ]
              },
              {
                "id": "d39c0e5f-7b76-467a-ac24-d0d1200ae596",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bdbef2b-3dec-4e35-b319-f0f83e8ae6bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11c337b3-eb09-49dc-adad-3789cdccf51c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d98cd62d-1d4f-40d6-84e1-d140fe69757d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5e87bd51-99f3-453f-9f00-d9e4b331dbd2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aadab871-db88-459d-bbd4-ea5b85041642",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "caacc92f-c1e5-4304-832e-d56f0ebaca5a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "524ce8f7-cc1b-4fe6-b1e8-bd4d3e1bce28",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9bd4ca4a-99be-40c3-af56-e64fc9f24725"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "335b4b02-37d3-4c31-9cfe-2479c0a6e70f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5097439d-bd5a-4074-8b8d-902efa87632b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "240459cc-123f-4935-83fc-c0e619adc9f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c7c85ef-a9ab-440d-824c-f993d95cf7c9"
            }
          }
        ]
      },
      {
        "id": "dcc09637-77df-4053-a97f-a7e060ea8472",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "df055a0b-5afb-4c27-be39-610c5e5f5094",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8038fa2a-b209-49d3-b494-38a48ffa4d39",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "544e8f70-2d3b-4c63-91f2-c0d4b85f063e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a853507d-3ab3-4360-b568-0d7caace3977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c123b29a-822b-4b80-a059-befb0058f7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f144e0c-08d6-4ff5-a909-7f43a0e40082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "efad38d5-e0b4-4369-952e-300dccdf2239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d02b45-6d26-4f67-a125-f4aabeaf92c2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b2ec22-ee7a-4664-b22f-69d7b1a01ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020468d8-397d-42c1-ae79-ec1551ac0fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6907b568-f39b-4eb0-a413-9fede1f7b684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43bbd2c0-4d49-45d6-8b17-913c19bb5e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1fe9a9-817f-4ad7-b2f5-70d4b65dec3e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d43766a-6f01-4096-960f-2dc25dead29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef53311-0924-4be8-839f-315660a44f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c98a489-1acb-44ee-98dc-7671a20acc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6689a64-6327-4961-84e3-1fbb02f5e18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3380865e-6ccd-49ee-96dc-35843e73488d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70abea0c-0382-4e8f-ac96-3f8174e2aadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5cc91f-fcbf-4198-93d2-e447f0986e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2c9bb4-f24d-4d9b-8072-766e8663f197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f74caf2-8034-408b-8c4a-d56ce65cbd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619491e3-0863-4779-8f30-d12a14e51862",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2277ae83-4f77-404e-bc87-28ced3ecd5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f15487c-c347-427f-b5d9-2f67f29a0177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2263525d-267d-40d4-a873-190d1f67f90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e74797d7-fdf3-4850-aa1e-364a45f73bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694e468a-8038-4c35-9699-460723d91229",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8de05f-116d-4a89-b5e2-119d130ee3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f7e50a-e567-4fae-80ff-1166e42b71af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341ddd49-fbe6-46f0-a4ed-8365307b3416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e4bfc7-d1b7-498c-a0be-d4147424d8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103bd2b3-215f-4d5a-a19a-c39add8a8fd5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9499262-42ff-4664-877a-17f6afcc097a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045b0837-cb1f-4e96-a1fd-2eef4a63bab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd23ca9-a7c0-426b-ac5d-5b30e94eb644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "74ea6ca4-00e3-4290-8bec-341d9c131503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cb5178-9f18-4a9c-9658-4a2032b449db",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11352f0-b643-4b29-9725-9726bc36dfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad51eff-7f5d-4ecb-b2fa-d2d9b301228f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fe752f-fac5-43bc-ba9b-fbaf07f8f91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e359da72-6c62-47e2-bf15-f96a3c7327f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7770f9d2-0548-4b69-9211-a7ae553b6e58",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa648752-681e-44dc-8ac9-66b0a81bd8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04a830f-bc52-41a1-88f2-7168bedaf5ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5af0e8-22c6-451a-844b-fdcf4638c80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0897b1b5-d418-4404-837c-be2a83bde1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab89f32-e650-46ec-a039-fc61d2fcbe5f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0719efc5-ea7f-4a94-90b9-ee18f8556501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69238665-e322-4df9-be83-97a2c5af50e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0c248b-3a1f-4535-bad4-279ddbc9a063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84ed839e-159a-48c0-8cd0-dc526eaedc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88090a82-2509-4818-8af1-5ba2cd058aaa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703746b0-52af-4057-b35b-db6321540ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7a95d6-222a-4655-8052-81a28ca07a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df143a3-4f0c-4ec9-a099-720c84c33859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "497ac974-30a7-4efc-a1b2-2eb7d019e3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc46782c-93e7-4a23-8855-770a9fc3e75a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096d6409-fedb-4a17-9d77-97beb69cfd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967cd721-fdd9-41a7-b276-32eb1eeae46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d135adcb-4fb6-44a8-b78f-032f055254a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d9d6c2-148d-420a-9afe-2a44d55c3b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09276bb8-f6e0-423c-904f-f6e9f183878f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395529f3-2e88-4508-9751-0e34479885bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064f75c3-892a-4dcf-b1a3-d180862224ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfa4d7e-2af6-422d-a23a-71bc730057b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "270e0e58-0d65-41ae-baf2-cb67dccf7ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0274e4-e25c-4d68-b6fe-8870415564af",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52abdc6f-095e-4288-a1ac-504ec627eec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49f20ee-6594-4089-ade8-f3c978a2878c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96acc7d-3e1b-45d5-a077-7146e3470fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d10f11c-dc0e-4a15-b97b-904c7a16c6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e79670-521b-4c82-b2fa-cddecb5b29d7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddfd8fb-afca-400d-8ce2-746a9cee4de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1a0a63-9614-4679-a65b-a2cb01b210c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94ec97b-3426-4861-b0e9-1e079d466393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf352dc-3079-4565-9f1d-5ece55cf58fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f86a4f-1b02-471e-b5ab-ea5106b97caa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a8dbe2-fd76-472f-a08b-2027ac4eada3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6590254b-bad6-4277-9831-3e349592d136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12567fe2-2290-476b-9a42-3ceecaf2b1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f84c1e5a-495b-4f98-b28a-d769652f662a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb01aa5e-72a3-4611-9e04-830f7dfaeac7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46191d8-6e25-4c20-b53f-7ee3d58c6510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b54aa9c-c020-4ceb-8222-22c56b7308fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abb0881-4a2e-41f9-821b-41299e2361fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cde12415-18a0-434f-ba14-659fb073d18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d276eda4-2db1-47c0-a008-24077a6f341f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d181494b-a79d-47ad-a6f2-3306c188781d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc29890-685b-4a1e-8f20-207df04e30b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6c67e8-f63d-445d-8f71-16440d3f381b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "617b4be8-a3aa-486c-a9b6-b1bc1dc23176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adca71f9-1259-4fa1-92bc-40c418f1cd49",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee440409-fcb4-47d8-aa04-167bff82d7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d058fce-1b0a-449a-b6b7-4815734a4c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94344176-a88d-4857-bb9e-72c19903fca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "587c291a-97cd-4a6f-a00b-09474ebd5089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a956ac60-981d-47e5-bcdc-cb13343181e2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2857647-ddd9-403c-ab33-5512c5935e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d35163c-040a-4faf-868b-68848e131279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366ecd09-a5af-4809-af7d-f1fec80daa85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6881321e-3896-490b-93db-c0a708004cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9fe2f7-d8de-44ef-a53d-b3b46855657b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb32f0a-92c4-449d-b901-3f38ac2435a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf43f38-4f0e-488f-bc60-fd4cdb2fcbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e03ed3e-a272-4945-89dd-a43ea4af171d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d84bd1-d4f8-46d7-96da-9a61621106c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52c1855-7f0d-4094-b257-51c4f196b0fa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1421535e-4643-45c0-a60e-338a87388589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03ae295-8625-43f4-b48a-be986310483b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652cb16e-4aae-4ab5-b779-62a3384f6611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4586033f-c228-4b29-8d7d-1e16471df2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9502f92-8826-4974-af9e-a08dee4c26d2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf79128a-9900-400d-9107-d3ff6d1bdcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697631a8-39a2-4da7-8a88-13701a33f3fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f169cb6-379c-4fb5-adce-5f2cd462073d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb097e7e-87a0-4c93-ae6a-301b198454ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302b18c2-99b4-47f0-837f-665ac4fa6c35",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbd80e2-71d8-4dcf-b8f3-b4ce610e10c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6e49ef-149f-4878-be50-a29dd8120f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6252c1fc-8ae3-458b-9cac-471b93f2c2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01795830-7f42-4c04-9357-fe8ab08185d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62a66ef-2b5e-439b-9e3c-2fd7430107f8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d326a0d3-92ad-4b26-af87-7805fa2abc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5ac436-c769-442c-9c9f-912bec3ae753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5822fc-7b0a-4def-a549-d064397a8a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18ba0d17-5daa-40b7-b21b-8e15caf9e959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83754589-0806-40a4-a468-d0abacb93650",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a713c60-6a86-4754-a2f5-33ea5ab1960e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60074be-ef49-4012-bbac-90e6baa085c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5727c2f7-3e35-4d9e-8087-1770fb194fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab37cec-4763-45b5-9b32-bf2960fa321f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce442f3-55e6-4cc2-a9cd-3a0101540323",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767e397d-3e66-410c-8590-d97a57d15c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f90b237-c922-4099-a78d-aff3405e2db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da26647-3e07-4998-9832-a6eda32b2d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0d41fd-c3e0-45f8-a2c3-e884c6a112ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8af6c3e-bdaf-4e5b-ba34-7ae10918a7b5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6f4155-6e34-421b-bd16-5b066168ee2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577db89a-5a4f-4827-a17f-1572cb292c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3790c86-7d65-4211-bed6-711a78f47789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "862138e9-3d13-4198-936a-ddf1d38e69bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248bb404-21c8-459c-85fa-8c71d0087b18",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de359977-6938-478a-82bc-6ffcca792213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c776aa06-fd0d-4ad5-a0e9-f547504a78ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b0c1e6-20eb-4c53-affe-7d2c98960ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "695ab807-24a3-4e71-928e-24b6ce09dad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66078bfa-f4be-4e99-9ec9-91c34a949e3a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7024bf-fbd9-4aa0-855b-db4e61b1fa8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60ddf60-6d21-47d1-9714-df7e0f83a619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb8c9fb-4077-454b-a8a5-5db8a152fde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c2d9a8-ba18-42af-aba7-848d67f6ea2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52396cc8-6d5e-4492-a1e9-742fe27a1428",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e0ce57-e10a-436f-bc5c-4ab8ed824939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f84af0-eaf7-4552-97ea-c60146947221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426785ff-5860-461f-ac2f-b0b5e102e851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9082cbfb-b058-43cf-aa48-a59fee10368a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa041d5a-205c-44b1-b087-6093e404a509",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f0768f-60f6-4b65-bf26-e84000f1d004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad13fac-7d49-4cc2-837e-6e0c450671a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97c3cc5-c5bf-48f8-ae10-e4c2f80ce802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a33c26a8-dd91-4305-bb34-d634228c2124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca8aad5-2159-42ee-af2b-38b1e23855c4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f53807-671c-4658-a2b9-a79e957c55da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8747d9-09aa-46f1-8bcc-54abbe428f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be5fa00-7102-4b84-8222-0dcc70c68c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3011031d-1c5c-47ed-b797-47bcfa0cc93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069c01e4-5fbb-49b6-b730-901ec3788ef5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba33e3be-67e7-46e5-94e8-53e3e7cb799a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bec74a-157e-4ae0-abab-ccb9ecdd9e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91585179-ed38-4c24-ab29-1ccf804e9eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d522324-3792-4deb-a869-373f9e252c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edddb2c-b712-4b32-97e3-dedbb7df7daf",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c5ad5d-738d-43c5-9141-fedf5ac5582a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ccc955-1c11-42ef-b0f2-9481d4bae7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5590b74b-3398-4642-9781-985a8eb7c569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d90986c-5395-4815-99de-d3cb6bc29c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262edac8-b51e-4f6b-845f-c2ceb7089b7a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af20f461-e350-4b6e-b068-edd61c60533b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06e8b32-0d9b-48b1-8443-4b3b07e0f0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1433af-62df-4eee-bc6c-011058f81cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1f92e5-489c-4af8-9300-a56685b90baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8308244-f0e4-4e17-ac79-48153b53857d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e493ae4-7a7b-4de2-a385-663264318164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4e0808-7b84-4d02-aa9d-4d31ec6b34f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d18a9c-6cdd-4d95-9999-36e4b5908d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a332f0c-226f-476a-94d7-38922c473869"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17d5bf72-aaad-4475-b337-e9d6ddc96090",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82076be7-6424-434b-8d9d-842f1061f26f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9be262e-4214-4b07-abd2-cfcc463346f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5a28ceea-5e2d-45d2-917b-1c390bc93f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dbc0b2-9096-41f4-97f8-99aa93f60d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1812166f-ec97-414c-a2bb-9d5a44146156"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7671e7db-a3b4-4529-b039-c480e2b5e7cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e0c5b1a-e55e-4f8b-9f04-c61b5aa3b63c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aadc85e5-cde9-4b43-a024-6d0fa5891fa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71b9766a-0887-4448-82c1-7cdd169de1a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2506eae0-0ca6-4f47-b520-3ac1e9995c2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "59f3ea17-d267-4bb0-bccb-695c633f418a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88ddff1e-d7f9-4ce4-8a44-40911afd8a04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4943d94-2bfa-4864-9f58-3a6769f8bc15"
            }
          }
        ]
      },
      {
        "id": "4a37c3b6-de1e-4b43-9ad4-38721fde1941",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4edacdf3-ca9f-4226-9e8e-8b7624cc177b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8007f52-486c-4b79-810c-319e0b12bfaa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f55d7f8a-b529-4b55-b506-12ca0602c7a5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da83273-1577-4abd-9f65-11c1d9d867f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3426ac8-e44a-4b2d-846d-9789243c025b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7229f0b3-946d-4d6e-aec0-4601d670c2c1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7c206d-0d99-450f-a601-cb1b6088ba2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe07150-e8d4-4a43-8857-2674fe599f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3c3b68-0654-457b-9fac-b35111462127",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e48af6-0363-423e-b732-9e2278c27bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcaa01ca-1cde-48d8-a738-688e0dca5e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c32f99-b4bc-48e1-91ed-de80d52ab5ba",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74ee761-4f5c-4f80-ad8e-5501aef62e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc9c4bd-3ef5-4a9a-85b6-a8e7d400756f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21639e45-4573-420a-b3a6-36593de6d11c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb194d3-6622-457c-ae14-5acb4095fa1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9a1814-841f-496e-b855-64baf62ad8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e68a47d-ff46-4cfc-bc4a-cc8b8d9e252f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f1b6f1-d9b7-4ea8-8b9b-fb50623fa952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ef1bbf-9c92-42c8-89c5-fb9c9c624030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c043cd03-9a5f-45a2-ac2a-be8e26d0b38e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556f2ce2-b81b-4356-89bd-68c2b56a479f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59df3611-7653-4519-9d0b-8b53e2c9c8a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff3ec05-3d82-41cd-ae5a-90a4aa2e8f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b03381a-b9f0-46a9-950e-0cf0c04006d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e167690b-c8ca-4da6-b638-dca33d255e58",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed58721-fd6b-4923-8674-d78401fd768b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0ca7bc0-b942-4003-a8e7-0a56e8bc5ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81373970-8b41-4cd4-b222-434bf95825f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e874d693-9834-4228-9e22-04dda949c35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db0f356-0072-4061-9853-4588afc06dd4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4d1131-0bc5-4a6d-a96b-ceb962ed0c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7660b0c-835e-4b46-9e7c-14de1313468e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a505d023-c1f7-4df4-bd42-7cbc265fa8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26e5a5a-d5f3-4ee2-a7ca-8ae9fc280c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ddc77d-ad83-479e-8cbf-c6f284e9861e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8823afa1-ad9d-43c3-ae91-b424c8da703e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "076a0c02-ff70-4410-93e8-fcbe552d7a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c9a015-c07e-40a9-ab85-829746121a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9478bef1-158e-4a99-9d5e-4ba37037cb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d55ba1-972b-4890-aab5-b4d9d266e0cd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785ce1f6-bc88-4f10-80f9-abfdbc66d52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0aa892-2286-420c-9c98-b418cfa9e4b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7a5b12-f1bd-4d28-9e49-f0ef668503e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc1d3f5-5e02-4f38-8256-67e9f4fdf4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a84339-965d-4acf-88b8-3eca33274add",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc0613c-d4be-461e-8d7e-96f2bb6f3399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320c54bd-36e0-4023-bcbc-de7d844abce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7e1aa3-443d-474f-bbf2-5354cd83a88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46bd15b-1d18-487e-8c22-a914462c993a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1b23d6-fe41-4abd-aec8-575e2ad53efa",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7991358-b96b-4f14-8594-370ab0facd28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24858422-9481-4e00-830c-c17d87a62f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff70625-aafe-4cfc-8aea-506c707e5c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1003ee2-be17-46ac-9671-7cf60890f22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95dbc1b0-6f7f-435b-bd4e-c681c0015b7d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f370ff31-806c-4959-bdbf-fe7a59cbf6dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06e05baa-fa5e-4a5e-bea8-7a2f42661470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6262f431-0005-4035-8312-4f7eb3a5497b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608168cd-7ced-462b-a3ff-898d33a0b752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6e9fe3-5822-4139-88ea-ee1a3c011500",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b32d4e-73ef-4a77-adee-0d81c218a1d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fe63948-be5d-4a93-af3f-8aa6b7c9987b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1260f65a-a3d7-4328-9059-a3d9d0a48639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84d48e7-9daa-4a92-af71-61fc9b11e284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70e7f1c-c955-472f-87a2-be7f0e9f65b1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c482aa2-122d-4667-8913-2932221a03b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "558cc279-6e2d-422c-a7ba-f0947194a609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e882c0b-75bb-42e9-83ec-e33674d31d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d969eb1-b2c7-4df7-b086-65f1a57407a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bb8091-8894-4e1f-892b-abc1c33e4d15",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb15e02-7ce1-4f12-a730-053e9e3d0eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b573ef-2965-4b90-90c6-895a9b381545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e12a3bc-3696-47af-8f78-cf4c94f92cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9c31a7-6b7e-4b5c-9a7c-b4732658ec49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244217cc-86aa-46ba-b51c-56e47ad66869",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ee2fcb-3321-4ee2-bbe4-ef16c970f54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9876e5-3748-4c92-b357-77e10c0ad852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b918662-af4a-4596-a012-a9688f8ffadc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e60852-0276-4e81-bcd4-bcb440446acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfd87a3-9f18-4e4c-89da-d3c0ca6db78b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dce02c4-dd9c-4011-9ed0-f96c961e1c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451775a3-2945-4202-a11f-90d96faf30b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5209fab7-9b10-455a-99eb-ca92487445dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211cf2e5-c5c1-4bd0-a993-679b73a86701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446f4b15-d014-4745-8354-1cd906ba2f1e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3bf760-f299-4503-ad3b-288933424216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36c0a19-5889-4a07-a525-7b1f8356a507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d64bd7a-55ad-41d1-bba2-29b4da4240c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a39fff-8e88-40f2-9b46-925778d5810e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718cac3a-00c4-4ea5-a026-b906aadfb9fc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540d86dd-1602-406b-94ab-986f8220012d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d533d87-385f-4f3c-81e5-7f3219477396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4c1572-21dc-4361-974f-4fa9acbd1154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba28ad59-0eda-48f5-8a92-7063bb1339dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7619c4f-4d7a-4182-bdfa-a3cc606b4682",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3d2cc2-5474-4057-b877-acb2d9a5b3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8dcaa46-f19a-4e17-821c-42d5d0b4b262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6527423b-20f8-4d6f-bd92-3ecd24c15997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74cfc5bb-a8b6-4e74-9197-b8fb34518047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4991a62-78ad-4a92-81f7-fb13b274abde",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7ac8c4-c01a-44a8-81ae-788f4b24077a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f1575f-9509-45f9-a59f-4dfafbaf018d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c57cb13-7d09-4579-bcff-982eedfe2842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4e66e3-ef23-484a-99ee-028596303501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0b8aff-480e-4a5c-94e4-5ac9c51125f7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56ea6c9-cc07-4baf-aa45-a014d20e375a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd056625-abd2-4077-a7e7-f1a74279d1f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b4dde5-73d5-4a02-b8aa-52f271ea225d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f41f5bf-d031-41b2-8bf5-6acdebbd720d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db15f8cb-ba18-43b3-b7fb-60530fc6d2c1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cb4bef-9a03-4bcb-9ac5-32dca1acc363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4710602d-0926-4be4-a6ad-c7e55f3c9495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a67115b-9deb-4758-ae86-6a8a0b16f73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625c76b0-918d-4671-8ad9-3347b8d09737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30627131-4a3c-42dc-9fc2-c241de91f28d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73461c99-087f-48b9-bb9c-b36b2996cf2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f0518c7-9973-4653-8a09-84a9748c8824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cd83c0-0460-473f-a22c-8cfa669803dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de1c1ac-398d-4bbb-b05a-fc225eed2449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097ffa8a-d5da-4def-a204-883ac84acd74",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27465270-706c-4cc6-b34d-6d13f49b789c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85bff409-3edf-488a-a2fe-c5c96066ebef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79da49f1-56b9-4217-ad27-7ae6e55ac21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2b5343-b33e-4de5-a80b-17e8b49332b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced7bf11-07bf-463a-bfa0-c1a8a8ecebca",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed89ba0a-8a65-4e1d-b4a9-52dca91ae3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3209dcb2-7bf0-40be-a6db-5c3df2f3ab57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d473aa-8a29-42a3-b61c-26e678298a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e430a3-a931-403b-85f8-0f6c96e87c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb2f1d2-53d9-4c5c-bdf7-a7fae85aa1f8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697c2e50-f9bd-4872-8cdb-a2475329d9de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01f908ed-1f39-4b65-8681-dc45f60d97bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0fc442-b4cb-441b-b6b1-babdfa10600e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e6b5f9-35f2-4a72-95ed-41210e7a1652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de34c46-5811-45bc-9022-7e995806093c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15712ce2-edde-4fc3-a8e4-9dd814717ff7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1b640c1-7d75-4f84-8ecc-68d61cb46b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1af41a-4cf2-40c2-a4a1-e09cec9066d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c6fd28-7771-4ffd-a57a-9de6dcd9dbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898cfad8-0e6b-4767-97e6-8b23baa50faf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effedad2-6571-4c8f-ad99-c5da47e6d155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4db1ed3-9c23-4eef-a5c3-ed9bd47de48e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b95fcea-a372-4208-821e-b2a0c61e989f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4dc4c6-9f11-43ea-8c24-9c1e9be9ccbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596a4610-645a-4a4d-875d-69cefa9df476",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af0cede-bbe9-4577-9302-eae55cd269b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf9cbb3-55b7-4126-84bc-c2af15d1710f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df22e7f-8fe8-4141-8dca-242e3c14a793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4575258-f8e6-4854-82d6-f2af4d731435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dcb640-b2f8-4cba-bb48-26ad88ffa084",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abae23e5-08c4-4591-aa4f-671f3095f24c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfeb3907-fb15-4820-a084-37e46be93c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa906e7-cef0-43fa-a300-30e7968a1da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34111cd8-e119-4819-8973-5ffb7ac2429b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe288e8-ed7f-4b9b-85b8-d0eb8c9c1d22",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d69235-1d75-45ff-acf3-91ec47fd70be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b420c2e7-83a9-45aa-b9cd-9a9c72b4690c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9544d3d1-3384-4d3f-a676-3242d669f72c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03807cea-acc5-4ae1-bea5-c90001821186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60d9bc1-3122-4ce9-9d9c-f1892cf5cb29",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2fa0c9-fd8d-4d70-896c-68f18dca274b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "becf7209-2bf6-4300-b40a-f766bddc22d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d5d53f-34ae-4399-a2ab-87d1c398b604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb7b387-4fca-4415-a7d4-e86f5eefc9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eaffb9b-83cf-4887-8d75-504b34ec9045",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077aa47c-01eb-4a24-89da-7d0ccee016c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af695700-6e0f-4b6a-97e5-03d5f15a67a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69566616-b4c8-41c2-88d2-fadcd89e7557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f025d00e-6786-455a-ac3b-eb665b029ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede1c896-1d2a-4566-97b8-62a53aac6bf2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25418fe7-d6bb-4191-95cd-cbecbc3c0329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8352d0f7-d6b7-41fa-b05d-48c993cf10b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36813d80-2639-488a-8f87-bf34674ce5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d02f108-884b-4ee1-8ffb-d6b0d4f028df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6036928c-527a-48ed-9351-7a06a749850f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75e5246-7533-42b7-86c6-5fb675da207e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0c9a52-ab70-471f-b691-96bddfe29d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf373dac-add0-4e3b-a323-31da991e9842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2c775b-adfd-42d0-a091-896ba0db1b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763d7c94-7f96-4474-b21f-39e2a82dff22",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80f93c0-9b3e-4ed6-a1fc-e6cc2a2061c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984d90b9-32e2-4a53-80d0-34396d791659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4685313b-b021-4b44-b83b-ce3d4ba00cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc495183-c5fa-4be0-bbe1-f25a8b1e851a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06300af8-780a-4d56-8f6f-51175e2335ce",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e18b09-27a6-4d0c-8e47-2971a51751a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada4e923-78a9-4666-920d-c68a45beeab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2135601b-61b7-4dc6-aee6-8cea8d71d2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b71a4d73-4e24-4942-8f43-1f5329624bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460fff60-3488-435c-8f8c-a2d8fc24030a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70041757-558d-4ffb-8866-fd6366282644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f106e4f-8076-4055-b6cf-f5949b81fc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0987c8-785d-481f-a58e-df5639d98dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867508a6-9ea6-4302-95cc-4debc774de7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0aa4a8-5d90-4414-b31a-db6152dc5f5c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ab1bd7-1e24-4455-850b-2c0b085cec47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c78f67-311e-4ad4-8a3d-c25276e9cda7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c9bc1c-018c-4ec0-9acf-de1c1bf8a9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679b4b13-c510-4c5d-aa90-14043551ac91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f777e3d-bd1b-4e02-88d8-a05ee5ccb8dd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea36edf8-c0dd-47e7-b228-044dac9ebc85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f09d62-5b0e-46ea-9b49-d81b7d25646e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8ee7c4-6a34-416a-b206-1df7e9d919a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4b4793-bfd3-400c-865e-946565d54eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dde1507-9976-4121-8a7b-1804a7aca684",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102d7bae-43b8-412b-abbd-7588be5af281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df55ce6-9774-4431-b88a-67886dd2a217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd9f198-9c04-4d15-bb9b-7363c5311c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8400d141-f92e-4b04-8bc2-d1ddae5f7f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e89504-4761-41e9-8acf-3ed727b5a1eb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70e28d0-f488-4597-ab5b-d86e86285e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb5e9ea-763f-47e6-8a9c-9fe370ee688f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df79154a-794d-4ce7-8b17-163cc6983891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161b2a1d-97b3-4664-8f87-96b4d48dbd87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c2e21c-3b24-48e8-b3e6-5e10711e479e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8dd7a3d-023b-442f-a5ce-ae48b833d90d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ea1dba-0c98-4aaa-ab55-9384bc6a34d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3ce8fd-7833-44a8-b599-e611ba320d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2347daa2-c9f2-4ea7-8872-25460e94cb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152fb74a-ea0d-4aa9-9f06-d588b06db0b5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33856b6a-91d9-4d7f-8e22-6023ef27f280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0caf228-ab89-4ebe-9353-f3a6d7b217b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "169e71b2-e418-46c9-afbc-4c76bf72a91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f8b66c-d6d4-4ddb-98ce-3d1ced9fd6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f449f7f7-877e-48bb-a657-d572883ad156",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21db86af-9c89-456f-9e3a-c5a08f3125bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e722ba-fad6-4549-980c-384c8d345c52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aecd766-e6b9-4710-8e0c-de3455d86ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca32ab42-5016-4d97-9182-ad5d2a5df0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f53b442-519f-4561-917c-7e5ac31c638c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf01580c-6097-4454-9551-07b692246efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275cd5c5-e20f-4325-804e-8463e48d9874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717879bb-e9b8-436e-8ce5-e042ffc6f336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d335f3-04ae-4f03-beb0-a19bb20cefa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd16351-dc29-4f37-ad4c-59c5423f843d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee7d52a-ce20-45f2-ab33-b698d4c01c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af91c091-6416-458c-b1ba-96b4d40b89bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc026379-9ffa-4d36-a69c-436307dbd86b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0cfb1b-e488-406a-ab5e-5d8c59ec0fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2b7a0c-58ce-441b-a178-348aae648e8e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83301463-ad7b-43c9-82d8-acb688254867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f63de00-3c69-46e8-a917-e7a75aa331c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a4bf63-a8f5-4d05-a1be-7df8b3b0be75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2e8f34-b8f9-4198-a8b4-64ce73179706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d315d1e-1a6c-4a4f-82ec-87d1d41c840d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6a250b-97c7-4e8b-b892-72d54b295af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab72f71f-2c68-4293-ad95-42865d71fa1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56ab73a-27a7-4867-9297-5491b0ca4ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54142657-6aca-4f8e-af13-0e22e107b0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcafe8a-15b4-4628-96c5-3b7941fae9e2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417e1601-002c-4cf8-ba1e-7a6c48a45ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec3b362-25bb-4681-ba51-77d91d70b07e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd83aec8-11a9-4901-9144-d7defbf46888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1866caac-5133-4042-b434-e5bc7f1f35ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e193500d-78d1-445f-9686-380a06a6f92e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f43cabe-9e32-4940-84e3-5081e7a985da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7c11b9-c7fc-4842-b56f-83cf7b1e28b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5152965a-f850-450e-9e20-716d3516ec0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54da244-35c6-4a3a-841a-78287d22106d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d21a4da-4058-4efb-993c-976c32298313",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d335bf8b-fca2-4084-98f9-928e789a4fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8ef683-18ae-4180-8c18-cbc3cb4b3e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7809180b-678f-49ec-b41f-83f69c3c22ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1abda15c-9e09-4d87-accb-6c7c05d085fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3bd332-2c51-4023-8ab9-4fc5ceebbcb3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfee849-d713-4453-8f9e-7f6264328ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944a16d4-a349-4eab-b09c-f5876dc20394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a7c6aa-7fbd-4431-9331-6777b00936b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17aaa232-102f-4716-a8de-acdc76a917cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671e425c-c187-4e4d-ac7d-a18a0e8c5523",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b03215-c3c4-49d0-8e6e-ec0c5f5a3301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58574b5-032b-4c35-bb87-530716a718fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63601de-5c22-4787-9d82-0c35c6e79d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a8ab5b-beed-467b-8ca3-be85de246802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401340aa-40ce-438b-9118-48d9ba56618d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f7a785-b7c4-45ac-a7e4-04908055f071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88078be3-bc83-4997-85d4-ca685ed3c0ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "126e8f44-f098-425d-adaa-ad6f8a5d6742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785b2d38-a431-42c0-8983-4c4ee94fbb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280905ff-61b5-46e3-aaf2-1df476ea0f87",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b2bfd2-5369-4b05-a3f8-a7dc099748b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746e8ba8-61cf-4754-b66c-eae004ae4a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc15cb4-465d-402e-b5fe-3032ed66f2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23884390-7b17-49e8-8320-f67474050bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69281eab-6068-4824-acf4-cb48b3322269",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef03fe9-80eb-4624-b718-403c115e699b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fde6c8a-83ae-4f4e-8c57-546c87b4b5a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff1ff60-3eec-4eb0-a096-ec1eeba46bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4f8b73-c7c3-456a-8cb6-7a423fccf571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820bda03-3408-429a-bba7-0c79e06b033a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1fe187-12b1-4f16-ac93-7c16b27338a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c0124d-4639-4f02-b58d-fdcf6571f02a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7f30ec-84d2-4efb-86bf-f137ed13b436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6103663e-b23c-4c8d-bb25-ac9fe03e0965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e3f788-e68c-47d1-b978-ec317496ece9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb418b9-bf12-4350-98c1-9f6be6409ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40522592-9d17-4922-a90c-b645b2c7f054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c9a0e8-7cab-400b-a2fc-e482715bbd5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f77de4-b0a3-4d49-a6f6-cd69dff9f1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e581974b-f242-4ed6-9c0a-f26152799388",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d5e2bc-ab60-46a4-ad4f-4aacd31031d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8094be-5279-4d9d-b4b4-48b5c38fbc62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "247d021f-a9e3-4ec2-b1c8-8d837229374f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495c058f-7bee-4245-83a6-ea0a3ebdb359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f83fa5d-cdc5-48d2-b5d6-0dee593fffb4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459e8f4e-061e-402a-b0da-9656f287c2e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a837617-f222-41c0-8405-94c9d87e3109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d119a55c-573a-4e19-86c4-f0bbe4db8b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4e3b91-c368-4b47-b6bd-1bdfe8cb4ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890d7fa9-9ba6-4d2f-8b78-4d31fa0c56b5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b05814-8cbb-479a-8c6e-624e066ed4d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e93e2420-bf8e-4b87-a9c6-c7f6bfeeb69b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c1a469-cd55-4a46-b921-b85089fe7d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7446f419-a8f0-487e-8dd4-cde9036c3a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7357a5e8-1d44-4382-907e-00f4ccb37c23",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b8eff4-b849-49ce-88d7-bbb240f72e79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1a4ec1e-a105-4b3f-b9c9-dd2dd1fc4ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c6859b-3825-4ed9-b485-7223d957c111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d484a6-e8c9-4f6e-9b88-ba6ee4349964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1add72e8-1319-4863-a7de-7cc624c962af",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bff472-3618-4c64-bea4-dc020c671204",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2eb9eea-35ad-4537-b898-a349a09b8e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3c3122-ceb2-4e21-938a-fd7b39f00d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64347c53-a426-43a5-a11f-92f702c71693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afd846e-8a79-46d5-80b1-b1ac24750649",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790b23bf-f4c8-4ba8-9d4d-4a3a819cbc47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afef1e69-0825-4c98-8850-5998b8feaa45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e214d190-553a-41fc-a851-fc9e9bb91eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857c64fe-bc43-42ab-8e80-6fe76acdd776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ba418b-5471-4247-9c4f-dd532ebe1def",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3cbb3f-efbc-43c5-934b-9240064d1e01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aef1ab8-0927-4e62-8c6f-8c3ebaab4f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16c8291-6795-473f-8b5c-47b237c9c8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d950e8-b814-4ce9-bdc3-f9d8eb17dc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a57ac0-cc3b-4b81-9f83-ec85e95af4b0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f25847-7dba-4573-ba29-8ce3d57db4b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99b25a3d-00b9-41a0-990f-4a9cb213d1cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81cde8d-177e-4737-957d-4e76507b45ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65ba3aa-d809-4bd3-91f6-87a345b682f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8096c3d-f7c4-4218-ae04-c90307d9a755",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7feeddad-4c50-45ee-a4a0-53154b1a9e12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfc985fb-f24d-4710-bd22-6a86ac7a10f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28625a43-f712-4a8f-a79b-7ce2e12da77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f1105d-6530-4a1e-a1c2-24be300a1d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc134066-8d38-4f0c-838b-94ed7d81d084",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a979b0b-d179-41d6-bbbc-ca4fbc194e66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efb7d35e-adfe-4a9d-a4b1-1e51a95afaeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07323061-ddd1-42ff-8284-16fb4bca386e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3adf18d-6eab-4ee0-a4e0-4ba807a0c0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcafe3e-d34b-4eed-bfcf-987cbae69eba",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512fb41f-75dc-4621-af41-7e74617a2eb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4e8880a-b9ea-44dd-a5fc-023795227e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ed410d-70d7-458f-84e4-36d8fbad30c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5b3689-9784-4d24-8c13-ac6b1ef5cc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970baa53-e426-46e2-b36c-6e2f9b541983",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6e2c4f-2f85-492d-aa9e-f227d67d7f3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "574e8b90-26b2-4da8-8ff3-e43437ab20c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2e17b1-25fd-488c-92d8-acbdb28e3e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ba2bba-1df9-4cbd-a311-1b5100a464fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d3079b-1e5f-480a-8af4-5ca7a14638a3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e657416-ab4f-4a90-8de8-af74e5e090f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfe8f1a8-a8f4-4669-a978-0caf86455c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2c2da0-3aff-401a-beac-b6cf76e59ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87e582a-24db-4741-9a14-d83619589f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecde856-9420-4313-bf9b-e4d4a1b74b8b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6dddb2-bb0e-440e-b723-77311095c7d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7deab1ba-88df-4631-ba89-eb4d8d036847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f73bb02-3bf5-4c6f-9357-4fdb86bb9b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea2639b-9540-485f-8673-21c8e822ac60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c1f045-2b50-4b9d-ae79-5bd55bbc6232",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb578819-0b0d-42a3-aa34-1e1a8450b873",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fc93b9c-fb74-44ed-b8f8-cac78dc3149f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "801b8344-2209-48a2-80b0-e4a695443bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f094d9-6c4f-4ef1-85c4-638382065e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a80ce7-33ff-48bc-beea-1bda96881b40",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f1c6b1-01e6-4a9e-990c-834b8621b43f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4def32e7-e23e-46ad-9c51-a90449068e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ee57c8-3fd3-4c01-86de-d8dba6897b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6c513e-0710-4e1a-a789-818db84c2903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f331f443-cc4a-4e25-a182-f57813a77bb9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75f4f14-2b8e-4151-8afc-b71b2519a63e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bf85f53-e705-475c-928c-9c596d2bba3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd570a3-e387-4920-b403-6258cd37fbc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2871add-1d53-4d4e-bb5c-11501e12cbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acd63c0-ce63-4848-b4a2-62f2fd7f2ab6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40bf7b8-74c4-45df-938c-849e55b83ff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8324787f-cc0b-495e-ab3b-6e75488a3f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9a3b6b-b835-425b-bf1f-0c7f845183a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8477f39d-e8d6-44e9-af32-bbb3940b8415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8355be46-87dc-4c24-8ce6-0ec6fde7f324",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f5986d-b40f-465c-83ee-8dbcf314a4d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a29f028-00a2-4356-887f-7ce524776b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a087e9a-687d-4893-ab3d-4c77b696e09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b25580-6e85-4581-855c-f7265f0c7f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764351bb-d530-4d5d-a5ca-ee2e941227bf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584dbd82-3214-4ae2-8980-afc1ce244aae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "348312b2-a04f-4efa-a541-afb1317f11a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b847a308-eb00-4be6-9c7e-13ecb608f90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63ff969-f8e1-42c2-a76d-6ed5b0e2cac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4f3849-4264-46ed-b759-7b4c593a07e7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1352cc-2e3e-45dc-abd9-0cd8a104edf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8caa284-488c-44e5-a3ae-710c5b9901e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66890b7a-602c-49ca-94df-7ea320a79320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14be368-b55b-4419-b154-8f3303958ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffe70c4-000c-48ec-9f0d-ab03c315e60f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664324d9-fde5-4266-9125-249c475b3928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd5fda61-d221-4138-aa47-5693d3c3a505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4fef84-f1ba-4023-830e-0f3ce4762b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b80764d-308e-4db4-8382-0f99440b3d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b3065f-d177-4457-87eb-4012584da44f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ecf225-0b1f-4c0a-9f5a-06a06eee6e9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b0f8aec-4ae2-471d-bb57-05f0e67097f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0d8f7a-3046-4ff3-a364-6d1f3e840794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0618a96-0c17-4113-8a87-1d95f88502ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3814566b-9bbf-4030-8f6f-ab9e42bea33f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b554a081-0036-451d-97f0-16cf71fc1fea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "611bbe9d-3236-43a1-9a3d-d1d881d83784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a604db58-48fa-4946-bd77-2d1130ef5ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a148210b-a51c-41f6-b352-7bf37f01ae67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b9150a-3546-4b70-8880-8a5ff6a0af59",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecf4da4-d621-4e38-b3d5-d009e309c469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9adbefb-5789-4d6f-9f7f-b717c08cb311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5908d3c2-e8ef-4e0f-9f42-525dc07e38f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85747761-1adf-4ce9-bd90-e1cc9beab24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7efa243-3beb-45e7-8058-ff6090ec76a9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b790b0-7710-48af-93db-85e21f7ebf8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48808324-25cb-4c54-8f50-e7d34c5d5dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56aa51f-a5f1-4dbb-b104-85a73f8e3e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb610669-a949-45fe-b6d4-34c5140f730c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea8ea4c-990e-4c8d-9adc-bdb0c7c0ff85",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24cbdc4-ee32-4b58-837e-d4ea597c6310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae161569-adc3-4d72-8228-56d04fa1bccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236dc1fd-d164-4042-baf4-3dc8c9065c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc058d5-5460-4729-83e2-ceee1ee4229d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e876aab3-3f20-4536-868c-14d195c8dfd8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cc6cf0-bcb8-4689-bcd0-d375ab0e7d53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71721efb-8fa8-4ef1-a173-9dc342b2904b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3f7191-fc21-42fe-b70e-0ba87bb7cbe1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0604e95c-5a8f-4fb2-9ad3-3221a1837ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d5b53e-b8df-4d53-a11f-cec2490d9dfe",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff5b31f-5ef8-472b-9746-6bb560a98bd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b222da13-289d-4e89-8a70-7bf07f8d4abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20e959f-d3ae-4245-b4b1-21f5251cc73f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8397c4f-dc63-4fe3-b5a7-33b7cdbe2854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04238000-7a43-4b13-adb6-d511b25bd58d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364d6806-c4a0-4f7c-984f-f966b4754562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac626295-5cb1-4541-9ddc-e137b8c66e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd40797-db31-4678-801c-7eced94e56db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c09f461-b288-4b83-b761-31608cf9502c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ce169a-51a4-47ac-96fe-b56258352d2e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a0936f-6732-4cd6-947d-fc8bd21ee254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52f895fb-47fc-4adf-8472-6baa83221177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc1d2b2-df3c-4ffc-9f76-72c090f15942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e8ac19-9104-4619-8814-b9d6bbe28805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ea43ed-e577-4fe3-9b8a-611eda965322",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b53cb8-d1d9-4831-addb-4f8937db5a22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4682416f-ad12-4435-b024-26058c508f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9750f1-7d02-4e58-aae8-f2e13b256f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d40473e-76b3-438e-8b75-49f76814b08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd065a6-8292-49a2-8ee1-ec3ce6f33ea0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d7d9f5-d9a8-4548-be4e-91e821eea7ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe93924b-3f44-4192-939e-e05d5a69f23f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "462b4572-03da-4569-a482-9889d2e2a396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89ca006-e4ea-4c74-87f9-41f1e0a92b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352a7ed6-5fce-42c6-8414-a64d261891fa",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279656b7-fb1b-4e90-b01c-10572ab62633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bfc5ad3-f8a0-41ff-a2ea-e238c0421e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98772e7-9f96-4c99-88a7-2436af5e1c31",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73769c82-9d85-428f-a319-a693f1d8fce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f30ccd9-e38c-4bc7-9384-441920211cd5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ba08c4-6fad-4400-95d8-af25a58e8e04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ca291f1-4819-41bb-a7e2-ddb8f7ec6567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af16b81-ce27-4e74-82fa-75f45c23e19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cad7e6b-b96a-482f-8b9a-ccfbe5449db3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8506342-6e02-41af-8e61-7489becf8a34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2887563-c3ff-4299-b605-34726ac1ad9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c3960ad-aebc-4a9c-a896-1b08749c6e5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbb99db2-abdb-4ffe-bd78-a8a70e2ea917"
                    }
                  }
                ]
              },
              {
                "id": "e6903651-fe14-459d-991b-49c070ee1663",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0614e3c1-835c-46d5-a1dd-25c20497ad01",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d465b7-9634-4fc0-adad-60db0e2f20e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5f29f3b9-f907-4dff-9cab-49f4bf7771bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c304cafc-1bb2-4d68-9036-aeb76f85d7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dd8050b-e4b0-4dbb-8500-f8be11f9795d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d356bb22-a85c-4196-9d63-98b19062c2f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f239e551-9a8d-4d3a-94ca-1c1e723d5b45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d37932e-5193-4452-a4c6-ef0cc2c123a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e3220eb-081b-41cf-9ab1-7d33420ceabe"
                    }
                  }
                ]
              },
              {
                "id": "52eaa13f-6b03-4c2b-bb29-8f4b41013f1f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0c788424-cfe0-498f-90f8-656f50518964",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72049c3b-5cb9-4463-bc32-ce66e3bae25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "71a3fb0c-b33e-4581-ac82-baca9af178a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c00c37b-da88-4772-8a56-31119adb41dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0623818-790a-462d-8293-02ae9ad74a2e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f1294314-2ac0-441c-b861-168da19a3629",
            "name": "Positive Testing",
            "item": [
              {
                "id": "37987f0a-a971-4cd0-b74f-32b82c2f9f4f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f26f8f1-e86f-44ee-a306-8bb6baec1e34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2a5cc636-0f07-4eb0-ab02-a5f4f651ffa6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b1eb288-1268-4f52-ac0e-eb0c24815e2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcf2ceed-9622-44c5-ad6c-099845ce84bb"
                    }
                  }
                ]
              },
              {
                "id": "1abd7a41-9c8a-4ece-b03b-1b69e59ff834",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b9009ff-22a6-430d-9cf1-7c7df6dae76d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3d2b0765-61dd-43e7-9fb8-4c56a94a7984"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6076033-bf98-4bab-89fb-b0a9db943075",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa997c6e-0cb3-4cd7-8dae-ce02d8421411"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2d687d4-6af5-4573-a112-1a3e7e06fbb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "600f3712-4337-4ba4-9804-993a3642612b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81e8e898-eea0-4b5a-b8ab-4a40776c2528",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1aebd462-0d52-4c0a-b3c6-4e40a5f3f68f"
            }
          }
        ]
      },
      {
        "id": "10c70f8e-ba3f-4032-85a7-e85636c30861",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b0bc171c-4fc9-49d0-a30e-c9096a249254",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4520010e-dc50-4448-9fca-2a8401071e05",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd0e6baa-9189-49cf-8bf3-c7a1261c4530",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fc9abc-f928-4852-91c3-d07a36904f92",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "75680998-4210-4547-afce-f37f75277e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0b40a3-c2e4-4a7d-b8a0-151abf4f81ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e011ec21-8a97-4827-8756-fdbaa4103c71"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90a65172-deff-4e04-a0ba-ef7661b2b1da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8fff6a8-edad-43d1-ab37-e71a946f0a1e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f65a40eb-2472-4e7b-9507-5d72a6e6a921",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc330794-219a-476c-9edf-90d36923ddfb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0fb7e4f-eea3-4654-87c0-2044970661b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "649ec646-f6e4-4f3d-859a-c24f11762bef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d11e407-0cf7-4446-a5f9-8afbc20c3efa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6998504a-d82b-48ea-900e-60a38711a34d"
            }
          }
        ]
      },
      {
        "id": "7bc6fe0c-16c8-4c7d-a981-f17ae1ae972c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8946884a-1624-4353-9a49-f177b18776e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c8b5706-1ed6-4bab-9fdf-c361decf2f8e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0b3fb67-e147-4283-8ac0-1dd3337b2e11",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1a4b07-fd04-402e-a56d-a2d0e05d36a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40447ca9-a0f0-4651-ac72-1e6d666b5c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736ab4e6-f4b4-473f-b7e3-27ad2b0d051f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d4f52e8-d217-4cd9-b44e-07ec70e66098"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "debe98ae-4a89-4770-8abb-fd76c23a6788",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81e7298d-59dc-445a-b513-82c8a563b32d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84bef2b5-e1f5-4481-b5a5-fa62951f4b83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a024cbaa-4ab5-4d4e-a096-705ac2feb76d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e485365a-86fd-4c04-80d9-6b49f49a5f0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fdd40141-7e9a-4ad3-8aa3-48c17fda0ffe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e988489f-e8c0-47d3-85ed-fa2d5efc70d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3bcd138-a6f7-4bea-b495-552588d14adb"
            }
          }
        ]
      },
      {
        "id": "41471d2f-bfaf-4a44-b3e3-4930a8610db0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f2a59a93-92a0-492f-99f7-3aaa2ec4bd83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "045a7a14-d876-4fc8-b0b3-0ac1c730c1da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d20d597-0951-4f26-8b2c-03d492494f90",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee4ace0-3e9e-409e-bdee-a0424ef226e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3e4da82-c982-4bf7-8e99-ac65cbade94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad6fc3f-77b8-4376-8b10-5450828a1b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72c175d1-4d0b-483e-831a-038def3095fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98193c41-fd5f-40ea-94d5-4f45203ecdd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59178f09-8280-45b7-a631-f26b2517087c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "092b6c84-6e9a-4131-bec6-29740faf3420",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea1e81c9-a3dc-482e-8ef7-3d267285ea43"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4b866de-f0ea-44b9-b439-562d0dec64d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e5d8cba9-5819-4699-b2eb-28d2d716d8fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ac7edc6-05cf-461b-9021-e4f55d557757",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f57d97f-b968-4afc-b875-39f8450fd2d5"
            }
          }
        ]
      },
      {
        "id": "abc7410b-cdd6-46bc-8fcb-591e296ee867",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0b47040-de52-4e5a-bdbf-477573b33aa1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f5b95fe-5d1d-4723-9c31-93e1c28bb82d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4fdd80bc-d655-4e5c-8830-e3fa32be6409",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "133e3826-3c5e-4732-b4d6-528246b9a08d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60279c2c-f32c-4e44-a819-d7dfd47c3225",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 122.20238095238098,
      "responseMin": 13,
      "responseMax": 7326,
      "responseSd": 660.026378376699,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1713746203259,
      "completed": 1713746242314
    },
    "executions": [
      {
        "id": "41f2b709-67bf-41e4-bdf3-bc9282969c99",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7fe1a019-b6d9-4960-af05-71697ce21778",
          "httpRequestId": "e8177bac-510f-4fd1-830c-c8ded74796cc"
        },
        "item": {
          "id": "41f2b709-67bf-41e4-bdf3-bc9282969c99",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "87bc2dfd-d979-4fa8-9384-68be67f9ecf5",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "73e927cc-16a6-47a4-8756-76afb0df5d74",
        "cursor": {
          "ref": "a89ec91b-6bf0-4ef4-8529-8448f57cf27f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "736fa9b3-17b6-4c2d-adb5-f0ca7cf00273"
        },
        "item": {
          "id": "73e927cc-16a6-47a4-8756-76afb0df5d74",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "37ce029e-2ba8-4f15-a6a5-30f09412e252",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "fe17f4da-f162-49c6-97a3-c86e8733b915",
        "cursor": {
          "ref": "e0e85283-b866-4f33-b5c3-0738420816f3",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9e5e6e06-8a78-44d9-ac80-9d798cf51ca1"
        },
        "item": {
          "id": "fe17f4da-f162-49c6-97a3-c86e8733b915",
          "name": "did_json"
        },
        "response": {
          "id": "7eb4e917-76e7-4fdb-ad38-017e31ad7323",
          "status": "OK",
          "code": 200,
          "responseTime": 331,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178cbb89-a505-4293-983a-69bb2d6be5aa",
        "cursor": {
          "ref": "a97c00f7-f285-42df-ac15-1a068001d605",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3cc442d9-8c10-47c9-88ab-67160c6cce68"
        },
        "item": {
          "id": "178cbb89-a505-4293-983a-69bb2d6be5aa",
          "name": "did:invalid"
        },
        "response": {
          "id": "08c24716-2976-40ba-95c0-cf34a331f18e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 331,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178cbb89-a505-4293-983a-69bb2d6be5aa",
        "cursor": {
          "ref": "a97c00f7-f285-42df-ac15-1a068001d605",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3cc442d9-8c10-47c9-88ab-67160c6cce68"
        },
        "item": {
          "id": "178cbb89-a505-4293-983a-69bb2d6be5aa",
          "name": "did:invalid"
        },
        "response": {
          "id": "08c24716-2976-40ba-95c0-cf34a331f18e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 331,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e376b855-41b7-46cb-911f-910c25bc65c9",
        "cursor": {
          "ref": "c93dc919-a25f-4051-a8a0-f7fb36e71e5c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c1c459a1-e348-4f3e-af50-7ef44b9e3503"
        },
        "item": {
          "id": "e376b855-41b7-46cb-911f-910c25bc65c9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3d8b90c4-0765-4319-8740-184c3837e3d0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9498c2a-bcc5-48ef-ad71-26c1a9c572f8",
        "cursor": {
          "ref": "e487e515-944a-40e9-9d87-3c9dab2e2a16",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "24f6630f-6534-444b-9cb9-3db0b53fbeb3"
        },
        "item": {
          "id": "d9498c2a-bcc5-48ef-ad71-26c1a9c572f8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "141a9e7d-0a58-4f58-9d9c-aa433f6063a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f5c9ab-914f-4eb5-a1eb-c5cf2e800b6a",
        "cursor": {
          "ref": "5bbda0bc-a591-45cf-a0ef-3503768efa1c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "db600ed4-7319-44d4-83eb-a062dd905ed1"
        },
        "item": {
          "id": "e6f5c9ab-914f-4eb5-a1eb-c5cf2e800b6a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3c407896-888f-4432-bd2e-b8fa697080b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6e1418-7f05-4322-bae0-843693fca2dd",
        "cursor": {
          "ref": "62914fb8-0286-45bf-8e3f-b84863a704e5",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fb6bc2b9-0411-44dd-9d48-b4227090d3fa"
        },
        "item": {
          "id": "9c6e1418-7f05-4322-bae0-843693fca2dd",
          "name": "identifiers"
        },
        "response": {
          "id": "2a277026-095c-4a80-a308-2e3244736e26",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59267c64-6bcd-49dd-9cc3-cf8a8376e4bd",
        "cursor": {
          "ref": "5fb312ad-5642-4a76-a148-89ad43c2a292",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1c721667-6cc9-44a6-b3a8-d14680b39935"
        },
        "item": {
          "id": "59267c64-6bcd-49dd-9cc3-cf8a8376e4bd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c4b5d20f-b049-439b-b5a9-9fde6fbb4b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d025c251-c50b-493e-b403-62cfa823b92f",
        "cursor": {
          "ref": "03939508-3343-42ba-80e3-105555425839",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0d8123b6-b2f1-4631-901d-ba4c625d3fb0"
        },
        "item": {
          "id": "d025c251-c50b-493e-b403-62cfa823b92f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4fe4f6d9-3a66-4e79-a2c2-35a7b330cb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7513b58-cd43-4b21-8728-4537dcbf1c0a",
        "cursor": {
          "ref": "a723c579-020d-490d-bdf7-6ac7170bd21d",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "03c60422-bdb1-499d-85dd-f7fb63b3c3dd"
        },
        "item": {
          "id": "b7513b58-cd43-4b21-8728-4537dcbf1c0a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "aa287695-5537-4f5f-87e1-54424b0f4bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5a41ef-b305-4af0-a0aa-17570e9a37c5",
        "cursor": {
          "ref": "45e75c02-aebe-4c94-b6a3-228e4a6ed9aa",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e5fdc70e-18fc-4c60-b9ef-052077a7e0dd"
        },
        "item": {
          "id": "9b5a41ef-b305-4af0-a0aa-17570e9a37c5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8d12e042-7b69-48de-a2da-bb07c795c03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cc5d87-abbd-4a8a-8957-f5af2adc4d58",
        "cursor": {
          "ref": "be46b796-a7ea-46f4-b34f-4fa4a8c1e266",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fc4f7968-5859-416c-ab3e-f412b6c3393b"
        },
        "item": {
          "id": "d2cc5d87-abbd-4a8a-8957-f5af2adc4d58",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1ca5cd38-c821-48a4-b1d3-7976157255f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e660e728-d765-4526-966a-a04f441613aa",
        "cursor": {
          "ref": "60fa05bb-4702-43a3-8550-a84e2175eaba",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8a5dbb8e-22b8-4825-b154-187ae0d46581"
        },
        "item": {
          "id": "e660e728-d765-4526-966a-a04f441613aa",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "40ccb40f-0765-4831-bf59-da6de2e98bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89877c1-0dd1-4c19-bcc9-d1b3eaeda311",
        "cursor": {
          "ref": "ab881841-6442-4760-8284-07da138c5601",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7a669d26-c38a-433d-9bd4-946c28fdcc82"
        },
        "item": {
          "id": "c89877c1-0dd1-4c19-bcc9-d1b3eaeda311",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7f5de7b5-348b-4645-a5a5-7de794351652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ec0d03-4baf-4fec-a8a2-099060973372",
        "cursor": {
          "ref": "4abe2e2a-9fe8-4385-9f29-07ebc47d05f3",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "36191c73-6847-45c1-a674-b369e77733f0"
        },
        "item": {
          "id": "50ec0d03-4baf-4fec-a8a2-099060973372",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4f6b97a6-4c3e-4839-9534-10af40dba385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5114cc49-708f-4bdb-8bb2-43584552aec2",
        "cursor": {
          "ref": "378d561a-1a60-44de-998c-c2dbd11a35fe",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1b2b34d9-bb84-4e2b-b5b8-3476f6a6e2c9"
        },
        "item": {
          "id": "5114cc49-708f-4bdb-8bb2-43584552aec2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d7fd15c4-44ca-4068-95d8-73b0702d70a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e583491-ddcb-41c3-ad4b-ed5fba5ce469",
        "cursor": {
          "ref": "d0ebb33d-5bc3-4999-83bc-eb5b38f41b31",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5dbd039d-3265-4c34-92ce-3f147c207716"
        },
        "item": {
          "id": "3e583491-ddcb-41c3-ad4b-ed5fba5ce469",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c9cf5757-6506-4266-9b7d-19eafd550b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34268c91-3508-4caa-af9c-61a873d3b59a",
        "cursor": {
          "ref": "1a16e703-71a5-4a75-a6bc-206f4be28848",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "41cb6449-e81c-44b7-ad54-43f6a1d6bcec"
        },
        "item": {
          "id": "34268c91-3508-4caa-af9c-61a873d3b59a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1985ed1a-c4d2-4ead-a9ff-7a10aced97ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f1549e-c02d-4b29-a3e5-5e967107240d",
        "cursor": {
          "ref": "c91d784e-889a-4645-8215-bdf4afe9545a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7f75148a-1c53-4256-91f4-e3e48d50b91f"
        },
        "item": {
          "id": "76f1549e-c02d-4b29-a3e5-5e967107240d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9e4e1dec-95f7-46fb-9d41-552a79de9f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35974da8-00d7-461e-bc28-3edd2aface7d",
        "cursor": {
          "ref": "85cc1148-6e9c-4233-9376-f6bd1d9d2490",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "24fdb32b-0fed-4414-86f3-a0ee9ea4dc73"
        },
        "item": {
          "id": "35974da8-00d7-461e-bc28-3edd2aface7d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5b030878-cb32-4136-99fe-f074ad664d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e742107-f538-4e5b-93d6-b1938f0290e5",
        "cursor": {
          "ref": "27d66135-fe63-4bc1-ac8b-bd5064e544ce",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "18559add-0e2c-4652-801c-9aa6846bbee9"
        },
        "item": {
          "id": "9e742107-f538-4e5b-93d6-b1938f0290e5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "213ce1b5-bbc9-47c5-96b2-dcf94a3e650e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043a8107-bf61-4653-9d33-6b71665d3664",
        "cursor": {
          "ref": "1cfc6122-87d7-4b5c-87a7-3e6d7c8f47b5",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "527dc533-e195-48af-bdba-345645f61989"
        },
        "item": {
          "id": "043a8107-bf61-4653-9d33-6b71665d3664",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f82ef7ab-c4de-426c-8257-25d5921184bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768f2180-71a5-4d70-9898-1f381d721c3b",
        "cursor": {
          "ref": "18948978-09e5-49a9-abd3-4ebd62675312",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ab60f768-ef75-4c74-ba96-d2c8e93e5c8e"
        },
        "item": {
          "id": "768f2180-71a5-4d70-9898-1f381d721c3b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9af162b2-3f50-4816-9e29-4290fb2b7c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc64464-4948-4191-a544-9e6a29a44f4b",
        "cursor": {
          "ref": "196e21af-7780-45d0-b580-d767e6898e06",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d1f40d72-3718-4577-a1d8-807f409f54ff"
        },
        "item": {
          "id": "5fc64464-4948-4191-a544-9e6a29a44f4b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6c4b12f5-221f-4f3b-bc78-4c557f98a66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231edc21-ec4c-4e99-abe7-bcdf3790bbd7",
        "cursor": {
          "ref": "ddc024b7-ae12-4179-96af-ae31845c9d96",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3d8ad403-3fa9-4abb-bfc1-c6635fb9249a"
        },
        "item": {
          "id": "231edc21-ec4c-4e99-abe7-bcdf3790bbd7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9bcb3305-6fb8-4be7-a888-34cce9b88463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7ae27a-bc3b-4629-9ba7-0cf2e975801a",
        "cursor": {
          "ref": "ef62e843-af32-40c6-86b5-5cb23961cd18",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6e5703c0-c9ab-45fc-8389-95d69471e75e"
        },
        "item": {
          "id": "ab7ae27a-bc3b-4629-9ba7-0cf2e975801a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b8aff6dc-8c85-4af9-a979-9ecdc836a22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084134ad-f314-468e-9dda-0b7cb9c9f12f",
        "cursor": {
          "ref": "88931219-23a5-4859-929b-a487f60b4168",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cc7147ba-86dc-4fc8-bae1-2aacccdf95ed"
        },
        "item": {
          "id": "084134ad-f314-468e-9dda-0b7cb9c9f12f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2263553e-1e15-420e-babc-8c0459b7f553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3061ec7-07d0-4cff-9c5d-33427cffdb41",
        "cursor": {
          "ref": "318b3262-de08-4a37-bdd0-2f0fbc1ab5b3",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d115dbc6-6113-4abf-8cdc-349dbc407876"
        },
        "item": {
          "id": "d3061ec7-07d0-4cff-9c5d-33427cffdb41",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5b3e890a-9187-4472-b4a9-ba21ceb0659e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e23bf6-159c-41d0-8044-e2443cb56d8c",
        "cursor": {
          "ref": "d3ef63a7-7717-42cd-90c9-3db74f244ed7",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a296771e-2c6b-47ad-82c0-a01bfeea2035"
        },
        "item": {
          "id": "a8e23bf6-159c-41d0-8044-e2443cb56d8c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fec6ae6b-bbd6-40a8-b74a-9ddac8a0b45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6970759a-e624-4233-aa34-73ec5a2c2b47",
        "cursor": {
          "ref": "a9c4a883-0a35-4d90-ace4-08197f556ecc",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7224b414-346a-42f9-99da-d168cc2d27c5"
        },
        "item": {
          "id": "6970759a-e624-4233-aa34-73ec5a2c2b47",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8491d974-bffc-4240-b2ac-341f2a8bcacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f306506-5a87-4af5-a620-6b607ee646bf",
        "cursor": {
          "ref": "81d3e6d3-6f7e-4bfb-bea6-5a3dcea9774f",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1dd6f78d-056f-4632-93cc-bd16f4628d10"
        },
        "item": {
          "id": "1f306506-5a87-4af5-a620-6b607ee646bf",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2da24b1e-ae79-4a01-b2c6-a4f22e9a5c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03048597-074b-4d29-8630-39fa897eec68",
        "cursor": {
          "ref": "ca318e70-2994-4aad-b58e-b6ebb4d73c2c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "58c5e762-bec8-437a-8dfd-d6e69da29531"
        },
        "item": {
          "id": "03048597-074b-4d29-8630-39fa897eec68",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a89a77a7-4f04-4c3e-a43e-2df59560f285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633f52c7-cf02-416f-97b1-cf0a01cdcea6",
        "cursor": {
          "ref": "1e92fafa-d998-4f2c-97da-cfb527e55394",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6cca029c-fa52-4642-ba60-a9f7a43305ae"
        },
        "item": {
          "id": "633f52c7-cf02-416f-97b1-cf0a01cdcea6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2bfcc8b1-fb65-4827-8aed-f7685cf4a710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d36d9f-df58-4d02-aa61-2988dd3b4a74",
        "cursor": {
          "ref": "c637a8dc-ffcf-4efc-b48c-ad638c67fe8f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b0f2f868-213c-4405-b460-28c28fe94183"
        },
        "item": {
          "id": "75d36d9f-df58-4d02-aa61-2988dd3b4a74",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0540f68d-a8de-4359-8bf6-2470e8fd0099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dce7f42-2550-4d85-a287-869adca476c4",
        "cursor": {
          "ref": "1270648b-e8ff-4568-8a04-79a4db4d696d",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c6ce8933-c3b5-4753-b695-98e33a653636"
        },
        "item": {
          "id": "3dce7f42-2550-4d85-a287-869adca476c4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4b09aa30-5433-44d4-b35c-d995f1b39366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb9ff61-ee20-4f49-9000-e84e49697eec",
        "cursor": {
          "ref": "56db6f3e-f26a-40bc-ba31-a0ce7b71a2c9",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8d9b5bbf-9de8-49c1-8dc6-9c6ccb20a8e2"
        },
        "item": {
          "id": "2fb9ff61-ee20-4f49-9000-e84e49697eec",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "86e609a6-1fe0-4f29-ae2e-1dd36a3d0626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63220c6d-44ea-4cd3-a52a-d48235291648",
        "cursor": {
          "ref": "cf0580b3-c2e5-46e5-93b9-a81b3f053cde",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4f10c300-2de2-4d3d-8831-fc3a18e6cbe9"
        },
        "item": {
          "id": "63220c6d-44ea-4cd3-a52a-d48235291648",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "45c39109-cf99-459a-8574-ecbdddda54ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a181ee2-bfc1-4ed7-8583-d470895ffd4c",
        "cursor": {
          "ref": "0938404c-b700-45ab-94b2-27330b61b9d7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7926d0bd-0185-48b8-9a11-408be1784b13"
        },
        "item": {
          "id": "8a181ee2-bfc1-4ed7-8583-d470895ffd4c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6a660240-fd89-4ae7-afd4-b63267c12c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997d58ea-6b69-4c42-b722-ff312bc02832",
        "cursor": {
          "ref": "122ea902-48f9-4601-9014-19b52bfa2be9",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "38e42767-c06e-413e-8b63-7f7f537446dc"
        },
        "item": {
          "id": "997d58ea-6b69-4c42-b722-ff312bc02832",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "01d3dbbd-d1b7-4dee-adc7-01af95769f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47e9c97-ef20-44c1-925e-b42925f8a6a6",
        "cursor": {
          "ref": "5584d5bb-0d98-4112-8bb9-a2688fae3128",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5aeae289-0fc8-4456-b5cd-410b1c1a6dec"
        },
        "item": {
          "id": "c47e9c97-ef20-44c1-925e-b42925f8a6a6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e437a5b6-56e0-40dc-ac06-2f9a45a8e204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aded9ab4-29af-40d2-a98a-fbeb3823a4a8",
        "cursor": {
          "ref": "ae3b4afb-fc7a-4571-9894-cc107ee42b6b",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8311b41a-72c1-4880-9bc5-3a57893a7f5a"
        },
        "item": {
          "id": "aded9ab4-29af-40d2-a98a-fbeb3823a4a8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7709335c-fe41-4282-8785-a35d60e1d5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f9eaac-02fb-462e-9bc2-504367720b5c",
        "cursor": {
          "ref": "d69580ba-9c6d-4313-bab6-a51f4f2e595c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "97eb15f0-4893-4a9f-808f-06739bdcf69e"
        },
        "item": {
          "id": "44f9eaac-02fb-462e-9bc2-504367720b5c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fa97dc87-8d6b-42c6-9c00-dc28e1c8172a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690cc654-5b11-444e-8f85-d2b68767efb8",
        "cursor": {
          "ref": "7151f1ef-8e6f-4733-be48-4643f72f92ef",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5af860f7-f338-4fda-8b58-ea3b1e7da171"
        },
        "item": {
          "id": "690cc654-5b11-444e-8f85-d2b68767efb8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "97dcb899-4c1d-4b6f-94ea-391acc30f1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06898e4f-1cec-4c9e-9103-94623ddc148b",
        "cursor": {
          "ref": "de842751-0d37-412a-8901-cb29cd63cd3c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d74dd453-7279-4b40-b64d-cc1f65b92d5f"
        },
        "item": {
          "id": "06898e4f-1cec-4c9e-9103-94623ddc148b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "87e381eb-4af3-4f96-9f57-38e17bc0365c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0601c7-7ec3-4d04-b5b8-06406dfa4ce8",
        "cursor": {
          "ref": "4946266e-eb88-4486-8227-888ce1732053",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8cd0d4ea-879c-44d4-a4a7-4791e8c58076"
        },
        "item": {
          "id": "6e0601c7-7ec3-4d04-b5b8-06406dfa4ce8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1ce4f1e7-9212-4fd9-b9b0-749ab80db62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23578f0-ca04-4205-bbb2-ff6534543247",
        "cursor": {
          "ref": "6270d220-f70c-432d-b582-9bcdca7fe0eb",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a323d9d6-107f-47d7-94dd-b5fce5afd15c"
        },
        "item": {
          "id": "c23578f0-ca04-4205-bbb2-ff6534543247",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f1d16a44-48ca-4965-9e68-5ae6ee1315c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1cc852-3c32-43b6-9853-5e5aaecb9ff1",
        "cursor": {
          "ref": "7ae81728-6a13-44c9-a71c-95855489e57f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "34261266-4313-4338-89d1-a9927f27f887"
        },
        "item": {
          "id": "6d1cc852-3c32-43b6-9853-5e5aaecb9ff1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5edec056-5543-4517-ad90-4b8ab6b8597d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9631d1-d2d8-4fc6-865f-316a056eeb1a",
        "cursor": {
          "ref": "c25104ae-d627-47d4-bc89-91e849c3902c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e2ab1829-c46a-4ce7-9335-d31a9c31442a"
        },
        "item": {
          "id": "ec9631d1-d2d8-4fc6-865f-316a056eeb1a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d06a67c1-7da9-4981-8650-c5f9681cbc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ba11bb-8f64-4518-bd72-e133ab1b5021",
        "cursor": {
          "ref": "e4616426-85d3-4d36-9820-37d8fb141b39",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c90e99ff-64d9-4367-8d8a-021e62f51528"
        },
        "item": {
          "id": "e5ba11bb-8f64-4518-bd72-e133ab1b5021",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3b318484-d15b-497e-a27d-ed632f04dfb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d441d9b-0c49-47f8-85ed-47e229673939",
        "cursor": {
          "ref": "76266088-5100-4d9f-9d45-4973e650284e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "946de7d9-88bb-43a6-9417-e7c0a01a620e"
        },
        "item": {
          "id": "7d441d9b-0c49-47f8-85ed-47e229673939",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1f27a405-6a4b-4903-8eb3-1b77f0b05481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ed57a3-80ad-4f58-99cd-6acbec32a91b",
        "cursor": {
          "ref": "f875284c-d967-4fcd-9102-259242e4c8cf",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "59b3a212-8369-47cf-a5dc-52139e945d86"
        },
        "item": {
          "id": "73ed57a3-80ad-4f58-99cd-6acbec32a91b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3f226a34-6c80-4417-b0f9-6bca7920b041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1538480a-ca87-4d05-8d92-3c19b7d25875",
        "cursor": {
          "ref": "ae1784bd-ba22-4abe-9039-b30270d5597c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5ab3fed9-7369-4993-aa19-61fdc2c1f3d5"
        },
        "item": {
          "id": "1538480a-ca87-4d05-8d92-3c19b7d25875",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "411250d4-8b15-4d9c-9b06-bf8ca6766672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75a1097-1728-454b-a9cb-9bb0f53b5cc5",
        "cursor": {
          "ref": "9507f1d9-78bd-409b-a6cf-b58f0afd25c5",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9225bae1-0161-400a-9272-e516fec8adcd"
        },
        "item": {
          "id": "e75a1097-1728-454b-a9cb-9bb0f53b5cc5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7adbe649-65a6-434a-9957-57fe1c20c972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96536fc3-e284-47ae-9d50-1bec2b885fa4",
        "cursor": {
          "ref": "f4862983-4db1-4d7b-adbe-1ff041e87976",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c0c530a8-4110-46c8-a378-d6edab875aed"
        },
        "item": {
          "id": "96536fc3-e284-47ae-9d50-1bec2b885fa4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "74fcfcd1-4f6d-493e-a50a-3eb238d31795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9482257-d28f-49d0-9023-e21bf915713e",
        "cursor": {
          "ref": "f2bd1a13-bf34-4693-ac13-15222495b157",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ec5eec75-28d3-4d4a-a4aa-72b2fc5b91e4"
        },
        "item": {
          "id": "b9482257-d28f-49d0-9023-e21bf915713e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5e23bf76-668a-4414-b5d1-f2b21ca1da70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e060ba-0b96-4331-8947-574d87e7dd71",
        "cursor": {
          "ref": "b16b713b-175a-4cb8-827b-4b9d950bead6",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bff23fd6-ecf2-44ff-a768-4df53f7f7a81"
        },
        "item": {
          "id": "28e060ba-0b96-4331-8947-574d87e7dd71",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7837c3c2-6734-4ffc-bf21-d6e633d1adfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67be1b93-f520-4a0a-b281-9773ee300713",
        "cursor": {
          "ref": "bbcb4573-ab80-4fe2-bc48-27e8320386ed",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5910ad44-1951-454f-9207-49083c2da675"
        },
        "item": {
          "id": "67be1b93-f520-4a0a-b281-9773ee300713",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fa67b60c-7158-459e-a06a-a589842bacad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f5599f-6219-419c-938a-c58fad5beba2",
        "cursor": {
          "ref": "3ac6f96b-e365-4f89-ad97-c6bdb8fd36ec",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ebef0f4e-d4d4-4d2e-b616-2f8d9da1327e"
        },
        "item": {
          "id": "13f5599f-6219-419c-938a-c58fad5beba2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c47118da-a73d-4676-86da-0371832b1675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12879edc-fb73-48c9-b5e4-a2b08f7b6d08",
        "cursor": {
          "ref": "70a5a9c2-d236-4120-8be7-ef6db25689e7",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "840146b4-5a75-4b1e-a716-f861980ae370"
        },
        "item": {
          "id": "12879edc-fb73-48c9-b5e4-a2b08f7b6d08",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a8b0aad0-36b0-4553-9454-fb379bf031bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b7a2fb-954e-44ef-892d-8fdab00fe0e2",
        "cursor": {
          "ref": "3ae79a4a-23ad-4b62-b057-2a167858f466",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "01c4043c-72a7-43d5-bbf8-209b498c746a"
        },
        "item": {
          "id": "d0b7a2fb-954e-44ef-892d-8fdab00fe0e2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fa3fd70f-19b1-4bb9-b236-d317c94cff89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d097807-2065-41e6-924d-cd860f4e7022",
        "cursor": {
          "ref": "1e800185-9936-410e-8320-06497e08a559",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ce6fd07b-2ed6-44a8-a836-0c801dce0696"
        },
        "item": {
          "id": "3d097807-2065-41e6-924d-cd860f4e7022",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3ac1b25f-7c23-4e7a-b30a-efb2cd66adda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a3debc-8ab8-4a26-a077-72a75b519d6a",
        "cursor": {
          "ref": "aa2cb3cb-1658-4852-a786-a85fcd6ff8dc",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9cd1e970-e142-4adf-aa24-716c779361a7"
        },
        "item": {
          "id": "13a3debc-8ab8-4a26-a077-72a75b519d6a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c3251147-1dda-407b-b574-6f2f5fac4e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f1a044-f19a-42b3-8d6f-2efd00ce4288",
        "cursor": {
          "ref": "a8c9107c-92ea-4602-8c61-fdc6027ae171",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1c2a8f75-c6c9-4b43-b9d2-519406ac70a0"
        },
        "item": {
          "id": "81f1a044-f19a-42b3-8d6f-2efd00ce4288",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "df7b863d-d984-4a90-89c2-bbd7e36ff94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651a8ba5-6df4-4752-851f-f4b0ebe45266",
        "cursor": {
          "ref": "c94003a2-05b3-4e7a-8d4a-4deb4e86f787",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1b2802b6-4f4f-4f21-9f95-496c54c8f181"
        },
        "item": {
          "id": "651a8ba5-6df4-4752-851f-f4b0ebe45266",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "457b4a6d-7d34-4529-8035-95e6948a8568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b2195b-af95-4eae-8b4e-680fd62234aa",
        "cursor": {
          "ref": "f555a0e5-7fd3-4968-8a63-b03ebca06f92",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d5d93af2-6e7f-4a8d-a360-25eccd1d4c95"
        },
        "item": {
          "id": "c0b2195b-af95-4eae-8b4e-680fd62234aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cb361b45-1688-4a0f-8c93-35e75579e4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5502d8b7-fb1e-46ac-952a-f92e656282cf",
        "cursor": {
          "ref": "2ef9e43f-d102-4ac8-82a3-d663937a5539",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c578e07f-c902-4d7a-a8c0-0b10b4261c4d"
        },
        "item": {
          "id": "5502d8b7-fb1e-46ac-952a-f92e656282cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "08712959-fd8a-47d5-94db-caf6c6830b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac72b10-9c96-4291-b3d1-54d63e178618",
        "cursor": {
          "ref": "77c6a8a0-3ced-454e-93d2-16d51e635ee9",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ca3a6aa2-9c4b-4148-befb-73b08f44b302"
        },
        "item": {
          "id": "2ac72b10-9c96-4291-b3d1-54d63e178618",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f079c227-d716-4fce-9de7-55b1088158e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3341c7-f57b-4dec-bef8-f86540b6b349",
        "cursor": {
          "ref": "02bcb735-3400-42fe-a2fa-c49d1e9baf99",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5bcef14b-cce9-48be-83d5-d9236b5269b1"
        },
        "item": {
          "id": "0f3341c7-f57b-4dec-bef8-f86540b6b349",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5d221245-3f7d-44e0-86d9-cec474d4caaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eefa674-2bf0-4459-adbd-23368ba3b27e",
        "cursor": {
          "ref": "7aa9ed77-3916-4eb5-a94e-6f8bc23e78a7",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0311a6d6-13e2-497b-bf70-9b006191c9b6"
        },
        "item": {
          "id": "2eefa674-2bf0-4459-adbd-23368ba3b27e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "adf405dd-9d6b-47f7-bdf1-835224171b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7421ed56-f400-4e02-837b-d7d98eb8ce82",
        "cursor": {
          "ref": "b8b89795-d04a-454e-8fbb-077557a0c4d4",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2197abf4-5829-4e98-8895-11ece83a85c5"
        },
        "item": {
          "id": "7421ed56-f400-4e02-837b-d7d98eb8ce82",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "073bb87d-0e64-4986-b31c-50bc368460fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14a4d0a-3851-461a-9b47-7e25caffb08e",
        "cursor": {
          "ref": "3c4b5c06-3117-4866-9ac1-e99bb2697919",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "968fafc3-0b07-4b51-a2fe-1ecae4ad0ac7"
        },
        "item": {
          "id": "c14a4d0a-3851-461a-9b47-7e25caffb08e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e2321e49-b547-4013-acb3-c180276afbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b209d8b9-56b3-4e05-8b66-15ecdb886582",
        "cursor": {
          "ref": "6ff85b92-7720-49d2-a67c-1e3ca9b533c7",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cf126877-3f2f-4251-bbd6-12ffc89fa4a2"
        },
        "item": {
          "id": "b209d8b9-56b3-4e05-8b66-15ecdb886582",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3d4052f4-1e36-4962-8688-d6c660684088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1793291-c714-4a4b-84b4-338f22ff3144",
        "cursor": {
          "ref": "dfb2ca2a-8fe2-4cc5-9f77-e81ea3a3bf6b",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "152c3464-7a0f-492a-a885-7f0d9eaca642"
        },
        "item": {
          "id": "b1793291-c714-4a4b-84b4-338f22ff3144",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "de32727f-bf36-47e0-9bcf-0eb0283b65a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7852a52-6615-4e45-b4d7-dbd89bc91034",
        "cursor": {
          "ref": "2ab14c98-1598-405c-b823-2b46f855d3b0",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "79a75ec6-2037-42cc-8205-c709c3716301"
        },
        "item": {
          "id": "a7852a52-6615-4e45-b4d7-dbd89bc91034",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0b3af64e-af38-44f7-b309-ce224fa4a913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0eecc3-2458-4154-ad62-356cc1af1c8e",
        "cursor": {
          "ref": "4dec6115-58eb-4e38-ade2-e292afa07a58",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "10fda633-d288-4280-b321-3994ad9ad61d"
        },
        "item": {
          "id": "bd0eecc3-2458-4154-ad62-356cc1af1c8e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9e7a83eb-2ed3-4a68-8fcc-1fd6526872d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34baec87-c975-4742-ae7c-9157ef0b9a75",
        "cursor": {
          "ref": "08851711-1c3c-4ba3-bdcf-9eee72b02c03",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cdd82f04-7245-41f1-aeed-8c8d0e06f167"
        },
        "item": {
          "id": "34baec87-c975-4742-ae7c-9157ef0b9a75",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "aed7bc31-444d-4af5-9230-0d7694a2c44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3057cb-1ea6-4e85-8b33-37df03628d8d",
        "cursor": {
          "ref": "ecd5e987-00c4-4f1e-a75d-8b6654e9a5ac",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "179dd5c8-2f7c-4a38-8c35-2961d1c82331"
        },
        "item": {
          "id": "ac3057cb-1ea6-4e85-8b33-37df03628d8d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "549315a1-79b2-4af8-aaa7-822af47ff36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61465374-7ae1-454f-a2ef-599aea580823",
        "cursor": {
          "ref": "fb0f5e9b-d08f-424c-b87a-1be8ab3dca19",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2e9601c3-2b14-4552-ac92-92f823044a2c"
        },
        "item": {
          "id": "61465374-7ae1-454f-a2ef-599aea580823",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0701a6c0-7403-4e37-87c4-c9a08def2de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07be6e89-2d79-4470-975d-5324330fe455",
        "cursor": {
          "ref": "b019a005-08dc-48c0-bb0e-feb16a04a100",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1908eef1-bf47-47c2-a12a-86de0a73fc27"
        },
        "item": {
          "id": "07be6e89-2d79-4470-975d-5324330fe455",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "196d47d7-9f1d-4908-8cb4-52e5316ec65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b2ffd0-b52b-49c5-aa7d-b175e9b03f0c",
        "cursor": {
          "ref": "c8e5ccdb-8217-49ed-ab3d-4ed127e5d575",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "37b65d20-e000-4605-95d0-7fcddb6a9a5e"
        },
        "item": {
          "id": "48b2ffd0-b52b-49c5-aa7d-b175e9b03f0c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e70c77cc-e601-402e-85f5-b11b950e2d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a35d2ac-a1a5-4602-bdec-16d67d8ab784",
        "cursor": {
          "ref": "88be91fd-8669-444e-b2fb-2e2370ee0048",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4eda6129-4bf6-45de-b1dc-3aac24043638"
        },
        "item": {
          "id": "9a35d2ac-a1a5-4602-bdec-16d67d8ab784",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c35606c6-ca27-4008-8465-44612d76a491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b3433d-a784-46b3-b1af-83e2f3965f4f",
        "cursor": {
          "ref": "9545cc40-9937-450b-b7aa-145922a9d8cf",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b0f6b4e6-5036-427c-a5d8-ee53ea149922"
        },
        "item": {
          "id": "93b3433d-a784-46b3-b1af-83e2f3965f4f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "56082b51-2c12-4135-aab5-c4e1a12bd071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76e2baa-c521-48a4-92eb-911f9590b51a",
        "cursor": {
          "ref": "e6254373-9132-429a-aadd-85244cf99c02",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cf00eff9-ddef-44bc-9e7a-e2d91b107fd7"
        },
        "item": {
          "id": "b76e2baa-c521-48a4-92eb-911f9590b51a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5fd7b7cc-48d2-412b-b3a1-7a79c3782833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d5e345-8d38-439c-9498-2cb4f2e3cfff",
        "cursor": {
          "ref": "b01f183d-d0b1-4f98-bd99-b0db13f84ea7",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e12f6c4e-e90d-4135-813f-25649ef9ed8f"
        },
        "item": {
          "id": "05d5e345-8d38-439c-9498-2cb4f2e3cfff",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ffd1872a-46d7-45d4-acf0-0f2b0c429996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7a5369-4dae-497b-a293-c3c386142cd5",
        "cursor": {
          "ref": "a7bb9f3e-03b2-4e3d-93a4-5aff67ea6b25",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "68efa39d-47a6-4369-8140-31671868d5b1"
        },
        "item": {
          "id": "3c7a5369-4dae-497b-a293-c3c386142cd5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b8995ddf-053c-4fb9-bcda-8028d2a5a4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d330bc3-2071-4ed4-83f5-34ca4f4e41ec",
        "cursor": {
          "ref": "ca15c770-2dbd-491b-a768-db75f1b96100",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "87a56758-e181-47eb-83a5-67010478d599"
        },
        "item": {
          "id": "1d330bc3-2071-4ed4-83f5-34ca4f4e41ec",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9a25fd8d-66db-42a0-bdf2-6db6907ec2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4592657-8dfa-45b8-ac40-7ed96c8edd24",
        "cursor": {
          "ref": "8ef4c68b-c123-4bca-a2e0-6f87f97bea8f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "74e848b2-660f-4146-a0ea-d3b59fb344f7"
        },
        "item": {
          "id": "d4592657-8dfa-45b8-ac40-7ed96c8edd24",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "363edb16-38aa-4549-a478-c158fde5a9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8b9b40-85a0-4d04-b11d-d3d6f2abcd68",
        "cursor": {
          "ref": "ac007ab4-97be-445a-82f0-b59369947a87",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "51b3e9f0-a33b-4a1f-b60d-654756ce57bb"
        },
        "item": {
          "id": "7b8b9b40-85a0-4d04-b11d-d3d6f2abcd68",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fb91e066-a90c-4fec-abef-e5f4dd991cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bc2907-4dad-44a1-94f7-9dc42c6cfcc2",
        "cursor": {
          "ref": "1f135163-5d4f-461f-81e8-cf7c85ce21bc",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "64ef0441-d98e-4e09-a498-6c131cb0d747"
        },
        "item": {
          "id": "f1bc2907-4dad-44a1-94f7-9dc42c6cfcc2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "73580fc6-d996-422c-b054-edd07f29df5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4630a75a-9cfe-45e5-99b3-f9c695449834",
        "cursor": {
          "ref": "66062dac-289e-401f-aea6-c7e090cdc0b4",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3f8d53e4-af2f-4472-97b8-8f9e5f4f0b6a"
        },
        "item": {
          "id": "4630a75a-9cfe-45e5-99b3-f9c695449834",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ee3f15d1-c9a8-4551-8803-edfbbcb024c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d7af4a-702e-4632-8e39-294fdceebaab",
        "cursor": {
          "ref": "ed83c29f-ed67-4a45-800f-f3a0a1bc8071",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "28ad1d08-b5e1-498f-a743-c68c0c4c6332"
        },
        "item": {
          "id": "a9d7af4a-702e-4632-8e39-294fdceebaab",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "133aeaf5-ec61-4f3e-930d-b94520a0358a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbd55e6-7f30-4b01-b6be-7533f7c35f05",
        "cursor": {
          "ref": "55f81487-1a84-4715-a442-b5863b1e9fba",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8d36b868-6c34-4168-9c42-b27de51d9df9"
        },
        "item": {
          "id": "4fbd55e6-7f30-4b01-b6be-7533f7c35f05",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ce8868a6-846f-4f07-81d5-2b8455e93683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57596ba5-0ea6-40b9-b3a1-fd6017c71217",
        "cursor": {
          "ref": "2f402d83-453c-431d-b60e-f2bab30b60d8",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "82a746ed-168b-4439-a33d-ff9932f921ae"
        },
        "item": {
          "id": "57596ba5-0ea6-40b9-b3a1-fd6017c71217",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b6a10958-c6d7-4d98-8f21-ae9513a187cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c60e10-7769-421b-887a-b9d2a4a8b51a",
        "cursor": {
          "ref": "6fefe607-54c5-4060-bcf1-63950c80cf16",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "de45f3b5-47f7-4c24-b4fc-eac235998972"
        },
        "item": {
          "id": "23c60e10-7769-421b-887a-b9d2a4a8b51a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "17d5cc37-40fc-431b-9e39-87a147376310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f244eaf-028f-46a1-877c-5efbdf68ccc5",
        "cursor": {
          "ref": "fce066f5-af19-42cb-8f43-fed7773036d1",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5cec7db6-c6c2-4e96-a092-9207d44f90b6"
        },
        "item": {
          "id": "4f244eaf-028f-46a1-877c-5efbdf68ccc5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2ccd0758-7192-4c24-aa67-e1f5c8db9e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d194728-53f3-4b6e-a931-2b84b1c8eca8",
        "cursor": {
          "ref": "3f26a394-65d9-49c1-9d0c-1f8fff10f689",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0d00ab92-9f2a-4c5f-9463-cbde774b80ee"
        },
        "item": {
          "id": "5d194728-53f3-4b6e-a931-2b84b1c8eca8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "aafb06c4-ea07-4dec-a622-e6fe9172e887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30eaea68-b7ea-4ac6-bb53-d52def3f96b6",
        "cursor": {
          "ref": "c8897e92-3430-40d0-ab31-d1ce0c0c5383",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1ea3f1cd-9030-4c25-aa1c-22adf88b1cb7"
        },
        "item": {
          "id": "30eaea68-b7ea-4ac6-bb53-d52def3f96b6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "15368130-44c9-4dde-b39d-17bbc90870d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8130e7-2422-404e-8573-0c058964a542",
        "cursor": {
          "ref": "7a4242cf-557f-4652-bc9f-e3a404ff5919",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4a5aef10-7e5e-40b4-914c-e0bcce7a99cc"
        },
        "item": {
          "id": "5b8130e7-2422-404e-8573-0c058964a542",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "27854cae-cfb2-4ca9-822b-d6284a52de69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad49c6f5-3e02-4b95-ace3-7610672b0e8e",
        "cursor": {
          "ref": "4f080d44-6d4b-468d-b1b7-9c8813bb6706",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "49c0a0ab-b159-463f-b8e5-6b236c71b838"
        },
        "item": {
          "id": "ad49c6f5-3e02-4b95-ace3-7610672b0e8e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ced715e8-71f7-42bf-bf8c-6eb362784eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa3ccd8-1303-44db-8af0-2d9cdac79941",
        "cursor": {
          "ref": "40179ed2-edd9-4246-aab4-b3bc698c49d6",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7aa73634-1e51-41a9-b774-feba02da4886"
        },
        "item": {
          "id": "daa3ccd8-1303-44db-8af0-2d9cdac79941",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fb1096cd-d103-47f1-aa9d-6905dfd9a5d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51c56e9-d6bb-48e5-9735-9b967156986b",
        "cursor": {
          "ref": "e5b48da4-ab88-4652-97d6-300b39c3d419",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "eebcb0b7-df51-4761-a1ab-fb1f0bdabfd8"
        },
        "item": {
          "id": "f51c56e9-d6bb-48e5-9735-9b967156986b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "28bded90-54ae-4c0e-a6c7-4dbec7f30886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b45b5a09-e331-4c6e-9546-9db69b40b10f",
        "cursor": {
          "ref": "af4b5a40-6922-48ac-8c75-8e867c4f65af",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2752d667-9cfa-4e04-9960-d7ce736d0355"
        },
        "item": {
          "id": "b45b5a09-e331-4c6e-9546-9db69b40b10f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "173d87dd-1d30-4678-8b64-92cc6b3da4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d37faa04-1707-4e51-98ee-80c725643d77",
        "cursor": {
          "ref": "f0556fe3-e5c3-4439-b45b-b7c3660a2035",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "223fa258-b7ca-47f7-a610-02358fe3be43"
        },
        "item": {
          "id": "d37faa04-1707-4e51-98ee-80c725643d77",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "90f70b80-2f37-4b7c-96fe-8bdafac15f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "19f1a974-0094-4b35-81a2-b1d130db0a0f",
        "cursor": {
          "ref": "ebce8b7a-974f-4a73-a4eb-b4551fb239f8",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1aedaf5a-03ef-419d-aaa7-187c4b586690"
        },
        "item": {
          "id": "19f1a974-0094-4b35-81a2-b1d130db0a0f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c12c1620-36d4-4b50-9804-75a42b5adfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6e4df5f6-cec6-491f-bd83-a381102859c1",
        "cursor": {
          "ref": "0057cc47-0fbc-42f2-8e7d-3a918daab594",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5862e4d3-1322-41c0-a81f-c7827d10f95b"
        },
        "item": {
          "id": "6e4df5f6-cec6-491f-bd83-a381102859c1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e00524a8-833b-4691-abad-1af3026f33cc",
          "status": "Created",
          "code": 201,
          "responseTime": 4901,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9807ac92-1b06-47ed-a8c7-8da26b4120f4",
        "cursor": {
          "ref": "c6409c7b-395a-4301-9086-a23d08402d43",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0c695177-c128-40d1-adb6-d321b1733220"
        },
        "item": {
          "id": "9807ac92-1b06-47ed-a8c7-8da26b4120f4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d603d4bb-c420-46aa-ad21-fc7aca8d8f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d39c0e5f-7b76-467a-ac24-d0d1200ae596",
        "cursor": {
          "ref": "8dc13208-b805-4e73-87ed-d96f1f12d1a1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4b294ca6-ca80-4551-ace4-d022b31cf5ee"
        },
        "item": {
          "id": "d39c0e5f-7b76-467a-ac24-d0d1200ae596",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7ccadc82-2d87-4152-86dd-2ec899d694d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "544e8f70-2d3b-4c63-91f2-c0d4b85f063e",
        "cursor": {
          "ref": "ec852817-f823-44cf-81eb-2c978e4990cd",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4df210c2-2f4d-4023-8418-4f68c90787c7"
        },
        "item": {
          "id": "544e8f70-2d3b-4c63-91f2-c0d4b85f063e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3f40e9da-8fd1-4472-9065-7a9a4d1c4738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d02b45-6d26-4f67-a125-f4aabeaf92c2",
        "cursor": {
          "ref": "9b0977dd-b1f5-43b7-8a26-78f2c998ba9d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9e859d49-8b3c-4c37-aeea-fea20776a958"
        },
        "item": {
          "id": "b3d02b45-6d26-4f67-a125-f4aabeaf92c2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "179a33d4-fd88-431a-943e-6b2dbbd23d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1fe9a9-817f-4ad7-b2f5-70d4b65dec3e",
        "cursor": {
          "ref": "bdd07450-2f5c-4594-bd47-de8e2c249df7",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c87543e5-29f9-4ab9-9267-35682f078dea"
        },
        "item": {
          "id": "0c1fe9a9-817f-4ad7-b2f5-70d4b65dec3e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "542b7e51-9dff-47d0-8b8a-9f95cdac6bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3380865e-6ccd-49ee-96dc-35843e73488d",
        "cursor": {
          "ref": "51145be4-171f-4878-92b9-f1fd587519c8",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0fdc1038-173a-44c0-9943-44f9bc1ceed8"
        },
        "item": {
          "id": "3380865e-6ccd-49ee-96dc-35843e73488d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c114d777-7a30-4d7c-9415-da1ea24dee69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619491e3-0863-4779-8f30-d12a14e51862",
        "cursor": {
          "ref": "2592afa8-421a-4ed8-9524-fbf7f95813ff",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4e37503c-4cbf-454a-825c-d2319c6a93df"
        },
        "item": {
          "id": "619491e3-0863-4779-8f30-d12a14e51862",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d1674bee-8135-4996-8dee-9d24a8df0402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694e468a-8038-4c35-9699-460723d91229",
        "cursor": {
          "ref": "0ee08b46-fa49-4261-9ad3-b9d66a898728",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d19a00ab-f1fd-468f-9bf2-9a74862aefc7"
        },
        "item": {
          "id": "694e468a-8038-4c35-9699-460723d91229",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2e3457d8-7e96-480e-9413-0e3e58bc9910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103bd2b3-215f-4d5a-a19a-c39add8a8fd5",
        "cursor": {
          "ref": "94b0b65b-e823-410c-8f0d-7ae0ac2e41be",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1e48e90c-cfa9-46c1-afb0-1fc8c75a3432"
        },
        "item": {
          "id": "103bd2b3-215f-4d5a-a19a-c39add8a8fd5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9f93efa0-6f2e-45a3-9eb2-bafacf4576f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cb5178-9f18-4a9c-9658-4a2032b449db",
        "cursor": {
          "ref": "3412910e-eba3-4c82-aa09-85338beae764",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fb7d0605-94f2-4698-97c9-42e99fe87dad"
        },
        "item": {
          "id": "d7cb5178-9f18-4a9c-9658-4a2032b449db",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a6467eb7-cc1d-4342-a6d0-2fd7249d1deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7770f9d2-0548-4b69-9211-a7ae553b6e58",
        "cursor": {
          "ref": "50e7f2cc-01c7-41dc-b625-24d9d9d2fa6c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6f37c266-2b6a-4fa6-adda-de3f45672255"
        },
        "item": {
          "id": "7770f9d2-0548-4b69-9211-a7ae553b6e58",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "afde03e2-3ea2-460f-a234-4866b7c5745d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab89f32-e650-46ec-a039-fc61d2fcbe5f",
        "cursor": {
          "ref": "4d3a9c57-bcdf-40d7-b0f8-18fa2afc1164",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "258c027c-94df-498a-952b-4c46af18fda7"
        },
        "item": {
          "id": "1ab89f32-e650-46ec-a039-fc61d2fcbe5f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4b08058e-1102-4a61-9657-56af515cec37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88090a82-2509-4818-8af1-5ba2cd058aaa",
        "cursor": {
          "ref": "eac71335-d9c8-4fe4-9503-13f4c0ab0099",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b1eabbae-4048-4f5c-8c87-676a65a5a778"
        },
        "item": {
          "id": "88090a82-2509-4818-8af1-5ba2cd058aaa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "496305e2-dc53-4f5e-9a19-d9fabb8be38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc46782c-93e7-4a23-8855-770a9fc3e75a",
        "cursor": {
          "ref": "ecec0afd-89a7-454c-94bf-f88a4f47b339",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7fef5294-61e9-44ef-a137-f523988a1459"
        },
        "item": {
          "id": "dc46782c-93e7-4a23-8855-770a9fc3e75a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6207c5b5-b71e-48b1-a743-b7dd3272ecc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09276bb8-f6e0-423c-904f-f6e9f183878f",
        "cursor": {
          "ref": "a22dba53-f8ed-4969-a52b-2271c9d221e8",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4aa432dc-df6c-43be-aabe-6acc22db9e93"
        },
        "item": {
          "id": "09276bb8-f6e0-423c-904f-f6e9f183878f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7dd3f544-8d62-408b-bc59-22bef82f8905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0274e4-e25c-4d68-b6fe-8870415564af",
        "cursor": {
          "ref": "b1e5555e-6162-4c22-ab8d-13f8a05a6764",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f428c515-cf8b-4fd3-8208-4d3225efd4fb"
        },
        "item": {
          "id": "bd0274e4-e25c-4d68-b6fe-8870415564af",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a582017e-5938-40a2-a7b3-04ee8f867cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e79670-521b-4c82-b2fa-cddecb5b29d7",
        "cursor": {
          "ref": "c970c3a3-0f9d-4ba1-8bd1-02079adda785",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b0605c99-d35e-4a00-9e94-99438300f3a4"
        },
        "item": {
          "id": "94e79670-521b-4c82-b2fa-cddecb5b29d7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bd5a3872-bfbc-4049-b8a2-547c50a56868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f86a4f-1b02-471e-b5ab-ea5106b97caa",
        "cursor": {
          "ref": "acd836b2-7e44-44ae-a8df-853448f427b6",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3a0e7f66-6e7e-4448-bc93-070d6fbcf7b8"
        },
        "item": {
          "id": "71f86a4f-1b02-471e-b5ab-ea5106b97caa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "953cdc98-9ba8-4d6d-894b-a2f9d81b7453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb01aa5e-72a3-4611-9e04-830f7dfaeac7",
        "cursor": {
          "ref": "f86cb86d-9136-45b7-96b2-7e727d541617",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b2ad5092-5e0b-4227-83c5-a577c623d9cc"
        },
        "item": {
          "id": "fb01aa5e-72a3-4611-9e04-830f7dfaeac7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "457f1414-e3e0-4df0-b584-5ce3b1143a5a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "d276eda4-2db1-47c0-a008-24077a6f341f",
        "cursor": {
          "ref": "be513678-45d0-43fb-bf90-4a3a90d69dd6",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fa296d76-36a2-4642-a6aa-76c8355b31f6"
        },
        "item": {
          "id": "d276eda4-2db1-47c0-a008-24077a6f341f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d1bdde10-051c-46e6-aa08-bea699859fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adca71f9-1259-4fa1-92bc-40c418f1cd49",
        "cursor": {
          "ref": "dabc5c66-4717-4b02-8021-26f7cef3f903",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ff2eac12-9389-417f-865e-779ad9622956"
        },
        "item": {
          "id": "adca71f9-1259-4fa1-92bc-40c418f1cd49",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c79b7dc6-de72-4055-b020-c6c92b53690c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a956ac60-981d-47e5-bcdc-cb13343181e2",
        "cursor": {
          "ref": "4adf2b93-70a5-477a-b4a6-1a3f09e2a697",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "534d8e10-8eeb-4be9-ae0a-6d33c2e5d44c"
        },
        "item": {
          "id": "a956ac60-981d-47e5-bcdc-cb13343181e2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4c491fe0-8641-4c4a-98ec-8461b0bdbb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9fe2f7-d8de-44ef-a53d-b3b46855657b",
        "cursor": {
          "ref": "3e555ef4-5036-4c91-8f2e-d0d1756cc543",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b5b2dd99-88c4-4e8f-a198-fcc7ec3f89af"
        },
        "item": {
          "id": "ff9fe2f7-d8de-44ef-a53d-b3b46855657b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c0be6a89-dfc5-4bea-992e-5926716091fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52c1855-7f0d-4094-b257-51c4f196b0fa",
        "cursor": {
          "ref": "8a23ad49-0267-4897-aa70-28b7f3a96dfa",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2c177c33-7c33-44cd-89e9-c9473cd2c11d"
        },
        "item": {
          "id": "e52c1855-7f0d-4094-b257-51c4f196b0fa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4669161d-12ac-4416-9e00-3972abe97b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9502f92-8826-4974-af9e-a08dee4c26d2",
        "cursor": {
          "ref": "e61b9933-2ac5-477c-b257-c236427947a5",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5ed7cefc-138e-4a7c-9af7-7d65dd246dff"
        },
        "item": {
          "id": "c9502f92-8826-4974-af9e-a08dee4c26d2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e6b9fb53-508f-448c-8c64-51736b2a92d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302b18c2-99b4-47f0-837f-665ac4fa6c35",
        "cursor": {
          "ref": "97d95104-da78-48b9-9b22-816b782bd6da",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "371d16c2-5006-407b-afc8-74d5fd6b8877"
        },
        "item": {
          "id": "302b18c2-99b4-47f0-837f-665ac4fa6c35",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "22c7556a-d004-4e10-98cd-9395f9d1ce16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62a66ef-2b5e-439b-9e3c-2fd7430107f8",
        "cursor": {
          "ref": "7a93538a-ea29-454d-b3ad-73c43d9035d6",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a241fd81-c20c-44b5-9ea8-230a374c55a3"
        },
        "item": {
          "id": "d62a66ef-2b5e-439b-9e3c-2fd7430107f8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ccf48e34-5b56-4125-a9a3-215ce7442b88",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "83754589-0806-40a4-a468-d0abacb93650",
        "cursor": {
          "ref": "1aa80461-a9ed-42e1-b618-d7230efd8c76",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9a4d8169-72d0-4d70-a3c1-f6790d54b6cb"
        },
        "item": {
          "id": "83754589-0806-40a4-a468-d0abacb93650",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8c04f80a-9cff-47d8-8924-0c6c6d0d252d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce442f3-55e6-4cc2-a9cd-3a0101540323",
        "cursor": {
          "ref": "2dc17eb5-e7ba-4038-b7a5-abd4b2915f68",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2f8c32c7-54b6-4666-8ae8-210cbd1d427c"
        },
        "item": {
          "id": "3ce442f3-55e6-4cc2-a9cd-3a0101540323",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a31cada5-d417-4d33-a705-323abcac5fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8af6c3e-bdaf-4e5b-ba34-7ae10918a7b5",
        "cursor": {
          "ref": "c019cb70-3b2e-4866-954d-0ad25a5b4547",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "386ba7d3-6e97-4238-8296-f755758a959a"
        },
        "item": {
          "id": "a8af6c3e-bdaf-4e5b-ba34-7ae10918a7b5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ff9c5bfa-77ce-427d-8323-622d48cfc2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248bb404-21c8-459c-85fa-8c71d0087b18",
        "cursor": {
          "ref": "d762d5f5-7282-4f05-a68e-a982ffc75ad7",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0c9d4bd9-71cb-4306-bca0-2a8311b2c722"
        },
        "item": {
          "id": "248bb404-21c8-459c-85fa-8c71d0087b18",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cfb72cb7-9381-4fa9-a30d-508ee83469cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66078bfa-f4be-4e99-9ec9-91c34a949e3a",
        "cursor": {
          "ref": "5d545a3f-1a2f-4cb8-af82-e3e89f91d733",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cd03c5fd-600c-4935-a7ae-a27b010068fb"
        },
        "item": {
          "id": "66078bfa-f4be-4e99-9ec9-91c34a949e3a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cdffacef-c9d7-48c9-b38e-d4f1d85b7b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52396cc8-6d5e-4492-a1e9-742fe27a1428",
        "cursor": {
          "ref": "5895c364-3e66-422a-bea2-941cadab07d1",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3c915f67-1e13-42ce-a5f4-c38a98644b93"
        },
        "item": {
          "id": "52396cc8-6d5e-4492-a1e9-742fe27a1428",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "03636f5d-9d99-4679-ba66-604bca7eed08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa041d5a-205c-44b1-b087-6093e404a509",
        "cursor": {
          "ref": "4f20e139-f4a2-45db-bdb4-ff11567e0c14",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e4904398-109a-42c9-b80e-26399b6a289f"
        },
        "item": {
          "id": "aa041d5a-205c-44b1-b087-6093e404a509",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bcecc521-7d52-46f9-ad50-62c94c390a1a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "bca8aad5-2159-42ee-af2b-38b1e23855c4",
        "cursor": {
          "ref": "fcc5dd2c-24cb-4c92-ad3f-ed972c905dd7",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9ea833db-e06a-47e3-8ebb-9f954bc3ebee"
        },
        "item": {
          "id": "bca8aad5-2159-42ee-af2b-38b1e23855c4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8136c12c-eae3-4abf-b1e6-e7d6c5d482d5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 55,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "069c01e4-5fbb-49b6-b730-901ec3788ef5",
        "cursor": {
          "ref": "734c67ba-4791-4979-9c3b-e9eede4c907e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "eceda02d-4e80-4fc4-8433-8da8f0f35c98"
        },
        "item": {
          "id": "069c01e4-5fbb-49b6-b730-901ec3788ef5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8e79dab3-cde8-42c9-9a91-0d3249e7534e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "6edddb2c-b712-4b32-97e3-dedbb7df7daf",
        "cursor": {
          "ref": "18b13f43-4072-4f99-ac2e-3876a7be786e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1c0f6c43-8697-45ee-975e-0d714f83eff1"
        },
        "item": {
          "id": "6edddb2c-b712-4b32-97e3-dedbb7df7daf",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "50387495-1ba6-4b7a-aa97-362fe571ffe7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "262edac8-b51e-4f6b-845f-c2ceb7089b7a",
        "cursor": {
          "ref": "bcda394f-b46e-445f-b281-2722c87cf9c8",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3cdb344a-e2f6-4c92-9fce-cf023d6a8223"
        },
        "item": {
          "id": "262edac8-b51e-4f6b-845f-c2ceb7089b7a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1dd300bc-3add-4390-9108-29056e6ca935",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 84,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "f8308244-f0e4-4e17-ac79-48153b53857d",
        "cursor": {
          "ref": "be1c6444-6d48-431a-9694-1b5da4d1d251",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ae398afc-6e63-4e3d-9e29-8f7b7f9fa33b"
        },
        "item": {
          "id": "f8308244-f0e4-4e17-ac79-48153b53857d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9e9737e1-c79c-4a57-8207-8ab297332d50",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "82076be7-6424-434b-8d9d-842f1061f26f",
        "cursor": {
          "ref": "1273e584-f6a6-4ad4-a9de-146bf23170f8",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "32ff2b03-3806-4fc9-8414-e335640fd148"
        },
        "item": {
          "id": "82076be7-6424-434b-8d9d-842f1061f26f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aa2da153-0a42-42c4-9308-0cdc8d0c0492",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55d7f8a-b529-4b55-b506-12ca0602c7a5",
        "cursor": {
          "ref": "60865aed-3b39-4376-b4c2-d8a8a978add8",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4b83f7b9-153b-438f-8cba-f6590426f1a0"
        },
        "item": {
          "id": "f55d7f8a-b529-4b55-b506-12ca0602c7a5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "87307922-1774-4d3c-8ce4-94dce7112d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7229f0b3-946d-4d6e-aec0-4601d670c2c1",
        "cursor": {
          "ref": "fac5be28-390f-44e4-b39f-fe6f0cc08b1c",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "15491910-6fd4-4b9a-94f2-9810aca9f4d8"
        },
        "item": {
          "id": "7229f0b3-946d-4d6e-aec0-4601d670c2c1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3caaadca-6a0f-4042-b115-00bb30e187b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3c3b68-0654-457b-9fac-b35111462127",
        "cursor": {
          "ref": "1e28a7c1-13db-4694-a3ae-2556bae4e740",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "225414f0-e4b7-475a-879c-59561f214ad7"
        },
        "item": {
          "id": "9b3c3b68-0654-457b-9fac-b35111462127",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "19ceb8b5-8c26-4cad-9a46-ee5aed3e38fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c32f99-b4bc-48e1-91ed-de80d52ab5ba",
        "cursor": {
          "ref": "de129a1a-e420-4f39-8c3e-e5fe9311b233",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "315c5179-cc8e-4354-943a-354ab4ecaff6"
        },
        "item": {
          "id": "71c32f99-b4bc-48e1-91ed-de80d52ab5ba",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0e08cb13-de42-4636-8e81-885d621160a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21639e45-4573-420a-b3a6-36593de6d11c",
        "cursor": {
          "ref": "f0138a59-4e6e-4d12-a0ac-b6ad24479344",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ed351fa7-32f7-4af9-a678-796775592862"
        },
        "item": {
          "id": "21639e45-4573-420a-b3a6-36593de6d11c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2306b573-3897-4a9a-8ba0-a411e40f7633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e68a47d-ff46-4cfc-bc4a-cc8b8d9e252f",
        "cursor": {
          "ref": "c16e42c8-3d3a-48f2-b433-ed1f45a31a22",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "636ac6e0-8cbc-4911-8aa5-5c5b6e21f513"
        },
        "item": {
          "id": "5e68a47d-ff46-4cfc-bc4a-cc8b8d9e252f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "98154613-7129-4359-876a-f87e88caa682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c043cd03-9a5f-45a2-ac2a-be8e26d0b38e",
        "cursor": {
          "ref": "6ba9308e-9bb9-481c-8168-9556db4e5f43",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "215c3ccb-aaab-43ad-9bec-3abdfecc6235"
        },
        "item": {
          "id": "c043cd03-9a5f-45a2-ac2a-be8e26d0b38e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3d0b1c23-757e-47e7-977d-df984017ac92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e167690b-c8ca-4da6-b638-dca33d255e58",
        "cursor": {
          "ref": "526ad4a7-bb4b-4ca2-a371-492f6e68fe2d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0481277e-fa2c-4443-9163-41a2e3225ecd"
        },
        "item": {
          "id": "e167690b-c8ca-4da6-b638-dca33d255e58",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b20335f4-a376-4ff9-8126-e285b8b20141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db0f356-0072-4061-9853-4588afc06dd4",
        "cursor": {
          "ref": "1b0f767d-3cd5-46d4-985e-ee21ef086fe0",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b77b93e1-2fcc-4dd5-b4c5-4e1b79f31b81"
        },
        "item": {
          "id": "2db0f356-0072-4061-9853-4588afc06dd4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ec4d46b7-f8a2-498e-94d2-ed780debd1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ddc77d-ad83-479e-8cbf-c6f284e9861e",
        "cursor": {
          "ref": "bafe12f1-7d19-4f05-bb0d-47ee6e485d62",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2f1653f4-d2b1-4ed8-9477-6ac9584903fa"
        },
        "item": {
          "id": "f8ddc77d-ad83-479e-8cbf-c6f284e9861e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2b6c1a2e-8833-401c-805b-67cb47ad6883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d55ba1-972b-4890-aab5-b4d9d266e0cd",
        "cursor": {
          "ref": "ea6a8d94-5b30-45c3-902b-0aa26573cc9f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ca4a385d-61ca-4b6f-8ba9-eff9fe6aa9c5"
        },
        "item": {
          "id": "08d55ba1-972b-4890-aab5-b4d9d266e0cd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e0611191-ba6b-4a23-a350-bac5e7745ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a84339-965d-4acf-88b8-3eca33274add",
        "cursor": {
          "ref": "a9ef7341-c9eb-4927-9470-57b8be6898c4",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b4bbb2f7-797a-45e5-8818-181bc15fc8c6"
        },
        "item": {
          "id": "07a84339-965d-4acf-88b8-3eca33274add",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c184926c-5eb1-450d-8e71-e045e6849e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1b23d6-fe41-4abd-aec8-575e2ad53efa",
        "cursor": {
          "ref": "5b99ecf4-c34e-4329-9d03-73a95e9b5226",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ebc0686d-27f4-449d-841b-cd09cb6b9618"
        },
        "item": {
          "id": "4d1b23d6-fe41-4abd-aec8-575e2ad53efa",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "56707eb8-8f48-4497-a965-5096f92fbb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95dbc1b0-6f7f-435b-bd4e-c681c0015b7d",
        "cursor": {
          "ref": "632b7124-dcd9-4dc0-ad46-4071acbdf233",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f19d2bd9-457b-4987-9f09-7619a1a3faa7"
        },
        "item": {
          "id": "95dbc1b0-6f7f-435b-bd4e-c681c0015b7d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "973fc81b-59d3-4453-ba67-c33c9a2b683f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6e9fe3-5822-4139-88ea-ee1a3c011500",
        "cursor": {
          "ref": "a3955f6c-9b96-49a4-bd09-19f959d75304",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "17a0e01a-e12b-42e6-98b3-5317178b09d2"
        },
        "item": {
          "id": "9e6e9fe3-5822-4139-88ea-ee1a3c011500",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "83a83c18-c075-41e7-a138-62703bc4ff33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70e7f1c-c955-472f-87a2-be7f0e9f65b1",
        "cursor": {
          "ref": "21066872-0242-412a-bc14-4551db354d81",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cce31461-d4d5-4ce4-bd50-7aa92c005abd"
        },
        "item": {
          "id": "e70e7f1c-c955-472f-87a2-be7f0e9f65b1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "793ada4d-5f12-4458-9f60-8ddb85f5653c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bb8091-8894-4e1f-892b-abc1c33e4d15",
        "cursor": {
          "ref": "4aff97d9-6be4-46eb-9107-e01de87c84b2",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c1a6d961-fcf9-422d-b27b-fe7a9b4fa020"
        },
        "item": {
          "id": "92bb8091-8894-4e1f-892b-abc1c33e4d15",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a1098d76-c33e-4879-917c-fb5398d17e3c",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "244217cc-86aa-46ba-b51c-56e47ad66869",
        "cursor": {
          "ref": "92af085e-70f5-4b35-a534-68a28a00cba9",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ebc92ab8-b48b-46aa-b60b-cdfcf45b1b8e"
        },
        "item": {
          "id": "244217cc-86aa-46ba-b51c-56e47ad66869",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4d126145-8980-4670-8a89-284bbd3bd215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfd87a3-9f18-4e4c-89da-d3c0ca6db78b",
        "cursor": {
          "ref": "1561466d-de25-4bd0-9b71-69c9b80ccacc",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4523b5ee-9c4a-4e31-8011-e9c117cf3cdd"
        },
        "item": {
          "id": "7cfd87a3-9f18-4e4c-89da-d3c0ca6db78b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3148641a-52af-4874-8ac7-ee1cb3924aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446f4b15-d014-4745-8354-1cd906ba2f1e",
        "cursor": {
          "ref": "499ae766-cf2b-493f-91c5-7d52089193ca",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "12e48b00-b673-40de-ae74-376e016a945e"
        },
        "item": {
          "id": "446f4b15-d014-4745-8354-1cd906ba2f1e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "58814a76-0bf2-472d-bb13-8fc3f41789e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718cac3a-00c4-4ea5-a026-b906aadfb9fc",
        "cursor": {
          "ref": "9f00394a-fa11-42db-aefc-0cda5795e3d6",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ad006b2e-80d9-4ab9-9a51-f6a803eedd82"
        },
        "item": {
          "id": "718cac3a-00c4-4ea5-a026-b906aadfb9fc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5c9fd2b7-cfcd-4034-8f4b-63dfed0e2570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7619c4f-4d7a-4182-bdfa-a3cc606b4682",
        "cursor": {
          "ref": "e35ad8b9-fd31-4a5f-bab5-a04947234973",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fe83b52c-9e1e-4609-af57-e463a607a7b9"
        },
        "item": {
          "id": "c7619c4f-4d7a-4182-bdfa-a3cc606b4682",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "53fd32b5-dbe6-48b8-8e8f-4463dc318ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4991a62-78ad-4a92-81f7-fb13b274abde",
        "cursor": {
          "ref": "835754a3-1f89-40de-9f57-ce38932d02b7",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7fcce863-e209-4e4a-b84b-b2faa414b746"
        },
        "item": {
          "id": "d4991a62-78ad-4a92-81f7-fb13b274abde",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6ca67831-fc6a-42a4-a67f-0678592d78cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0b8aff-480e-4a5c-94e4-5ac9c51125f7",
        "cursor": {
          "ref": "eeabd244-9a1d-4623-8cbe-c4daa0073da9",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a0b0c15f-1c6a-44eb-a9c5-8f68063b3a6e"
        },
        "item": {
          "id": "cb0b8aff-480e-4a5c-94e4-5ac9c51125f7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2463bfdd-84eb-4b0c-beb5-e9a0c43141ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db15f8cb-ba18-43b3-b7fb-60530fc6d2c1",
        "cursor": {
          "ref": "627b0436-3509-492e-bcdb-e418d24a2e4a",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "41e597de-f70d-4b58-aae3-250ea74a2938"
        },
        "item": {
          "id": "db15f8cb-ba18-43b3-b7fb-60530fc6d2c1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c9376cf6-9a04-4f3f-a96c-71385e804cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30627131-4a3c-42dc-9fc2-c241de91f28d",
        "cursor": {
          "ref": "e630a46d-9f48-4402-aa2e-fa081c4273ba",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a8b2ecd3-650b-4dee-81d8-c357f4c9e7c5"
        },
        "item": {
          "id": "30627131-4a3c-42dc-9fc2-c241de91f28d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4b4c5376-6e09-4f44-8071-d3ec3b40fd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097ffa8a-d5da-4def-a204-883ac84acd74",
        "cursor": {
          "ref": "25822822-bab2-4bbb-b693-e47597a00298",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ccec8783-b559-44ca-b802-1378ddb7bfb5"
        },
        "item": {
          "id": "097ffa8a-d5da-4def-a204-883ac84acd74",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ef0f39d5-539d-4e48-9d77-659c47ce9ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced7bf11-07bf-463a-bfa0-c1a8a8ecebca",
        "cursor": {
          "ref": "7d47e59a-0670-4b67-849e-c57df61d3226",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6f6e0a96-98d2-448f-a0f0-259192250f34"
        },
        "item": {
          "id": "ced7bf11-07bf-463a-bfa0-c1a8a8ecebca",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b2e26f07-69dd-4dd9-8b3c-7a655c85dec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb2f1d2-53d9-4c5c-bdf7-a7fae85aa1f8",
        "cursor": {
          "ref": "00ba176c-18fc-463b-b1ee-4ba4ff90791d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8e2c410f-1a0f-4002-a8e8-4b2ea0a77646"
        },
        "item": {
          "id": "efb2f1d2-53d9-4c5c-bdf7-a7fae85aa1f8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7bb83e7b-ea75-4fc3-9fa9-873fc89751bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de34c46-5811-45bc-9022-7e995806093c",
        "cursor": {
          "ref": "b505bfc4-0c0f-48de-8609-6d61a71c24e7",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "20ae5631-3263-469d-a5d9-5b0935979a83"
        },
        "item": {
          "id": "0de34c46-5811-45bc-9022-7e995806093c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e4ae8797-f3a9-478c-bc56-1232d0082559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898cfad8-0e6b-4767-97e6-8b23baa50faf",
        "cursor": {
          "ref": "dfb43e9f-66f8-46da-9f22-35720f6f0931",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "40a01d34-71e6-478e-a196-322a0e591d60"
        },
        "item": {
          "id": "898cfad8-0e6b-4767-97e6-8b23baa50faf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "581614f0-9329-4b8e-bb6e-bac10827f4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596a4610-645a-4a4d-875d-69cefa9df476",
        "cursor": {
          "ref": "a1fb99e6-ac64-491b-8644-9cdf88f9a978",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8e38f8e8-44ec-46e4-9c5e-4fcbe4580692"
        },
        "item": {
          "id": "596a4610-645a-4a4d-875d-69cefa9df476",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bf7f1e15-4ada-4769-b4ad-3147925332ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dcb640-b2f8-4cba-bb48-26ad88ffa084",
        "cursor": {
          "ref": "adceaca4-ca6a-4e99-9df7-f38786b519e8",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7d22a0c6-21b3-45d6-937f-7008a3e745ad"
        },
        "item": {
          "id": "e1dcb640-b2f8-4cba-bb48-26ad88ffa084",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "93272b46-8893-4b1b-95aa-4b708140ffaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe288e8-ed7f-4b9b-85b8-d0eb8c9c1d22",
        "cursor": {
          "ref": "8a57f773-8e91-432d-a5f9-e3342f08bfdb",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "07b69779-32fe-400f-8283-5c1416f38922"
        },
        "item": {
          "id": "2fe288e8-ed7f-4b9b-85b8-d0eb8c9c1d22",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c655e074-253c-42a3-abe7-7a66a3d4876e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60d9bc1-3122-4ce9-9d9c-f1892cf5cb29",
        "cursor": {
          "ref": "9d2b7fb5-c779-4aba-835f-e39f5da2fb12",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a8296f61-6184-48c0-8308-f922cf58a32c"
        },
        "item": {
          "id": "f60d9bc1-3122-4ce9-9d9c-f1892cf5cb29",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "221c1601-bae1-407d-899b-d3bce4c08e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eaffb9b-83cf-4887-8d75-504b34ec9045",
        "cursor": {
          "ref": "eb8cd43a-330c-4e7f-84a6-b95f7aa15da7",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c00f012e-ffbb-4525-8035-1338a6d20d66"
        },
        "item": {
          "id": "8eaffb9b-83cf-4887-8d75-504b34ec9045",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "36aeac10-b442-4f08-9e61-6a0c1c4340b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede1c896-1d2a-4566-97b8-62a53aac6bf2",
        "cursor": {
          "ref": "058cffab-0d2f-425c-aca2-77211527873d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "34b33515-2fee-42c9-9834-6476716dc1d8"
        },
        "item": {
          "id": "ede1c896-1d2a-4566-97b8-62a53aac6bf2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "65ab2fb4-a5c6-4900-847f-5f2a4a4ef873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6036928c-527a-48ed-9351-7a06a749850f",
        "cursor": {
          "ref": "49ca2a71-9761-4bd3-be2e-9959594aab85",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "050f2f07-8bcd-4369-b0f8-0bdef3a0b9b7"
        },
        "item": {
          "id": "6036928c-527a-48ed-9351-7a06a749850f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "413af8f9-0d54-4f6c-beea-9551e1217663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763d7c94-7f96-4474-b21f-39e2a82dff22",
        "cursor": {
          "ref": "eede94f9-b9fe-4437-b6f0-4b428db8320a",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dcea4b2b-0e8f-4b12-9fcb-4606fafccd71"
        },
        "item": {
          "id": "763d7c94-7f96-4474-b21f-39e2a82dff22",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0a2c393b-71ba-497f-ad67-bdc04b7047c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06300af8-780a-4d56-8f6f-51175e2335ce",
        "cursor": {
          "ref": "10ebbd2b-7f67-4a79-8f68-60baa6d33096",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "54826e3d-4fe7-4058-9b3f-78c0e878ba2e"
        },
        "item": {
          "id": "06300af8-780a-4d56-8f6f-51175e2335ce",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "262d8fcf-17b3-415b-8fcf-b7b645faef73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460fff60-3488-435c-8f8c-a2d8fc24030a",
        "cursor": {
          "ref": "8189da41-3383-42ec-a327-f7704813c44c",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bfca1f12-861c-4e41-bdd1-ee31e15ac9a2"
        },
        "item": {
          "id": "460fff60-3488-435c-8f8c-a2d8fc24030a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f880bd54-b624-431b-8ec6-f61d33aa9db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0aa4a8-5d90-4414-b31a-db6152dc5f5c",
        "cursor": {
          "ref": "6665efd3-107b-47bf-b6aa-f089f30d49cf",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e1fa2ed5-ac13-4bc5-86a8-d9b596eb5d10"
        },
        "item": {
          "id": "8e0aa4a8-5d90-4414-b31a-db6152dc5f5c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f2776b58-faba-4210-a522-e64365118149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f777e3d-bd1b-4e02-88d8-a05ee5ccb8dd",
        "cursor": {
          "ref": "f758379c-200e-48a0-bfff-ee57452ce9e5",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ca73ca55-c590-4a28-8c0e-62a50a24aa68"
        },
        "item": {
          "id": "6f777e3d-bd1b-4e02-88d8-a05ee5ccb8dd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "db4dff56-e7da-4e4a-81fc-12b3640c14dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dde1507-9976-4121-8a7b-1804a7aca684",
        "cursor": {
          "ref": "ef2d74d2-f34e-4630-a046-44bbdce9d6bf",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a46b951f-3601-429d-81ec-bc00ddfd696b"
        },
        "item": {
          "id": "5dde1507-9976-4121-8a7b-1804a7aca684",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "265a2c16-8083-4881-b329-a1c6339172a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e89504-4761-41e9-8acf-3ed727b5a1eb",
        "cursor": {
          "ref": "e330310d-f863-4c20-b3a9-1bcb5d9fbec6",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8e83fb3a-7f8c-4744-a5a1-a087aabe7646"
        },
        "item": {
          "id": "30e89504-4761-41e9-8acf-3ed727b5a1eb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6a35487e-2884-4413-b21d-d60d117fc669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c2e21c-3b24-48e8-b3e6-5e10711e479e",
        "cursor": {
          "ref": "5ecfbd53-ce88-41fe-881e-6a45c769e118",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0a9f9cf1-0994-4d5a-b54f-d4844678f7bf"
        },
        "item": {
          "id": "c1c2e21c-3b24-48e8-b3e6-5e10711e479e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "99463280-532f-4f1f-9777-3edfc2111347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152fb74a-ea0d-4aa9-9f06-d588b06db0b5",
        "cursor": {
          "ref": "47b9519b-2fbe-4166-8ce7-e51abeb5ef17",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f3a122e2-9605-44e6-9e63-3efdc1ab85b0"
        },
        "item": {
          "id": "152fb74a-ea0d-4aa9-9f06-d588b06db0b5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ab0dc3e1-803f-46e6-a793-dc8131ed7498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f449f7f7-877e-48bb-a657-d572883ad156",
        "cursor": {
          "ref": "a9974e8e-86d7-4d6b-835c-101290eef93f",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "982d72e0-854c-4112-b07d-8da275865e91"
        },
        "item": {
          "id": "f449f7f7-877e-48bb-a657-d572883ad156",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ab37e60a-5e22-48f8-88e2-3d66795dc4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f53b442-519f-4561-917c-7e5ac31c638c",
        "cursor": {
          "ref": "b2f65151-0bde-4422-9a76-a45dd3759d2b",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6d2a720e-dadf-47ed-8499-69331249f273"
        },
        "item": {
          "id": "3f53b442-519f-4561-917c-7e5ac31c638c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9d3a8a67-b050-4bde-b9ab-20bdba28e853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd16351-dc29-4f37-ad4c-59c5423f843d",
        "cursor": {
          "ref": "8a6aa98a-ab9f-4fe1-ba43-fae8485a4b8a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e498c4d8-3574-4098-b405-4a7bfa396ca8"
        },
        "item": {
          "id": "0fd16351-dc29-4f37-ad4c-59c5423f843d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "72571f3e-78e9-47be-bd28-4d6280e990ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2b7a0c-58ce-441b-a178-348aae648e8e",
        "cursor": {
          "ref": "b065df62-706e-4a9f-895d-07e946f04917",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "08e6c202-bec4-41de-b3a2-a79db755a22b"
        },
        "item": {
          "id": "be2b7a0c-58ce-441b-a178-348aae648e8e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fc1f4208-229f-4f5e-8f59-b86cb378d628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d315d1e-1a6c-4a4f-82ec-87d1d41c840d",
        "cursor": {
          "ref": "08c37293-86d0-48b9-840b-c205d4062e68",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7f94b31c-ec32-4dc7-9093-357d4e7649dd"
        },
        "item": {
          "id": "4d315d1e-1a6c-4a4f-82ec-87d1d41c840d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5efa399b-5872-4c22-9368-7094ee7193fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcafe8a-15b4-4628-96c5-3b7941fae9e2",
        "cursor": {
          "ref": "013b007e-0d71-4777-ac43-91f042ff3fda",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "48573585-f275-421d-8033-69fa703e1ffd"
        },
        "item": {
          "id": "5dcafe8a-15b4-4628-96c5-3b7941fae9e2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a3b817d7-6e20-4eb3-be11-d7ef3e51eeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e193500d-78d1-445f-9686-380a06a6f92e",
        "cursor": {
          "ref": "09bc6341-94b9-4478-b733-5791333e69bc",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "70942ef4-3aa0-4891-a84a-789b4eff7453"
        },
        "item": {
          "id": "e193500d-78d1-445f-9686-380a06a6f92e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c1cee526-60ef-4cfb-a888-bef14887b459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d21a4da-4058-4efb-993c-976c32298313",
        "cursor": {
          "ref": "dcc459f4-38b4-4438-ad6e-ee7c9cf86554",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5d2ea13b-72f8-492e-ae08-7a3c4e7ef886"
        },
        "item": {
          "id": "2d21a4da-4058-4efb-993c-976c32298313",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b4d52572-e138-486a-8fa9-fc61e486cf92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3bd332-2c51-4023-8ab9-4fc5ceebbcb3",
        "cursor": {
          "ref": "ad64d78b-c349-4d23-9b06-4d75ff1d1e10",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cd374226-9685-4e02-a986-aebdd84d1035"
        },
        "item": {
          "id": "6d3bd332-2c51-4023-8ab9-4fc5ceebbcb3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "23dd5d86-603d-449f-98d2-ea004dc8e75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671e425c-c187-4e4d-ac7d-a18a0e8c5523",
        "cursor": {
          "ref": "d75d1feb-9e32-4aa3-81ca-d2dd67bc505d",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f032ccf1-d8bf-461a-820c-b0b8c5fe43b6"
        },
        "item": {
          "id": "671e425c-c187-4e4d-ac7d-a18a0e8c5523",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "da64ae6e-d167-4baf-bd0c-c6c5bbb682a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401340aa-40ce-438b-9118-48d9ba56618d",
        "cursor": {
          "ref": "67c62149-6e13-47af-b94d-8ebf0cbb60c3",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9637b9f1-9509-4dff-bdb2-dce362387e16"
        },
        "item": {
          "id": "401340aa-40ce-438b-9118-48d9ba56618d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "175e6cf9-aa8d-4daf-843b-4e017fdd4c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280905ff-61b5-46e3-aaf2-1df476ea0f87",
        "cursor": {
          "ref": "7e117924-64fb-4764-81ff-628ce5f033a6",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "85ab8dbf-6a4e-4201-9f13-a8f56d76e6c3"
        },
        "item": {
          "id": "280905ff-61b5-46e3-aaf2-1df476ea0f87",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "19b0ae86-13e2-440b-97e1-100204737fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69281eab-6068-4824-acf4-cb48b3322269",
        "cursor": {
          "ref": "77260c9e-c3db-45f2-9205-7d0ea948abda",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "16ab0f14-29c5-47e8-8d68-f340e8180ce3"
        },
        "item": {
          "id": "69281eab-6068-4824-acf4-cb48b3322269",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b8ba453c-797c-43c6-8b71-ae339c7b7ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820bda03-3408-429a-bba7-0c79e06b033a",
        "cursor": {
          "ref": "66ab5d0f-7a63-4d2b-85e8-d7ab033b06e9",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d16b1e62-a364-48cb-b347-e11de2790d54"
        },
        "item": {
          "id": "820bda03-3408-429a-bba7-0c79e06b033a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "97da0cca-fd4c-4305-924b-fd424dce969a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e3f788-e68c-47d1-b978-ec317496ece9",
        "cursor": {
          "ref": "daf68e78-18f3-4fec-9bd5-7765dbbbba56",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8b3525c3-d76d-41e7-945f-be0a4bf9da95"
        },
        "item": {
          "id": "55e3f788-e68c-47d1-b978-ec317496ece9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "606c84e3-5667-4e59-bbf1-6e75f31568d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e581974b-f242-4ed6-9c0a-f26152799388",
        "cursor": {
          "ref": "f13fd3ea-986b-43f7-a792-e69706ae8d79",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "73d03149-ce2d-4dcc-90e9-2e9ab43d93f5"
        },
        "item": {
          "id": "e581974b-f242-4ed6-9c0a-f26152799388",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f2fe0bcd-e105-470d-91f7-287c404c956c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f83fa5d-cdc5-48d2-b5d6-0dee593fffb4",
        "cursor": {
          "ref": "77bef5ef-4ff3-4519-bc95-fbd310fd3491",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d39d6581-b676-4112-b8c6-cc4778712d72"
        },
        "item": {
          "id": "6f83fa5d-cdc5-48d2-b5d6-0dee593fffb4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "eeb9233d-92f7-4e70-b1c1-f779f21bc22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890d7fa9-9ba6-4d2f-8b78-4d31fa0c56b5",
        "cursor": {
          "ref": "88c4d93a-095a-43c7-98d8-ba16b4aa476d",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4f4071ff-d76e-4236-ba26-662c88fee601"
        },
        "item": {
          "id": "890d7fa9-9ba6-4d2f-8b78-4d31fa0c56b5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bbfbf57c-f8b8-4166-a8bf-f0f5c9ef747d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7357a5e8-1d44-4382-907e-00f4ccb37c23",
        "cursor": {
          "ref": "9645b9bb-92f5-423e-80b0-63911433ae99",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "dc0ffcec-ea93-4bfd-a073-372cb5460c14"
        },
        "item": {
          "id": "7357a5e8-1d44-4382-907e-00f4ccb37c23",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e9d7beaa-b9e8-409d-a90e-45517bfe04b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1add72e8-1319-4863-a7de-7cc624c962af",
        "cursor": {
          "ref": "1877e6b4-d429-4547-b1ba-5f10a921ba31",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c9abd131-1bf4-4973-b51b-3b60423abaae"
        },
        "item": {
          "id": "1add72e8-1319-4863-a7de-7cc624c962af",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2fffffd2-d8cd-4c5d-a8f4-6d24764edfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afd846e-8a79-46d5-80b1-b1ac24750649",
        "cursor": {
          "ref": "6cab6e3b-4a44-4e57-a34c-2c437b56b86a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3eb1b07e-fd61-4dbe-a351-165e659b6e0b"
        },
        "item": {
          "id": "7afd846e-8a79-46d5-80b1-b1ac24750649",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "829dda81-74c2-45f9-aa22-ada3a4862a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ba418b-5471-4247-9c4f-dd532ebe1def",
        "cursor": {
          "ref": "99bff6bf-7759-409d-a692-901f25896399",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b45db7c9-ba44-4e3d-be8f-7bd194d42e65"
        },
        "item": {
          "id": "50ba418b-5471-4247-9c4f-dd532ebe1def",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6e80c20a-51b4-4ea1-9a7c-a534e55a41ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a57ac0-cc3b-4b81-9f83-ec85e95af4b0",
        "cursor": {
          "ref": "f8eab117-cc85-4c70-bc8d-75ee88b1cd4c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e6a62e79-c729-4773-854e-7a53accbec89"
        },
        "item": {
          "id": "98a57ac0-cc3b-4b81-9f83-ec85e95af4b0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f7e8e2de-cf87-4c5a-9e42-ad285fd245ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8096c3d-f7c4-4218-ae04-c90307d9a755",
        "cursor": {
          "ref": "5359668b-66bc-44bf-ba22-564b4b407a07",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c9646425-3a17-4f2c-8bfd-845f1c4e39fa"
        },
        "item": {
          "id": "f8096c3d-f7c4-4218-ae04-c90307d9a755",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "97bf7cbe-7c5a-48e0-bc62-62f92e4224c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc134066-8d38-4f0c-838b-94ed7d81d084",
        "cursor": {
          "ref": "df0f8dec-b0d4-4318-b6ad-3749cf2e9e42",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6512ea34-f093-4741-8692-445681810af5"
        },
        "item": {
          "id": "bc134066-8d38-4f0c-838b-94ed7d81d084",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f6b7a5f6-11b8-4548-8873-3b5f61e735fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcafe3e-d34b-4eed-bfcf-987cbae69eba",
        "cursor": {
          "ref": "fdba6ce4-86bf-419c-98ca-3f7c257cc3fd",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6ae025b8-d026-493e-9f23-2d580c519b4b"
        },
        "item": {
          "id": "bfcafe3e-d34b-4eed-bfcf-987cbae69eba",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9e6293d6-8e54-4531-8f2c-8ce74fe57023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970baa53-e426-46e2-b36c-6e2f9b541983",
        "cursor": {
          "ref": "044b9c25-b5df-4cdf-ad6e-a88078477068",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4303591e-d206-40a5-be8f-63ef9c7cf5da"
        },
        "item": {
          "id": "970baa53-e426-46e2-b36c-6e2f9b541983",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7f6646f1-9f95-4978-88b9-c5e624a5a048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d3079b-1e5f-480a-8af4-5ca7a14638a3",
        "cursor": {
          "ref": "e10d8357-5040-4da6-8b2f-4a9d1a596573",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "216e638f-ac10-4ab3-aea3-ba5bd7c8bc7a"
        },
        "item": {
          "id": "64d3079b-1e5f-480a-8af4-5ca7a14638a3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c0a84a41-3185-4e9a-9b24-9c3104bf72ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecde856-9420-4313-bf9b-e4d4a1b74b8b",
        "cursor": {
          "ref": "0329bd37-768b-41f1-9525-68c9de4bb87a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "eb0d4cf9-b8fb-44ff-838c-663c7f6b9e86"
        },
        "item": {
          "id": "2ecde856-9420-4313-bf9b-e4d4a1b74b8b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "58c0494e-5170-424d-847a-370013a44a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c1f045-2b50-4b9d-ae79-5bd55bbc6232",
        "cursor": {
          "ref": "3d59bb76-8582-4132-b60a-c8e6b67d3be6",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c4d1818c-1ecd-4ee1-831d-e5d360889dde"
        },
        "item": {
          "id": "61c1f045-2b50-4b9d-ae79-5bd55bbc6232",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4625e1b0-c4a0-4093-8c04-2f93458c7d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a80ce7-33ff-48bc-beea-1bda96881b40",
        "cursor": {
          "ref": "b612ee4d-390e-4a04-90ee-cbeeb2d1d8b6",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "647e1a9e-0a1d-4b37-9c7d-4e758de5faa5"
        },
        "item": {
          "id": "90a80ce7-33ff-48bc-beea-1bda96881b40",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "164630eb-1ff8-455f-b517-0597aa8680b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f331f443-cc4a-4e25-a182-f57813a77bb9",
        "cursor": {
          "ref": "fe1f0650-dc60-4d10-aa7d-96a392760045",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "32909bc4-a730-47cb-b10a-c5651c8690d0"
        },
        "item": {
          "id": "f331f443-cc4a-4e25-a182-f57813a77bb9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b7cff8d1-0f49-4d30-a173-9add6fc52f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acd63c0-ce63-4848-b4a2-62f2fd7f2ab6",
        "cursor": {
          "ref": "ffd25c1a-d223-4826-a060-f3e6b79a1f1e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "843c3193-103b-491a-8b0b-791bc6cbff48"
        },
        "item": {
          "id": "1acd63c0-ce63-4848-b4a2-62f2fd7f2ab6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "63e4577b-89c0-4043-b61c-886421fe4c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8355be46-87dc-4c24-8ce6-0ec6fde7f324",
        "cursor": {
          "ref": "bc386412-79c7-4d92-a2e9-253c0b9b162f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c8262d34-510e-4a71-b935-88b16d21921a"
        },
        "item": {
          "id": "8355be46-87dc-4c24-8ce6-0ec6fde7f324",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5a160dfa-f8f5-4e4f-8358-ecb0a0e17b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764351bb-d530-4d5d-a5ca-ee2e941227bf",
        "cursor": {
          "ref": "2704962a-cae7-40d6-8aae-a6bc72d14ac2",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4ef77754-8d0d-49c9-91dc-88a01591cc3e"
        },
        "item": {
          "id": "764351bb-d530-4d5d-a5ca-ee2e941227bf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2f3e3ff8-ae7b-4893-a040-8dc589bcca46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4f3849-4264-46ed-b759-7b4c593a07e7",
        "cursor": {
          "ref": "9a00297c-4828-47f3-8b3f-640e500bb7c0",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "36817376-ac24-433b-a5bb-9a93f7905459"
        },
        "item": {
          "id": "ac4f3849-4264-46ed-b759-7b4c593a07e7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2f24c195-34c6-420b-aec0-cb74aa86c7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffe70c4-000c-48ec-9f0d-ab03c315e60f",
        "cursor": {
          "ref": "ee253a74-a1b8-4a84-9b8a-04304fab96cc",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b24d0bef-43d7-4772-904d-986f69561e7e"
        },
        "item": {
          "id": "6ffe70c4-000c-48ec-9f0d-ab03c315e60f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "59856a09-ac71-4180-b2cd-464b11a2ea71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b3065f-d177-4457-87eb-4012584da44f",
        "cursor": {
          "ref": "bdc61b42-e865-4209-83c8-781170edc0bb",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cf9c530f-6ade-4fd1-8579-383a277154eb"
        },
        "item": {
          "id": "f2b3065f-d177-4457-87eb-4012584da44f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "47122817-85a7-4c67-a3dc-69e793d263e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3814566b-9bbf-4030-8f6f-ab9e42bea33f",
        "cursor": {
          "ref": "06dac8a4-8d0d-4b21-a531-6b074cb5d3e9",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5901243a-8958-44ae-afaf-78e4289fc81d"
        },
        "item": {
          "id": "3814566b-9bbf-4030-8f6f-ab9e42bea33f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5e8899b9-05f9-4c73-a0ad-2b7affa78d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b9150a-3546-4b70-8880-8a5ff6a0af59",
        "cursor": {
          "ref": "2a8249eb-879c-4e84-87e2-f62fb6021721",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b5ec4b6f-a34e-4bd0-8712-04d6d69b3a44"
        },
        "item": {
          "id": "40b9150a-3546-4b70-8880-8a5ff6a0af59",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "47881484-1e21-4704-a7be-730133ec9283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7efa243-3beb-45e7-8058-ff6090ec76a9",
        "cursor": {
          "ref": "03d26ea1-5b8f-4110-9f44-ad16cb321ff3",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ca564af9-f224-4b06-a6ec-4d1d029d8bc1"
        },
        "item": {
          "id": "d7efa243-3beb-45e7-8058-ff6090ec76a9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7b7b5e9d-1eaf-4298-b7e3-ade651e35382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea8ea4c-990e-4c8d-9adc-bdb0c7c0ff85",
        "cursor": {
          "ref": "96fecd67-d1c3-4fc6-ba8f-979f277a790f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e7d6ea49-e41c-4aed-8543-78c03d4e8953"
        },
        "item": {
          "id": "4ea8ea4c-990e-4c8d-9adc-bdb0c7c0ff85",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8d1fe5b7-acbe-45d0-83f6-ff2cca63a0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e876aab3-3f20-4536-868c-14d195c8dfd8",
        "cursor": {
          "ref": "edcb4a19-941a-47e0-a5b7-f1731876bd94",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f910570b-64a8-4558-abaa-516758bff611"
        },
        "item": {
          "id": "e876aab3-3f20-4536-868c-14d195c8dfd8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d07add0b-3120-4e16-8201-495fae0cd191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d5b53e-b8df-4d53-a11f-cec2490d9dfe",
        "cursor": {
          "ref": "d5f2e532-ddf7-4cff-9660-273857098ce7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "472f5984-9c50-407f-92e9-5a1023d0d5d5"
        },
        "item": {
          "id": "81d5b53e-b8df-4d53-a11f-cec2490d9dfe",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "58cf01c5-8993-420f-b390-39c77161ceab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04238000-7a43-4b13-adb6-d511b25bd58d",
        "cursor": {
          "ref": "6b8ba6d8-82dd-47f6-ae3c-08cedfce0ce7",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f0f1afe9-5ab1-45ca-9f14-63234a56004e"
        },
        "item": {
          "id": "04238000-7a43-4b13-adb6-d511b25bd58d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "efb2ec0d-4831-4395-8ace-2b7d714ab9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ce169a-51a4-47ac-96fe-b56258352d2e",
        "cursor": {
          "ref": "b04601e5-a8dd-4bc9-9b6c-eab187a16dcd",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "12691ca5-428b-4b26-b9e0-bf68a52d620c"
        },
        "item": {
          "id": "b8ce169a-51a4-47ac-96fe-b56258352d2e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d09fcdfc-6572-47cb-8fee-a273f59e6650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ea43ed-e577-4fe3-9b8a-611eda965322",
        "cursor": {
          "ref": "9c014b9f-55d2-4e89-a476-bc171d7561b5",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3e63f067-779e-4cfa-a3b4-db3804ae11e0"
        },
        "item": {
          "id": "a9ea43ed-e577-4fe3-9b8a-611eda965322",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "20f8e28e-8959-49c7-ba74-041d3ddeca1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd065a6-8292-49a2-8ee1-ec3ce6f33ea0",
        "cursor": {
          "ref": "461c517e-e27e-4e26-9bfd-e0633aa291d2",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "583b5eb6-8684-4078-b0ef-a6df1a9f3c1f"
        },
        "item": {
          "id": "8bd065a6-8292-49a2-8ee1-ec3ce6f33ea0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0d9c376c-96ef-447a-b2fe-929074e99a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352a7ed6-5fce-42c6-8414-a64d261891fa",
        "cursor": {
          "ref": "2853f3ea-fa90-46fe-8400-b5db1eed6b23",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0cec99ae-7146-4507-9545-e24a6fe3bcd3"
        },
        "item": {
          "id": "352a7ed6-5fce-42c6-8414-a64d261891fa",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "60a18e88-0d4f-4d44-9771-fa1382c4e41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f30ccd9-e38c-4bc7-9384-441920211cd5",
        "cursor": {
          "ref": "47e453c3-792b-49c7-83be-8b00c21ed581",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6486497b-f5ab-410d-8939-a139e52c138e"
        },
        "item": {
          "id": "2f30ccd9-e38c-4bc7-9384-441920211cd5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ac7a609e-ec1d-45f7-93aa-ac4ceb98be41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0614e3c1-835c-46d5-a1dd-25c20497ad01",
        "cursor": {
          "ref": "2689e409-7000-450a-a982-595738acd330",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3de61a18-c9e8-4ad0-acc9-e6d14a10bd0d"
        },
        "item": {
          "id": "0614e3c1-835c-46d5-a1dd-25c20497ad01",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3f0770e0-49ef-4b38-9327-e7ef66da3004",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c788424-cfe0-498f-90f8-656f50518964",
        "cursor": {
          "ref": "4bef3942-7eae-4aef-b619-83344391b2d4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a36d7518-df4d-4432-b602-398c4119c1e2"
        },
        "item": {
          "id": "0c788424-cfe0-498f-90f8-656f50518964",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1a04cd8a-f8c4-4fc1-8b5a-187ebded621b",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "37987f0a-a971-4cd0-b74f-32b82c2f9f4f",
        "cursor": {
          "ref": "2c89335a-0c9a-4876-850a-6c0730a80784",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "03469e09-7dea-4109-80cd-067000599928"
        },
        "item": {
          "id": "37987f0a-a971-4cd0-b74f-32b82c2f9f4f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4e5abe71-9465-4b97-9617-5cec65b64677",
          "status": "OK",
          "code": 200,
          "responseTime": 5825,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abd7a41-9c8a-4ece-b03b-1b69e59ff834",
        "cursor": {
          "ref": "9cd9da26-2504-4393-9072-17630e13a827",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5f11a6bf-ac54-4667-b456-95d8a0ff0638"
        },
        "item": {
          "id": "1abd7a41-9c8a-4ece-b03b-1b69e59ff834",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8f4d91db-60f5-41b8-83df-4706ec74496e",
          "status": "OK",
          "code": 200,
          "responseTime": 7326,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0e6baa-9189-49cf-8bf3-c7a1261c4530",
        "cursor": {
          "ref": "df687726-2c17-4993-adb7-94d28fdf5478",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4e8c9d3f-84fc-4642-9aef-8cda6055da31"
        },
        "item": {
          "id": "bd0e6baa-9189-49cf-8bf3-c7a1261c4530",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3f669517-0f13-4830-bb1e-882ce5637f10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0e6baa-9189-49cf-8bf3-c7a1261c4530",
        "cursor": {
          "ref": "df687726-2c17-4993-adb7-94d28fdf5478",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4e8c9d3f-84fc-4642-9aef-8cda6055da31"
        },
        "item": {
          "id": "bd0e6baa-9189-49cf-8bf3-c7a1261c4530",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3f669517-0f13-4830-bb1e-882ce5637f10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b3fb67-e147-4283-8ac0-1dd3337b2e11",
        "cursor": {
          "ref": "de216b8d-511b-4f59-94eb-9a1c7a640a13",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "702aacac-b3d8-4eb2-b54c-5f47201f05dd"
        },
        "item": {
          "id": "b0b3fb67-e147-4283-8ac0-1dd3337b2e11",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "045437a2-c3a3-41ef-8a3e-9b2977e4e208",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d20d597-0951-4f26-8b2c-03d492494f90",
        "cursor": {
          "ref": "2e70a84e-fd18-4e3c-80e9-8ff4fbc42504",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "509bde50-210f-4128-a7b5-22195038ac22"
        },
        "item": {
          "id": "5d20d597-0951-4f26-8b2c-03d492494f90",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c0dba0fc-cf15-4701-ac3f-7413971177ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}