{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5e851251-c110-433d-9418-fee1ba8b5fb1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e9b4e9da-57f8-4b7d-af3d-ff653c8e9eb1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4fcd23d-9a6c-4423-8ef0-1eac78918abb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9f0b36f7-4426-4e98-bdcb-4770e50630bd"
                }
              }
            ]
          },
          {
            "id": "3eb2371c-2b04-4de1-971f-081a8b43df82",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a7b479ee-ee36-483d-866c-e2589e023bd0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bea0f126-10df-4f31-9e55-2a4f31bc0087"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0ae88b2e-a829-40a4-a68b-1e9ee3e9e106",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e4bb8808-44a0-4c0e-b308-950162d44541",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a70729e7-daed-4b1d-8a38-4ea400ec5c7b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9007858-a646-4155-ad35-65779a2699cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f4baa1a-1568-4984-92bf-2b5d1f4c9bc3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7395154c-8097-4588-bf13-f8f830a5c5df",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f81127c-3a47-4505-8810-ae732fede5be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c7a7034c-eaa2-4116-ba6a-805b814f8402",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11845c17-ad65-45d5-aff8-267df62e866d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a70c9df-02a1-4f9b-a140-24d66542b37e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ae1bdb22-af59-4fe9-8469-fe46b9517278"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6f39483-2597-4c21-adcc-9db7a3bb7906",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "acf98b67-be8c-44e0-87d9-9e929c33c4e8"
            }
          }
        ]
      },
      {
        "id": "2818f760-ec6a-4bba-8c43-75d2a742864f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "67b89ed2-9372-452b-b6ea-bc3968278eff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12d83a60-658e-4768-beaf-e2b73c7a785d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "44fccfcb-ddd5-4622-93fb-30f0a4eb5630",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74c16c1-2de0-4c2e-9647-75144ab44d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aba1b6b0-8979-4b19-8b27-1f9b4438acbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7114507c-7ca8-4baa-9130-217a8df48fc4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95333072-70f7-483e-b76b-76caa06d0284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9ba09d4-8353-4c5a-833d-2cd8912d9ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c68ada-55e4-4f48-9d82-17a365ba4a4e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae62b810-a108-4f5a-96eb-9da155a2f791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b0c2468-4e47-4c90-adc2-bc5aefa1bbd2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8671e9f-3f9d-4df4-9b74-fcba9496dc7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c040b23-d6bd-4fd3-88ed-5c9af4bd8ca6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33111b89-323a-4c10-8699-42b827e2d05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "397dcb1d-eb3d-4c90-b080-3a0aea669a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92f9d20-0f9c-428a-b090-ac46d62e21d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eacc57a-8fb4-4f0c-9fbc-1a499785ace6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4380cf26-b646-4a0f-85f7-66700670a0c3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4996f6ee-2430-4229-a5d2-663ef371c420",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d295efbb-28ab-4bb4-a1dd-9beef5fc1094",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bfc2ad3b-68bb-4f73-becc-e13b335cb512"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83b4246c-3eff-4b1b-893d-9ccdb14170b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "77ec2e88-ee18-490e-ab9b-c357dec4bb8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cefb6323-8e2b-4f3d-afb4-58d8c56cb11f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e58c88ab-40ed-4b13-ad55-22bc3d3930c2"
            }
          }
        ]
      },
      {
        "id": "d9f5831c-de3a-45ab-a3f4-4848f6cd4084",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "41ca362b-8ab9-425a-bf11-3a0d8ec00c1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f6ac18e-c535-4f96-92c8-2ba9ec77b354",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "dda055b3-230b-43f3-b8e8-0c2527ff7d1e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5b3427-bceb-437c-8f79-40ee22e83a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6385303e-cc7b-448c-b38f-9d29002ad3a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e890f1-453c-4a2d-8777-9c7617d47107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41a3001f-c7d3-4d23-9f35-849a507736e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1780407-ed77-475d-bac9-5281899a2900",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f351b409-090b-4482-940c-49b84998c745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f162cd76-bc6e-415a-952e-545112a4c1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c021f9e7-c352-4f55-97d6-7874bab92dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7af9e33-b656-4381-ba05-a511f7a4df58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7702cca8-8dff-4444-9b9e-9e01df970f30",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f926395-3a14-4016-b643-8eacbe443064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c234deac-0ef4-4940-864c-e05de24bb19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2096c5f5-8f0e-4364-ac47-a49be551dd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db35824e-552d-430c-be7f-07e8aa590567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4923d220-c1c3-484a-bd97-5456530200ad",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3516dabc-3283-4069-8940-041d163351c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fc31fb-e06a-4f26-9fb9-c433c8574ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e115fee0-8a19-42aa-893b-2ad454dcdbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a55a8cee-4057-461a-a77f-8aa7d2754c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaf5c37-075f-4b9e-99f1-94d719e904fa",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ab2825-0106-412d-9236-9fc0665c2477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d801e4-ec88-4eb1-a6b2-6880cdb0681e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3fdd68-076c-4696-b042-8b5cc0f9b5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbdb614f-ec49-4655-9b16-2f9ecbd0404e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b58e788-7da6-4273-8fd1-396fc2c92f58",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd15394-f8d0-4e9c-83d9-3e721a7319cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4009a41-43f3-4a19-a888-408d33ad9412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f39bee-5c7a-4e4f-8698-6e22d2edfab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d61d1740-102f-479f-b179-f9df53306e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0314fb37-9d31-41ce-8dc9-e013675d0f09",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f44180c-d7bc-4ab0-8633-65b05356a2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864ffdcf-d7e5-4e1c-b4cc-d48a794711ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b990dac-d60f-4f0f-9e61-e112a81cf541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64c93c49-01a8-4cd0-9799-cdd24563b48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ab32d0-a1b6-4cf3-9637-c4b1dd4918fa",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908c03e3-6602-42fe-86d8-3260ba3c3a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884dc271-22cc-416d-b001-7b6f9df54fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780c4374-0cd9-4f6a-acd1-159db055f9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c636692-2d01-4b88-84ea-7a5b99f4dafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95dc48c0-8bcc-4af6-b8ce-4722cbaf5808",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ebc1d3-d0d0-48ac-a693-a54fbf3b02c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a5e257-a282-4291-9cbd-5a05cd541632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da62ce0-1add-4708-8657-3b5f393163ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "883e8cb2-9789-428c-adf9-8f699c33e099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5535dd37-288a-45c2-ac1a-905b87c90dc6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e69d2a8-38d0-452e-b8cf-023eb6035181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d19824-b9a7-49b7-b48e-ea542f742eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098dc29f-8497-43d6-ac7a-d1a34d61fcf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "970d69e5-d91b-4451-ad70-198c8a8c1af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc3739e-39d4-46f6-8f5b-7b195bd64563",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337e6cc0-03f3-4b16-819c-b35309e87ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6934c339-9530-483f-bcfb-0be0551a40e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c1b297-9f81-4bcf-ae9c-ec919abe2559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f582f6be-08b5-495f-a18c-c24299c48797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590cb475-5cd5-4067-bcfd-1d5e529bca3f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9d9c91-f3ca-4b48-9312-685bce307ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fcf305-d1b0-435e-a2ce-6a82335e0dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a199b3a2-6f73-4150-86fa-4de31ccad9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d61fc387-a431-4892-b78a-065704bbaa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab109db2-b0c7-4a72-ba52-7d6e9ba5e3cd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95f26ff-291f-4092-b992-b50e8a018c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5958e58c-8861-4e7a-8c3b-5646fe7bf154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63fd113-e973-471b-b175-3ce1c5b95d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6af2de1a-8ce1-4426-8c82-99c752ee0f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebc2e2c-653e-44a8-b4dc-9487f9a1d3cf",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af65e37-152d-4855-bbb7-ac9b9f324a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93afa58e-58ac-4961-903c-d52d45a9f56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b12181-3168-4b94-910d-a7a42777b8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2471bb20-408e-4a7f-aeef-be853666aee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9844f2b-03e4-45e9-bc1f-c05a7d85a55e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8173bca3-f7aa-4cbb-9d49-a496fa8cd916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339e4620-25b8-4f8f-ae52-8292a64c0690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e643e84-0710-43c1-8144-85b410a20466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db60cbdb-9e5b-4f13-86bf-c82b011dbc76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a951435-b2c3-4460-8f49-d659ac51e191",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dba4489-e689-4835-9d8d-8e123648466f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d78e93-6d2b-45ef-b635-ce7d8a9995c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faacf60-2be0-4c59-9773-ce1677b4e4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1c2c225-d160-47e1-8e47-96bbf6285bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5cf2b9-f6c7-454d-9a25-0310ce17679a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa01411c-5920-4d71-92ab-689b928222b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1c8cc7-cd61-4f5d-a1a2-7ee9cc1958ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f858722d-edce-4635-9b83-1e6c46277d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2290dfe9-33e2-492e-9763-3fdb0e622ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4bfd7f-f321-4bed-b695-3b6558befbf0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a091a5ab-6320-49d6-b1bf-c1b62ff67ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b61182-1d02-4bea-bd54-98f4978de860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d05dcd-8b52-4626-a08c-1a6d115a8cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "52f40f6f-6ae6-4926-a3bb-9a3debdca1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc6ae12-34e6-41e3-938c-3a53a578fc17",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ff9681-e77d-43d2-abd9-affc70a7611c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992f11ca-9752-4cdb-afe5-be57b15de675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7794b1-c560-4676-84e7-1b07420eef68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1e10f5-87cf-4795-8226-0cf78ffa9b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde0d7e1-f1d5-4085-b160-6552db7c6bc6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9635808-6b8a-4a90-b488-e639ed49697d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70fc984-77a6-43f9-ba47-5cf36f7cc742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9fdb05-1f2c-4384-9a45-28e0b081103d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a00af913-0978-4296-9d5b-0b5195ae631b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545f847e-f4df-4c77-844b-6845ae10ee78",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b0d287-8c7d-4b00-96a8-145ad768f3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d9111e-5f33-4764-b283-fd19d8f11b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3273b705-fdab-4008-bc7c-1d899da38940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "248ac8d7-60b5-4121-b7c9-da893df77453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4070868d-00e7-4a68-861e-fdf9b0ce05f9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14254994-20ff-41cc-b6cf-75507969557b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e7c0c4-07f1-44e5-8a8b-68ac60dcbb7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc575103-7db1-4d65-bea8-8f03dae17fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2646911f-2aa7-4315-9ddb-84e4329b76e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2247f2-ee94-4721-8c4e-b1e5ec020fcb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad8be46-00ab-47b4-80b8-1da9e11285b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aca35dd-1905-489b-a581-450904283088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832abfc4-4d94-4b33-85a7-d0ffff1b72ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f43f1aa7-ac20-4e3a-bf11-778d4f1d1679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b39e96-2dff-4ec1-8fb4-e7625a78e5f0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc42840b-a5df-45b5-838c-0fb116738a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51ddf30-14d4-4d75-ab1f-eb72f5131e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07f6d66-ede2-4a50-8505-6f0178c35317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "85c1ecdb-f8a9-408e-94ff-9193f5bd28b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fcebdd-3247-422a-bc0f-1e00857380d8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c5d70f-067b-46e8-88d4-5b1d3bc1eef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2935489f-40da-4426-888a-d2518d02c495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f03bf07-bafb-4f9e-9098-1d768d85cb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f090e08-9827-42df-9e3a-1762f836a788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e4d3d3-70ee-4629-a97e-c4770cdd3e67",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d300b7-a0e0-44c8-9f6c-35fcafaffe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc68531-f64f-49b3-99ef-3f6cc5e23bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cadfb6-6247-4000-a229-1e5c3d48adaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80aab899-44b2-4fae-b59b-d3784d1fdd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b023ce57-1c9b-4323-a099-32f21a98c26b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d64b1fe-c5c3-4b79-bda0-0b445a828994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98af7f45-f0f6-4efa-b070-b65a07a09bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ab2fe1-934f-41a6-b200-05e62bf5e360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29d874a4-3d39-4c24-a662-a4e59b18f3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274ade64-17c4-40a4-afb6-5873dff2a9fd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3da0398-df1d-4421-b0da-6353be14c5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34000635-df80-4a4a-a391-cb2591cc7b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e71502-8203-4812-bb09-fb021f7ae4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2793d0-861a-4685-9785-c11317be0c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1a770a-f3c9-4b61-bb59-f03ba1a49dbc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a967d1fd-2ab6-4309-9e3c-51f143052da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb51d7f-ae84-471e-90c7-735a3319def1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2504f4d-cbcb-4f68-9fa2-b06138239620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3fef384-96d7-453c-8380-04175b5f2578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ae07b2-61ab-41e8-9b27-cc0aa4c574b8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c928f287-91f4-4491-a2ab-2f9692792697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94321c61-831f-4c0c-bf8a-1bf099186848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcedcd1-bfdf-42a2-b8b0-34b0c4661fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "07b19796-fb97-43b0-a1a8-63d0178efa44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e52a497-308e-49f5-8f05-754885c9c401",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02bbc41-ccf5-4605-bbdb-3cb5287d7492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618c52e3-2cae-483f-928b-bef44b66bd81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3241e7-60c3-44dd-a9ed-d4c8b433fd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ece64c9e-9029-4e28-8666-6ed9b4273d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b1ce9d-1fe6-4019-b78f-817ae6f978d4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7eeb44-7fdb-44cc-8a34-1624071753b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80326fde-b313-4c9b-81ba-ac3fc88e3449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f185a8-0b25-4f4e-b93d-92520dbd5e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8462253c-6680-4b6e-8ff1-471738501c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecaec38c-c8be-46aa-b981-3526aad36696",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ca7e24-4b5d-46d0-bfdf-58f79343c0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd9568a-5346-4acc-a50b-2e083ccb2c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96406065-a15e-4755-96e3-c2f0625956fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9e619a-86bb-41f9-9f2f-41aeee84235c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9883b4-e9b1-44f4-9596-b70b42f1f1c4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d605d0-4593-4575-b52e-acc743d333c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6852bc96-28d8-4349-934f-affc59360452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5ef65d-0b8c-48bc-9aa2-4df9ce5bc315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "618c65cf-6adc-481c-97ea-757eb4ff1302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d420888-8cad-44fa-96d7-a927124521d4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653db0f2-9cb7-4c07-a6c0-b671a9f98185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a620f7d0-5102-47c3-b6d7-7cb676b5e234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536a87d1-414a-4fda-b2b0-c81d615f1fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd02b2f-6329-428d-a950-5ac972d9baf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd75dbdf-73b6-47c1-bc9b-04a96a4dfa9d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b326af-8cc0-456d-ad06-8c2c5dd7b66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38c720c7-f2ba-4622-9bdc-5df7a2730bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3e43b1-1591-404f-b83c-9fc036ea78cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33c0df52-cd95-48b2-93ed-377c69581719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0097f76-861c-4df6-a5bc-e7b26bb5b18e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d286d2-a5a3-4277-8f52-3a485b7fab00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88fae65-9e8b-4cdf-ba3b-55119cf7f692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d713add-fd62-4ba8-8c30-5cf0b0999396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "578f0c38-1777-46ac-956c-d586dcc59418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d75a74-b8dd-4ca2-ad2f-4f26acebd9d5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3442eead-fbb1-4067-bf43-af08e6d987ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4477ace-f5be-4d57-b8c7-8b007b9b73f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a9d978-8549-407e-9457-fce955c944b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbca6806-040d-40b1-94ce-385472443f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a432ac6-0c6a-45a0-beb1-97f0adc48019",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc591c1-75e8-4427-854a-faa6b584323f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89494f2d-37ba-4683-9f41-bc51e7db5eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86263825-347b-4a7e-ac34-7996494c672a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b85e2b-b41a-421c-86bf-3fbfdbfc7f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba60c66-b851-40a6-b4df-3a44a861f511",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674e0d07-d4d8-460e-b7dc-bcf9d62cb6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b316c42-7e26-492d-abf8-b3a69591843b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3e85ec-20e2-4c3f-97db-49a337c81f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac03167-1b79-43ab-b765-afa7bbebf444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26a7fe6-c5c8-4e37-ad66-a42ae2c27892",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb58d0b-7c03-4426-88a3-e9e6694224f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32e6ab9-9287-4966-8537-de862fc28ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401f432b-7de6-4654-9c5b-28518ada1d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "32856efb-4665-4bd8-aa3c-91ea32b5d7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c360483-0ee1-4fb2-b46f-9386fe0fa102",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026ea854-672c-43f2-b229-ce813743d5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad0ae93-8c3b-4d37-b33f-2d5e87f4ba63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe3ce51-2356-41b9-a0db-4fd7c4d6cfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef536b4-88e6-488b-ba74-14fb5538fbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fea9cb-2e65-4e62-9898-0e9f26dd92ae",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8d77fe-1eea-4472-82cb-1280bfa503d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9b2219-f85d-49dc-8584-20ecca5d7359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9a433b-3761-4dd6-85f2-ab8f9da42412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "abda5874-377b-4072-9914-8c4cff127c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a8e272-b5a0-4797-a3b2-7f698c1a88ed",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c04955-2b57-48fe-9aed-35402e26ea28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c3be54-d184-4bfd-8a94-7277ea6a6b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517a4439-3c9b-4710-99d2-9241fcdad051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a2b6c2-acef-4ab0-b202-f9bba2df85b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9948bbf-943e-4bb4-a04e-6c019ae64930",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941d9989-738b-403b-bcba-da0268d03983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ea7353-f662-4cc9-ae7d-fc442542143e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fde3264-bfc5-43a1-a9be-a5c2330c585b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e38580f4-d49b-441f-ab85-58f1489b5304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12f7a85-7267-4944-9456-c08adb945a18",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d191228-4c78-4d0c-8052-4dbc12c3c9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d846ac05-ddb3-45c6-b910-bbf41bbc577c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5e4d12-700f-4d80-8bbe-72812e3acc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0235b25-1107-44ef-8935-1b6d1c7efb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d44e6f-ec5e-4bdb-9d9f-f0061acab179",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78786085-825f-46dc-9883-b378f63ee1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42717c0b-df86-48a0-b6f2-dd92ee199d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7275b381-241a-4e7c-ba85-cca67b45ca5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "104b818c-423b-4546-85e1-5ecf8186d226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bafa83-2897-43fd-b2ea-11e594d93962",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed437169-1a41-4d99-b596-e8a14588616e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce18531a-3cc5-4b2b-a435-55e02001e23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64faaacd-8e03-4e39-b559-651991e8b0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54c58895-dda5-4f0f-974b-fba01b407bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b49d082-8a63-48f5-b7b4-98d4b8561022",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558b7fe1-f82a-47d5-9625-774aac4e1b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec7e65e-0bcb-4e46-8a0a-81ae6fd194cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418570f4-3162-458b-8800-727992f95522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cefd51eb-0462-45b2-bb64-0f491a150617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bab8b3-204c-430b-902e-1e3614c10269",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a8e7af-4c39-4ffa-b376-f36c06017ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ad28b1-2785-49c0-af4d-37696687070f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad83bca-5856-4633-90d5-9b540c5d5d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e768843-77b8-4956-a813-b0688e9b7cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9a12b2-ef3e-4ade-8107-0a1c2f4aa78c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3c529b-6d94-47d5-9009-c9059b6d36ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7fe7c9-4697-4761-9149-de66ef17b0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d58078-54d4-436a-b7d5-d10fe6a460b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "95662a7b-57e5-470c-a651-fa3ecaae7622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6436e19d-6d2f-472d-96d9-deac4778f5fc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819917ee-36d9-439f-94c9-83dd8a5dcaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c228be-1979-4abb-9fe2-942f950ef21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21a2f4c-da9c-4f90-8d24-7e43fe1f6ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "82b26f55-aef4-4dd3-ba4b-80f404bf7f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11a58f9-e3bf-49a4-a097-4e750557e425",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c97040a-20c8-4c89-a81d-462dad965154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7473651-00c3-42a2-a361-5246ac22aa3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95af7a37-1a9f-4943-9d9f-5951ceea3bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eec63b7-8709-4004-8035-ddd1a9c30817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf24690-cf1b-4680-a34f-1cae6ecf427f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0030c6-5db0-4ed7-b4fe-f63db81719fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d004dd88-41ab-428a-853a-030358e6b389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fe2dda-5fb6-441f-93d7-0b07e3f5130d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e023db7c-dd51-46c4-86e3-e55d2c03848b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aee4127-814f-4601-a8a7-5889a52e7a48",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8d9174-7639-4544-ad01-52e5bf8c569a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808fb606-c8a8-4c4a-8486-a9956590c734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb56382-032b-4618-b8c1-2cdbc461d5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1aab324-5632-4e1b-82cf-a902543a7981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d256af-b59c-41c7-8b42-c7a2fc06ffd9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f131c082-2973-4e5c-8f0d-793ec4025a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77e0972-f068-477c-91c8-074618a43cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5272e1c0-c20a-422a-bbeb-887d0c915eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "48142208-cd10-48ff-83f3-ecc6f8494821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462e46e9-0b83-4165-9029-92dafd428a0f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6444c87b-8b18-49e9-a2e7-f15eea064f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76cb5a6-3d42-4fd3-a716-15e4b4963cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7095de1a-4843-47e0-8466-7a0cebae4318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "45d3a66a-44dd-4f1c-a51a-4f9fe1f97d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ae672c-4b97-4c4a-af16-b5d4a22f2036",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d993b3a9-715d-4a48-9413-eef451fc8af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4f5ba6-5a42-46dd-8d83-d625b75679a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ba7486-1fe2-4d6d-b683-47a11a70d7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "56df64c2-46d2-459c-961e-fddc49416135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21a24e6-3ee3-43c9-a091-b272ad04f9f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c452c6f-2e67-426f-93d5-1b72537ba589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a3801c-d2ce-47e8-a212-7bd0a3fa427c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a4b810-6e2d-40d1-ab3b-c82cbf08812e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2071da7c-5910-4914-8086-faccec6f720c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4331c9df-7771-442f-92c7-439fda233c3f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fac94c-d37e-4d5b-95d6-7e0b2d73b5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c1afcc-09c2-4c41-948c-5b29cc7484cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775454b5-2998-4b6b-a913-31b3e66fd2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f66cd1f3-6d86-47c5-b2d8-ad9b517d1173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53259ec-c611-48ea-8514-704ad9f744e0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ea90ff-757b-4a62-90ee-c8c33f908932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2a3613-f816-45d7-8718-024c88c15d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b87e011-34b9-4d36-af17-32ccef4f12c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4543e3ce-8c9d-45a4-b293-1d24f4bbde63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2074bd1a-0ee4-46e2-9f7a-f102715df0ab",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b325fe-2c52-4d75-af62-824591802392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5094fc-16b6-4d3f-bcfb-7e05618c503e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a737d87-a5eb-4083-a2d4-44deef6a52c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc6ec06-eae3-47e8-9aa3-698b9e86c16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56261e8f-dd01-4b70-b4da-927b360732be",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3ea082-41a4-4668-a826-9d26999f45df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a4727d-ca81-42b4-9fe1-8432eec910c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421d7094-000c-4912-ba1d-6183a5198bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b27730-0824-4367-9ce3-e545a8c8ddd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc047d9-10cb-4c59-966a-86e18f5d644a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accf1e96-2339-4025-8317-93b909285640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244da369-508b-4ae9-a0ea-412b7d1525f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223e96b7-e042-4139-aade-b2e2daa5a79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d493cdb-96ae-4a2a-b1c0-0bc1a8e188a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b762d94f-eb24-472f-a8d8-82f6637284e1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb28781-db01-4d9c-b54d-821f02d32f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9486af5-1c65-4a00-83af-b52a484e9acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf65100-69de-4158-afa2-78a47e0ea71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6173b445-4e33-4427-964d-497f185fbf54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240ee078-13be-4e25-a579-14c795820673",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bd5e16-3819-4bfc-abec-9d2054052263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a80980-f58d-441b-b213-60d882d4b122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55297767-ca62-41db-acdb-8552834b4b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83fbbf7b-6116-40f5-ada6-b5763b1fe86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2bb693-6735-44d6-b03a-ee8cb25aae81",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2a9466-b117-4521-805a-4da8a83671d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ed2b6c-42a6-4430-a81a-263ba5d794a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d971b14-6ea6-497f-b7a7-0643e41366bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1913dac-e9aa-4d56-a3e6-b3104cc0fe45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a2283b-e5e1-4c37-b677-88f78f69a136",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d98bf0-b26c-4715-9fda-98cf3104bdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411515d1-fc4e-4aae-87b7-9c6ae8220281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643703a1-a2b4-4f0a-a193-e3d5131c3990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "91270ad1-5a98-4aff-b621-c704bb2d32a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d93b5fe-e815-4683-a564-3249b2103ccb",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be23b6b9-ad8e-46fa-b27a-51a8f0ad6f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1af692d-68a0-42fa-b8a9-642bdaedade8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2114a3ed-cadb-4e5e-9077-2ae2697f2c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d90580-f191-4af6-aa28-b55711d5eda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d970a43d-92fb-4883-b1ee-77ce964cf24d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682cf1fd-157d-4ed7-89bb-ece2694b9b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7873085c-ab8e-4c6e-b5ac-44ff3d737dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21419f8-b11a-458d-8982-7455766fe499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "863d4120-e08b-4e0d-a309-6479c656beb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43ed173-ad03-48f2-9970-6e8f9364a0de",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c0ec30-90e0-435e-9688-359efb436023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c530e80f-ab3a-4193-9333-146112136614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e1e3a3-1a48-41a5-b825-8a69689a2ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aab49839-a840-486f-b333-a2ea587687c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947a7692-3cdc-4d8d-a545-0bf705b489fb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed240b38-5741-494b-90e6-ef319613781e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3d93d2-5565-4f88-8f0b-1c7318dc8d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1873db-06e6-4edb-91c3-4ba114f12485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d319798-acc8-4778-98ba-bb1c4a515b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c31a789-5088-4d63-8fba-78454d431357",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376b71ef-9ba9-4d9b-9950-ac744c5749e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33f79f6-d987-4486-88f2-8a4b1ccb09e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1e7f44-b29e-4c9a-9e7d-d52b779901e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "daba211a-88a5-47bc-ae44-8bb7bebb731b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7c78cf-79b7-4d36-9ca6-1962110f9690",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b41cddc-d1e5-43e7-adb3-5681674c7528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b11fd4e-3582-47c5-aa00-8ba3aa2b13b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737cca0d-d2f9-4e6f-9016-bf7526fd0769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c478c67d-cf2b-4ec3-86e7-2ddbd01131cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdca9dbd-9ba0-41dc-b253-fc0d4cb45f4e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97dba175-c385-46c0-93b3-5b862c55ba9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b2326f-08ed-4688-b9b7-19d6f190a2af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2aa1cfd-7067-49d6-909f-70004e8a79d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "205bdb5f-fc69-444a-9db6-c7fed42f597b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dad4b6d-3696-451a-a099-2bd97104ad42",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9aebb3-3215-418e-9b87-e817a3e90f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96b36a5-e021-4a87-9b34-ee19e0ed4728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cb4c43-5122-40fe-ab70-ed7edd541223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d064f6a-ebac-41a3-994a-23855b5c2f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0995db2f-d991-473b-a665-31503a49edb9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ac3656-52a0-42d5-8467-14e5e24bdec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fa372c-7ccc-42e1-9c38-0fb3c539bab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cbac1c-4eda-46d6-8672-512ee37c1976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97d68781-d6de-48c2-a3a0-b53fb426ed1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5627a07b-bb83-413b-a999-674987469f92",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f6b7fe-3a5b-414d-b25d-8bce7cb8a1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7dde012-dc28-4046-bd63-11945910a95e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0de3a7-dfd8-43ce-987a-e70fc91ce3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82115e08-2a43-4e81-a459-d738de11f597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaf3ccb-51c6-443c-9631-7b23938c5c18",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94b217a-3973-447f-978b-3a642058709e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca1a098-c2e9-411b-b192-1721a5f50e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa924d20-7ce5-4484-bdad-bf550d2b2049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4052b739-ab61-4c2d-80c4-0c1c07555662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622a8591-16f2-4c28-a999-57f69274d90d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdfa18a-228b-47df-a25b-904bc8115cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8a138e-cc0c-4c32-af61-228a1dc050b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a60432-1be1-4bbc-a031-c2b538251871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "187d91c2-43b1-46ad-8332-497de5659671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d0d67f-520b-4c88-bb1f-b7dc35760918",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d1beea-d838-4f8e-b7b8-88ea3fd07657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c025cf-253f-40a2-99c2-b8408f957f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18174375-3282-4168-bc30-8beb30c5ab9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d45b4580-dff7-46a8-9d75-a340bc9a65f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322f067f-274a-459b-bb59-5fac338d32a2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5ed7e4-0f77-47b4-91ad-55ef7fb35aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48c3bcf-e290-4566-92c3-373b8ba81a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80db558e-9d02-48b9-b5df-825770f9d90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "298e6d74-146a-4fe2-b944-90726a8ee3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c034e4a8-de40-4fd4-8713-48eeacc4961e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17f8ba9-1b0e-44f9-8a63-21cc4f0394bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e383488d-3b75-40d9-9bd8-a0be29d08775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17030468-8e66-41e5-9b6b-08aecc7d36ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b0fae1-297f-4f8f-b0d3-f250d2c2f403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a74c7e-466f-4f7f-abaa-9923812fe10d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27304cc7-bde7-4a7a-8be2-655dfcd2758a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd835a44-84e6-419d-814d-974b611e55aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9519d549-6365-402a-a8e0-b0a8e57a7d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6d5ff2-f8f7-4984-8147-2ec28ae3f1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6865d3e7-3ac1-4e53-847d-f5b25a9557cc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e07bae-5e75-459b-a5cf-c4826275820b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99683ee7-38c0-48cc-af72-1d6acf5b2ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b67c661-41c6-4eb5-b511-eb4f65556279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f49196-2d82-45ae-b492-341af71ae0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45abd1b-ea0d-450f-b071-965fc6f1bcd5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ace8599-7281-4066-b1f1-cc14a613d7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5166f9c-992f-499a-add6-93f84c482472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ae3ae1-ddea-4093-a91a-623f7068b96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34063502-36f3-4e99-8e96-fb40fdd59b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97114f0-71fd-4000-bee6-036129e9550a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6780ce-d6f8-48a0-bcc8-3be52d144bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f35a087-32ba-4015-8ce3-1c374e2e20e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c9531f-1dde-441b-903d-2f1d36977a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d929d4-c524-4874-aad4-2383fc87ab2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5090708-19e2-4019-acd8-a27841a33b5d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4b97c2-654a-4908-9002-eb8c6624a527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c15b5a-9ade-4775-818e-b555a613efe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fc00a2-c54d-4e6c-9494-8f1fb11c2ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "db719665-a166-49c6-be56-8f13f36923bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0f81b1-c0c5-4411-a434-c09c4b301176",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91662108-bab0-45ec-b33f-54c15f846288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64cc366e-bed2-43a4-934a-9bde6c9049a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bae5666-6cce-4c5d-9817-590bde0dc3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "64ddf3ff-fdf8-48b0-920a-d6a6b09bf7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d253c489-04d8-4db7-ab16-9a226ccea8b7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cb54ce-8791-47c4-9429-5c7f2ee3956e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b4d2e8-d496-4bd8-a466-5dc841498348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704ef6be-8f65-4197-b6b5-98d94851d3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d953ce-e256-4215-883d-ffbbc00e5779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be8979d-e0ae-4198-9b17-5c4c9e7efd42",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25c61ad-f9e7-4f8c-b45b-9df4aa74a218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1458be73-2b50-4042-b061-4818a9aef958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a17e29-1c63-48a0-af69-72d86d67d0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4830542-6744-4a85-9b67-7bee6289959c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9ba5fe-f5a2-4d64-a9ed-87a21f48c0ad",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07ae15d-3d5f-4a8b-9ad0-f10d9ee3a755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d022c0a0-1fbf-471d-b1ca-f6a09bb8536e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d965eeaa-901b-4fea-8438-e718897810dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "903a2b3a-878f-4b1a-b16a-82679240da1a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "41588602-f579-4587-8eb8-8a0ccac90a3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35a37d9d-6fb8-42c4-9411-2722f240b5d7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba16f667-ea5a-4621-8be8-98a47bafbbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64fe3f13-2f08-4fe6-8303-c97382b06f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e659e2-273e-4cfa-b0e9-b8c85978d86f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb63f925-907b-4869-ab1e-2feaa7409e78"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "909fd6a4-cd36-42b5-aa5d-8cb46addcccb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f73fddf-59be-4101-8479-106c9b1c7d57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6238cd6-7670-419b-b90a-976cc2e982c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f73e0854-f064-4eb3-9ceb-66e29f6deeca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b4846b4a-d526-49f2-ab16-a99352f36591",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5bc29541-044a-49d3-a9e9-f8ed67bd53e9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "493d85fb-5e0e-4b7b-afe9-7d7881447683",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "333d9493-f56d-4fc3-8131-d86e5b99367f"
                }
              }
            ]
          },
          {
            "id": "c90b9c35-e324-48ab-9887-a12746a354e6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e67f1574-b89c-4f19-a770-b7e5428b0965",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c53a7f30-2ddb-44f5-8e69-0957f48bf2df",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f424caf-b56c-4578-a367-834f6598c48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7fbb01c2-a69d-4ad3-ab3e-dfb3c184e60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d19128-457e-4543-a282-e40a42a1e914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c197b7c-5f93-4711-b7e4-2d48deeae55b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f9cfee61-582e-42ae-9b9a-ac4d2e9e413c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b5376d6-7304-4edf-a220-bc96b7317d8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72f8c905-8729-498b-be0a-84d782be6288"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1107c7dc-2847-463a-b510-680ca278c9ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f49e60c7-cce4-4f98-9f2f-8071590e24ef"
                    }
                  }
                ]
              },
              {
                "id": "aa56c8ba-7fd7-4456-adaa-e4506296c9e2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9afbb153-f0ed-4118-ac16-db4192438910",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "842a1431-9507-49b3-8f5f-40e08a90463c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b78ff33-22be-462d-bb7d-fbfb1e89efde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "66ffea93-8d43-4aa3-8bf3-5ae471ba53a6"
                    }
                  }
                ]
              },
              {
                "id": "03ffb25a-a309-43d8-80d2-44ef4d3363cd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "295bd87b-0304-4233-995f-9660b39b9d25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "056e1999-732b-4911-ad5e-2bd7bc6335ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60c69a29-81ed-47e7-b9a8-2a26932d9058",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "48a99f68-98b7-4302-8dd6-bf31717f5ca8"
                    }
                  }
                ]
              },
              {
                "id": "b7c153ae-0b8e-4669-bf9a-db0502115fe2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25775b7d-c46a-40af-8f47-4971f420e4e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9649447-6d6b-4740-8f80-897afe2030ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcc79e5e-4458-41d4-a459-2eef4bf71b1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "13f436c2-bd2b-44cd-9467-88c709bcf859"
                    }
                  }
                ]
              },
              {
                "id": "64bc7dac-3af7-4e91-9414-fddbaa3f901b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8e1567b-fa5b-4f35-88a6-6f35ea3adb55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d9f12ee-a1a2-4c43-b6a2-7101ef53ed62"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "856681d2-ca5c-4904-ad6a-eb4bf5d45ec7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7ea07190-8fd9-4018-bf50-bdfe8088ef9a"
                    }
                  }
                ]
              },
              {
                "id": "11fdc6fa-f382-4dff-a7d3-5788dc220c7b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40a0c756-ed14-4673-840d-0b70d2932c96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1757c13-0f0f-4256-8ebe-34cc29b227fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c7bff28-9833-4ca3-946d-e296dfc384ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c00e2f2a-c70e-4b63-a1d7-4087c2ae4635"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "158e3015-d7fd-424b-98ac-004be8a550f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db4b4ce1-5caf-4982-89a5-0f50faadc84e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "473ebbd9-4b0f-434c-81d0-100d4a5ecaae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "58a08096-3dfc-4166-a872-cf2cd915a292"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e1de42c-1046-4a52-9eea-506bb4d2113b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a971874e-61ad-425d-8fd8-2c690f293c98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a8d1df2-7c51-4f53-b2a3-ea1ebe871aff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f745268-5b15-449b-8ccb-4ff1c38c28d1"
            }
          }
        ]
      },
      {
        "id": "564ff043-21bc-4782-b3a2-b8a1cde14bc6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "011565aa-511e-4477-bbc8-4720167bb8cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e18d8d36-a756-4d99-b02d-10a8f994c757",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7d7fa2b1-d8c8-41d4-9227-22c978a527d0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4dabe9-8a8e-46f0-a90a-fa972e33613d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c0bd01-1a61-4e88-a7ee-8d8d36abc504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61f61bf-f55f-406f-bbe1-170aa145a3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa27fe1d-010d-4ddd-95ae-f961ce70cf0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7dcbe5-eec7-443d-98ad-b032edb5f45a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca707996-c3c5-4cd1-a6e0-a248c6fae042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c7a3ce-70c7-4031-91c7-4572e098b695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffc9feb-d15b-48e4-b480-e44de57b7688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df79a7d1-a36c-4e1a-b87b-2da20ea99399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac2a8a2-b78f-44e9-aa23-c7233307f678",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d4fa26-ba2c-431e-9b16-d90b995dfb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377a81db-5bf5-4774-bc4b-dd0bde1238d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c80c44-3d70-4731-acf2-4389d2fa0811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e632ab4-5f49-4165-b911-7dfbad1609c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132dec33-207e-42fc-92ef-95ee8d6003d2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79be226d-d9b5-48fb-871d-dea9ffb2cb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944ed7d8-fbb1-460c-abd8-cf79cee4412d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61f20cf-704f-493a-ab4c-176f8537e61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea08ad82-d01b-4475-bb51-cca91aa31a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49389a32-c9e9-4e6f-a1b0-784196624a9d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e229f7-b3d5-4eee-afd7-1759da1c0a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9f05ed-deeb-4e4c-8cc8-e04053539e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc253b8-8ce0-4c5d-a3d2-f584a85ec257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d2332a-0492-4a14-af70-74d62167c00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d9b6a1-f1d4-4735-9435-3c22e1c21589",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3416179-ae7b-4e63-82a0-a4a4dea801f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31ce5de-a9bb-432e-8ead-c5cf67247b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afa118f-b98d-4e95-ae24-02d470192c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e274d4a-f50e-42c0-a982-2421afdcc530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5366b2e-a43d-454a-a1ba-c7217c55f52f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cda140-191c-4d58-99e9-2cb2d9418edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9549a8bc-b5ef-4130-a357-f68e322b4e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7ad2cb-7718-4021-b5f3-5e0f72699ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "22052419-ee3e-411e-b1f3-b80bb8dc9b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54602e26-841c-45b7-9a10-5a56548bafcf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12601a0-2e7b-4c2e-8b4d-11c89614c54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd9ce77-b0e0-4fac-9186-6162e6aecabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebd99d6-afc5-48ef-af68-4bf3efbc3c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d30a73a1-4232-47d0-b5a2-db9bfe2db077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cd28b0-23c8-48d4-aa7f-57d318783067",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ba61e5-7ecf-4f4b-9c7a-b7b95c924dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fca86e3-4ea5-490d-91dc-b6781fbedc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dc8231-1533-46f7-a85a-68f3c6c04167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a243f672-2c5b-4454-b236-b434a1d46958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d13ab61-13c4-4076-aa37-0101bdd13fcd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69c2ff1-fa8c-4e3f-89f9-972a88fff3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8edf8cf-da56-40f7-8f0c-388f6e054c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025f2395-5d21-417e-a145-e61abeea29b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3504d9-359e-4682-b5f8-0baa908bbd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76be130-1979-4b52-b308-0eadef71d1c3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa54b07-3990-4de7-a35b-b8dfb125101f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f2d16f-023f-4ba6-8492-8a198b3870de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d53fbb-d02a-44af-a4ca-f24b7e4f75ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbddbef-4731-4bf9-8531-2297b7073b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a116fd92-3d53-4995-98b0-bb97746a9b48",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fc5781-6f25-4c58-8ab0-52ce9cb0725e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739cc33e-81de-438e-bf62-20c6e4a4e609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8acc550-936d-4189-8c14-c6936d63c873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "372ff541-de92-497a-a705-a3f94debdd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86c4c6e-184b-46dc-ac7f-83d5d0d5d0f7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bf6bf9-2398-40b6-9638-676fe4156276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3004ff-a0b6-4edf-9710-b3f5f3c18d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0f219e-5d93-4659-8592-a61e69edead6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec89e399-d689-4815-b0e7-2078eca3cd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2328207f-cc66-4fa9-9688-b32705a401c7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba74c1c9-b87a-40e2-8be3-e540471db821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3b73e8-231f-4cce-ac78-1256de2a951f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5327d581-ca40-4cbb-b6e9-aa7691c3c359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbef7d6-eb99-4ba7-845e-d41a9350148b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ec3f78-75f1-4a6c-b566-b73b8fe51876",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32379fd5-5959-4d01-9017-e8f6b754410b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f13486-832a-496d-b667-4e824ceb3c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe18c11-a12b-435b-bdc3-07912217f8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "09c2adfd-777d-43d9-ab09-39ae1b2db547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426e6303-ca0d-461c-87f6-974ef336274c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fce3af-1508-44ac-b6a3-46fe213c7e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67a3e86-910e-48da-ad93-6ea18cd117e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b388ef3-a46b-4878-90d8-e2fa9e67742a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bde204eb-7e00-469b-aaf6-1ff9901f9de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd61413e-e2ee-48ff-8c4c-61cdbf97c24d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe09d43-d66f-40cb-b395-54f6a3106f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6024c77-65e6-44f1-b52c-32d62fe93095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d39b9d-b039-4d34-84f0-82aebb735a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe641dd-5193-4ba1-9b2f-b7bb1ac6408a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2906c50-b65c-4efc-8034-6e83854c7f7d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690b02ae-ce53-4923-adb7-094e0522936a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec43f6f-7225-48c3-9edd-e9f82e0980ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2c6d67-b8fe-44da-b21e-617c94ac6309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16a6ba53-03e8-494e-ad4e-df905b740dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3147a688-1da8-41a4-b068-1a06c1a46c1e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988a5785-7148-4998-9e88-b2aae4ed5045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e46ca7-cab6-41ed-bb98-8e9e7e9dfea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d78bd2-1bcd-415d-9961-daa805977d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9af626-f48a-4ea7-a76e-47e6ab1cd9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994a395b-6f18-4214-ad43-01e266f3552b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d99de7-4e5e-4c68-ba1d-a354ae5700c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1048685-b5c8-4026-b364-e668eb6088cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f18a305-5c64-4560-a913-cce1f1c40a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c61e30f-c0d7-4619-991f-780d2799d16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35504e4-6b23-41df-8896-cb1ba6dbf3c2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2a18ab-a27f-4bcc-8d40-25357dd65957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f80420-9f29-4c5d-9b20-4e47c95d1133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54206723-91fd-470e-9457-cce1c9554303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8576b310-1f76-47f7-8e60-034321c10086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab5f848-e02a-459c-be29-dbd2d79b5e1a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a2b512-406c-455a-a830-8d6a7c87012a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251e4f64-e69f-4be8-a437-4852c27a45a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5c637b-140a-4fc1-a56b-6ae35225bc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0574e86b-bda5-4609-86fb-45fcab9bcbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25ae23c-b178-4b48-9434-9d71a2556080",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccca3124-dd29-405e-a691-943e5cbd1845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bab643c-25ba-4336-b769-dd53565337ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d7b550-8496-4ce8-8ad0-85e041cff9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb65aa4-0209-4e82-8744-31b65b90e22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b936855d-5705-41f0-8acb-c5bc4aafef7b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebac224-094c-4511-a29f-0e7c7749dae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e3ab42-7136-494d-8971-7d1feacc8b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1097af-a5a2-4e4b-801c-abd7add1366e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05b5b489-495c-452a-a738-9877ef57cea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811862de-cdd9-406c-9d9b-4d01ac2ee4a4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cae4990-d6d6-4489-b352-84eab4c585b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908ce9b3-36eb-4f3f-a706-716611849216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01508289-8655-4c6a-84c4-1a453202904c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac840558-71bb-4bad-bd38-e4a27251318a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606919d5-04bc-45fd-b3a4-36914b2c3d57",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fbfa7a-5043-4c7c-a415-4649cc231617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f568092d-3f3a-4fbd-9ee2-dd30b3d84c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5baf940-cc24-4403-95f5-1ed94b6b44a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb8a90b-e98d-4d29-8cad-aa9a52c8627f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7aa90e-4826-412d-9e78-1d17902440b3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c77ffc7-e739-47ca-8958-c64f4c9d29ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13b84fb-4e38-4c3c-a701-70701cf1ab48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fabc962-97a2-493a-ae27-2fbb973f60cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbb8fa5-8077-4956-a475-b49d9e9dac66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2d7afa-bb46-4d04-ba70-ef37bb9d91fd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39670b29-909f-4ce2-9ffc-c174a97932ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbcc4a1-faeb-41b9-96f1-a4d432482483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f18898-5d17-4a49-a9fe-63c76256969a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50e619ed-5869-4d56-a73f-1b3fead16b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af77b3ef-3997-4f95-a418-4485d0035253",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfebd6c-f6e9-45ac-b0f7-58c58f6b7409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477b189f-59a4-4b9d-887a-bf51244a8e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a232f10-2ee6-4e42-8bfb-e1b2bc786894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4bccbc5-a36b-4e95-8651-c738d27d24ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b165428-bb25-429c-a320-fc1d9045c155",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468e21d6-3350-464c-8705-29728135c1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4fe8fe-d926-44ef-8dbe-d574ea9bbf96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53601fcb-a8a8-4b3f-8c1e-af530e1518e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f462b983-1c27-454a-8c7d-5d2ddfd28fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6de210-7964-42c2-ae88-4caca426593a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8cfc9c-5bf4-45f7-8ba8-951a817a53e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3555abb-591a-48ee-8209-15ae9dd174ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ebc67a-8730-4b4a-b51d-e7f6bc655d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c93639c-8d7f-427e-ac17-de794795da96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46ba793-0312-4064-85fd-96e91be18c2c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d4cd31-c51f-4168-bf53-7fa17aa4aeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a750c1-ee85-483b-9375-d4145a0794ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a84e48-5334-4b65-a5e0-53e1e25116a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a73698d5-ef22-4256-ab25-3302dfbf34d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188b9317-f98a-4455-b30e-3b3af7a8ed37",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81d8c10-8d5c-4a36-8d56-002412fb3679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce68cdf-e124-4afe-8320-4de7d0d8e23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ceb6265-5047-437c-b102-a09377a767cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf75000b-3da6-4d26-8840-a406ebf7cc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdd7b72-f341-40ff-8287-dfc7272e4a9c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d64372-7d35-41bb-9a74-11ba405c27e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e17e3fc-1dcf-4ec4-9a2c-21a4c85ae351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3121cea1-ea34-4a6a-b7d2-101aa650b237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be3c3b85-a70c-42cd-b367-8a6305214e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3513db-f017-4683-8586-121acd3ee7ec",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa63796-0014-4b9d-ad9f-71a8bde1853f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ff716c-7fda-4d01-9df7-d4f3beda215b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28d5606-7655-40ec-b535-b85056b74fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b21feccc-b358-49e3-9012-18835d68eaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcdd0d9-0c55-42e0-b7d1-50b2774206de",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a47fa3-a1a0-4471-bade-051adf469ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77a7ed7-87d3-44f9-a72c-82de3077166e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f4338f-49c0-4a64-968f-3b781428a1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b80e546e-af0a-4c7d-bd33-9b9ca31a708c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e8c357-8491-4444-a74c-3a651a2f66a4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ddc76b-83d8-4680-ba45-ff03a2345a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bd84ad-65c4-4ea2-82de-7ab2454ab963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc28bc2d-d0f0-4fc0-9047-5d6c9820ab33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1265d7ac-6fea-4282-adfe-8fb6cb8b77df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "85563452-e102-485e-ae38-a0e5114cc381",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "249f0a93-abed-4f3a-881b-dee079344838",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332cc679-4faf-498c-9f70-9661fbfc800d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dd396758-9990-4646-bca3-f30bea51cc1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598e0fac-ea72-41bb-9951-841da494a06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "286a1728-2f36-4955-9655-5bef0689c4da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f32fec5-259d-49a0-aa39-41233972d83c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec1b0ea8-7444-46e1-8a6d-074194cc55a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fedecf5-51f1-4b44-9820-eca24da06f14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "989efcf2-0b78-47e9-902c-cccd9c317f83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e575c7c1-140a-48e7-8a7b-0c6e39e7509d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2cb04248-12d7-4bec-9e5e-34ab68348ae1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8126e339-ba79-41b5-ac5e-435a19f1cc0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eac43c40-72c4-4103-b5a8-e184d35e3897"
            }
          }
        ]
      },
      {
        "id": "691084fd-b17f-4cf8-833f-ec629304910c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6ce676de-c0c1-4803-8871-f9b8ca9ad572",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfcffbc5-b42e-438c-9302-88c196ac8c38",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cebed5bb-5576-44d4-87a8-a1506b17e8d6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15238ba9-1ffd-4600-b423-9d41bbd81264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e1dbe7-8554-43bd-bb11-208b5311316b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ddfc32-b5fc-426b-bede-736d7ccd0b7b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7195c103-858a-4600-923b-5bbb7c79b9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc57c23-0321-4a79-a3d5-86d238d4f64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d1bbb5-6ef8-489e-81a7-91e2266bad0c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b888fa67-a19c-4cab-9bd5-f83de7455b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a220e8b8-53fc-4792-969c-2594fd8db5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fdf9ca-6764-47d8-ad8b-11e5b07a1db4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51189873-1277-4786-bbf7-0fffc9f33eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3557cb0-ed71-461a-af5f-5f8f5faa7068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef8c639-30e6-4c64-bd16-90afaee0793c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b3fc64-e764-4978-909d-e22c62dbbc58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20baf87-2197-40a3-8083-f9dda7feb23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdb01ee-62d9-42d1-81db-d2d202c3c7aa",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58338d1c-7196-4bf8-be24-896cf043e567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e74396c-56cb-47ec-a166-506be634c907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0eb14f-8e09-4511-821f-e4885ef49b7a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361f9c92-6088-4ef3-bd2f-dca73c17b739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519bfc14-0f48-478f-b353-44854793910a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c81d09-2860-4bb8-a5ad-54ecab241eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e82397b-045a-4978-ae9f-2db4ea96acfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe37c7ff-b14a-4090-9acb-32ec85dc3a98",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fb7868-c1d8-4d84-8e15-ab7d1b549a4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13c1a1ea-7c50-4617-99ca-4c2d510fe26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab52f61-32a3-499c-a435-7973767ff708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dade388-d9d5-4ddd-81d4-49a696b10913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb58223b-7260-4752-a4a6-28889782ac10",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fb5115-6ed6-4b20-9c34-86bfa626ab59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a36103a-7b36-4857-9c2f-244d28c748c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a4b6bf-a98b-4c23-ad4d-938af599739b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a77030-36fa-4969-943a-b6610dd2b5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca09330-819e-4c96-93dd-e398e4961b00",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7181b628-1d01-41b5-9df2-61a1b7f2afaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c23b046-50d8-4429-8538-0ba2a3e093ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a06a625-51a0-4d57-811d-176f1109c244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f105acd9-32aa-4265-95b0-db6ace245007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72197bdf-b101-4c60-aae3-d9b46d16114a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2604fc6b-70c9-4048-9468-5138b00d415a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae63ea5-f74b-414c-9126-457c8e631f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0535bca-1a00-47ef-8f5c-4819f56c4597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b82dfbb-7f3d-404e-b453-d255791c6e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d663e1ac-a766-4052-ab69-ac04484f0701",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15ac034-7c0e-461d-ad97-23a58aa13a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6b89f3-a8f7-4ef4-8f6d-e7a4c59038c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e794af-aa36-43be-81f4-e610d130d680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0a9e48-969c-43ea-898c-ce6f9914a4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70671fb-6346-45b8-a6d5-5e2833c9ff6a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f34b638-f62b-49ea-bd93-205c6ea002e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de06ab59-6d9a-46ed-add2-9c299f3d242a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28b25f0-6801-46ec-9623-712829687079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d2d2ece-020c-41ee-a729-599d039ecac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ade8500-6942-4229-b1c4-28be33b615ca",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4546b0-967b-4c9c-9979-6117d3ab3877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d62ea25b-6dab-4723-aa74-a5950f5e87c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85f4d07-c883-4536-8c32-171967a23d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb7a322-1616-47f1-a3f8-257cdf1b3155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f432146-5e3c-4e3e-89c1-b45b392cb116",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b18c9f-ab4d-415f-90e4-60d088953148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37160c95-cf4b-44e1-a33e-3b316497548f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7464edf6-8112-4363-9d7d-62fb56b33d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56437dbf-4f1b-4aa3-9c76-b98cc022e2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d3e76e-c951-4c4f-b6dc-1ac0b847d61c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9468cb7-83d5-45c3-be1b-a34e73c80e71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12ddab19-eefd-4ca9-b0e3-7a8440c606c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe191c5-000b-40ed-816b-64add0910eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab46f37-40b3-4e72-950d-3d2a582384cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91adb8e-1338-4228-a5e4-a372374ecddf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42533792-1601-48e6-9c72-af342b9dd3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7196f496-00df-4246-978a-f40e1072397c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69083cf1-9e88-4726-9f24-776b9135b6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4befdb38-deb7-416e-9bce-4c6467ca58c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61396bdd-6f2c-4dc8-80ec-cc87e720a6be",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3aa8135-2258-44bb-a484-9b1b2219e0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8ffc3f-c9bf-441a-961e-7e2573800950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcddb92-6e8a-475f-aff0-6249e975f00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec269701-bf09-4186-be17-9addc78db57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f40d07-8027-4593-81f7-f91747f949b4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cf861b-20b8-412c-807b-b55091e73dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e22995-84cb-45da-8363-13aad665934f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7be1c21-3385-44e8-bc0c-51493415fc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1521e7-7589-45dd-940c-2b1b99da5f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243a1e2b-ebec-49df-b6dc-1681f28e9368",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42de12a-65ff-43d9-96e0-ee7dbfcba7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6da4ff-511e-422a-bacb-efffe17a8967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9ef7da-10e3-4256-ad51-4eb0af5a6cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8d3165-c0dd-4abf-99a5-9625d03557b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64ffac0-ef6c-4458-b43b-472fb3e60fa3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532a6bcc-8683-4bdb-82fb-058b99ac21b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43dd0874-aadb-421d-ae98-7566a38e125f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26aa1218-305c-45cd-ba61-feae9cf874b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1003fa9b-3ecb-4808-bf4d-4f00d6d0f312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aba272c-086d-4697-8d48-38f8eaaab8c1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b8c4dc-925a-44b6-918f-8040f848d0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6cc87a-9ebd-4507-85ea-5d9ff643ed2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "292fad87-bb56-44c9-87ca-9408a26b58e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9827fa62-02c3-4cf7-ae66-fe815c8b20dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e25d07f-b252-4917-8c56-291540641d66",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f236df4e-34e2-4937-a2da-d51dd135c9f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57494e80-1e03-47e2-bba9-899aa2a33eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5041821e-b559-4379-85f9-e2fa4b3cdaab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2af267a-e158-4784-8ec7-5c2300f6fa82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6fedf9-7c91-4c09-827f-947fbec3eb26",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b74a5b-b094-4f9b-afc8-a35ac314b536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83e42947-20c6-41de-8b99-cd6026b95568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59809d19-d0ff-4620-b77a-882523b1998d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08febe5-0b40-453a-8011-9526bebc040c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3030cbc3-543b-445c-9e71-f8d31a119980",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b422473-7b9a-4345-9f31-36902f6388d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d53380c-eecd-4c98-a155-04e070fd6d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2948101-cf72-49a7-b1b1-b8e8c6e91037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe77120-8325-4ecb-bc1d-b5385e8a1573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a8df44-8f0d-4f23-a364-9acea768c4b2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fa3b65-fece-435c-855a-61af2043938d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95379b8e-3218-44cc-81ef-98769eafe152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86bc0f9-e152-4f8e-be61-2ebb10f2a5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f3ddab-f166-4fa8-8e3d-e71ff8106739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ae9475-6f67-4b44-a704-3b110528cddf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04df812-f402-4e7e-acf0-24ff9d169510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "585845ec-f360-4ee8-ad83-f3001a12eb6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b73036-375a-4667-a865-398f22e3fa1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b192552f-d489-4d03-9180-1753bf6c94c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752b57f2-42a8-4226-bcc9-cfcc4d79cc27",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710fd2aa-c36a-426c-b94a-4107f4f30f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af200b25-e483-4038-a7b9-48b10d5cb027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00996a3-b8df-40cd-b8c7-0ab81f3ed399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc70eb16-e52a-4728-be37-d3c09b1680d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74133c42-81ac-4f2d-a5d9-36f812db4a27",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1bddd5-0f93-462f-a8c1-c62ac2b8c27a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55cc4a47-4408-48ec-aaec-26504fff2629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f25141-13a8-4c4e-8d5f-4cd5bbdfd7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc2974b-2f57-4123-ac11-87f7117113f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afb1c26-497b-4042-a811-008de6198807",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3684f60f-8067-4f64-a0f6-c0fb85ae9ca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "824fe6ee-9ef9-4040-a19a-0d4633654845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab90f63-0535-4d24-907d-f80c57d20f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68abb215-a697-4fdf-ab22-3f2153299dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43387b5c-edcc-4c77-9caa-d7639a02ee81",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be81165-f654-495e-8873-ac2e2dfdc47c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6159a2b-eec5-4300-b297-481b28acaa25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744e1894-30b4-4703-b5ba-4c0ba3994daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "441d6685-99a8-4d8c-863e-66532aff0db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c39ddd-804f-4c71-a377-1e4bf0ec737c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce865b00-8cf4-4e83-830c-ade64ee3453d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "434798f1-9559-4244-9db7-9daefd01a83a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6207961-4217-4e27-b154-109e2059d70a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad66b49-6139-42d8-90f0-1d7af51ef646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f024e2a-774c-43b0-9e55-c55b4c7c818f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c96df11-33b5-4869-8c49-fafdfb8c6d3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e021fb8-bdd7-4488-9e84-d5c728905c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b19c1c6-d286-4d77-b676-e8ccdd994253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27cfaac7-8302-4eb6-b46c-8796aa9da03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20523079-0c99-4c1e-b641-0e2819ad476f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d827a46-4c72-4d3b-8218-49786c8aa3f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2c91798-fa60-4dc2-8b80-98887ba32c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0839a771-dcbd-4d8f-9c2d-07a42078ac33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db72075-7932-438e-a4f6-e28cc6a9ea62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd28a6c-a952-4211-9e12-6ed14903bfa3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a02d2c6-bf49-4779-ba34-00817e0dc8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0520930-425a-442c-8048-b7df6bb48edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed32e5d-857b-4ebb-a131-a844cfe2dc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f45c90-b5a8-4e43-a75f-9b5f9f873069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81db55f0-01f1-4e90-8fb7-de1bb8c20a25",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aab0370-a347-4405-a463-fcbb26c400a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740283e4-568c-4711-81b6-5781a6f0e649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15f7521-fa69-4b40-b775-e958e9ad436a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2937501e-1371-4c5e-81c2-98fcaff7a428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fd4fd7-3439-453d-a27d-22f4bd34d72b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfb152d-d87b-49bd-bf7a-db6ba5b4dc82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed6033f-f6f5-4cb9-ad8e-7d8eda1f1e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868bacb9-3833-4db5-9120-c3a187a6aed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3e6b1e-0d78-4929-8be3-dec3a0c0e10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd79f191-1da1-4bd8-ac86-07d59f8450e7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a8079e-4188-4b23-b33d-c7c683309d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043ef33f-297a-4c95-aa3b-bef03daa7715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa28d4f-3142-4a7b-851c-7d81b8a6624c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdadf877-77c3-4456-bf71-ec94642b13b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470f009e-b229-4f34-b58d-e1043fee7ed8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eecc2e-7750-402d-89b6-8ee2adfc81c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5ab27a-91f6-4bf5-a209-c5e9a1d9f9d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdafbe8-65b3-45e6-88d5-8dc6b887f20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5577bcac-c413-44cd-800e-35a9a9465951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f80d0f2-8ca7-46af-bc92-e35a2590c8e4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d583626-8ffe-4179-8463-16be62be6dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed0dc89-f23f-4caa-b1f6-d6b6eda6a81e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b88559-431f-4e4c-bf35-a126078fce4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d7e8ad-cb2a-44c6-aa5c-38635baf3a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81d0196-7228-4dc5-b880-8ab0d4460768",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814c32e4-d77e-4663-ad72-fcf8659c99c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8622f12-463e-46e8-846c-a84d1be17245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f542ed96-4c9d-4965-ba30-ff5200a0feef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6559e671-ab11-4816-9d62-d667924a42ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d81f4ba-77cf-4762-86e8-66f011ba681b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797ee906-cc5e-4686-b10a-82bd24e6077c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f9eb54-ca9b-4f5a-9c94-80f15f59e708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c99a178-604d-41ed-ae15-4acee954afb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f40c06-5f06-4190-9da7-bf85cb314473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9611f8-00a6-4fb7-8a7e-50af0c665f7f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254ee138-2c4e-4428-b749-ede9b3b23a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f37013-9aa9-4469-b828-5836b6f09158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bd86d9-5f48-43bc-ba56-64e3930f3eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4527d8-abc2-4132-9a02-261869a34ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1722751-b5f4-4b9e-9e29-cc3849635ea1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f97267-b07a-4260-a927-955c95223deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776333f1-3035-46c3-a781-6901fe97e665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d605431-0ec7-4dd1-8317-cf4a363bcd99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13906c59-51bd-4423-973e-a5f0c61ca95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ef74af-f05a-4455-940c-214123b3046c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a4d663-6f5e-4c6c-8ab7-ff8cf911763b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63a6cb7-8dd9-471d-ae3c-9a17e024c791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846fb75f-997a-46c1-824b-dd6d8fbe0797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89eee5b-30cf-4075-99a2-3301a5850570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777538ea-0bd5-44be-a0aa-119a80526cc6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d3131e-67a4-433e-8d61-fad800b208c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6444c6b-b5c9-4525-98da-dbd6ee1e5ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e734342b-1862-4afd-be58-94761d3c96e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883953c7-fccc-4c9f-8f8f-390a0c03569b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983f2b18-ebca-426b-9046-6181b13e3464",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b5b49e-ff36-4aa3-9a84-40224219562e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a079cbbd-5e22-4beb-9bcf-8694fa007551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db2d284-932e-4b1b-8516-7202f7f57870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aefe7e89-51e2-497e-a0a0-97c87fc82457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dff40f-a686-463f-9b0d-457b65e3d14d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61475790-b6a3-4982-a58e-01a159221ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95bdfed-f8fa-4c6c-a920-f0bb1466378f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5e4bdf-c8ae-49e5-bb51-58d8aca5d11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb5c982-3394-4491-9acc-c592641b88ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5499e16-83f2-40a7-88a5-816c58d39e89",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81061594-4d3a-4c66-9314-997dc80ee619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36c215d-a444-4352-97fd-1dc9196c89a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c030b8-ef30-4119-9058-ce01f796bd56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7c4ba1-fb58-4e18-889b-93de2f033b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d5a2b0-9e18-465b-87ba-1ca8c161f950",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff464489-29fc-4321-9425-64b500d3e399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e292d5d-108c-4596-bca2-e6ad40e9f0a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdcc38f-6948-4894-afc6-b74189e0e2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993fc87c-caae-4a68-9229-6b84e36d0448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d88cab-dc58-4d93-bec8-aa5e8a4c28a9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fee7631-7f08-48c5-9f9d-64426d153f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b57df7-d52e-4a5d-ab1b-9c892fc4476e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acc4010-d2d9-4056-ad9e-e3b60240d107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6dfffa-6ed3-43b8-a271-c0a3abf48a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ecbca8-156a-49e1-b695-48499511a0cd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f2c2c5-54fb-4b3d-b254-5f750d875a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8333e255-b52d-487e-90dd-6583b38c4663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2860d750-54d4-418e-8763-bbf4eb64c250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1478053a-0878-415a-99ae-0dcb9f2291b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3036846d-1bf6-49a1-9ac7-f4ab5409244a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863db710-6404-4949-8a15-cf8cea51cb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e5b0ad-5a24-47da-beb6-e40ebf087f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecb7bba-f530-4252-a973-22b8bb9028e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977ed374-2d44-4906-8da3-6565ad176dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178eb17a-4dbe-4243-88f1-d07e53862850",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fa460d-51a4-4d52-9893-f73825eb48c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4460b970-c31d-4801-a57b-9826f6b487b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a51a2f-25e3-45bf-ba01-3fd5a017fec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba88a3fe-2185-4bae-871d-f03cfdb60c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9885b0f-0a2a-47ef-b406-0d39fd82c063",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55c5662-97f8-4a2d-a6eb-05554fae3692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa08df18-e5b7-4af8-9856-d051e87e119c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68048833-7955-4404-9b9a-c6c87f74ac31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00db8901-1374-49b4-a436-4b446bdb9e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359d6a55-3d6c-4a0f-a1cb-be53549c1b6a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bbfc20-e1d2-4db2-b779-f49e53f076c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52a1976-37a2-4b47-8ebb-43ef93cc2f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ca8537-2bdf-4193-a35c-82db4bad0246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5148e6-d49d-4340-a16f-bb25f5be1622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c80391d-5c50-40bd-990d-49aec05ffc4b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddb9f50-13cf-47ce-99d1-6fe9824980f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02774ed8-7295-4c6b-a6b4-0ced1841ac9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1011331-e2da-46ca-9b05-42df44fc282e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9a0a14-102f-4970-97e2-d8668b7e3940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d80702a-30c9-44e5-acdc-76e15da80340",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa920de-2bc8-4509-befb-42795045741a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d438951-d338-40c1-95e7-f7bdaa516369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec3b4fc-e4cf-4959-99ee-a44db0b6d47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34da5e98-5fd2-4053-9937-96989885211f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae1c5ff-6de0-472f-939c-1ba02dcaa46c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbbec61-6914-4d2c-b4db-00beca72fe5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d13e64a-a6de-4658-8df3-feffd1cfc04c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6c25ed-b7d7-4782-9b57-6d8787e320ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c998bbde-0e81-48e8-97a1-db1463d98780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93197aca-8f59-43ff-af2b-f0c419393133",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390b78f1-5496-4e54-b80e-912ce190c23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63d8c15-5e81-4547-a28e-2606f6d90d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbfc45c-ef0b-4d40-b8e1-420e29dca874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60753d4-0237-421c-920a-004d801aaf47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031c902d-269f-4d3c-bd5a-bd0840610b66",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d2e1e7-5387-46cc-876d-b19a54c09d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba54a35-353f-4f83-a208-f8795e8c356e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f239a6-765f-4856-a035-ae185a26c2a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1436a512-e2aa-4744-a6e9-ab42ce888b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ca429d-fef8-42aa-8998-197a87b0c81b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c553808d-81dd-4520-a3b5-9b59b77fc34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28baec2-c841-4155-9ab2-a5c4063c06e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c18fd6f-e788-46aa-9828-58e3599d38e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6ec766-3d24-4d93-85a3-7c7352526aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff4bc8d-63a0-498b-96a0-287e81a622b2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a704208d-c506-42f4-aa6e-5f111651bee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3586339-ecff-4c91-97ba-760ea87cc91d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ac7a4e-4680-4011-96be-2bd0931f0c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e1002a-cd25-4739-b012-b75f4c698b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb85486-940a-4b42-8e67-8687b9378e98",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f20651-a904-41cc-8e51-4c7cfc632a99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec63ca74-21f4-4af6-ab40-6e48f30bd6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3706656-0459-456d-bea2-11b13bbe4c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90d0535-7fe1-48ec-b374-d2b4a15bd7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a08c1e5-eee5-4ed9-8cfa-2b8cd83cc4c2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e903a0-ebc8-4b02-a22c-f692015d3f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78d72f8c-868d-44a9-87db-cebe73900eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b45f05b-c5b9-4f1f-823d-38457f4a3353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b47938c-32d1-4e10-9b3a-53d83440c19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607cb817-fd21-400f-9322-25237ac43bac",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ba44e4-340f-4c78-8697-05d21a5b2ef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b16bf7b-2567-4b3c-85ef-e956c455d2df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153d7a51-e5c5-4115-9cda-adb7e03b8c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aac736b-f835-475f-a6a9-ac558a48ef84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed16210-5849-4b46-b6db-1c285b4137f1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f3ec38-57fd-4e9a-9e13-8425b9b49bf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2afc16c4-4009-469c-ab86-e18bea114f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c7e0ec-fc7b-4d7b-a626-bde084e3a3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c683cc8-9442-42be-8edb-74d52da7ff88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad137b3-0041-4d6b-a38c-a6a8b6676e27",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2895634-4f52-49a8-83c7-62907a15be41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a04cc38-a4a6-42ba-99f9-759f29e89060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aea948a-217c-45c2-bf91-4f8b81e79dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b91392-7d40-44ec-98e0-209cc97eab4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a9494c-4587-403b-96d3-16b03d0fe088",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18c5cc0-5e0b-4578-b738-fa049d01557f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea988423-4d85-4912-b355-489582bb7a59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae67870-1380-466e-bb5e-400baf0c2ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d7937c-0262-4955-aed8-0d56f8c19593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccdc347-1990-44cc-aeef-3b55e261adc8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f4ac39-f7c5-47b1-b5bf-31d76b890c45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf129e9b-b6ab-48b2-83fe-fbf1e0af1384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef602b1-5516-4141-98f8-7dca778697e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f437068b-3efd-48f3-8725-93c77c4ee4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a49746-087b-49fe-9e25-4f31499ac670",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0543ae7-8052-4d7b-81e2-da96385324ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4fb88d1-0744-4fbd-aef9-c96139f09104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0035d526-76c1-45c7-b233-2d97fe3ab76b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8037c246-35c3-4503-82cc-2a85e0f52f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcc98a2-dde6-4e97-9646-fe21a5963ef8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae3501d-14c3-44ca-8d05-9145b0eb50a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4646a570-79f0-420d-b10f-7e1cd1bc0da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28f17b7-c96f-4648-abf5-0215d3ee2ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6677aed-382d-461d-92e3-2ba86eec674d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23aaedb2-53c3-4540-a375-6ccdc71915a8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ad87a6-4320-47bf-82d6-42294c4944d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f79afae-6204-4b11-a2ea-b6d9159da25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e952cb0-a735-4057-b5d3-16677a1f2c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdeeca16-2a1e-4eb9-966e-546a43f5031f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd5235a-1957-45d9-b5bd-f423bdc74586",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710a54d5-f311-45c3-b138-291f8879940c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65ec6c81-9de0-40cb-b9ab-c7b88bc8ac14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7e8423-c7c1-4864-bc9e-1a9f6cadc170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3892c1-7867-4c12-a5b1-6081b3c9baff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2fb298-c4fe-46ad-8689-26cce67d2c86",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f46d99-0520-42d3-9cf0-e972e2466791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59f3e1e4-6c53-4428-ae5b-d0f9cd9b439e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "033f6b1d-ebf8-4fc2-9d86-6eaecd231856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7df23bf-b390-49b0-b689-568857d28062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e21d8d-3024-47cc-a812-c63e0712a49f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2faad60-5cd6-4a50-82c5-843e891938c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e720136d-959a-42a1-8a73-752e97821a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "191a9c2e-02b6-4c29-bbb1-1fc7b123f488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f1e2ce-c85e-42d5-bc7f-60a6aa95cbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ebd229-fa51-433f-9306-01052e36d398",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15ca63d-cfc8-41e4-9e7a-b663e8766baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd309a2d-4d2e-41de-80f8-dbe53f8e7e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e481f53e-47c3-4960-961d-cde3ba0cb89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910a15b7-f764-4dee-917a-ea15f2abab65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71211748-b806-4de7-9271-43f4e93356d9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839c6b58-9471-47ac-8e4d-483c2a0617c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e50796-b52b-4e59-bfec-c5864539f3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd23aa44-2dc0-4b39-a53c-4550a46319fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6795fa59-2527-4e34-a39b-759a7df98d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc6356d-0038-450b-9d3a-0421fd08ac66",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef9fbe0-de68-4ea3-967f-a23b6c34e807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97ec5614-bbd3-4de2-b7f9-1a1bc98d4e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975a9f2b-8498-4315-9d20-34e2335b57d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f89753-94ef-4780-b9b1-b9929c55d900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f56dc47-5b2d-4f7c-88d0-0d22afab2433",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c407f5-b020-46c8-85c5-abb622d0b5f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a08a392d-87dc-474b-9bf1-7ab21db71ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5e9591-8e35-4604-883c-c0dfafe105cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f821298f-e88c-4293-ae8f-860cbbb6c204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa9d0de-4089-4954-9497-b8bdaf4509eb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54090a22-6e29-4c10-88bb-1f1607b69c07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b441dec1-4ab9-491b-a88a-1147563575c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdeaea7-12e6-43b2-abce-b3b300f0050e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ddb30f8-b824-40c2-b907-102597e21a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5e1a51-290d-4dbc-ab54-1a334600cf5b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5dfa565-ae50-4bc4-88c8-04816c1bf55b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d5de32c-b4b5-4c58-99a9-8b033572eef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bdccd2-acc2-43fe-9483-de2a51f6a4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4190e7-9770-42d5-ac67-dbdbef409ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7de689-586d-461a-aa1b-0a7cbed8503e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5d1874-30b1-4e9c-9ed0-a131e0a0e031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1853304-e654-4e20-8773-eeebf8a83dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ed8d3d-3802-451b-9650-b88bfd2fa439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55e06c6-d9ef-43f2-8fef-0dfafa045ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bbd36e-c0ad-4268-be48-4594f1ad067a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf0dba7-4081-4315-803a-39f32ddd2b62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2416b9db-7abf-4a6d-8786-1fa0f4cf0ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83aab428-8560-4c9a-84a5-2e0325966d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213f4fd6-45d6-4427-a371-ce6696913b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba878b4-797d-4bcc-9906-2d241e0faf5b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e8c08c-1da7-41ac-8393-e06b1b0a2522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "617d85ca-ba48-4f65-8475-d7ddfdd70761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccef6805-1eb3-4e18-a9cf-2578d744351f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df01b56-e136-4278-aaef-5127db349346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f66f203-433a-4cfc-b0b7-2f92f3fe522a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04baa6e5-13ad-4691-85c1-1ccf3b6e119b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66e57bad-fccf-4c96-a0f8-76ca52d9f982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a759f2b8-cb4c-4629-aae0-6b01615eeace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e26032-8c43-43c1-8ab7-aa5015c12767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917bdc5b-2de9-49b1-a505-3f47fc07f177",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38c8082-867b-4389-9746-3ea27ab0910f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb2d96b1-14a9-4be6-b950-1a8b016eebff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45131e5f-e757-4f26-8af6-0c0dbc0fa4c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d086d789-c897-4e9a-a2aa-da4c8bfd7c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10715be5-d09a-4aaa-b5ee-066a343091e8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d5f7af-fe21-4e03-bb39-32c3c995899a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d49307c-7eee-4df0-a6a5-79fd1c05e378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da48abbe-334a-4bb0-93e2-54275ab247e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07a2a10-69a7-4311-9bc7-68900081589d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4d25cb-20cc-4726-b644-94e8d758695e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6684003-71b8-4f79-90ab-cbbe9e69e04e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b197a649-4952-4158-acb0-8e26f907fca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe6c7d9-7e65-4c89-a0fd-27259ff2eaac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed31e8f-cf4c-4179-a390-c1d80befa764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782d665b-44e0-43c2-9ba3-b19293d546e9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381480c6-58d4-4701-a841-fa885d09503b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9de8ef53-ad5a-49ee-a643-b81e7a595a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fce451-6178-4252-aee6-18b6ef9b3e30",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1186535e-fe4e-4143-9f57-ff772609b723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f019ad98-e4c6-4c03-ae9b-1c9956a307ec",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a12da5b-fd7b-4451-a018-b292a390d06a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fde62e23-4fd9-44da-b83a-0a1ebead305e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d030da9-4b65-4ce2-a492-4cf3a5b2c4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fa6caf-56d3-4e52-93b0-5c0c06033a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f794f5a9-66c4-493a-a0d3-999821a5a4df",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754dde4f-47fa-41bc-af21-afa5e515832a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76aafbee-5fc5-437c-9d75-79e992b8ab5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d2e709-2f39-4dd7-99ef-90712779ec38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c07065a-aba1-4b8e-8494-7c191136ea1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1eb80f2-f7ce-4983-b828-96ff98462d18",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f9e0b1-edda-4380-acdc-482bae4242d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2925aef2-46ff-4214-b98f-dd93894aa815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d2a56d-7410-4301-86e9-08b07c4da765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486deafb-0895-4734-8d9f-e7fb0d4bf1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e5eafa-4b99-4132-879f-acfc6678fb65",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb9e652-12d4-4685-9ba5-be982ef44408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41fd3092-3e2e-44cf-85ff-2fff93daedbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cecd20-b754-4b85-bbae-f8ee6d1e562d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54034d34-55c9-41d8-99d4-3ca4086272ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f740d9-1f26-4277-9893-8eb0b46c5ca7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00649767-2b20-4368-ab02-dd8a742416e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feb51f12-94f6-434d-9389-f87d498047b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846adebc-b142-416a-937e-db25df860dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8596212c-6f35-4ebc-a887-a5c7a4998ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25aa7e4-79bd-42b0-9c65-94d12ba104a6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc07b5b6-8d3b-412a-8df5-0ee6e65b065c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b177f1e8-c994-47fe-b91a-23fdd4586036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f00b38-3e35-436c-88b2-2534f0299cb3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a73416f-f45f-4ebf-80b9-95da8decc1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7334f589-0145-465b-b0b3-4d29bde5f0c0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd12858b-6741-4aee-a377-2d5b697185ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a699320-7de7-4831-a43a-5545548e3349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783b8181-9f96-4957-a283-58523effb337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80e70fd-7dd2-4b5c-a30b-afec41ef3e63"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28fbc887-0b57-4196-b56c-f37b78511e39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b2c1932-8320-4288-8e05-f9c57b574b9a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcaa2d12-d5fe-4cfe-9056-848b50e50d4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6b2f81d-3963-4d35-8390-e7a017ecd116"
                    }
                  }
                ]
              },
              {
                "id": "2c5a31de-3b1b-482c-867a-07b013898e03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54dbe5d3-ab1d-4f20-a91c-40fce6233531",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354197f9-fc55-434a-b61d-de426b01ea62",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f855cf45-d9e1-4cc3-b83e-0b6b7943bbf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfc1268-a42b-4e9f-b1e0-2a2e52f4bf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e28e82d3-7a1f-4933-9dde-10a3d6417e84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ebb7670-03dc-4f95-8db2-8bd8660fee34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f91a856-450c-45f8-84ab-eb834cda775e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0398a72f-0a55-484b-8901-a8ab4e8a27f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c7cf95c-577e-4e6c-b16e-0a4943e9be02"
                    }
                  }
                ]
              },
              {
                "id": "ef97f27f-9521-4db0-9d8e-bb8d60758bc9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8ce93e0c-2c03-46ab-bc9e-0455316d738a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff59253a-b91c-4582-9ee7-8b288c3d1c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4094b6fd-01e5-4edd-b4c5-bf150673e58f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79495396-0288-4bfb-abf3-5990227db847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4443c8e-4355-46c6-91e5-e7803a585992"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f1840798-d06b-4d4a-9db7-37906b9cd70e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "48d59db0-b773-4921-b1c4-d8488d438764",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bedb9b8a-36ab-41ae-ae41-3660fc38f1a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8103dbb6-c792-40f9-bed3-b10b0ff3f981"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b85712dd-4113-4eaf-b523-a90cbfc64d1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bff2a676-c401-4f5f-b6dd-5f4f5f678087"
                    }
                  }
                ]
              },
              {
                "id": "a8aa9ed6-4b81-4ce0-8637-edb80e634f6a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ede67385-7aeb-49d9-b391-3c3c793a7932",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dfadaeb9-5316-4e24-8e03-ccb30ab8e637"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f5f9a86-f7e2-453d-a193-93267e8d1447",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb01e71d-dba7-47a6-8703-6af03d04dd25"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c976353-1492-40fa-8d75-cbb6101a964c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "310e5f73-7e62-4e08-8aae-9927b9471e3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f142650d-82c2-476d-bd78-b44d20f73849",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2c1e3fc-dd28-4ef7-962d-67d536643d8a"
            }
          }
        ]
      },
      {
        "id": "beeca8ec-a21b-4033-8904-79f0a15642ef",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a52a2e81-0f72-4d59-950c-701c5e06d705",
            "name": "Negative Testing",
            "item": [
              {
                "id": "590dd25a-7ac5-4a6e-be7b-6b73046fed3b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c70d441b-41f9-4f1b-857c-2f066d30d580",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8c0665-8906-4150-817b-2483c4592f95",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0239ffa5-047b-49db-a77a-405bb5a27bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf5a94a-bb75-4d47-a342-c3438a8add8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e4a51a1-0225-4343-b78b-056daa852494"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ea6794d-6f6e-48e0-b06d-9ee0c1f9391d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fd4bfee-b75e-4e79-89eb-39b4f495666c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "240e47a8-5228-402a-bc53-751ba3252873",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69887e5d-3454-401b-8e30-3cff1418d60a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "166a62f8-02cd-4b59-9ce4-df13be66d5bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b302b314-44f9-426c-ae21-f4ffc8e73e5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ff8541a-f8bc-4b51-b2c1-b1d717c594a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a6ba5af-850e-4b75-bdeb-9ec46da586a7"
            }
          }
        ]
      },
      {
        "id": "52d2aa64-5098-4ca3-8f1f-0d482f295de8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "62d0434b-93b8-4f76-b4b1-6712047d8a97",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5538d327-4780-4a41-b140-8589404769b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a90f381-d8e2-454e-92d3-73547e2e9866",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9cd816-1078-4737-851c-1b5df2542d27",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "609c9f81-6baa-4158-8a02-bce4aefcca35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "239aaf91-d7ae-4ec1-a997-00f1ced29fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93019f6f-b6db-45ee-98f7-494a4e7136cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cefe0e2-8e08-4057-b12e-a2fc469ea3e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73544edc-5dab-4369-9ac2-9413c6110c0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88c73367-be2d-48ad-845c-4002c66f3b10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "132f02e8-6bc3-4b87-a896-84392b044029"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4da4fc00-925d-4cf0-9f94-5c61d18ec36e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b94951d-34d2-41d2-9170-3715e1666a38"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54e91b88-7fb1-4f85-9cf5-ecfa0021d059",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b514a50-4297-47ca-936e-f196154a0937"
            }
          }
        ]
      },
      {
        "id": "0a6470ab-662c-47c0-b2f7-c297a1a5c311",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b0396c71-72a9-466f-9628-bf78f8938610",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e561be30-5650-465d-aa16-b11136a81938",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d2ed81ec-5c46-4cdb-81b3-bb4f14d7695f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b4943e-ac7a-44b3-905c-4edd73718e97",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cf331c8-53e4-454e-8aa5-d52ad98eb052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcee0b60-f600-4eb9-803a-107a13667450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9de31ccd-d714-49c4-961b-793723be750c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "447176c1-368f-447b-8a8a-0d59d28e10a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81b3617b-c996-430d-a63b-596e358d15f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5761b5d-7b13-4a1b-abb9-43df22356700",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6a5efa5-d432-46d9-961a-4c7eefb2d9ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3bc0380e-f509-4e72-9f4c-d2d5757bfecc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0c12e639-ffc4-4def-949b-637719f36e54"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7badb89a-a401-4ce9-8633-bb721a90afd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cc71eb4-556d-40cb-aaf7-1ebfe1cdbf76"
            }
          }
        ]
      },
      {
        "id": "58c18282-4d72-40cd-acb3-7bec9c223e73",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2a29278-deae-43b5-a7d4-0b54306a0e00",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53339904-2ca5-42f1-98a6-c8f80786bd2d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a28819ad-2e5c-49c7-ad36-e389284a560f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ad6f69f-7f46-43b9-9f45-97f2bb61531f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce0ff8e9-fc28-41ff-bd98-45aa9f32f1aa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 151.08333333333343,
      "responseMin": 28,
      "responseMax": 11203,
      "responseSd": 755.7713584346532,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1715474384301,
      "completed": 1715474430546
    },
    "executions": [
      {
        "id": "e9b4e9da-57f8-4b7d-af3d-ff653c8e9eb1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "df6aae24-3b08-475a-adba-8ff8f4b523e0",
          "httpRequestId": "3c44bf0b-1072-481a-ad16-d990f34258e1"
        },
        "item": {
          "id": "e9b4e9da-57f8-4b7d-af3d-ff653c8e9eb1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a9fdc686-0c28-47d9-a8b4-41d88ad08a2e",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 0
        }
      },
      {
        "id": "3eb2371c-2b04-4de1-971f-081a8b43df82",
        "cursor": {
          "ref": "24a7240b-144f-494a-9efd-3ef4ee8a4365",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d738bd04-4265-48cb-aca5-7def6096996e"
        },
        "item": {
          "id": "3eb2371c-2b04-4de1-971f-081a8b43df82",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c1528541-6303-40ef-ace6-8fe353abb904",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 0
        }
      },
      {
        "id": "a70729e7-daed-4b1d-8a38-4ea400ec5c7b",
        "cursor": {
          "ref": "6981dbcf-9c6a-4cd5-b299-feb3ae9685f2",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f499f5bd-9f7f-46cd-adb4-48c9edc4f63d"
        },
        "item": {
          "id": "a70729e7-daed-4b1d-8a38-4ea400ec5c7b",
          "name": "did_json"
        },
        "response": {
          "id": "6cfbc3cb-efe1-4fb2-aafd-7eab953dc8ed",
          "status": "OK",
          "code": 200,
          "responseTime": 429,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fccfcb-ddd5-4622-93fb-30f0a4eb5630",
        "cursor": {
          "ref": "e0718ae1-3fbf-4dd9-80b0-b77ce81d53ad",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "081cbe53-7419-4833-97de-e2b51cbfc0c6"
        },
        "item": {
          "id": "44fccfcb-ddd5-4622-93fb-30f0a4eb5630",
          "name": "did:invalid"
        },
        "response": {
          "id": "4749f314-aa52-4d66-9856-c681fc49f253",
          "status": "Not Found",
          "code": 404,
          "responseTime": 535,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fccfcb-ddd5-4622-93fb-30f0a4eb5630",
        "cursor": {
          "ref": "e0718ae1-3fbf-4dd9-80b0-b77ce81d53ad",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "081cbe53-7419-4833-97de-e2b51cbfc0c6"
        },
        "item": {
          "id": "44fccfcb-ddd5-4622-93fb-30f0a4eb5630",
          "name": "did:invalid"
        },
        "response": {
          "id": "4749f314-aa52-4d66-9856-c681fc49f253",
          "status": "Not Found",
          "code": 404,
          "responseTime": 535,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7114507c-7ca8-4baa-9130-217a8df48fc4",
        "cursor": {
          "ref": "bb86f675-f896-4aa2-9253-fba9ceeebe8f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fabce86b-f5ea-4e33-8d92-02a1fa38c2a8"
        },
        "item": {
          "id": "7114507c-7ca8-4baa-9130-217a8df48fc4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e26f6f9b-798e-4924-a365-a2dd59215c17",
          "status": "Not Found",
          "code": 404,
          "responseTime": 73,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c68ada-55e4-4f48-9d82-17a365ba4a4e",
        "cursor": {
          "ref": "609e9549-ed90-49e7-a662-62fd1cdc5dcb",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e5af18f0-abd4-4326-ad28-ccf47c71cc32"
        },
        "item": {
          "id": "48c68ada-55e4-4f48-9d82-17a365ba4a4e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7d0fceba-1461-483e-9c59-e7fa730c84b5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c040b23-d6bd-4fd3-88ed-5c9af4bd8ca6",
        "cursor": {
          "ref": "67c565e2-d473-4e96-a8f9-6d098ff85be4",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "51a86c4a-8fa9-4d97-ac8f-95268d704deb"
        },
        "item": {
          "id": "5c040b23-d6bd-4fd3-88ed-5c9af4bd8ca6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "84b4df5e-c714-4f91-9e00-175395379ff7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4996f6ee-2430-4229-a5d2-663ef371c420",
        "cursor": {
          "ref": "11510aee-1158-4fe2-ab9d-be590ed71637",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6718e3fb-a017-431e-817b-89faf53519c1"
        },
        "item": {
          "id": "4996f6ee-2430-4229-a5d2-663ef371c420",
          "name": "identifiers"
        },
        "response": {
          "id": "5ee96f0b-d17b-413d-817e-d6f31c189c0c",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda055b3-230b-43f3-b8e8-0c2527ff7d1e",
        "cursor": {
          "ref": "13671c73-1fce-4c97-86f1-859a67900ba7",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f5520d93-0c91-48dd-bfff-b9c7227dc6eb"
        },
        "item": {
          "id": "dda055b3-230b-43f3-b8e8-0c2527ff7d1e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ca8adcd7-202c-4568-af00-4e595b03dec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1780407-ed77-475d-bac9-5281899a2900",
        "cursor": {
          "ref": "e9b46456-02c9-4c52-9f1b-923926566e34",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a3f30b99-5896-4c90-b197-4e959912aedd"
        },
        "item": {
          "id": "e1780407-ed77-475d-bac9-5281899a2900",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1d570cd9-9837-411d-bb6b-f3e348f3a72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7702cca8-8dff-4444-9b9e-9e01df970f30",
        "cursor": {
          "ref": "bdb8443c-127e-402a-ba3d-f14209b2f9da",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e17cae1c-d50e-4594-843e-93e6cdd802c2"
        },
        "item": {
          "id": "7702cca8-8dff-4444-9b9e-9e01df970f30",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a5378c7d-a07e-4c30-a22c-5c609f25cd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4923d220-c1c3-484a-bd97-5456530200ad",
        "cursor": {
          "ref": "1a643a94-98eb-422b-b930-71e98863cfdf",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "509061e8-f78b-4b15-bc8a-2aa3a82f2fbf"
        },
        "item": {
          "id": "4923d220-c1c3-484a-bd97-5456530200ad",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "730e42d4-fc00-4bf8-931b-a82c2554f5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaf5c37-075f-4b9e-99f1-94d719e904fa",
        "cursor": {
          "ref": "eec2b3a5-f353-4cc0-88c6-ac9d666a9ef4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d2093e83-c973-4ec0-929f-9fece99d9b17"
        },
        "item": {
          "id": "baaf5c37-075f-4b9e-99f1-94d719e904fa",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ad751309-f55f-4650-9e46-0930da2d689d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b58e788-7da6-4273-8fd1-396fc2c92f58",
        "cursor": {
          "ref": "3eb06a48-e84d-42cc-ba5d-5b66d8e35e41",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bdacc1c8-1bee-4988-9ce0-3247e799de17"
        },
        "item": {
          "id": "9b58e788-7da6-4273-8fd1-396fc2c92f58",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a180c40c-5cef-44f3-9570-02a04a1d7ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0314fb37-9d31-41ce-8dc9-e013675d0f09",
        "cursor": {
          "ref": "307a6ad4-cc76-4c3f-8d3b-871dd62b4ae7",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "305b3962-b3d6-4d61-9ef5-e8eee5c34395"
        },
        "item": {
          "id": "0314fb37-9d31-41ce-8dc9-e013675d0f09",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "70b7e02d-ed81-4090-824b-16bb81f2050c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ab32d0-a1b6-4cf3-9637-c4b1dd4918fa",
        "cursor": {
          "ref": "b815d04b-a09f-47f7-ac60-cad7d85feb45",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b808bf8c-e6d2-447f-b609-85bb749d4bc3"
        },
        "item": {
          "id": "07ab32d0-a1b6-4cf3-9637-c4b1dd4918fa",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9ccbe569-417e-4463-8102-a644a89ab25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95dc48c0-8bcc-4af6-b8ce-4722cbaf5808",
        "cursor": {
          "ref": "71d48564-b559-43ea-b1cd-3a50e6ae198f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e4593b37-311d-4eb8-b010-29d11d1a77b2"
        },
        "item": {
          "id": "95dc48c0-8bcc-4af6-b8ce-4722cbaf5808",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3f1613d0-8f32-45c2-b3da-9f67c340afc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5535dd37-288a-45c2-ac1a-905b87c90dc6",
        "cursor": {
          "ref": "f8613a33-3f11-45c6-a5e9-833e23920c8a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8152f691-59be-40ee-a592-af69eb0ec031"
        },
        "item": {
          "id": "5535dd37-288a-45c2-ac1a-905b87c90dc6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6794f7a7-3351-45b9-a15c-c55aaac855d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc3739e-39d4-46f6-8f5b-7b195bd64563",
        "cursor": {
          "ref": "29ce6746-0bf3-4e33-9eaf-420f2794d59b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "08a7e384-2167-47ad-a7b9-6a2f4254b39e"
        },
        "item": {
          "id": "8cc3739e-39d4-46f6-8f5b-7b195bd64563",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3e421d7b-9dfe-4b84-a3d5-e08ae7e50303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590cb475-5cd5-4067-bcfd-1d5e529bca3f",
        "cursor": {
          "ref": "a2378e18-7798-4b55-a0e2-ee530110646e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "086d11c3-4353-42f7-bc0b-f6bfc233d1d3"
        },
        "item": {
          "id": "590cb475-5cd5-4067-bcfd-1d5e529bca3f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "83245d32-4577-4227-9b14-37a20ba384dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab109db2-b0c7-4a72-ba52-7d6e9ba5e3cd",
        "cursor": {
          "ref": "ff8ab11e-0666-43cc-a7d8-77c0b07a3ee7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "01e70f6b-d980-42c9-b872-4de81b9dad12"
        },
        "item": {
          "id": "ab109db2-b0c7-4a72-ba52-7d6e9ba5e3cd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "429c03c9-2031-439c-8139-1dce84b98727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebc2e2c-653e-44a8-b4dc-9487f9a1d3cf",
        "cursor": {
          "ref": "26b73c3c-fa77-4761-b6a3-bcc80c757709",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9b2b6e5d-5214-4064-ae97-7017dee409c2"
        },
        "item": {
          "id": "8ebc2e2c-653e-44a8-b4dc-9487f9a1d3cf",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "74886b26-c072-4a27-ad6d-6541e7b37080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9844f2b-03e4-45e9-bc1f-c05a7d85a55e",
        "cursor": {
          "ref": "00cf4704-01d6-4a7c-841d-3e9b59a12d05",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bdc2a09d-44f3-4050-a276-16af1a4600c9"
        },
        "item": {
          "id": "f9844f2b-03e4-45e9-bc1f-c05a7d85a55e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4232b255-192c-4b56-a231-57ff675c98ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a951435-b2c3-4460-8f49-d659ac51e191",
        "cursor": {
          "ref": "457f324d-3a7b-4f4b-8ff1-9559b0655290",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "40402143-5fae-451d-85a6-e4012317e1b4"
        },
        "item": {
          "id": "4a951435-b2c3-4460-8f49-d659ac51e191",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e0533501-20ac-4879-90a1-aa8af33b7539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5cf2b9-f6c7-454d-9a25-0310ce17679a",
        "cursor": {
          "ref": "27e3139a-4d9c-4446-a40c-6990ab82f8ce",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8985021e-ed10-4644-8054-2563aed713d3"
        },
        "item": {
          "id": "7d5cf2b9-f6c7-454d-9a25-0310ce17679a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8b746e78-e1f9-4a57-b117-d9e85cb0e9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4bfd7f-f321-4bed-b695-3b6558befbf0",
        "cursor": {
          "ref": "91c048fd-8543-43a6-902e-ea0a87c8d5e0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "097966ba-27c9-4173-892e-5222e70f7837"
        },
        "item": {
          "id": "6d4bfd7f-f321-4bed-b695-3b6558befbf0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f0f4c82c-3822-45f9-a137-36696e501173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc6ae12-34e6-41e3-938c-3a53a578fc17",
        "cursor": {
          "ref": "20086e23-fd2c-4007-ad80-350cff81299a",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "da42afa7-1600-418d-9338-7af0b0f2f4e9"
        },
        "item": {
          "id": "4bc6ae12-34e6-41e3-938c-3a53a578fc17",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "847ef6a4-3e33-430a-a9fa-6cb254e94b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde0d7e1-f1d5-4085-b160-6552db7c6bc6",
        "cursor": {
          "ref": "547c29d1-9528-404f-a26e-cf4e97648406",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "67764189-ca00-4764-a18d-48d60d733da8"
        },
        "item": {
          "id": "bde0d7e1-f1d5-4085-b160-6552db7c6bc6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b510be0a-9eee-4db4-b9f8-8784cbf6acd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545f847e-f4df-4c77-844b-6845ae10ee78",
        "cursor": {
          "ref": "b72ef9b2-6a04-4084-a98f-f1059c25cee6",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "58a592e1-861f-4808-add2-4385f6b648c1"
        },
        "item": {
          "id": "545f847e-f4df-4c77-844b-6845ae10ee78",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c0b900ab-85e1-4c32-99c0-5df0c5cd721b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4070868d-00e7-4a68-861e-fdf9b0ce05f9",
        "cursor": {
          "ref": "ab8f75fe-1f89-4f81-8a9e-233cb5492d38",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5fb0a32d-d4b4-42c7-8cf5-d6c8e8870594"
        },
        "item": {
          "id": "4070868d-00e7-4a68-861e-fdf9b0ce05f9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "aa7dfbfc-2bd4-422c-b869-ac54da48b83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2247f2-ee94-4721-8c4e-b1e5ec020fcb",
        "cursor": {
          "ref": "5f0a2a1a-590d-49ea-92af-41396277e131",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5b85b710-6a11-4630-a485-7f9a77a998e3"
        },
        "item": {
          "id": "3f2247f2-ee94-4721-8c4e-b1e5ec020fcb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2ee6863d-fae1-48b2-8ee4-67c7377eda1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b39e96-2dff-4ec1-8fb4-e7625a78e5f0",
        "cursor": {
          "ref": "071fb5e7-984f-454e-9405-6fd4d4fe8524",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "950beca9-09b2-4d5b-a924-7c3da94cf08b"
        },
        "item": {
          "id": "a4b39e96-2dff-4ec1-8fb4-e7625a78e5f0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7f7676e1-ebcd-488a-831d-cad78f7fca33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fcebdd-3247-422a-bc0f-1e00857380d8",
        "cursor": {
          "ref": "3d22672d-37c3-41f3-868e-d0cb94f85fcb",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e5a82b3a-9564-4152-b804-0717ecd995ec"
        },
        "item": {
          "id": "c5fcebdd-3247-422a-bc0f-1e00857380d8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "aa773003-f108-475d-8c28-eb627d110938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e4d3d3-70ee-4629-a97e-c4770cdd3e67",
        "cursor": {
          "ref": "bf14692c-82e5-4949-bff9-f803630258ba",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d7cfba2a-48f2-42e5-816c-a63c1256ace7"
        },
        "item": {
          "id": "f7e4d3d3-70ee-4629-a97e-c4770cdd3e67",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2e78f25e-898c-4fa2-816a-7b70fc3e5994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b023ce57-1c9b-4323-a099-32f21a98c26b",
        "cursor": {
          "ref": "38bfd621-479b-4d65-8f72-157880c7be06",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "efad9574-7273-4c75-a1da-7c380ecd2a2a"
        },
        "item": {
          "id": "b023ce57-1c9b-4323-a099-32f21a98c26b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f9148343-1370-49e8-9bb3-ba8e6eec81c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274ade64-17c4-40a4-afb6-5873dff2a9fd",
        "cursor": {
          "ref": "9c87c6f8-383f-46fb-b631-f9cb04e3228a",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2a728866-4833-4825-8b2f-119c74f1a3c4"
        },
        "item": {
          "id": "274ade64-17c4-40a4-afb6-5873dff2a9fd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3700c152-0127-452d-b8ef-66b881746157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1a770a-f3c9-4b61-bb59-f03ba1a49dbc",
        "cursor": {
          "ref": "a01b266b-ce7f-4f64-b25d-26e9cc06277f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f187aa67-e533-4645-90d2-839ff5dd42d5"
        },
        "item": {
          "id": "df1a770a-f3c9-4b61-bb59-f03ba1a49dbc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "54885973-77de-4936-ab63-a71d5a7a2621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ae07b2-61ab-41e8-9b27-cc0aa4c574b8",
        "cursor": {
          "ref": "b49b5fbd-813b-48b9-891e-88cae3bfa29e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9f66d212-01ef-4a88-baba-6e4672134476"
        },
        "item": {
          "id": "83ae07b2-61ab-41e8-9b27-cc0aa4c574b8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "61e6481a-55a3-4ff5-a12f-b84699f36f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e52a497-308e-49f5-8f05-754885c9c401",
        "cursor": {
          "ref": "82401055-ab1d-44d7-863a-4708a6f12868",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4b455fed-c5a8-4e17-bbba-6156ea17a8d1"
        },
        "item": {
          "id": "4e52a497-308e-49f5-8f05-754885c9c401",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d8fb4ed5-a98c-4f59-9097-719f84f98817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b1ce9d-1fe6-4019-b78f-817ae6f978d4",
        "cursor": {
          "ref": "904d9082-aa09-4034-ab3a-d4fe26bb6e60",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "992e62e6-068e-404b-92ab-853bdffa8ef2"
        },
        "item": {
          "id": "51b1ce9d-1fe6-4019-b78f-817ae6f978d4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d2f6dfdd-e51b-4d18-959a-90a5ea531929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecaec38c-c8be-46aa-b981-3526aad36696",
        "cursor": {
          "ref": "55999ced-169f-4ba7-a75c-073f642f15ef",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ad9dd077-f4c0-46d3-a97d-7e40ce7b7ece"
        },
        "item": {
          "id": "ecaec38c-c8be-46aa-b981-3526aad36696",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d5732806-14f9-46e1-b8a0-051494214468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9883b4-e9b1-44f4-9596-b70b42f1f1c4",
        "cursor": {
          "ref": "15183ed9-c886-4821-bb84-8df4818ea44c",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6cfd102c-f04b-4259-a50d-c1126ac8509b"
        },
        "item": {
          "id": "6e9883b4-e9b1-44f4-9596-b70b42f1f1c4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c2d95a4f-249d-4edb-a713-5f7c0a9219f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d420888-8cad-44fa-96d7-a927124521d4",
        "cursor": {
          "ref": "733cf203-cf1a-481e-98ce-fa0174b50132",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "388238bc-d4e6-46ed-9197-e95be0551dc6"
        },
        "item": {
          "id": "3d420888-8cad-44fa-96d7-a927124521d4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "65af95bf-9ba7-4e32-853a-a5259bfedbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd75dbdf-73b6-47c1-bc9b-04a96a4dfa9d",
        "cursor": {
          "ref": "fe530d51-d59e-4d40-a78b-2f4fbd92407a",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c1bcd220-9d81-4598-82a1-ff008e52a8c7"
        },
        "item": {
          "id": "dd75dbdf-73b6-47c1-bc9b-04a96a4dfa9d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "24ca1acc-71a8-4073-b90e-1b69eb124d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0097f76-861c-4df6-a5bc-e7b26bb5b18e",
        "cursor": {
          "ref": "8318aabb-8eef-4022-9be1-553abaaafd6a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ae810154-f540-4a67-83f6-32d74314083c"
        },
        "item": {
          "id": "b0097f76-861c-4df6-a5bc-e7b26bb5b18e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b638f97c-cba9-4d13-9b2a-6df6497ed208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d75a74-b8dd-4ca2-ad2f-4f26acebd9d5",
        "cursor": {
          "ref": "88c3a232-60c2-4068-8763-f98d3685243e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "15353a96-7bbb-45d3-a01e-aa22e9161d21"
        },
        "item": {
          "id": "50d75a74-b8dd-4ca2-ad2f-4f26acebd9d5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bb2aa3dc-4c72-413a-b9a0-fb5bde5618e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a432ac6-0c6a-45a0-beb1-97f0adc48019",
        "cursor": {
          "ref": "b558c471-1235-4ee8-9104-f7981281bd72",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ac619f15-d78d-4dcf-8ddb-eb59f74771fe"
        },
        "item": {
          "id": "3a432ac6-0c6a-45a0-beb1-97f0adc48019",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "235ba485-142e-4396-bf47-9dbba30da124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba60c66-b851-40a6-b4df-3a44a861f511",
        "cursor": {
          "ref": "892e879f-ceda-4257-b451-0c999aba39cc",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "458d06ed-6b63-4bf0-9485-8e32885365b1"
        },
        "item": {
          "id": "2ba60c66-b851-40a6-b4df-3a44a861f511",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "17780d8c-b8f6-42ec-b6bf-699466816994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26a7fe6-c5c8-4e37-ad66-a42ae2c27892",
        "cursor": {
          "ref": "b6737cea-497a-46a8-965e-6124c109487c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2ec3dc41-4eb2-4bf2-9950-a8b13b06348d"
        },
        "item": {
          "id": "e26a7fe6-c5c8-4e37-ad66-a42ae2c27892",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c88eee7e-493c-41f5-b7f8-529767c331b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c360483-0ee1-4fb2-b46f-9386fe0fa102",
        "cursor": {
          "ref": "d88dc7b9-bb2c-4ec0-bbb5-5c6b52922018",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "36249e1e-ee21-42bc-98d8-28ae7979e327"
        },
        "item": {
          "id": "8c360483-0ee1-4fb2-b46f-9386fe0fa102",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d5f14bd4-33f4-4677-b8ad-714c093d001f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fea9cb-2e65-4e62-9898-0e9f26dd92ae",
        "cursor": {
          "ref": "0bd7a177-5feb-4c50-b8ca-03d3070ae202",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "10efd494-06b0-4cb3-88c2-74ec5afc9e8c"
        },
        "item": {
          "id": "46fea9cb-2e65-4e62-9898-0e9f26dd92ae",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "06163a7a-5aa3-45d4-8d56-32d37a015687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a8e272-b5a0-4797-a3b2-7f698c1a88ed",
        "cursor": {
          "ref": "d7566ff8-ae22-4024-90c1-75aee48147e6",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "05c5656b-c373-45be-aed0-b93e11b66cd8"
        },
        "item": {
          "id": "27a8e272-b5a0-4797-a3b2-7f698c1a88ed",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9e2c39df-ba24-4935-bf3e-76549ce52c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9948bbf-943e-4bb4-a04e-6c019ae64930",
        "cursor": {
          "ref": "33750b8d-4fa2-473d-8095-40c09611cee9",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d987ee59-fe4a-46ce-a0be-3271d721a50b"
        },
        "item": {
          "id": "f9948bbf-943e-4bb4-a04e-6c019ae64930",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4f852d20-76fe-44f5-ad9d-265f3faafb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12f7a85-7267-4944-9456-c08adb945a18",
        "cursor": {
          "ref": "66d4dd98-05d8-4dea-a127-19ae95fe5f62",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bbe2a277-33fb-446c-818e-ce511d85e436"
        },
        "item": {
          "id": "e12f7a85-7267-4944-9456-c08adb945a18",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3d6ac4be-2694-422d-b58c-8e0ab1613acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d44e6f-ec5e-4bdb-9d9f-f0061acab179",
        "cursor": {
          "ref": "31b8ed91-d4a0-402d-8e4f-8c872e49b6ba",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e5e14c33-77c6-4305-a703-a5aafb41d1cb"
        },
        "item": {
          "id": "05d44e6f-ec5e-4bdb-9d9f-f0061acab179",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9c9bb3dc-886e-47d2-bc47-d4a829e9994d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bafa83-2897-43fd-b2ea-11e594d93962",
        "cursor": {
          "ref": "56fb9188-3cdf-4fea-ad3b-30f89e08aedd",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "aaa5b6d9-930c-4053-9b32-edf532b2aba0"
        },
        "item": {
          "id": "26bafa83-2897-43fd-b2ea-11e594d93962",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7ccc7ef7-c58b-429d-90b1-a2859af04b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b49d082-8a63-48f5-b7b4-98d4b8561022",
        "cursor": {
          "ref": "76f79458-4586-4cc6-8ec4-ad154cf4626a",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "971263bc-81ab-4700-873c-e1d5f88c1d93"
        },
        "item": {
          "id": "4b49d082-8a63-48f5-b7b4-98d4b8561022",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5a9a2de0-33fa-4ce8-be85-f53602adf389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bab8b3-204c-430b-902e-1e3614c10269",
        "cursor": {
          "ref": "2038837f-d60b-40f2-b226-c72b54af1284",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "75db73f3-2da9-44ba-9e63-17ef1cd980f7"
        },
        "item": {
          "id": "79bab8b3-204c-430b-902e-1e3614c10269",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "417d93cf-1721-424e-936a-f113b6af7150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9a12b2-ef3e-4ade-8107-0a1c2f4aa78c",
        "cursor": {
          "ref": "aba68b2e-0cc5-481e-a7c4-ae0f1ed03446",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ba7c9ed3-40a1-4f72-908c-7736ae0c88dc"
        },
        "item": {
          "id": "cc9a12b2-ef3e-4ade-8107-0a1c2f4aa78c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "574b938d-f20e-4cd2-856f-7222bdee43ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6436e19d-6d2f-472d-96d9-deac4778f5fc",
        "cursor": {
          "ref": "15bd8ea8-b273-48f9-9193-427841c64957",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b513338a-0c9a-4372-a619-89728f08ab2a"
        },
        "item": {
          "id": "6436e19d-6d2f-472d-96d9-deac4778f5fc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c72b0000-bce6-4d98-9422-3ef5c22742ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11a58f9-e3bf-49a4-a097-4e750557e425",
        "cursor": {
          "ref": "e031c4c5-f2d6-4807-bf67-0b595bc2550d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a7403846-a1f3-4577-be33-5072d8c9ebe8"
        },
        "item": {
          "id": "a11a58f9-e3bf-49a4-a097-4e750557e425",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "32f77c9f-66b9-4b3d-8ba8-e88a0acdd833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf24690-cf1b-4680-a34f-1cae6ecf427f",
        "cursor": {
          "ref": "02d23aca-8eb9-40de-930c-bcc3103e9aa9",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a3881edf-be6f-4839-97f5-d068572c1204"
        },
        "item": {
          "id": "4cf24690-cf1b-4680-a34f-1cae6ecf427f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "015ed871-f084-46e1-a1bd-8e1d149eb77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aee4127-814f-4601-a8a7-5889a52e7a48",
        "cursor": {
          "ref": "8d7b4bda-5688-4c42-a749-4e00adbd6bd1",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f11f995c-8435-4566-aa65-322595a7dfbd"
        },
        "item": {
          "id": "7aee4127-814f-4601-a8a7-5889a52e7a48",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "58bbfaad-22aa-48d5-9631-c062f6ac20f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d256af-b59c-41c7-8b42-c7a2fc06ffd9",
        "cursor": {
          "ref": "5d5073a2-3100-4b03-b509-1b1ac0ef055d",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8c48d0d8-ffd1-43cc-bef1-3ba401edb5fd"
        },
        "item": {
          "id": "68d256af-b59c-41c7-8b42-c7a2fc06ffd9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "632d99e1-fa15-4b0c-83c7-80b4a5f0a1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462e46e9-0b83-4165-9029-92dafd428a0f",
        "cursor": {
          "ref": "cede17fe-ca84-40af-9800-05765dbe4365",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bdaf629a-734a-41dc-b816-c25a040d55d6"
        },
        "item": {
          "id": "462e46e9-0b83-4165-9029-92dafd428a0f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "29035532-bce6-4b53-8ba2-d5ae7a08e696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ae672c-4b97-4c4a-af16-b5d4a22f2036",
        "cursor": {
          "ref": "a81075c4-3191-414c-8817-734970e2a1e3",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2c2afa49-91bd-4a00-b1b5-9f987ce4575e"
        },
        "item": {
          "id": "20ae672c-4b97-4c4a-af16-b5d4a22f2036",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "956ff23f-d113-453a-909a-f42c1991c73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21a24e6-3ee3-43c9-a091-b272ad04f9f2",
        "cursor": {
          "ref": "804197e8-d6a1-4620-b5aa-5da964c721b4",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c652d3d8-8c8f-4646-a771-b71ee5258f59"
        },
        "item": {
          "id": "a21a24e6-3ee3-43c9-a091-b272ad04f9f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "43259c70-a4fa-44a8-b571-39b5f3164f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4331c9df-7771-442f-92c7-439fda233c3f",
        "cursor": {
          "ref": "294bf1bc-77a0-4639-9898-4c10bc6b4a7c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "84f0c2ab-596b-4926-a238-e6475afac616"
        },
        "item": {
          "id": "4331c9df-7771-442f-92c7-439fda233c3f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "70ff9c35-7479-48e0-98ba-7404c2c5bd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53259ec-c611-48ea-8514-704ad9f744e0",
        "cursor": {
          "ref": "e54e83a9-f759-4dd4-90e8-b165d2b2b52a",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fa1927a7-a4ec-46d9-8352-5b96c4fbb01b"
        },
        "item": {
          "id": "f53259ec-c611-48ea-8514-704ad9f744e0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ffbe20ce-0bfe-442b-9763-ceddc80ce53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2074bd1a-0ee4-46e2-9f7a-f102715df0ab",
        "cursor": {
          "ref": "73ceadea-116b-4109-85c8-7a0b3797c1c4",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a55f8b55-0693-48f6-80ae-4aa9ffbf80fc"
        },
        "item": {
          "id": "2074bd1a-0ee4-46e2-9f7a-f102715df0ab",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2fac7279-a6e6-40cf-b649-109991cb5b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56261e8f-dd01-4b70-b4da-927b360732be",
        "cursor": {
          "ref": "738e4b0a-6b76-43d9-9691-e4fcf9a7b267",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6dd94485-5d67-451a-bb14-6c91422b16ec"
        },
        "item": {
          "id": "56261e8f-dd01-4b70-b4da-927b360732be",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bda5a37c-c332-4c0d-80df-533477dabb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc047d9-10cb-4c59-966a-86e18f5d644a",
        "cursor": {
          "ref": "a11f4b6c-881e-4073-be9d-efb3c0aac116",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e132600f-c36e-49ed-b63b-05a6225893f4"
        },
        "item": {
          "id": "3cc047d9-10cb-4c59-966a-86e18f5d644a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "54ed836d-9d49-4727-824e-5e626808cc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b762d94f-eb24-472f-a8d8-82f6637284e1",
        "cursor": {
          "ref": "071bbb6d-658f-4a24-ae59-fbaf5a1d9dcc",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2adf8880-4269-411f-9d43-f311e424f6c1"
        },
        "item": {
          "id": "b762d94f-eb24-472f-a8d8-82f6637284e1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "751b875f-d1cf-456c-abdc-915b30262899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240ee078-13be-4e25-a579-14c795820673",
        "cursor": {
          "ref": "cf89dc9c-00b4-4b7d-8fea-0055e3a17b4f",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bba39237-39cb-4857-9a33-c7c2c89af9a6"
        },
        "item": {
          "id": "240ee078-13be-4e25-a579-14c795820673",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "efeaedc0-5172-44a3-b97b-b23ecad0f097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2bb693-6735-44d6-b03a-ee8cb25aae81",
        "cursor": {
          "ref": "e9a6d827-4d9c-4add-aff3-e00814d44d16",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "455ca13b-cb7a-49d2-a713-051799598d0b"
        },
        "item": {
          "id": "aa2bb693-6735-44d6-b03a-ee8cb25aae81",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "79a40f48-7230-4829-801c-c4f9bfbcf55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a2283b-e5e1-4c37-b677-88f78f69a136",
        "cursor": {
          "ref": "85f268d5-e025-4f2e-916f-2286659bce3a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6ec10f44-6273-41fb-b267-f9ba42cf3769"
        },
        "item": {
          "id": "24a2283b-e5e1-4c37-b677-88f78f69a136",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ba6820e4-9dc0-4474-9901-a2d7ba801207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d93b5fe-e815-4683-a564-3249b2103ccb",
        "cursor": {
          "ref": "f90b0944-275a-4842-8b21-d6c790fbcbc0",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "88c55f4e-42bc-4a08-8547-b09bce96dbf4"
        },
        "item": {
          "id": "6d93b5fe-e815-4683-a564-3249b2103ccb",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0d7970cc-5b96-4784-b1c3-91a90cce6e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d970a43d-92fb-4883-b1ee-77ce964cf24d",
        "cursor": {
          "ref": "81a2a64d-3df6-4a9e-a50e-dea4fed23f2e",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "60486faf-860b-45c8-94ec-bdf9b2feb110"
        },
        "item": {
          "id": "d970a43d-92fb-4883-b1ee-77ce964cf24d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "db58acce-c028-42c5-8583-880f18cff068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43ed173-ad03-48f2-9970-6e8f9364a0de",
        "cursor": {
          "ref": "4a4998d6-e076-4891-8b7b-0f8d8b76a824",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6c270b08-17b1-4371-8b51-24b542fdc5ae"
        },
        "item": {
          "id": "f43ed173-ad03-48f2-9970-6e8f9364a0de",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "41ba6a16-3918-4797-88d7-f0c5a33366a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947a7692-3cdc-4d8d-a545-0bf705b489fb",
        "cursor": {
          "ref": "20ad0abc-4025-49b8-855e-2dab533922ef",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "817b070f-0317-4d3a-9436-4654813e6a54"
        },
        "item": {
          "id": "947a7692-3cdc-4d8d-a545-0bf705b489fb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "57a97b8a-bccc-4305-8bae-d5546264d242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c31a789-5088-4d63-8fba-78454d431357",
        "cursor": {
          "ref": "480e69d0-7f7a-46c6-b5e7-a0053f7229d2",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0a0391fe-186c-46ab-9e6c-fd6bb4fa5692"
        },
        "item": {
          "id": "2c31a789-5088-4d63-8fba-78454d431357",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d055b73d-71cb-4795-a35f-6d72dd5f683e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7c78cf-79b7-4d36-9ca6-1962110f9690",
        "cursor": {
          "ref": "17986773-090d-4d68-b674-cbfbaacc9d6d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "54e08760-5245-49be-8a53-d09e8f8154b0"
        },
        "item": {
          "id": "cf7c78cf-79b7-4d36-9ca6-1962110f9690",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ef7a0c4a-d61b-4f9a-acc7-691fd7ddbf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdca9dbd-9ba0-41dc-b253-fc0d4cb45f4e",
        "cursor": {
          "ref": "d3636284-3ed2-44db-aadb-54c5b0e4fc7d",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ce9307a3-fe3a-45d7-95b1-54a1eccbe579"
        },
        "item": {
          "id": "cdca9dbd-9ba0-41dc-b253-fc0d4cb45f4e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d6980149-8bcd-4056-883e-7506e6899357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dad4b6d-3696-451a-a099-2bd97104ad42",
        "cursor": {
          "ref": "81167429-66e1-4451-a961-ccbefcc4256d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c1d85d8e-7446-40ea-ad09-351045faaa1b"
        },
        "item": {
          "id": "4dad4b6d-3696-451a-a099-2bd97104ad42",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "243d63e3-de7a-46d8-99b8-f6aa59c4a63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0995db2f-d991-473b-a665-31503a49edb9",
        "cursor": {
          "ref": "f1b7aa83-e8a3-4867-b3cc-56e5cfe63fb8",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bfa81bf1-b5fc-41ec-bbbe-7b1b33757153"
        },
        "item": {
          "id": "0995db2f-d991-473b-a665-31503a49edb9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6df33299-bd7a-40c9-b97e-47c6c2f0acc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5627a07b-bb83-413b-a999-674987469f92",
        "cursor": {
          "ref": "b0cf41df-5fff-4ba7-bb03-081d03891400",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ba27579d-ac39-4d2d-8cf4-f46f394212a9"
        },
        "item": {
          "id": "5627a07b-bb83-413b-a999-674987469f92",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "36ebb051-e8de-4efc-b516-ef00ba6d3e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaf3ccb-51c6-443c-9631-7b23938c5c18",
        "cursor": {
          "ref": "b15708bb-9e0c-4392-9446-f739c73f224e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "45e16c36-30a5-439b-9fbe-a6fa0ee06407"
        },
        "item": {
          "id": "baaf3ccb-51c6-443c-9631-7b23938c5c18",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "caeea9e1-9227-4f80-862d-0b4d922f2b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622a8591-16f2-4c28-a999-57f69274d90d",
        "cursor": {
          "ref": "7109e8c2-f223-4715-9a6c-a0f9e127c6a4",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5a6258d1-d695-4c8b-b45f-b85be837e831"
        },
        "item": {
          "id": "622a8591-16f2-4c28-a999-57f69274d90d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fc45c64e-da0c-4ece-b919-b96d1f411982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d0d67f-520b-4c88-bb1f-b7dc35760918",
        "cursor": {
          "ref": "0f36ccbd-d6fd-44e2-b5cf-fd6bec2492ec",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3cfc5a45-72d0-47eb-94aa-335314075eeb"
        },
        "item": {
          "id": "22d0d67f-520b-4c88-bb1f-b7dc35760918",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a812d551-a2a0-44b6-b5b0-7aca2a2ca290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322f067f-274a-459b-bb59-5fac338d32a2",
        "cursor": {
          "ref": "a84fc8a5-260d-4f1c-8d08-f56c0494143a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0392f157-8dee-4d46-bd09-e8898d5f4cea"
        },
        "item": {
          "id": "322f067f-274a-459b-bb59-5fac338d32a2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "14024ced-39a4-43af-8973-baaa3e42df59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c034e4a8-de40-4fd4-8713-48eeacc4961e",
        "cursor": {
          "ref": "4eaee07e-9f33-4c62-8e40-8063cf2633fa",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "344a6d1a-a23f-4b31-a666-d2716b17e87e"
        },
        "item": {
          "id": "c034e4a8-de40-4fd4-8713-48eeacc4961e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "967f869e-a744-4419-b7b3-a2271dcf46b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a74c7e-466f-4f7f-abaa-9923812fe10d",
        "cursor": {
          "ref": "ec21bd9e-9bbc-4604-aaed-d29881a800ef",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2500af1a-3396-437c-a52e-5c8563963e3e"
        },
        "item": {
          "id": "d8a74c7e-466f-4f7f-abaa-9923812fe10d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c097c3fe-2622-44a4-9973-60ae78612b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6865d3e7-3ac1-4e53-847d-f5b25a9557cc",
        "cursor": {
          "ref": "2c2e8f1b-94f0-4e13-8526-f74f94bdac50",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "15a36596-6193-4280-88f8-27ce7a580b4d"
        },
        "item": {
          "id": "6865d3e7-3ac1-4e53-847d-f5b25a9557cc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a489eb06-6ab9-4c26-ac2f-4796f8820bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45abd1b-ea0d-450f-b071-965fc6f1bcd5",
        "cursor": {
          "ref": "e1ef5045-3aaf-4f36-bade-9bb144e3d761",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f7b41c3c-8a01-4120-a8c3-43f592cd578d"
        },
        "item": {
          "id": "c45abd1b-ea0d-450f-b071-965fc6f1bcd5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b9744d14-f8e3-4a82-8cd6-5fe0bd0eb5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97114f0-71fd-4000-bee6-036129e9550a",
        "cursor": {
          "ref": "e94e5590-8fe5-4770-ab3f-0a5161da1c7c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a7fe89f9-a1bd-445e-88f2-4f289cc6d781"
        },
        "item": {
          "id": "e97114f0-71fd-4000-bee6-036129e9550a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6f7a511e-af77-41fe-ab2d-d031c6c67598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5090708-19e2-4019-acd8-a27841a33b5d",
        "cursor": {
          "ref": "cd105a57-a260-4d1c-b1e4-c0bfcc55db80",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "368a73b3-5c73-4158-808d-c3befaedcdc7"
        },
        "item": {
          "id": "d5090708-19e2-4019-acd8-a27841a33b5d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c40a4eba-330b-4971-8d59-a411bbde1240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0f81b1-c0c5-4411-a434-c09c4b301176",
        "cursor": {
          "ref": "55aca774-fa4c-41e5-b59a-7f9da6a8ace3",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "592db21c-4ba4-4acf-95ab-316d0646b3ac"
        },
        "item": {
          "id": "db0f81b1-c0c5-4411-a434-c09c4b301176",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d4aa8f3f-48dd-4108-b508-6c230c54b3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d253c489-04d8-4db7-ab16-9a226ccea8b7",
        "cursor": {
          "ref": "9637f9b5-9598-4969-8616-afe0a7bf78b4",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6f910511-c82f-4417-8da4-227587a3e4b0"
        },
        "item": {
          "id": "d253c489-04d8-4db7-ab16-9a226ccea8b7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7a402dd1-4650-439e-9378-3c473e00a207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be8979d-e0ae-4198-9b17-5c4c9e7efd42",
        "cursor": {
          "ref": "f8dc2d81-1011-40d1-ac25-8bdd04c9263c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "72a9b8eb-4b6f-4bf0-b230-e097d1b28a6c"
        },
        "item": {
          "id": "8be8979d-e0ae-4198-9b17-5c4c9e7efd42",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0d96a5c4-64d6-4508-975f-194827774ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9ba5fe-f5a2-4d64-a9ed-87a21f48c0ad",
        "cursor": {
          "ref": "71911b41-bfdf-439b-8ada-18327e871271",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b03d8e28-0ce4-461e-868e-315c8b0790b0"
        },
        "item": {
          "id": "5d9ba5fe-f5a2-4d64-a9ed-87a21f48c0ad",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f3f8a9d0-8de1-45fe-a579-1cb3843e76c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a37d9d-6fb8-42c4-9411-2722f240b5d7",
        "cursor": {
          "ref": "529b921f-3017-49ca-a36e-4eb92cbfd53e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2b703df2-c419-456b-b597-c59002f9a195"
        },
        "item": {
          "id": "35a37d9d-6fb8-42c4-9411-2722f240b5d7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0e37c9c9-42a8-4d2b-9179-ce7b741ef447",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53a7f30-2ddb-44f5-8e69-0957f48bf2df",
        "cursor": {
          "ref": "728c0c9b-a0f5-4e6e-bc2c-5e9b6b090302",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "97225312-9404-4507-b6e7-a8908d9a3bca"
        },
        "item": {
          "id": "c53a7f30-2ddb-44f5-8e69-0957f48bf2df",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "158100a5-e3c8-4e1e-9a2d-2a17fe3829ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f9cfee61-582e-42ae-9b9a-ac4d2e9e413c",
        "cursor": {
          "ref": "ee2d1717-6eeb-48ab-900a-958a35061d1e",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e7fe0f7f-2ae5-4b5c-aa45-cc55d4072c91"
        },
        "item": {
          "id": "f9cfee61-582e-42ae-9b9a-ac4d2e9e413c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d965221c-bf88-4520-b62f-7b6383e8c909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "aa56c8ba-7fd7-4456-adaa-e4506296c9e2",
        "cursor": {
          "ref": "89b52afe-5350-429d-ba5c-a08fdd48ccf2",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "903a5f9a-5aeb-4e48-a5bb-54eab902a420"
        },
        "item": {
          "id": "aa56c8ba-7fd7-4456-adaa-e4506296c9e2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "42bb2db6-7688-4a77-b1b0-cd4ef8c0152c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "03ffb25a-a309-43d8-80d2-44ef4d3363cd",
        "cursor": {
          "ref": "422f7cbe-30cf-4c31-95fd-70c6e3ce0f41",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fa254076-3f2b-4e76-b3e2-378da84ffefb"
        },
        "item": {
          "id": "03ffb25a-a309-43d8-80d2-44ef4d3363cd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "82a6d827-f697-45c5-88fa-d740673498a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "b7c153ae-0b8e-4669-bf9a-db0502115fe2",
        "cursor": {
          "ref": "936ea053-8b6e-4d7e-88ca-9a9989ce28c9",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e58b5b67-cd35-4f67-96db-1e0ff2432adc"
        },
        "item": {
          "id": "b7c153ae-0b8e-4669-bf9a-db0502115fe2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "99130696-62fc-4e97-93b1-bde26da2bee7",
          "status": "Created",
          "code": 201,
          "responseTime": 11203,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bc7dac-3af7-4e91-9414-fddbaa3f901b",
        "cursor": {
          "ref": "c7232be2-a47e-4e1f-8e60-f9d1a071f700",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "faab575a-0c83-4e64-a7fd-39dc8d2661ac"
        },
        "item": {
          "id": "64bc7dac-3af7-4e91-9414-fddbaa3f901b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2a1a196f-787a-4644-8bbb-a4a84d8898de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "11fdc6fa-f382-4dff-a7d3-5788dc220c7b",
        "cursor": {
          "ref": "7f5a3952-0e65-40e5-8b22-cd6641ae441f",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4151b797-480f-4e61-b4ab-f82baf183cfe"
        },
        "item": {
          "id": "11fdc6fa-f382-4dff-a7d3-5788dc220c7b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c37c35fa-1fb7-4067-ba0f-a0967f8e2e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7d7fa2b1-d8c8-41d4-9227-22c978a527d0",
        "cursor": {
          "ref": "da9ab535-40dd-4a8b-b16d-5e6466e844e0",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7df7f129-5f7d-4a87-9d86-a573ee71e21b"
        },
        "item": {
          "id": "7d7fa2b1-d8c8-41d4-9227-22c978a527d0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9a1a4b0e-e55a-4c31-90ba-a4c1c3c41c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7dcbe5-eec7-443d-98ad-b032edb5f45a",
        "cursor": {
          "ref": "5932a777-8cd8-4a39-a608-4ec5cabc522d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f420c9d6-1ed1-4d61-83f1-5d050c391eb2"
        },
        "item": {
          "id": "ae7dcbe5-eec7-443d-98ad-b032edb5f45a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4587aab6-07f6-47f1-891c-7dc6743e6a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac2a8a2-b78f-44e9-aa23-c7233307f678",
        "cursor": {
          "ref": "6ac8486e-8649-4f1b-824e-f4a6a53532e7",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "057291a8-9cb3-49fd-8ead-47f19ac3f1a2"
        },
        "item": {
          "id": "8ac2a8a2-b78f-44e9-aa23-c7233307f678",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a6a53120-3640-4208-b9f3-8f786b755baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132dec33-207e-42fc-92ef-95ee8d6003d2",
        "cursor": {
          "ref": "549e42c3-9804-4489-8f13-f3fd9cf7f89a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "39f7464f-4a96-4666-96b4-c7f1bd11f091"
        },
        "item": {
          "id": "132dec33-207e-42fc-92ef-95ee8d6003d2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a657a545-0ae2-4ca7-83c0-8c86a9e015ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49389a32-c9e9-4e6f-a1b0-784196624a9d",
        "cursor": {
          "ref": "8c89618c-9ede-48a5-a858-924620ea80c6",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f3286821-7378-4e20-9f5c-c0af4c9ee951"
        },
        "item": {
          "id": "49389a32-c9e9-4e6f-a1b0-784196624a9d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f12cb69d-4f39-4589-90ca-6340c51162e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d9b6a1-f1d4-4735-9435-3c22e1c21589",
        "cursor": {
          "ref": "7cea1d6b-04ca-4ede-b6fa-dfc7e1d1fb1f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7100f091-1b9c-4ef1-80de-f318c02003c0"
        },
        "item": {
          "id": "44d9b6a1-f1d4-4735-9435-3c22e1c21589",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "caa67396-c1e0-4bec-9bd8-289b91c521fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5366b2e-a43d-454a-a1ba-c7217c55f52f",
        "cursor": {
          "ref": "c12c0062-4e12-4330-ac9b-77f8a0917aad",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4e49aa1d-d86a-4978-82c6-24c77af1a1fb"
        },
        "item": {
          "id": "b5366b2e-a43d-454a-a1ba-c7217c55f52f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e55460b9-858d-45b0-8e16-76b335737282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54602e26-841c-45b7-9a10-5a56548bafcf",
        "cursor": {
          "ref": "69a4b9f2-eb05-4235-a2b1-84472bcfbc79",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "04c89f65-c969-4785-858b-878ddd2049b9"
        },
        "item": {
          "id": "54602e26-841c-45b7-9a10-5a56548bafcf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5ed83b1e-ae6a-486f-a229-bba2aad0f1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cd28b0-23c8-48d4-aa7f-57d318783067",
        "cursor": {
          "ref": "27f52104-1372-4f42-b009-77238f8c9fad",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "839ae08e-8da4-40fa-8da1-f212383b1bde"
        },
        "item": {
          "id": "81cd28b0-23c8-48d4-aa7f-57d318783067",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "358135ab-a7ec-4360-92ee-3dd32c9f580c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d13ab61-13c4-4076-aa37-0101bdd13fcd",
        "cursor": {
          "ref": "1ac26015-c7de-40e9-9caf-16f6c2c08c16",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fa60c56a-1cca-485f-ba7e-b615175ddd89"
        },
        "item": {
          "id": "5d13ab61-13c4-4076-aa37-0101bdd13fcd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cc6df5d3-f0fc-476d-9d1b-6cdf1ee80f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76be130-1979-4b52-b308-0eadef71d1c3",
        "cursor": {
          "ref": "7eb10dd3-d727-458a-a151-65bd84643efb",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9d7dca76-1c04-4671-945e-1a21c1d81563"
        },
        "item": {
          "id": "c76be130-1979-4b52-b308-0eadef71d1c3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6e4fdc36-09cb-474d-a06f-59558992e881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a116fd92-3d53-4995-98b0-bb97746a9b48",
        "cursor": {
          "ref": "c25648e3-1253-45c4-9fa2-c8fd41f623ba",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8790bc26-ca96-4a06-beb2-4e487f5e2218"
        },
        "item": {
          "id": "a116fd92-3d53-4995-98b0-bb97746a9b48",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "46f35ad1-2580-4644-a325-7f8ce77e2e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86c4c6e-184b-46dc-ac7f-83d5d0d5d0f7",
        "cursor": {
          "ref": "8c2bd5b6-9573-4d20-9f33-e6b757df39c4",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6c468ae4-48ef-4a0e-9a37-12ff69e72e57"
        },
        "item": {
          "id": "a86c4c6e-184b-46dc-ac7f-83d5d0d5d0f7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9f09758c-b3d6-4cd5-abf7-af5cb0870902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2328207f-cc66-4fa9-9688-b32705a401c7",
        "cursor": {
          "ref": "77b8027a-9be9-4d56-b9e3-ae6044bcfa34",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "475a06de-c995-416e-99d1-58faacb191b0"
        },
        "item": {
          "id": "2328207f-cc66-4fa9-9688-b32705a401c7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ef8de7bf-1152-496a-bff5-e35ca0798c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ec3f78-75f1-4a6c-b566-b73b8fe51876",
        "cursor": {
          "ref": "89e83037-cc6f-4deb-a09c-354c1e55e0c4",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c85333de-5ce9-4bab-80d7-f5682e977e2f"
        },
        "item": {
          "id": "72ec3f78-75f1-4a6c-b566-b73b8fe51876",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f46a0c17-d69d-4d4d-aab4-73860eb21c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426e6303-ca0d-461c-87f6-974ef336274c",
        "cursor": {
          "ref": "2382fc3f-599a-4474-a072-c7414fb9c46b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "93c8e634-d688-4819-97de-37e5cb42a869"
        },
        "item": {
          "id": "426e6303-ca0d-461c-87f6-974ef336274c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e63c71b9-36e8-4735-bde8-c23baf2d4e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd61413e-e2ee-48ff-8c4c-61cdbf97c24d",
        "cursor": {
          "ref": "4614ead1-427a-4392-a464-66ee23e3ad9a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "699585c4-3589-4090-951b-8f7353f02012"
        },
        "item": {
          "id": "cd61413e-e2ee-48ff-8c4c-61cdbf97c24d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d99bb15e-3cce-4f44-bdff-8135f38643c6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "a2906c50-b65c-4efc-8034-6e83854c7f7d",
        "cursor": {
          "ref": "edff05ac-88d3-42b3-8d9e-915f4f9e85e1",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4cf85a97-b836-4a20-bcd0-039c756758f9"
        },
        "item": {
          "id": "a2906c50-b65c-4efc-8034-6e83854c7f7d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "faae331e-c47a-45b4-baef-9f6990a0f0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3147a688-1da8-41a4-b068-1a06c1a46c1e",
        "cursor": {
          "ref": "85ea20e3-77e0-4b6c-9245-34910e427200",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5d404f42-193d-42d1-8e54-bafcc167b26f"
        },
        "item": {
          "id": "3147a688-1da8-41a4-b068-1a06c1a46c1e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "48c36d65-b383-4372-8adc-899f9dbfd084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994a395b-6f18-4214-ad43-01e266f3552b",
        "cursor": {
          "ref": "06729b16-7354-4d08-984d-4b40783eb192",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2fb1e796-b709-458d-87c3-8c7a2d336389"
        },
        "item": {
          "id": "994a395b-6f18-4214-ad43-01e266f3552b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "afcaf9b2-ffa2-4f2c-9207-5e31991ac408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35504e4-6b23-41df-8896-cb1ba6dbf3c2",
        "cursor": {
          "ref": "0b260558-5525-4cdf-b237-f97d36e062f9",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "368fe021-1e12-4279-bc18-0e226277b078"
        },
        "item": {
          "id": "c35504e4-6b23-41df-8896-cb1ba6dbf3c2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "822437f2-fad2-4a9b-b2aa-178f219fa8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab5f848-e02a-459c-be29-dbd2d79b5e1a",
        "cursor": {
          "ref": "ed5f51e0-b609-4e48-b249-2eafe771261b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2e3cc96e-59cd-4f57-a73d-e502c8da3249"
        },
        "item": {
          "id": "6ab5f848-e02a-459c-be29-dbd2d79b5e1a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "da07e564-2381-4656-9823-4426cb7c971c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25ae23c-b178-4b48-9434-9d71a2556080",
        "cursor": {
          "ref": "699fde4e-3981-4500-8f96-aa1247eb4d2c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a301d0fe-6901-4b87-9425-c9f97721db06"
        },
        "item": {
          "id": "d25ae23c-b178-4b48-9434-9d71a2556080",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "77e44fab-afeb-4b92-a597-f003183d9aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b936855d-5705-41f0-8acb-c5bc4aafef7b",
        "cursor": {
          "ref": "fd5f0b3e-2612-4084-ae9b-ad67a33e4bca",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6daddfb8-1811-44fd-8640-8cc83c23ce62"
        },
        "item": {
          "id": "b936855d-5705-41f0-8acb-c5bc4aafef7b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "504d5bef-2bbf-4a91-a784-ce431c43e6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811862de-cdd9-406c-9d9b-4d01ac2ee4a4",
        "cursor": {
          "ref": "d0932ff8-a5d8-46ef-be4d-4a08707c12d5",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1ed7c000-0b25-4b6b-b397-67befeada474"
        },
        "item": {
          "id": "811862de-cdd9-406c-9d9b-4d01ac2ee4a4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0bca7bd5-1ead-4d68-a101-3a42cba7c13f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 73,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "606919d5-04bc-45fd-b3a4-36914b2c3d57",
        "cursor": {
          "ref": "bb2ef198-7b23-40c7-874a-540b0b5f2000",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "27b5fb56-d23c-4869-bfa7-89bb6cdeb509"
        },
        "item": {
          "id": "606919d5-04bc-45fd-b3a4-36914b2c3d57",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7ff60390-aeef-4e74-ba1a-d2c973502df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7aa90e-4826-412d-9e78-1d17902440b3",
        "cursor": {
          "ref": "2399323a-c458-467a-8726-a8d5b2879f48",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3b5df72d-d68f-4290-9409-3bca5b83f59c"
        },
        "item": {
          "id": "2a7aa90e-4826-412d-9e78-1d17902440b3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7482a968-92d9-4088-8593-f775e7fc34ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2d7afa-bb46-4d04-ba70-ef37bb9d91fd",
        "cursor": {
          "ref": "0e1f3f2a-acac-4f33-96f0-77cf46fdbb99",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "af00a321-3ac9-4acb-86b8-ca815d0cb3b2"
        },
        "item": {
          "id": "cc2d7afa-bb46-4d04-ba70-ef37bb9d91fd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4e9cc0a8-d4c0-4bbc-b926-a32b24c7cfbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af77b3ef-3997-4f95-a418-4485d0035253",
        "cursor": {
          "ref": "7d1f7ec2-8fc4-4208-ad6b-216d8d948eeb",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "85807564-ec27-4aca-a26a-992c9e86c5f7"
        },
        "item": {
          "id": "af77b3ef-3997-4f95-a418-4485d0035253",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1728bbef-1d61-485f-bbdc-9f42c307b3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b165428-bb25-429c-a320-fc1d9045c155",
        "cursor": {
          "ref": "16d36069-3881-457e-b62a-2cbb54083f16",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "94ce220b-270c-4670-9b95-5cc61bc25d83"
        },
        "item": {
          "id": "6b165428-bb25-429c-a320-fc1d9045c155",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3bb095d3-dc03-4355-ab4b-08e1fabbd0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6de210-7964-42c2-ae88-4caca426593a",
        "cursor": {
          "ref": "24b8444d-3590-4b02-91eb-8385fc529727",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "55968db7-af0b-48d9-ad11-b13186924ef5"
        },
        "item": {
          "id": "9b6de210-7964-42c2-ae88-4caca426593a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4613a723-87d5-4351-a9f4-89395c0f083b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46ba793-0312-4064-85fd-96e91be18c2c",
        "cursor": {
          "ref": "d5bcf7a9-01f5-4376-9a3b-fde924c97d77",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5c83da2a-03a6-4489-a4a1-30b11c92b9a7"
        },
        "item": {
          "id": "e46ba793-0312-4064-85fd-96e91be18c2c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "377a734f-2808-4b12-ac8d-6d323563a1e0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "188b9317-f98a-4455-b30e-3b3af7a8ed37",
        "cursor": {
          "ref": "270c7824-3089-45f7-b991-7ad5cffb543b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7760e5e0-99b7-40a9-a243-24ed50e2cf90"
        },
        "item": {
          "id": "188b9317-f98a-4455-b30e-3b3af7a8ed37",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "eefb7754-82c5-4c7b-b74b-61c67f03435d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "3fdd7b72-f341-40ff-8287-dfc7272e4a9c",
        "cursor": {
          "ref": "6539ed63-83c5-41d6-bd53-592406de0309",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "74111f13-2153-4ad8-b454-c59c8bbfdf0a"
        },
        "item": {
          "id": "3fdd7b72-f341-40ff-8287-dfc7272e4a9c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e0a064f9-ded4-4433-8d89-4af96349b38c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "bb3513db-f017-4683-8586-121acd3ee7ec",
        "cursor": {
          "ref": "4aa6cdb7-a06b-48c4-815a-8ef482b8598c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "886d2f5f-1897-491e-b7c6-c5522f5c3625"
        },
        "item": {
          "id": "bb3513db-f017-4683-8586-121acd3ee7ec",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "85dcb835-d926-4139-ac06-fc3f7571f727",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "adcdd0d9-0c55-42e0-b7d1-50b2774206de",
        "cursor": {
          "ref": "8b3d12a0-8fd5-462a-b437-27272cbb839d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "73cf2572-130f-4752-bd01-5c29e4e9ac2d"
        },
        "item": {
          "id": "adcdd0d9-0c55-42e0-b7d1-50b2774206de",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0d5da2b9-42ee-4e8f-9c78-3750c65ef3e9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "61e8c357-8491-4444-a74c-3a651a2f66a4",
        "cursor": {
          "ref": "d194f20d-80b0-42a7-b3c3-6817cb2eb29d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "46a065fc-6c7c-425c-9ce9-4025ac84f2ee"
        },
        "item": {
          "id": "61e8c357-8491-4444-a74c-3a651a2f66a4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cc1c2f52-7f5b-4f01-9837-d967733261eb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "249f0a93-abed-4f3a-881b-dee079344838",
        "cursor": {
          "ref": "db7f25fc-ef9d-420f-b1fd-f1fa71ebf02b",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "598bcbf9-3e3f-41ef-b68e-bf0b87b12dad"
        },
        "item": {
          "id": "249f0a93-abed-4f3a-881b-dee079344838",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ebd27629-02a7-4adb-a7d4-e7e6b9294b3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebed5bb-5576-44d4-87a8-a1506b17e8d6",
        "cursor": {
          "ref": "3ff1c5e8-5f17-419c-92b5-bdee36aab28d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a9952215-593c-47f7-8d52-3f8d885492a7"
        },
        "item": {
          "id": "cebed5bb-5576-44d4-87a8-a1506b17e8d6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "60a61d72-7ea9-4011-b673-ae1c02fe9b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ddfc32-b5fc-426b-bede-736d7ccd0b7b",
        "cursor": {
          "ref": "82e122ff-6b71-4ac2-a4c0-7ebafaeb062e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6761775d-34d4-4263-a628-c43dea3fed5c"
        },
        "item": {
          "id": "b5ddfc32-b5fc-426b-bede-736d7ccd0b7b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "96b10f88-1b65-4c89-9563-07722586479e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d1bbb5-6ef8-489e-81a7-91e2266bad0c",
        "cursor": {
          "ref": "e17bc584-b8ed-4fea-9ec9-d2a24513f52f",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "02a20fe7-4732-4a00-a308-38af72b80b94"
        },
        "item": {
          "id": "b5d1bbb5-6ef8-489e-81a7-91e2266bad0c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "11fc8a50-1c2f-40b2-810d-4c8d9dced4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fdf9ca-6764-47d8-ad8b-11e5b07a1db4",
        "cursor": {
          "ref": "e83d63b1-8756-4397-b30b-8f0c93b6ba52",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6b8f6f4e-676a-4aaa-bc6c-bc037f7366fc"
        },
        "item": {
          "id": "d9fdf9ca-6764-47d8-ad8b-11e5b07a1db4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0ccf04fa-5336-4173-8c28-416c3ad81e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef8c639-30e6-4c64-bd16-90afaee0793c",
        "cursor": {
          "ref": "a7458570-647b-4037-a7c8-5e31e3fcc199",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1d5a5b96-b461-41bf-a9e0-31166ff232bb"
        },
        "item": {
          "id": "4ef8c639-30e6-4c64-bd16-90afaee0793c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "67e80d8a-f4f5-495c-92a2-b4629f716525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdb01ee-62d9-42d1-81db-d2d202c3c7aa",
        "cursor": {
          "ref": "a14fb75a-441f-4168-b2a6-19a9066fb740",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5f4050c7-dbbf-4305-8bba-fa528c21a710"
        },
        "item": {
          "id": "7fdb01ee-62d9-42d1-81db-d2d202c3c7aa",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2e3506c0-ff65-4b57-88d0-77829bd926c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0eb14f-8e09-4511-821f-e4885ef49b7a",
        "cursor": {
          "ref": "f18ad015-0b2d-4881-9e31-f99081a1679b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6482f8d1-104c-4fdc-9e87-c692193dc963"
        },
        "item": {
          "id": "5f0eb14f-8e09-4511-821f-e4885ef49b7a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e37a08c7-2be0-467e-a690-c9bc42aaf0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe37c7ff-b14a-4090-9acb-32ec85dc3a98",
        "cursor": {
          "ref": "220c978f-881f-45d5-8e09-788836e7145a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "324bd2e9-616d-47f3-98d7-f6cdb153f2fd"
        },
        "item": {
          "id": "fe37c7ff-b14a-4090-9acb-32ec85dc3a98",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "dd650d03-4f5e-4169-b878-f7e875fef080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb58223b-7260-4752-a4a6-28889782ac10",
        "cursor": {
          "ref": "618f6214-bd3b-493a-94e2-b0d0693f5008",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "11b6efee-5c32-4221-9770-14a818672699"
        },
        "item": {
          "id": "eb58223b-7260-4752-a4a6-28889782ac10",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "87435d8f-5018-4616-86f6-0ec3dadddbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca09330-819e-4c96-93dd-e398e4961b00",
        "cursor": {
          "ref": "589e7db0-7e19-4234-a951-5b8461da5e5f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "53ce049d-9266-474a-9b3f-b857a838502d"
        },
        "item": {
          "id": "2ca09330-819e-4c96-93dd-e398e4961b00",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a34412f1-73dd-4447-80c5-d2f2ad5532ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72197bdf-b101-4c60-aae3-d9b46d16114a",
        "cursor": {
          "ref": "6da9d0fd-2d92-4a0c-a24c-3400f12c1ad0",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e8dce5c5-2b3c-4f70-ae94-a780b5ffcf19"
        },
        "item": {
          "id": "72197bdf-b101-4c60-aae3-d9b46d16114a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b779a52a-c27f-46f3-8d23-7bc6fcc4ecb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d663e1ac-a766-4052-ab69-ac04484f0701",
        "cursor": {
          "ref": "453e98bd-86ff-4b8c-aee4-1837215bf27c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "66e6679b-e82b-4911-bd62-bbcf53c89fd0"
        },
        "item": {
          "id": "d663e1ac-a766-4052-ab69-ac04484f0701",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "35850d6c-2814-4e73-b11f-3727bd2588d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70671fb-6346-45b8-a6d5-5e2833c9ff6a",
        "cursor": {
          "ref": "ed3b0513-1984-41b8-8271-baaf29bfccb4",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1d25e8b8-be3b-4495-9d28-536dd0cdc039"
        },
        "item": {
          "id": "b70671fb-6346-45b8-a6d5-5e2833c9ff6a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "efa30883-2c17-4a8b-9621-f9ae5882b9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ade8500-6942-4229-b1c4-28be33b615ca",
        "cursor": {
          "ref": "00085226-6450-4f17-896f-5d48ecf715fd",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4cbc36ff-e1d9-4bc4-8f69-be8f6acd4292"
        },
        "item": {
          "id": "3ade8500-6942-4229-b1c4-28be33b615ca",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "be2afd35-2757-4d15-80e3-849d8ec2dc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f432146-5e3c-4e3e-89c1-b45b392cb116",
        "cursor": {
          "ref": "c328dadc-98e8-4537-8ea3-4db69e2ac933",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2c3066fe-516b-41f3-882e-9b411c56d5ae"
        },
        "item": {
          "id": "4f432146-5e3c-4e3e-89c1-b45b392cb116",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0bfbb557-8e44-40e1-8ea8-80c4cf9760b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d3e76e-c951-4c4f-b6dc-1ac0b847d61c",
        "cursor": {
          "ref": "5d45cdba-d61b-4033-a05b-b5e8835ed35c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "be2f145f-a83d-4f88-bb93-b8b7fc2f145d"
        },
        "item": {
          "id": "f3d3e76e-c951-4c4f-b6dc-1ac0b847d61c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "506fe48c-39a8-4060-b4f0-0d4c1879a590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91adb8e-1338-4228-a5e4-a372374ecddf",
        "cursor": {
          "ref": "3d3940b6-e34c-4d46-b2f1-8ea96fea8635",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7f506369-d1d7-4766-b619-2467ec171e66"
        },
        "item": {
          "id": "c91adb8e-1338-4228-a5e4-a372374ecddf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "24e61fe0-4bb2-42af-9c04-499f35af0db8",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "61396bdd-6f2c-4dc8-80ec-cc87e720a6be",
        "cursor": {
          "ref": "5a506d7c-0dcf-4ac3-b098-6d79ca2e8fbf",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c80953cc-6a26-41c3-bac2-4de7e98b4471"
        },
        "item": {
          "id": "61396bdd-6f2c-4dc8-80ec-cc87e720a6be",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cda92c38-86f4-4ee5-96af-8bf26a6355a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f40d07-8027-4593-81f7-f91747f949b4",
        "cursor": {
          "ref": "9bcabe19-1e5b-44fd-afc3-86dc30f46a04",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8bef5657-f980-4e20-b95d-69a08af79250"
        },
        "item": {
          "id": "61f40d07-8027-4593-81f7-f91747f949b4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4a8ddf8b-82c3-45cb-9220-1685e7effa34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243a1e2b-ebec-49df-b6dc-1681f28e9368",
        "cursor": {
          "ref": "91620939-bd9d-4295-a1d0-db87d2830764",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1dad3dc8-a525-43bc-8e7c-9d6709a3da89"
        },
        "item": {
          "id": "243a1e2b-ebec-49df-b6dc-1681f28e9368",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "96f650c7-8a20-474a-96aa-a453ba842d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64ffac0-ef6c-4458-b43b-472fb3e60fa3",
        "cursor": {
          "ref": "506f76bb-5571-4087-9b03-1c5fba75fddb",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3cc2d770-fbd9-461a-a417-ec1ae3883fbd"
        },
        "item": {
          "id": "e64ffac0-ef6c-4458-b43b-472fb3e60fa3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b1229e91-88e1-4158-afdd-1c6dddeac03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aba272c-086d-4697-8d48-38f8eaaab8c1",
        "cursor": {
          "ref": "667720f6-27b0-4672-81e5-cbc9819b948c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0634b731-2899-4bc2-b286-a2e990bd9a4b"
        },
        "item": {
          "id": "3aba272c-086d-4697-8d48-38f8eaaab8c1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "046edce9-5241-48a6-97ab-67db117f8a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e25d07f-b252-4917-8c56-291540641d66",
        "cursor": {
          "ref": "1c8d1f94-258f-466a-a661-155da3dee9f1",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d2af83cd-3892-4426-a875-21ea6b1605ea"
        },
        "item": {
          "id": "5e25d07f-b252-4917-8c56-291540641d66",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "26a9e72b-837a-413f-8325-ffa55d03a215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6fedf9-7c91-4c09-827f-947fbec3eb26",
        "cursor": {
          "ref": "f7ba60cf-780e-450a-a2bd-497ab10ac04c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bf4dc5a4-70bc-47fc-840e-bc634a9f700d"
        },
        "item": {
          "id": "0e6fedf9-7c91-4c09-827f-947fbec3eb26",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6d6f453c-0433-443f-b957-b46ec115fa54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3030cbc3-543b-445c-9e71-f8d31a119980",
        "cursor": {
          "ref": "511898da-b303-4415-9ee8-211e1b26206c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1c8d2bde-848c-4f26-aff4-d6d461eb7a24"
        },
        "item": {
          "id": "3030cbc3-543b-445c-9e71-f8d31a119980",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c4e7b6d5-be42-44d4-80e0-4ae4304d79a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a8df44-8f0d-4f23-a364-9acea768c4b2",
        "cursor": {
          "ref": "5a97d74d-4a4f-4ad7-8092-dd893bf0ff60",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1fd4f51f-16b4-454a-86fe-e3f224670c99"
        },
        "item": {
          "id": "d8a8df44-8f0d-4f23-a364-9acea768c4b2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2f59a3ef-ca23-4061-af4c-5048e8c72ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ae9475-6f67-4b44-a704-3b110528cddf",
        "cursor": {
          "ref": "6fbd02e4-c867-4533-be1d-ab07724b2595",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "264fc311-78e4-46f1-84da-0b558542ed44"
        },
        "item": {
          "id": "93ae9475-6f67-4b44-a704-3b110528cddf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dede216c-d052-4f16-b362-e6902615dd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752b57f2-42a8-4226-bcc9-cfcc4d79cc27",
        "cursor": {
          "ref": "289dc330-ce34-4427-809e-4e2a290b390e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dd751927-dd60-4f59-9688-e34eaacc5bd5"
        },
        "item": {
          "id": "752b57f2-42a8-4226-bcc9-cfcc4d79cc27",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2279399c-b1f2-4f12-8e0d-415a757260b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74133c42-81ac-4f2d-a5d9-36f812db4a27",
        "cursor": {
          "ref": "ac176237-2f48-4632-939c-c1669e5fc6f5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f6df1fec-b230-41c6-a580-3cdcf71ef83a"
        },
        "item": {
          "id": "74133c42-81ac-4f2d-a5d9-36f812db4a27",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f1edee06-6842-4105-b58c-09fed3ed3088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afb1c26-497b-4042-a811-008de6198807",
        "cursor": {
          "ref": "7b94226f-0837-4a87-b5c1-1fb70e03f5cf",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3b4e91f9-9434-4536-af3b-1a36c2b21c1c"
        },
        "item": {
          "id": "7afb1c26-497b-4042-a811-008de6198807",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f045af21-c3ff-442a-96f1-acb0aa43f0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43387b5c-edcc-4c77-9caa-d7639a02ee81",
        "cursor": {
          "ref": "abb083c7-da40-4375-97d8-3d7fcae7195f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "315f22be-b4f7-48e2-972a-e3ecd943b228"
        },
        "item": {
          "id": "43387b5c-edcc-4c77-9caa-d7639a02ee81",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c94a076c-5b2b-4ce5-8d1d-e2e5b91e6e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c39ddd-804f-4c71-a377-1e4bf0ec737c",
        "cursor": {
          "ref": "39d2172c-9097-4b6c-b9b0-82946406770a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b7992618-5f2c-4c18-acb1-a3d2fcbda0c2"
        },
        "item": {
          "id": "b8c39ddd-804f-4c71-a377-1e4bf0ec737c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d98a7999-b45c-40aa-8615-b885d69d8dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f024e2a-774c-43b0-9e55-c55b4c7c818f",
        "cursor": {
          "ref": "26aac1b9-4403-48ea-bb8c-11d5b65a8979",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fa1275da-9e61-400b-a2c8-9f47ebeb3a91"
        },
        "item": {
          "id": "2f024e2a-774c-43b0-9e55-c55b4c7c818f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d200cc50-9e29-40df-ac26-9795f48263f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20523079-0c99-4c1e-b641-0e2819ad476f",
        "cursor": {
          "ref": "48e0cf2f-ed9b-4f4c-86ac-a91dcd64a81e",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7159c080-171a-47a4-8ba9-b8ddcd86b56e"
        },
        "item": {
          "id": "20523079-0c99-4c1e-b641-0e2819ad476f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "16774f5f-81f0-4892-a360-4913169a87bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd28a6c-a952-4211-9e12-6ed14903bfa3",
        "cursor": {
          "ref": "e98dcd7e-1258-41b9-aba1-b9473ca3d56c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0c13960f-8104-4f6b-aa4b-40bcaec15a9d"
        },
        "item": {
          "id": "1cd28a6c-a952-4211-9e12-6ed14903bfa3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "287514cd-df87-44db-b805-0d897d12c679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81db55f0-01f1-4e90-8fb7-de1bb8c20a25",
        "cursor": {
          "ref": "600f405f-7b6b-4ab6-9314-8645db063900",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6dddc343-90dc-4406-bb28-7491b19f60bb"
        },
        "item": {
          "id": "81db55f0-01f1-4e90-8fb7-de1bb8c20a25",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "377beda8-7429-4fee-8757-9f7110fcee05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fd4fd7-3439-453d-a27d-22f4bd34d72b",
        "cursor": {
          "ref": "83eafeee-92a8-40d2-8157-b8e42eb033be",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a9028d85-d823-423b-88cb-05b2e7c30fa5"
        },
        "item": {
          "id": "80fd4fd7-3439-453d-a27d-22f4bd34d72b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d84147b3-0858-4255-998a-96dd6489f943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd79f191-1da1-4bd8-ac86-07d59f8450e7",
        "cursor": {
          "ref": "8d2a8369-e466-4b6f-84ec-29a879f928d6",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a3e0a86c-30fb-4632-b5fa-ce889cec3e35"
        },
        "item": {
          "id": "dd79f191-1da1-4bd8-ac86-07d59f8450e7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "dead4f78-8bb7-448b-be18-5aa124be748f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470f009e-b229-4f34-b58d-e1043fee7ed8",
        "cursor": {
          "ref": "511fb214-30e9-4e30-835d-df7ff0893d0d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e7870a07-a576-458a-abf6-b0858a434471"
        },
        "item": {
          "id": "470f009e-b229-4f34-b58d-e1043fee7ed8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3413be00-aa22-4680-a18c-5cdf3774230e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f80d0f2-8ca7-46af-bc92-e35a2590c8e4",
        "cursor": {
          "ref": "f03d79a0-2331-4e4e-a9d1-f94876c3a970",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b145083d-3e2f-4790-a270-1c5bf280f61b"
        },
        "item": {
          "id": "8f80d0f2-8ca7-46af-bc92-e35a2590c8e4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d488e6bf-9af9-422a-8235-ffcd3b652044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81d0196-7228-4dc5-b880-8ab0d4460768",
        "cursor": {
          "ref": "931905f0-df45-41d5-81c1-c929d21e7631",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1db34a95-bdfa-4371-bb98-bd58345e084b"
        },
        "item": {
          "id": "e81d0196-7228-4dc5-b880-8ab0d4460768",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2b88da6c-36b6-4b21-a9b6-a1e6d59ba27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d81f4ba-77cf-4762-86e8-66f011ba681b",
        "cursor": {
          "ref": "b5c61afd-396b-4c87-b2c4-9ab56502ffd7",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9691407c-6657-4db5-80b0-a96526eb1575"
        },
        "item": {
          "id": "7d81f4ba-77cf-4762-86e8-66f011ba681b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fa5154c7-ac7a-493a-b195-3053919ddd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9611f8-00a6-4fb7-8a7e-50af0c665f7f",
        "cursor": {
          "ref": "e54ff589-fbac-47ef-9a77-98b1319c5b61",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "98960dce-9815-4eb4-aa42-bbdc1befb69d"
        },
        "item": {
          "id": "4a9611f8-00a6-4fb7-8a7e-50af0c665f7f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b68bf64a-5934-41fb-bcec-a70a4a474165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1722751-b5f4-4b9e-9e29-cc3849635ea1",
        "cursor": {
          "ref": "c8f1d96c-3e79-479c-9082-f124d1a63f84",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fae18877-a2db-46c7-9d4b-fe5a3f8657f0"
        },
        "item": {
          "id": "f1722751-b5f4-4b9e-9e29-cc3849635ea1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "30cd5dde-5828-4e1e-b1a4-09160cb5893a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ef74af-f05a-4455-940c-214123b3046c",
        "cursor": {
          "ref": "421a5ffd-b327-4e5c-8c10-37c793b54344",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "15fbce96-ef40-44ef-9bde-edd6da596211"
        },
        "item": {
          "id": "95ef74af-f05a-4455-940c-214123b3046c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8a39727d-6d26-4083-a637-a0e09b77ff5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777538ea-0bd5-44be-a0aa-119a80526cc6",
        "cursor": {
          "ref": "ce13741c-20a2-4edf-beb3-a39b6f5666e3",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "37127079-945d-4d92-b012-b7ab9121c52d"
        },
        "item": {
          "id": "777538ea-0bd5-44be-a0aa-119a80526cc6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8720e38c-9551-48ab-a5a5-f5bdd85eaeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983f2b18-ebca-426b-9046-6181b13e3464",
        "cursor": {
          "ref": "5aa86935-bdb2-4be0-a175-96ffc5ed75db",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a0a496a5-f1b1-46cd-af14-9f40e35adaed"
        },
        "item": {
          "id": "983f2b18-ebca-426b-9046-6181b13e3464",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "005020c7-0ca4-48fe-9ddc-6edf569cf884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dff40f-a686-463f-9b0d-457b65e3d14d",
        "cursor": {
          "ref": "7a86a77c-b070-4f85-a105-187232ad728c",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f06cd069-9ec7-4c57-bb1b-e52b5700fb61"
        },
        "item": {
          "id": "14dff40f-a686-463f-9b0d-457b65e3d14d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5a7767f0-5fe8-4382-b1c3-e95d02c20a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5499e16-83f2-40a7-88a5-816c58d39e89",
        "cursor": {
          "ref": "818eead0-76e0-4dcd-9ce3-c306cbc0117f",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6c913277-68b6-4226-91f0-8b48b14956ea"
        },
        "item": {
          "id": "c5499e16-83f2-40a7-88a5-816c58d39e89",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fbd056b5-3f66-4af0-8244-6d75f07b069e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d5a2b0-9e18-465b-87ba-1ca8c161f950",
        "cursor": {
          "ref": "250602ac-0029-404d-b2ab-2931cb125233",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f40c522b-460f-4eed-ba21-7ebd6360ef14"
        },
        "item": {
          "id": "29d5a2b0-9e18-465b-87ba-1ca8c161f950",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f1e8b8ab-6ecb-4c20-bddc-53232f7b4f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d88cab-dc58-4d93-bec8-aa5e8a4c28a9",
        "cursor": {
          "ref": "da1b20e0-a50a-446f-ba85-ca088058069b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9a64f7c5-974e-4053-8454-1c8f2d8d0b15"
        },
        "item": {
          "id": "53d88cab-dc58-4d93-bec8-aa5e8a4c28a9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c900dd5c-f368-45d5-b3d9-ad19509a4fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ecbca8-156a-49e1-b695-48499511a0cd",
        "cursor": {
          "ref": "52ffd18c-fc6a-48f0-b806-02f37eaea71b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a225789f-5556-4b78-923c-39bffc9274c1"
        },
        "item": {
          "id": "c9ecbca8-156a-49e1-b695-48499511a0cd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "120ddf07-dc18-4c67-99f9-3e29bd9d7df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3036846d-1bf6-49a1-9ac7-f4ab5409244a",
        "cursor": {
          "ref": "4e94bc70-3be7-4d60-9acd-ad95355a8388",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6db5ffc4-01ab-4fb6-bb24-67c28b2d9ba0"
        },
        "item": {
          "id": "3036846d-1bf6-49a1-9ac7-f4ab5409244a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "395b822a-6e53-4710-ad01-0b902cf5265e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178eb17a-4dbe-4243-88f1-d07e53862850",
        "cursor": {
          "ref": "deec91d4-dbf2-46f2-82c3-c3f66d85900b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6feacb82-f86a-4c1e-b397-84c03ad7a3ce"
        },
        "item": {
          "id": "178eb17a-4dbe-4243-88f1-d07e53862850",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "59c08b15-2227-4f99-a6fa-6771269ae8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9885b0f-0a2a-47ef-b406-0d39fd82c063",
        "cursor": {
          "ref": "63c9662a-9cf5-42ff-9720-831e6889a1bd",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2fa90af1-2aa1-4771-abaa-f1d6950f26d9"
        },
        "item": {
          "id": "e9885b0f-0a2a-47ef-b406-0d39fd82c063",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "73f292b4-34a0-4cb9-afe8-4cb4b4d78867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359d6a55-3d6c-4a0f-a1cb-be53549c1b6a",
        "cursor": {
          "ref": "e21ea879-d65e-4858-acc8-61c064cd9511",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3cf7e5b1-27bf-43fa-a90f-4a82c160e7a7"
        },
        "item": {
          "id": "359d6a55-3d6c-4a0f-a1cb-be53549c1b6a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a03faec8-b9af-4109-8112-21d99b59079e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c80391d-5c50-40bd-990d-49aec05ffc4b",
        "cursor": {
          "ref": "f91f219d-f68a-4799-b698-96a8665b7d23",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "23e9699a-5884-4560-b4e3-fb605ebc7643"
        },
        "item": {
          "id": "8c80391d-5c50-40bd-990d-49aec05ffc4b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a0708614-fe43-4c55-87e2-b97ba5ac5d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d80702a-30c9-44e5-acdc-76e15da80340",
        "cursor": {
          "ref": "e6101c95-74c4-416e-b741-6865b945a93e",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cd2562bc-5641-4307-8095-dd7c63cecb32"
        },
        "item": {
          "id": "1d80702a-30c9-44e5-acdc-76e15da80340",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8d98cf91-5af7-45ee-ad76-6c51985e0171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae1c5ff-6de0-472f-939c-1ba02dcaa46c",
        "cursor": {
          "ref": "590ac208-7b18-4ea1-acac-3fcc3f8738a3",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1cfaafcb-19ae-498e-a4ba-7743da8fe8ec"
        },
        "item": {
          "id": "2ae1c5ff-6de0-472f-939c-1ba02dcaa46c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3054762e-e559-45de-b431-31d5246d8448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93197aca-8f59-43ff-af2b-f0c419393133",
        "cursor": {
          "ref": "a7bb35b0-7780-49c6-bb17-06d4d41cec67",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "df5c468d-cc1c-40d7-828f-f85d7cbd1161"
        },
        "item": {
          "id": "93197aca-8f59-43ff-af2b-f0c419393133",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e5172ed4-31fa-4337-9059-c618bd8a6d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031c902d-269f-4d3c-bd5a-bd0840610b66",
        "cursor": {
          "ref": "6d38fdfc-42ef-4bf2-97ff-e8e071e5705f",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "592689a9-5a05-448b-bfad-ec35ae0fb586"
        },
        "item": {
          "id": "031c902d-269f-4d3c-bd5a-bd0840610b66",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e98f610c-8236-49b0-b409-0e9d36e1fee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ca429d-fef8-42aa-8998-197a87b0c81b",
        "cursor": {
          "ref": "cd715f74-9c04-4736-9114-30d9753ab3e1",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2dc4c06f-418a-43a0-af44-2965e03b1921"
        },
        "item": {
          "id": "b2ca429d-fef8-42aa-8998-197a87b0c81b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3fc8243d-8792-4908-ba4c-077885ed8bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff4bc8d-63a0-498b-96a0-287e81a622b2",
        "cursor": {
          "ref": "4c6a34f6-acfe-4d8d-868f-404a4f9d9e11",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f71e02ac-36cb-4536-9f63-9b704e7dd24e"
        },
        "item": {
          "id": "2ff4bc8d-63a0-498b-96a0-287e81a622b2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "62d1d08e-00df-4e30-9c72-5134cf1e70c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb85486-940a-4b42-8e67-8687b9378e98",
        "cursor": {
          "ref": "6bfb0fc8-72a5-4e36-aee6-6ff542eb5a5b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b6df9630-1ff5-4995-ae31-2786522c5663"
        },
        "item": {
          "id": "0eb85486-940a-4b42-8e67-8687b9378e98",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "252facf4-459e-4ae6-8982-8c7b2861fa88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a08c1e5-eee5-4ed9-8cfa-2b8cd83cc4c2",
        "cursor": {
          "ref": "361758a8-02aa-4598-8bb1-bb850c41feb0",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a0cf7929-3be4-46d0-a02c-769dc76ef421"
        },
        "item": {
          "id": "7a08c1e5-eee5-4ed9-8cfa-2b8cd83cc4c2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "627ad3d3-1611-4096-b931-23f8955818d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607cb817-fd21-400f-9322-25237ac43bac",
        "cursor": {
          "ref": "cc052c67-3b11-499a-874b-c033154644ef",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7ee439c1-3667-4327-814f-6a955e2aef5d"
        },
        "item": {
          "id": "607cb817-fd21-400f-9322-25237ac43bac",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "297bac3b-84b5-4cd3-9331-fe6f6635c5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed16210-5849-4b46-b6db-1c285b4137f1",
        "cursor": {
          "ref": "a214a24b-a06b-45ff-aa47-e1abc87ef057",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "dc8aeb18-be6d-4933-b2ac-e7e2a4b68394"
        },
        "item": {
          "id": "6ed16210-5849-4b46-b6db-1c285b4137f1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "411ad48b-c8d6-4fd0-af23-11c5c132d8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad137b3-0041-4d6b-a38c-a6a8b6676e27",
        "cursor": {
          "ref": "aa928e8c-ca11-4d26-8987-63c7d5e6ff9a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bbd36086-b2c8-4256-9540-95563c79e18b"
        },
        "item": {
          "id": "7ad137b3-0041-4d6b-a38c-a6a8b6676e27",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ec343d65-348c-4536-a663-87d5dda1d931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a9494c-4587-403b-96d3-16b03d0fe088",
        "cursor": {
          "ref": "250cfff9-5cf8-465d-9563-17596621cff2",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c29d8ed2-a4cb-4340-9f42-7e5b47b8e990"
        },
        "item": {
          "id": "69a9494c-4587-403b-96d3-16b03d0fe088",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "55999919-c439-4121-a15f-d39bc7c40cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccdc347-1990-44cc-aeef-3b55e261adc8",
        "cursor": {
          "ref": "069fa409-1159-40cb-9c53-a66d0711856e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "358d29b1-1181-43f4-bb4f-ac8088ca5829"
        },
        "item": {
          "id": "2ccdc347-1990-44cc-aeef-3b55e261adc8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2ee01090-b3a8-48d2-b3be-c0f234e8d84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a49746-087b-49fe-9e25-4f31499ac670",
        "cursor": {
          "ref": "f840e82b-196a-43e4-87a8-358c99fdfc89",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "95c6219a-5858-4731-9acb-4a12f0998b96"
        },
        "item": {
          "id": "92a49746-087b-49fe-9e25-4f31499ac670",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3176d336-aa8b-440a-9758-e62ae7546eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcc98a2-dde6-4e97-9646-fe21a5963ef8",
        "cursor": {
          "ref": "be3bb6a5-04d7-490b-90f1-d0eda2678172",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "91a6f4db-8dcd-48f3-a314-83ca3cb19089"
        },
        "item": {
          "id": "9dcc98a2-dde6-4e97-9646-fe21a5963ef8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3ee39039-fa4a-41d6-a0c4-76dea0cb0a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23aaedb2-53c3-4540-a375-6ccdc71915a8",
        "cursor": {
          "ref": "6ec72f76-10fc-458c-94d5-77e08bd9fa62",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f26b103b-15c9-4cbd-9855-6e8b0c4e7e38"
        },
        "item": {
          "id": "23aaedb2-53c3-4540-a375-6ccdc71915a8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "603898ea-a2ef-4b20-9657-4bcd00ae03ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd5235a-1957-45d9-b5bd-f423bdc74586",
        "cursor": {
          "ref": "c0456035-1cfc-4f85-ab6d-9429a0e546d8",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "66ef92cf-4316-47df-938b-a46371594d2a"
        },
        "item": {
          "id": "3dd5235a-1957-45d9-b5bd-f423bdc74586",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9f47b080-7a18-49ec-b8ab-e1087f7d6751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2fb298-c4fe-46ad-8689-26cce67d2c86",
        "cursor": {
          "ref": "a09f0b19-2f32-4b6f-8797-d499cc86a274",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d096aa54-18e3-45b3-b48d-4e1cfddb21f0"
        },
        "item": {
          "id": "8d2fb298-c4fe-46ad-8689-26cce67d2c86",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3d82d410-a92f-4872-b2ad-d858f8d37b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e21d8d-3024-47cc-a812-c63e0712a49f",
        "cursor": {
          "ref": "db1fc323-be93-48fd-aced-dbc14c4b107a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4854f4bc-f1ec-44cd-8ec9-3dd5e343ad81"
        },
        "item": {
          "id": "09e21d8d-3024-47cc-a812-c63e0712a49f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "60f3fda3-8a08-4e05-9bd3-fa35367c3564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ebd229-fa51-433f-9306-01052e36d398",
        "cursor": {
          "ref": "bd5df1b4-20df-4c57-9d79-69367c388b9a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7ee2e42e-42e8-4a3f-a20a-0b24a1b890e2"
        },
        "item": {
          "id": "b5ebd229-fa51-433f-9306-01052e36d398",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b6507e0a-fad9-45a0-93eb-d56ad4a4ddd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71211748-b806-4de7-9271-43f4e93356d9",
        "cursor": {
          "ref": "cc50ef02-1aa3-4018-beb5-c272ee25c9ed",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b8adfed3-5846-462f-9331-8a8cffd78f20"
        },
        "item": {
          "id": "71211748-b806-4de7-9271-43f4e93356d9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b4865839-27ff-4914-b094-2bd41a2cfa4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc6356d-0038-450b-9d3a-0421fd08ac66",
        "cursor": {
          "ref": "67d140d3-3e4d-4a34-9134-5353bd05801e",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "97c5f693-240b-4afd-aee6-eb5200a14c68"
        },
        "item": {
          "id": "fdc6356d-0038-450b-9d3a-0421fd08ac66",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ea48e7d4-1d71-4488-84ae-9c6796621cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f56dc47-5b2d-4f7c-88d0-0d22afab2433",
        "cursor": {
          "ref": "576af990-ca3c-4ec4-927b-2c88585944ed",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b9bfd88d-d8c0-4438-a076-3516066995ed"
        },
        "item": {
          "id": "0f56dc47-5b2d-4f7c-88d0-0d22afab2433",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "267d2acc-1ba4-494f-bd92-c791eda3a949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa9d0de-4089-4954-9497-b8bdaf4509eb",
        "cursor": {
          "ref": "17f6fffb-252c-4c8d-93ae-8b8efab8a036",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "397325e4-d891-44c8-9370-22d1138f00b2"
        },
        "item": {
          "id": "1fa9d0de-4089-4954-9497-b8bdaf4509eb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b9422ddb-00ba-4c43-ab93-0483a84eb99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5e1a51-290d-4dbc-ab54-1a334600cf5b",
        "cursor": {
          "ref": "516cfa0d-4e60-4dab-a0a6-4e8d28a934c2",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "aaf4f9d7-f7c0-4c00-8cd1-6233bc476b07"
        },
        "item": {
          "id": "2b5e1a51-290d-4dbc-ab54-1a334600cf5b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4ef300d7-bfbe-4d01-bcfd-46dc248c479c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7de689-586d-461a-aa1b-0a7cbed8503e",
        "cursor": {
          "ref": "e43c9b85-d2f9-4e1e-b004-edc34f7ba48f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a7ba9870-d019-4f8d-80cc-69b1f0a4215e"
        },
        "item": {
          "id": "0d7de689-586d-461a-aa1b-0a7cbed8503e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "73aff791-c75b-4b08-a8a4-ed2af95c0f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bbd36e-c0ad-4268-be48-4594f1ad067a",
        "cursor": {
          "ref": "575ab7ba-b5ca-4712-b125-39baf4d55173",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1a019f62-69b7-410a-8049-e3296ef4fe86"
        },
        "item": {
          "id": "77bbd36e-c0ad-4268-be48-4594f1ad067a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fb3de265-2d1a-4979-a9ec-9401b8d22614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba878b4-797d-4bcc-9906-2d241e0faf5b",
        "cursor": {
          "ref": "3c04c9d3-cacb-41c2-ab3f-a84ba7fc753a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "de59ad3c-6a9d-494d-a99c-39efa71166bc"
        },
        "item": {
          "id": "8ba878b4-797d-4bcc-9906-2d241e0faf5b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fe0572af-8a35-42dd-b751-dd22808e9b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f66f203-433a-4cfc-b0b7-2f92f3fe522a",
        "cursor": {
          "ref": "f89b05cb-50dc-4942-9016-59565b118d04",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b794916a-5211-4309-984f-183b9677090d"
        },
        "item": {
          "id": "7f66f203-433a-4cfc-b0b7-2f92f3fe522a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2de0680e-ff8d-44e2-8dcb-870eae877c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917bdc5b-2de9-49b1-a505-3f47fc07f177",
        "cursor": {
          "ref": "aa1af91a-9457-40c8-af20-34cac4d3740f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "82436759-856e-4f66-a42a-e9dda21f5152"
        },
        "item": {
          "id": "917bdc5b-2de9-49b1-a505-3f47fc07f177",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b76cfbfb-a2af-406c-876e-2666fb5db8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10715be5-d09a-4aaa-b5ee-066a343091e8",
        "cursor": {
          "ref": "108b9a14-c953-4de3-9876-fd177c38037f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b310e614-824e-4a81-a72e-d21d14df58bb"
        },
        "item": {
          "id": "10715be5-d09a-4aaa-b5ee-066a343091e8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5403ce84-db6f-4763-85bd-4decc810b456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4d25cb-20cc-4726-b644-94e8d758695e",
        "cursor": {
          "ref": "7f2c8500-4a1e-4e26-a4f4-1be7971f8f96",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f1c28123-2d07-4054-ab7a-19101f42185e"
        },
        "item": {
          "id": "0d4d25cb-20cc-4726-b644-94e8d758695e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0f548562-e3d3-4673-a842-7015e1226974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782d665b-44e0-43c2-9ba3-b19293d546e9",
        "cursor": {
          "ref": "b8d837e1-8ed1-45e5-b6e0-536756e7f789",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2dff4be8-c5e1-43da-a7c9-4dce815e799b"
        },
        "item": {
          "id": "782d665b-44e0-43c2-9ba3-b19293d546e9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f1c5468b-5286-45ac-97d8-e7450ef53077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f019ad98-e4c6-4c03-ae9b-1c9956a307ec",
        "cursor": {
          "ref": "86095890-5e65-401f-938e-dd1a9f2c0acd",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "33f1c10c-87bc-4814-9533-4720dda842e6"
        },
        "item": {
          "id": "f019ad98-e4c6-4c03-ae9b-1c9956a307ec",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "20224519-dd4f-412e-8309-6d8d417042cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f794f5a9-66c4-493a-a0d3-999821a5a4df",
        "cursor": {
          "ref": "7547283c-7571-45cb-89df-2581acb5d95a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "933bc427-ff8f-46de-8f10-34ec41bf09f3"
        },
        "item": {
          "id": "f794f5a9-66c4-493a-a0d3-999821a5a4df",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4015bb04-4d0b-41db-899c-94360a1d8e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1eb80f2-f7ce-4983-b828-96ff98462d18",
        "cursor": {
          "ref": "cd7b122f-4d3c-4d9d-99e3-893c09443c19",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ef9082b4-b6d9-4767-a238-91bb03f729cc"
        },
        "item": {
          "id": "d1eb80f2-f7ce-4983-b828-96ff98462d18",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bede7585-bf57-4bcd-9226-c8cc5fcde4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e5eafa-4b99-4132-879f-acfc6678fb65",
        "cursor": {
          "ref": "512942f1-22f2-49ef-86e7-dee796626d2d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "333c48ae-179b-4d67-b0e3-15994b3489ba"
        },
        "item": {
          "id": "e2e5eafa-4b99-4132-879f-acfc6678fb65",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e6285f83-5fc4-4d61-ba72-2f56c7bb65e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f740d9-1f26-4277-9893-8eb0b46c5ca7",
        "cursor": {
          "ref": "434f1ca3-6be9-4965-accd-3a844ec09a35",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4675cc1b-eb20-4fc4-8f2f-60f76f5ecaa0"
        },
        "item": {
          "id": "29f740d9-1f26-4277-9893-8eb0b46c5ca7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "37f6201c-a965-41d8-b250-ef0d3b054d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25aa7e4-79bd-42b0-9c65-94d12ba104a6",
        "cursor": {
          "ref": "d9d618d9-829c-49ac-a9e6-4b585cf138de",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c3af4430-daf8-42f4-a16a-e74445fa7d28"
        },
        "item": {
          "id": "d25aa7e4-79bd-42b0-9c65-94d12ba104a6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7b9fe3fc-0787-494c-add7-7cb0b856e639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7334f589-0145-465b-b0b3-4d29bde5f0c0",
        "cursor": {
          "ref": "51ccd10c-387b-48e2-bed7-7d61455b71db",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c1e62767-5e50-436b-887b-bd1af6e7da6b"
        },
        "item": {
          "id": "7334f589-0145-465b-b0b3-4d29bde5f0c0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "66cae9a3-1fd6-4d76-8739-ed4f087a3ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dbe5d3-ab1d-4f20-a91c-40fce6233531",
        "cursor": {
          "ref": "dec4303a-10a6-4b58-aeb5-0d50f474c038",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c521edb2-8a67-4049-b074-68a9b23db9d7"
        },
        "item": {
          "id": "54dbe5d3-ab1d-4f20-a91c-40fce6233531",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a9ef179a-5241-45ba-bb44-4ed839eb9798",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce93e0c-2c03-46ab-bc9e-0455316d738a",
        "cursor": {
          "ref": "f63bfca4-558b-4a6a-9481-0d690fa50a6d",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "226c4367-a821-44b6-9734-224235f07299"
        },
        "item": {
          "id": "8ce93e0c-2c03-46ab-bc9e-0455316d738a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e3c22f9f-e4ca-46c7-9b23-12b8f316da1a",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d59db0-b773-4921-b1c4-d8488d438764",
        "cursor": {
          "ref": "5ce07cac-2227-48f6-af64-6a28b9dd8d1b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f253b7d2-dac2-4d86-90f8-f12aa3a7facb"
        },
        "item": {
          "id": "48d59db0-b773-4921-b1c4-d8488d438764",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7d0ecf84-5057-45ad-a624-63a94f0046eb",
          "status": "OK",
          "code": 200,
          "responseTime": 2960,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8aa9ed6-4b81-4ce0-8637-edb80e634f6a",
        "cursor": {
          "ref": "26bd0e31-3cae-476b-b0b1-e92113b78cc0",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "03e98232-f4c4-4bd6-bf16-be4437009b09"
        },
        "item": {
          "id": "a8aa9ed6-4b81-4ce0-8637-edb80e634f6a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "feb29e7c-443d-4d47-830d-ed9bf05be2b8",
          "status": "OK",
          "code": 200,
          "responseTime": 2704,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70d441b-41f9-4f1b-857c-2f066d30d580",
        "cursor": {
          "ref": "c64844d8-1831-461f-a571-8f9aa1494fb8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8668792e-38cd-4dba-b3fc-744a1272c031"
        },
        "item": {
          "id": "c70d441b-41f9-4f1b-857c-2f066d30d580",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "85a2aa93-7f62-4429-9fba-3c425daf4bbf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70d441b-41f9-4f1b-857c-2f066d30d580",
        "cursor": {
          "ref": "c64844d8-1831-461f-a571-8f9aa1494fb8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8668792e-38cd-4dba-b3fc-744a1272c031"
        },
        "item": {
          "id": "c70d441b-41f9-4f1b-857c-2f066d30d580",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "85a2aa93-7f62-4429-9fba-3c425daf4bbf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a90f381-d8e2-454e-92d3-73547e2e9866",
        "cursor": {
          "ref": "db411e63-1e75-471b-b1a5-947871d01189",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e48233bd-628f-4cab-848b-ebb6a697750e"
        },
        "item": {
          "id": "0a90f381-d8e2-454e-92d3-73547e2e9866",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d7787afe-d8c3-46c9-b356-5a6981dcb4cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ed81ec-5c46-4cdb-81b3-bb4f14d7695f",
        "cursor": {
          "ref": "da39359b-69fb-4780-ac1c-014f06644d56",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a9397b1d-4111-4e11-817c-f8266c17d641"
        },
        "item": {
          "id": "d2ed81ec-5c46-4cdb-81b3-bb4f14d7695f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "69dc1a97-d8e9-4879-92dd-418a6420204d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}