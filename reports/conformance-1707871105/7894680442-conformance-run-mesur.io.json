{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a4f1dc03-accf-44e7-8bb0-3ac29b6fbd1e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "28703f95-9ca5-457e-8ac8-cf1db88fbcfe",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21fecda9-135b-4f6f-aa5a-12a4ab8d5c93",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ed03f0e7-b865-4fb2-a000-e10f1881ffcb"
                }
              }
            ]
          },
          {
            "id": "79ab11fe-c926-4ad2-b28d-f3c80473f5b3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "acaeda60-b903-4569-b5ed-5e622586cdc4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a5add286-c957-4c3d-873c-da9b42e64be6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6506c842-4ad5-4a43-a675-bc8301528686",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6fce6626-66eb-4f4e-8b80-7c3fb164cbee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ee51261-9324-48d6-87d6-53af9f14000e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51f57fcd-f93d-43ab-a2be-fa1dd0ea3c87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6f6487c-38f8-4aef-b157-464b0d057d82"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6bc3f880-5cf2-4211-9043-a63a029c399b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7e63fcd-c3a7-435a-976f-3938d53b1e45"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "82a5c338-34fa-4055-b372-1627ecd3b994",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5c8853a-5009-4537-8b9a-3f5ee25ef0a0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3017831f-08fc-4f2f-a0a5-201d1bc367c0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c6749ea7-987c-4be4-b42d-57e1ad5190a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd89a3f0-941e-42f0-b2c8-a693843ad191",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b80865cb-2833-4210-a57b-9c932bf20708"
            }
          }
        ]
      },
      {
        "id": "83131884-4d42-42cd-834b-4e88a83b95ee",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0895f61d-3a04-4925-9114-44ae0a916db2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93c93364-2519-47f5-8237-d26ee749dc66",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fc38d233-2145-4f32-aba1-70a4c6d98b80",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d8d561-3c1b-4a10-9bb4-c5dc5f9330fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c314a06-13c1-4d8f-8e9c-aa1579fbd05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9d4466-8ca3-4594-8218-d3a45fdca48d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf64ffea-89a0-4c88-8edd-52a2f11f3781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c7f3627-61d6-467c-8eb7-035761d559ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785099ba-89eb-4074-9141-7d2e59a2546a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042a2ebc-ddf7-462e-845c-c07ddd4dbb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bd7f62b-c147-4b03-b7a8-baffe0b17074"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "816f6150-3edd-4800-8893-5dee9152564b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49996102-516f-4569-a8f4-d702182aa700",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec8f557-2053-4d11-9586-542b349f8948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2f97db9-775b-45ed-bbab-393b358355ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1dab55-0d3a-4bec-9ea8-52d6339980c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c3b321-0109-4048-a9c8-b6fd3fb1a235"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "651c1565-977a-4a25-bf0e-768a1c7059f3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ebdfeed0-9bfc-42d8-9f80-06fcab85b1e5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e50e401d-d6af-43bf-abbf-51b32c7aab16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a14dc486-302e-4f00-8db1-dfa2d6b6d077"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e945b47-455e-4711-9247-9e44364266a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3d7ec6d6-085d-4e93-a8e9-c19b7dbbbea4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7235e9a-f58c-40b9-aa28-bd3d667ade28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd115b74-aab6-476c-a47e-968924e21ed7"
            }
          }
        ]
      },
      {
        "id": "f814eda9-7d02-430a-a647-6d516ab81098",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ec65ab3b-3990-45ed-9156-4e1ab2f730e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06c8c93a-d604-420e-9b39-44d9ccfbbcc5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f0170c73-9686-45b2-9b72-6ec70abea85f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11641ff1-c328-4a98-a9da-d801b3757c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2beb8e35-5b55-40eb-bc9a-4332ce639d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a30a93-d3df-49fe-ad4f-215f49c2c19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f5c7c35-3228-4408-9223-d1e074818c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15349d4a-a7e5-41c3-ab6e-72d638842cae",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb3ba65-1488-4235-8765-353e7ac9a4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60b49e3-e3ff-47e3-a5eb-f3ac5ed974a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8473e6-9ce1-45f6-ad00-088855573fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3435d12-2221-4803-bead-903fe9d771dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc2f080-78eb-472c-bcc5-0afe345e1bb5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282eabaa-2b5d-4495-9c27-f9be0dadf0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbbbe66-f515-4981-9167-b8bc0647bbeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12967273-007b-4e62-9775-acaeefd02e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3954fc4f-7199-404c-a8cd-4ebd2921f069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec6f6d7-1997-4ca0-ab88-1e0fe30a8a6a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01de761d-8830-44aa-a1a7-e6dc9638958c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb20053-afc0-4ca5-b82b-58f868174096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996b7951-703a-4ab4-9b89-d04db0cb46e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0f6e8b2-5c8b-4ec4-b687-1d2bfcce272d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89b5961-eb41-40d7-9251-e3fb33a98ac6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b893a55c-0e64-44e2-8970-7bb2dd36046a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5a76e7-9eeb-493d-a4d4-a39f3f625d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f43ee6e-f470-4945-b519-9f31725cc6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa3d74a5-47ab-4fc6-9692-bcac91823910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffd1e9f-78a6-403b-aa45-5fd244d89eb7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa67caf-223f-4a30-a392-f7f8dabf43cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c731e7d-be06-4731-a831-2bd4c57ef8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c77aa2-ebd6-4218-ba9d-cdac8144981f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b9fe666-d1ba-49ce-b0be-fb8e10d97c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cf4083-2570-4885-bfb1-63984b15e670",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9452312-4a3b-4c05-990e-4e76b224eade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fb88ed-9bd8-4f33-b99b-05e4d0cff19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe6d753-4571-43a5-b46c-2e075ba9db52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1742ab5e-cd83-448e-9212-6dc61608ac5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19a4053-9e51-47f5-99fc-46c53c56cc81",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44ae89c-7a6c-4a83-8d1b-96e5e5471662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72633a2c-9a48-4be0-a199-f03a9cec1190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18df8408-a17c-4d32-ac21-04f85907d362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f498d374-a409-42c8-b1c9-d0149fbbd3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2613de64-3ef1-4310-84ea-2c26dcbe746e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6e7cca-8f20-4c9d-b444-3b86a8645842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb57e2d8-7d91-461e-869e-823c1fbae363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265ca15b-41c9-47d6-ab13-ce2ed3c64ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69cdaa93-6b2d-492f-b6e3-fb6233e89c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1069c8f0-8202-404a-a3ae-2a10cf6d7469",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d9e2c9-a94d-48bb-83c7-5bded317faa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c83f17-11d7-4e3c-a770-1f638dc065f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789b25f3-3161-4deb-9eeb-cc498259b49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7edad801-43fb-4f70-a20d-5827caf17ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a4ef33-9d49-4aea-a4d1-2c45bd72ccf0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6e78b6-b48c-4a65-b976-35a510edb1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e94b9a-a151-4850-b8ff-1037f83d859b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13458954-ef2c-47cb-aee3-ed73a41fc8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9659374a-32a7-4dc0-a49b-f946c20449f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740c3aeb-5fa6-428a-bdc8-d70368e25e5b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bee5360-74a8-4c64-98e6-c427ebbbb652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9ced37-fa81-48e3-9af5-74c170d765c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00907f3-041d-4022-a353-709f51168140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42571462-fcdc-4887-866d-9f265af11ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f778a63-1eda-4fad-a603-9975ab13c118",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15af0853-2cad-4cab-b24c-d5c8355516f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983b2d4b-5e1f-4376-b183-cde83268edcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7beb882f-fccb-4882-9eb6-e6fea61170b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a474e5c5-1f83-4834-8ae7-b7ac6268f099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77de9579-57ad-4a6e-9548-e44ec08739d8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd56eda0-71ae-4d3a-90ab-3a9eac5be623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de04253-b93e-433d-b811-55cde0699eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c4b3dd-dbc6-477a-bab3-c78b17e98832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9078d5c9-ce3e-49e1-9341-236534de7e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f920f413-b320-413c-9380-7b6e91b93321",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bd8c2d-8dd9-471e-b0e5-be6c49afcceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53622d0d-37cb-406a-842f-87dd8ba2aae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf447c3-83ab-4fa0-bb08-4ac8b110339e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7663b75-16f1-4ba6-8194-4ae83622fd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a15421-33ba-4419-ba22-615b0c7ab875",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cb3cf5-3453-47b3-bba1-174128f778a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b82981-35d3-4963-919f-dacb1ffbfce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93093505-5dbd-4916-a656-09ad599d2f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a0a196f-19b8-46cd-b56f-18728bbac729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f612c22a-18d3-492a-838d-015e47bc7c18",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c232f87-82c2-4b87-a8c5-51f37f17d824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160875bc-4ce6-4d23-8f30-3bb9f8dc12bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7490fb96-5ea8-40a2-9862-d9a0a4288f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a1d13cd-8cf9-4647-8cba-ffc2ce5c45f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0160c3e0-79c1-4398-b970-e50e37c77342",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffb85d5-7765-487b-804a-95d06e8d5ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0464e5de-c4f5-4a82-bcf8-aaf051724a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b0aa65-3ea5-45c9-9552-01c5fc5625ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "10d61920-f801-4a41-9809-d5d0491fbea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e341bba9-54a7-43e3-82a0-21a271d60396",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eaa2f68-8826-410c-afda-407f1dfe7262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f7d6f4-cc5b-4a20-916c-6a4ce6c7bfd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76affe2-1154-4f71-a05e-132f684991c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceacc579-8a68-470e-8631-cd278f10457e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b502709-b849-44a4-9c2b-07b6e135a4d4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5373ead4-de51-4081-b5bf-a6287d495d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9edd2e3-5903-4ece-b1b9-7c5d3401386b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebed6898-1ac7-4fa4-b63c-646c6e00f025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3484333f-1a86-438b-9600-9347afb117a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79585199-371c-41d4-8738-9366740410a6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892bb14a-f403-4a4d-93f4-4cd5fbc71a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c9d523-3151-400e-8f9f-97935a6d79af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f1f2e8-9356-4f4c-8987-194cff9da7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "404517ed-e228-4327-9b0d-b84e5db2c6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75af3c15-6a0d-4994-9a83-75182f5a6c0e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccdfabe-dee3-47b7-94d9-7e38d51de2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0d059d-93a8-4aad-87c9-3c47ff47ca88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0efee02-09c9-4787-b48a-dcfbff7f3bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a48bbbe4-b59e-469f-884b-1eb643d6fdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b38ab2-be48-4311-8bd0-48a44c293986",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcfad22-eabc-4db8-a288-87196941a2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13395ea3-925c-4d84-bcb1-85321479f53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4294568-4182-4616-999f-4f6285539705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2c5876-6756-4bec-b558-72b3da2f17c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93369dbe-7d84-47c8-af73-bab1cd376e8a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afba348f-3073-484c-8fc9-89357cbd621a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78553814-3cb8-4551-ba31-a22cfcf18ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d22da3-b2ea-44eb-8dc7-68717f1ca2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "394950e6-5ab3-43ea-8399-ac5b00dbc67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c142fa3-efab-49da-8309-df3e3b2b4fd8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310cd7d0-d979-478e-8f7e-a216dc4c7af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aba91a7-6dba-4531-a211-60f8b26244e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae5291e-b904-48e6-ae8c-c918a54f61e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9492d861-9504-4588-b2d9-af59f54be24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91191ee-abbc-420b-b8b2-8442cdfabb65",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03831728-8381-4be8-866b-6eb24d780ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5cbc671-10bd-471c-8b0b-997434bca610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ed0773-c548-493c-b80b-7e0448b69fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8d0813-5a1a-4a93-9f24-a44010bdc3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0da32df-eb30-4d8b-8912-6e33c34bbd14",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512fba0c-6310-47f6-874a-d0d600d93502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27793c4-59e8-45fc-9b70-fb5f7b08fd4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a8fa63-81e9-4dc7-b287-787a06a7f7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef6b013-4700-4d32-8701-5570ff0e94cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d68c016-4d0f-40ac-a678-fe0182fcbce9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e892ea-41e8-48da-b375-e39493e11a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1dd3aa-dc5e-4905-8c23-f9ae731526a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef05301e-0f2a-4faa-ab02-3db36039524c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48280eb1-a7e9-4508-a5bd-a5a8e162c239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c103973-9f29-4dcd-a33e-ebe43698cbbc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f38df74-d8fa-413b-9bb3-f5589d2faa27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04bfd1df-a2fa-4a1e-9731-9972c97dbbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82407fe-ae85-4873-9e20-bf045bd32661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad27148-0603-47a8-9270-6d396eb094ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e71e74-e695-4a74-ab92-5c51ecb54909",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77147c0-1891-4304-9a3d-083135ddeb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0e32d6-9190-4a2f-93d5-8462c2b12be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b148b70-ba3c-4c68-be79-7e4ed8077e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "359ea569-ec82-4f99-947f-ccaf4ccd9a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc80028-1368-4771-b68e-e18b4ef4117c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4160890-6d43-4002-b6e3-a370a19226c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4338c0eb-4f3e-4cb7-8d5d-623c75dd791a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44333a5e-b486-4a04-aac2-737cd5671075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4461e54-4d4d-42d9-acb5-8c65b130becb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c972eab2-d49a-4073-b4f1-b81b141f7036",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb236d9-d105-4733-8d7c-816e21a8e2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add1fb77-02ae-47de-9eed-29842a290fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a98a59-eaae-46cd-86f7-a1ba0fa9b54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a576e8-1109-4cc7-ac46-88f5ecf45014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb09599e-1c32-4711-8465-c4d3995b613d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bd2746-2ffe-4c6d-8e78-0bbb2149cd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ace17e0-1161-4954-b578-09bd0a16b773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac2828c-04f3-4a9d-a61f-0460ebfba682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aed0916-d36f-40fb-baa7-6f5fc97daf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c824d3b9-fb26-4ab3-a8f1-f8eab100c763",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e69aa7-0661-4d41-a767-ec806f0f8e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68329337-1856-4a0a-8c32-946749554b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4d4d34-42e3-4d0f-93d0-cc773bba9f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b3d229-374f-4f9c-9aac-f67b7e7c32e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e665d7-52cd-4d75-915a-038536165c11",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01232ab-af86-4f93-9f9a-b035eb821134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47a805f-adf3-45e3-a445-388d09aa82d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c33bacf-0a88-410a-917e-3626b5cab7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "624e8fa3-15cf-486e-81d2-7f11536593c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe76c24b-3493-4add-bbf9-c5cb6df017a5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2fa587-cc3a-46a7-9534-4b4e20e646ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d95af203-7426-40fd-a185-23a38ab57106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a2cd36-74a0-4913-8ee9-3c03523e89a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "228a82b2-7c2c-49ff-9520-9d0881d90201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f828b829-28ae-4f36-ba44-e857f7b56a48",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64015e00-c8dc-40e0-8f47-bb2b1d92ca41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d22169-320b-45fb-a60a-5708587d6845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48090949-8282-4b3d-b377-ec306627c567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7334302-e921-469f-bba5-b41d17793d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae48cb2-a1df-48a0-bc4e-a054c265537f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5f3d51-75de-4e7d-822d-79562550001b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470f8cf4-d620-42bd-8114-2614969b8b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c045f65c-4ee6-4060-9130-64a164fad6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1b7cd6-d68f-4eb2-87d6-2a022e44ead2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fb12af-b065-4576-93a2-e8629c705080",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a5d8ec-cab5-48e8-9948-bea3a8a9fecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d973ec8c-91ff-4005-b816-fc08a0cc76f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ff3379-2b96-4a3d-9886-0fa01d5bc830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c3e3fd-c62e-4677-82fc-40bfd285247a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2fac5a-4142-4819-a59f-4374d746fa34",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d6f7c5-a417-4169-b517-25a550b59f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6271bb-3bdd-47f8-8e12-1c55c18a4675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5635c0-ae01-427f-b817-13bc91a4b28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "19872e02-41b3-4a07-934b-e26ae7814657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0841a03-4637-4c2a-a8f4-8a048da617da",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e774d770-7416-47a3-86af-1a268cb0f275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27590d86-e049-4c01-bbc5-b1a241ec24fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8014314c-9342-49ef-87f3-ef444dc95a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b372a50-34a8-442d-9d5e-33d6b8af4cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35882b5d-522e-49f1-a3aa-ebbca6d4b5fa",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79928dc0-807f-4473-9ccb-b93d4f63834a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f38e1ca-7ab2-424a-bd8b-cbd1ea565dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc83703e-b3de-416c-af2f-cf87431f4acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad1cf71-a4fd-4c53-9b79-95e564f56ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb065fce-8479-4ba0-a9c0-46824f98ba99",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9b2924-f875-473f-99d3-458919bd0f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19201b9b-b3ba-497b-988e-aa09130b5fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e960d58f-dbfe-4d1c-9beb-1e3d90eecbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "820e82fc-a8ba-4c71-bd69-bb65e0d5a432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8179a47d-d1d1-4c86-a0a6-83857a7fc76a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418b6a66-d5c3-4a72-ad54-e3b274e885fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e856f41c-fb78-4296-9a0e-272ee4108389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f773b47a-7a9f-4032-bcb5-04ec7c603eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c81ef599-3712-4da3-9430-bf22f4575694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47800d11-78b9-4e27-bce7-d75680579103",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff477f4-1a3a-43aa-8249-68a40c0fe4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a608e487-e234-4d0d-bdea-6491c221b5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9668f6d7-fa2c-4aab-9201-f73a869d819c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d79493-9751-4761-bfa0-d76f4a14f7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108f5dce-46ef-49d0-9e77-343b867ddb3b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8404987b-3749-48f4-b02f-483dd6e550c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4ed468-94a2-42a6-bfad-75c5a57903d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c67d000-b423-480b-ba28-e89116446031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8366dde9-0113-420c-a03d-a62f80aefc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4ffd88-a1f8-42f0-8569-190833d1ff49",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc12cee2-eac9-45aa-b9ee-59ff2342d6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a26ed6-f51c-4491-a6fc-46c2b5be4bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c77823-74c0-4844-b3ae-3c5717a1f940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "671f25b9-d617-44ca-a7ee-d61342235644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a42dba-381d-417e-b2e2-0e7b15441b71",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10bba86-6178-47f5-bdbd-d92bcd5918c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585a3b5a-8bd2-4b10-88bd-c13493f55979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fc3472-12f7-4a33-9472-021998d472b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8daa8f6f-1c48-4f24-8d93-01b709c7cfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3600aab2-6606-4001-ad89-2a44a9b909e1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10c9511-07bd-4cc9-8f65-45b0f7bc5735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb442049-757a-4318-8fb9-4bce25e89dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796c7075-9445-4766-b8a0-bd958f640eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44b02cc9-76ca-4c4f-89eb-eb69c3b387a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab7d8e5-6825-4e20-a1f5-b173f80ecbc5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c8f94f-005a-4092-bc85-dae0bc3242af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80480f3e-52e8-43b2-9cf0-29c9243bf5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d589e3a2-d19f-425b-9c7f-dd4b710f6fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1cd8ef1-6424-4c12-85bb-ec8375d0b701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80a5bca-5583-4245-97dd-88cf06e6588f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd3a3fd-18a5-46ce-aa54-8b370a5d43c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378c3be9-fa02-4453-a84e-3aa09681ece2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ad8520-558f-4a57-b453-ae3c8c2d70cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7340ecc8-88a3-4565-89bc-b26ffa6a4117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266e01c5-c015-401f-be24-a329ed749e32",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bedd50b-0f82-4b76-bf0b-392c9360ad9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc755ae-6e6c-453d-973e-f08e4ebb2a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4caf7c56-13e2-49fb-9f0b-8d8d631f85f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "57d7f88f-9c8e-48ef-9b35-573a6cf46ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497b7a3d-b675-4d58-82e3-8708990905a4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b86d66b-8e8d-45d3-9809-54d782b545a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0d8f19-1ef7-40eb-a318-5dfa7cae4c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352e1332-b0dd-48d4-b3e5-fd9d9a3cceb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79120516-bb02-4d31-a738-744a8d29e439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46819e14-ed37-4c7c-a31d-23cd4719a97b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1371a8-67e7-499d-9e03-add27078c961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b09015-d306-4f34-8d15-445439f1ddee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bbff54-1d96-4fb6-8c82-d00fa634dc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a27cf6-adac-43a5-ac62-e89caf7894b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3e1322-a435-42c8-9f68-e3060e201eeb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0871ef-f2c1-432e-9763-9984bd106945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82425d2a-13e8-4091-aaa7-b76f9f83b0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82181f6-36db-4752-bc26-aeaf75d59b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61b2a9eb-b648-44be-bc24-cada1f27df99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce7da55-888a-4cd4-9bd8-068d7645f236",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2369b331-225a-4161-aec9-29a150ef16c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748144b4-fcb5-44ad-99f4-45614dfa0788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00adb777-b71e-48b3-b7f8-139f07e85bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4cff4d-d024-432e-90b8-ac88a6ee280b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d31e00-c98c-4973-bdf1-d56bfa2a6622",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4b813d-49ba-4dbd-bb0a-96562c9df61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf9bad3-24da-4772-acc1-003390b9c1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e73064c-46f1-4a54-855c-23bed0330cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "797f213d-eb98-4800-aca6-ca0694dd8bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02db4f1a-ef51-459d-acec-02c5009c7ac7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7424a0-902b-4201-b510-ffc4539a59d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde2466b-d44d-4251-8d40-7ab601ce567b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfcfd3b-5158-458a-a76c-155ef4833ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6356aa-f410-4a38-8672-b32b781233a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33860c9d-5bda-4151-aaa6-267b2cd02f78",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4b9a3b-cc11-4ec3-a2d7-72bda572b8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0206fb80-b43c-4d9b-a831-ba5430833b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bac67a-3118-4862-9bcc-4a06fc50ca0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee352bb6-53fa-4b87-9216-a5dc282eb5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed66441b-6246-4840-aa2c-dd25bf2dc499",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73202a53-c2a0-4fe4-992b-a25440ffc2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7196ef-a4ea-4683-bf0d-8936a0efbaf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d052d323-8809-4d2e-860d-b09ae479075c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf2ee51-f0e0-46fc-a9c0-c94b0e9b1341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea87a2ac-8540-4b0e-82fe-7b1023ca6b73",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c1ce92-c830-4c17-927a-507493401b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b918ad6-6d61-4074-a829-269a655237fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d684754b-2ec3-4f6c-884f-2cf9b8e6c6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7de916-a490-4d26-a982-76ea3da9790c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfb6137-3d2a-4141-a299-8555a3b205d2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb20b8d-e7ba-4b0f-b879-5454c764607b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de139e7-fd05-4f70-8f5a-6e98f8537e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d2c978-9a6a-44e6-a49a-631490994ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e87063-5eb2-4cc9-94a6-efe3061e5cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541a8ac8-6e42-404e-aecb-f6315d2d6af8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5b054a-fea8-4c63-aca0-4f520c6da55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2d5f61-a56a-4939-af50-c81941041335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafc0364-5b69-4f38-ae87-d5c5efd5ba43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "39061708-10c6-49e4-8c30-cd665e208ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e0f5b9-0ca5-4d3a-809f-58f0a05b0f29",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fcd304-f7b4-4e07-b187-fc19864a2165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1801f8-97d1-498a-aadf-392c48f3d59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb010fcb-ae3e-40f3-9305-2a9bfb4512b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "517454cd-4618-43ff-8700-77c54fd504b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd7d132-6237-4601-9b15-cc9defd8ee06",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4941942c-4c2e-471e-8eb0-5baa9ca46e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c7480c-c8fb-4859-8974-ea6bc636fb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6894f03c-6ab8-4df9-8933-d40830902345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a11c7df-69f6-4f2b-bed2-7c870fb16673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcb784f-46e2-48b5-8ed5-579e3fbdd876",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5cd53f-4bc3-47b6-8a1d-8c387cbdd1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799173aa-7473-4e6b-8a00-9bb8d4618b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5499a9ec-54bd-46f7-9902-03b2d579979d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d60938b-c195-44ae-80aa-ceaf0f411c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b113ce4-7fb8-45a9-aad5-84047e8eb7c0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11315a7-d16f-4508-9010-72455f3b9ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d985df-4b50-4eed-9e9c-768d4a19331a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e1314d-0375-4643-8b76-cf276ff0dd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7659e0-63aa-4f09-a6b1-29b76b7f5a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfe6014-7179-47d8-a6b2-4797259b3de4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac9bf59-4790-42af-b24d-97c79a57f95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a77e87-8c1d-49e6-a00c-e29a66ee35fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57aa26fa-6a74-4242-b0ba-628a3a6d3c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7343d6-c9d1-4ae1-9178-74b4cbb301b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0736d6-4649-4192-b356-ea6acd16257b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865142d6-06af-448c-8db3-3901542f6904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c36e8bb-92bb-4f30-bef4-7e80d55ea4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76467da2-852e-47e1-8917-7a26164707c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "10d50b79-9bd6-4833-b4e0-54c01c302afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a35e0a-6dbf-4927-ab88-c414b6121834",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ab2b68-e1b8-417f-95b7-d7e021ea52a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81c5646-5746-4a2f-9e2a-2acb755e4bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54381f79-5a32-4457-b96f-8c2cd9553942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a763b12c-406e-4ac1-8a2d-0201056ce410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d743ed4-4d19-4bf2-ba68-e0cf2a387c86",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e264217-64bc-4775-8fe6-b1c96c844f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6df580a-fa86-42c4-be28-ad5cc2efc219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67481dce-1d50-48d9-ae35-b81e540eb423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "053a2796-a15d-44a9-b18f-5bac3f209c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c80995b-7b64-434c-8d69-ff257b760470",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fccd1ef-0983-42da-9c2d-7ba0bfe75c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad46a776-a5d6-4a36-90ff-6575708f3c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23798524-57f1-4c54-addc-6fd220fe6ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a7be46-29d3-4970-960e-c291a2bd2100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd64d3d2-0cd0-4845-bb5c-9876e338e823",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12845d92-918d-4179-971f-1b7faae61da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fd5afa-b6b0-4fd1-8ffd-8e3ff811badb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5a5633-e736-4502-84c3-227470aad570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e87ca6c5-c830-4bc4-97f5-91afce45bcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5504a0f-5d2a-476c-9315-a78ce6357119",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2baf16-cf0c-4ef6-8dc0-0041f1e087f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c29b40e-dfb4-424b-8a69-e29e92b13c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b6ec93-5217-4ec2-8891-e46cc3a27960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17d04daf-8dc5-4a95-8fe0-4154b7ad073b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e7c707-1d0c-421c-8ba4-2302610f6829",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bff0b2-0be1-488a-a937-b4980f655133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe97727-bf0c-4549-bfc8-251885e2364b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de049806-0786-4f86-98bf-0b688df9eed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39d831ff-d8bd-4c8c-b3c5-b27916c99b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16350de8-c19a-406a-8b98-204df3f49d95",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807be42a-9aff-41be-940e-c3a35672d583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221bd304-6265-4808-b966-eb10904ec357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d72929a-32f6-49e2-a02c-b4a48e49f47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2beeec09-ec63-4e81-a906-bae9de8ec127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b774faa9-400f-4e88-8d93-1caa0e31e34a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e656a9a-8f46-4cf4-827f-ae249b68bda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b482019-c228-4f21-b838-39e651f757da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2c3891-22c6-404a-a767-2d248046da27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "194d422b-5cbb-461e-907e-41322d54fb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5578ec-5535-458e-a378-6fb55569cd7c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e75dde-107e-4e04-9c15-5935eda102ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15dc79d1-a7ae-4a9f-a314-776e70c77663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51811b9c-cac5-458a-afb1-552081885f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15f2f2ec-ccff-4455-bc36-f8dafc9b113f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fafab17-0b08-4a0e-aca0-f6e177f87a73",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1c2d8a-af10-4df8-8907-cd91fe99ddf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86582a3f-0110-4929-911c-7851906d2e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f05726-aa77-4029-aa07-02acefd45c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cac2b39-f5c1-4b50-8985-13b0967e3d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37536080-1d7b-41fe-80aa-6a3bbfd224c4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565ad70a-993e-4bac-b134-44ad7566299e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26219ef-c1f1-4aae-9f6f-07ed5fe6b787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd82874-8f98-4114-9e69-053a4f524389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea378e42-2d79-47af-8fff-ab32d0d352c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104d96e6-a3ea-4ada-97ae-1d13d77cb516",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4bcf7e-391f-4e0e-a362-b74836548a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0749abb-1267-4ef1-a654-3d9a3259af50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8d2c3c-8994-4960-9909-be7dc12881b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea979d7e-ba61-49f5-89de-a77633ca81e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba82321-47e3-4b16-a8a4-d7bb2adc8617",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9f2811-53c9-4bba-b431-c65ac8dab4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9834140-0e0d-42df-a029-2c43cc41a0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d013c7-848c-4137-b8b8-1c2f50832531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a676c59-8d9f-4fe9-9c08-642f9f281247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368e89f0-a71f-4185-8394-22bd37043a0c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ff5b3d-9ab9-4fb3-bb7b-4d450c3e579d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8683b9-3bbe-4f21-a89d-7d84105af51e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa737f93-2bad-4a02-bb44-742b26afa791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dda98834-09e4-4528-8a0a-09d093f8fc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0bca73-1489-49e5-be18-3226e3d1855e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a738578f-141c-4585-a341-61f0d9bf20c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e86282-0367-45f7-9fbe-c3cd696b4820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89d1dae-9068-4ae9-817c-e96e44244d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc068cb-59d0-452b-ab23-a7ce3fbbdb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45968ccd-df30-45b4-9314-699d21609897",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb12ae4-43c1-4cd2-805d-735c6e12fb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a5ab9c-5115-4a0d-9eb2-3255c537d273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d9f5a7-e1e3-4d4d-bbd3-c65f3acb7352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4b0f12-3447-4447-8c3e-25831c403274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23d58f6-026c-484c-bba0-8626206de45c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14958969-ddcd-4722-bfb8-ebb1c136285d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a50e8f-c18d-4d62-afe2-221338028534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4b1c77-7820-42e3-b6df-42ff7ae8a423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c871866-e863-4c59-b1a1-c9ab9d6edde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48468685-ce1e-4414-ae2f-b2d47b09f46d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8032359-cff2-4bf4-b5d8-a471c14e4303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2093a72-790b-48ab-a4d0-7dd230351e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dacbf87-f342-4259-aa79-f2affbea572f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e15ee595-cea5-44fe-adb4-4e42f6533750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41752cfb-a521-417a-81e3-235b4df626cd",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1b39ba-dd44-4f43-a6e1-5337cf3adb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fa8bf8-4315-4e41-9760-229b30224332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaf1f69-d6c8-42ec-9596-3f74b382a948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5453ffdb-6fbb-4eac-8915-80182e84fbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2973840-0daa-44d6-ab8e-63c2808ab95c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fc515c-9c54-4854-996a-629b295d294e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637db565-735a-402f-b832-b703d95991e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b060067-3dbf-40a2-8e23-bab0624d4746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "603fc978-5dc3-405f-909b-c5ceaa94ad9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db97862-7682-4718-a9b5-b92078c28ca4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d00424-7613-40a7-ba56-3d689fb26890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fecc5315-6a46-4920-8b46-640b65c5f27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dab20d-5021-4686-9c26-640a1335c787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd188125-2935-4704-9f53-346673ca6a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992d2153-bea9-4f50-8c58-88b073b7d94b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88b230b-a7bf-44c9-930a-01c44f8dffb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac38319-89f5-4f55-9b0e-2c3235c0c49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112f20a7-437a-43dc-b660-122994026063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "99d19554-4e59-40f8-8bf1-30d2b2201ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3d4c96-c21b-46c1-a41f-a1d695c79c32",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780f75ad-de87-4dd5-9b54-360ed6ec04d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a4a138c2-365f-4181-8acb-f521d2ecd009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888ff637-fdf7-4b5f-8542-6f0ec8f2f671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c474ebc-9fb3-41b4-8939-7857e2bfceed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1140d8d5-9d24-405d-8fd9-1da873767376",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de337e6f-110c-4e20-b83a-49816e85b60c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92563b72-88b8-42fd-83b9-684e7af17727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3e59484-ad90-44d6-9fbe-4f6957e4652e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ce2b54-876b-4f73-a983-3a77ea13cdf3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39f6eb12-a0cd-4b38-81a7-15a347580709"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb7bf7b9-2e51-410d-8211-6ca413e771ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0642538d-f86d-42b5-af08-5e1099c3074c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5978d8f0-2982-40f3-b244-0364ceaaae93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cead7f99-c757-4caa-bb34-1f73167498c8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0c920ed-dad1-42f4-b811-5c9d9896de71",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d03874bf-ce7f-45ef-b537-2dbe0cefda64"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7b5962f3-0c51-48cc-a80a-a40a0ab92768",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a839384c-2664-4f11-bf79-19475875818b"
                }
              }
            ]
          },
          {
            "id": "29203a2d-80b0-4bf6-8295-cdf007f18dda",
            "name": "Positive Testing",
            "item": [
              {
                "id": "46da1d9f-238b-4e18-9b1d-1f870db9e96b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b368d850-cb65-48cb-a4c7-c462d6799421",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6ab17c-19e6-473a-9f15-efed3751d078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "632cff7c-be9c-46a9-9c11-1fca48653de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0d97ff-4e71-47ad-af19-304eb74375e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b4105b-f5c2-4f57-acbb-a33216debf83"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8ae8cbc5-67c8-4e3f-8f54-43f2fd75c5f9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a24f1b36-40bc-4631-ab62-c3b0d7ba687d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f75a36ec-0153-48c9-9dd1-9921888baa58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aca3fd2e-fa0c-460d-a9f6-851df4c286e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "843448ab-a40d-494d-8beb-f5adc0cb6445"
                    }
                  }
                ]
              },
              {
                "id": "9328f70d-7b13-4e43-85a9-c8d5ac2934a6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3435c38-22d5-4f92-8e2d-6f6dc749537d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe2d2c4d-f1b4-47aa-8c22-6a12706ba8dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e353583f-b932-4a29-81ac-e881f2812182",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "749426b1-68e7-43b2-816e-cd1e7702af1f"
                    }
                  }
                ]
              },
              {
                "id": "106b5613-279b-4004-9477-c50c82ab5ed9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4942ccc4-c8dc-4ecb-974f-cf987c25f3cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "994f4a0a-4134-475e-813d-6e3715c7289a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18bd1707-a6fe-488a-a7e0-a57f8c6cbb8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ab7a431-cf2a-46c4-b669-b842964a5900"
                    }
                  }
                ]
              },
              {
                "id": "60ed6bbf-c76d-478e-9b42-332d3b1e7887",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58e75ccf-fd51-4192-b9ba-9f59f9851802",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd029082-492a-4061-b2b1-b246e59cfba5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9c2a331-34c8-41e3-8f1e-873ead66c1fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "587ec145-2abb-430b-b8fb-ffe9b248ee93"
                    }
                  }
                ]
              },
              {
                "id": "c5454fd6-eecd-4517-a848-7c2424cd5613",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f79bc658-0b74-4977-834e-c0cf72734614",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df162f55-b01b-40d3-b634-8b0bf65c22d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c55dfe1-2d06-4750-b145-08828c0fcb9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "11077cea-618f-45ab-8640-23fd3be6b2a0"
                    }
                  }
                ]
              },
              {
                "id": "0ce24a9f-0614-4874-a750-f0dfff03de5c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bce6f22-4435-455b-8346-386010c9d753",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15188c5e-28e7-4b9e-95eb-be0de71cd3fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ac8493d-0599-4703-8631-dd3f7e3a5ae3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "30e149ea-e033-4dc1-a63d-43071703b601"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "16653f32-cbb6-4ff9-87bd-040a0e7921bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3b6c73e4-cadb-46e4-9b5e-9b56d2eafb40"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "992f4b21-49f7-4353-9463-ff8667ace5de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "093db2b1-5bde-4df6-94a5-a168c14ec8b9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f05d917f-ed4e-4fa6-a0c1-a447acdfee86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ccd0604e-f8b0-4e95-aaa0-68fb7d1a0c9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59dc016b-fedd-4198-a162-092e8581d75c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "88144a31-f768-42b3-b145-d560eaa662f2"
            }
          }
        ]
      },
      {
        "id": "6f92d683-ed59-4c4a-97cf-c27d1ffd29bc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4c62a355-0d82-44ba-ae2b-8bfa36b019ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65b32722-2e6a-4a1a-ab97-e1c4b7035b6b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "15db39dd-ce8b-406a-ba0f-c15ad4cc4d07",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a4c40a-050a-4b39-a86f-f57a3baab06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f61af4-2f3c-4f4f-9a70-385071b01c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e17f627-b09e-4d50-88a4-6b6421a91acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "61054acd-8f4a-4cb0-a166-6f696db26612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695ed93c-2206-4542-9c08-86ae9fb4acac",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb46dbf8-e27e-49dc-b9fa-252e6b1ceffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bcc96f-9208-4bd4-8054-78121fe5d4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faee928f-d605-459f-9de3-a12d57886217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f59f08-5f8a-4351-87a7-aceff8498284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79e6263-6bbd-421a-98f3-2130cc1f3473",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca844020-5406-43e5-8601-8daa991ed3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788740d0-cda0-4c00-83c3-4833dbb00c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4709ca-16d1-440b-9d2a-427fb972c4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fda5d13f-2ec7-4617-afea-c97966d1b3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a180959c-b4b4-485c-a99a-8dd50eb286e0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e559600b-19a6-4198-bb7c-5e1832344855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbfcb3f-0648-48ea-b8b0-8024a0cfe32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89325e2-e62e-48d4-a771-6429b5922e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed16ea7-2104-4774-a8d9-f4123af92b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50afed99-428f-44d7-b474-8f157e138d8c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fac8ded-36f1-47e3-b460-c5a38b7fa67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3617167b-20ca-4ca4-b959-9f8866eb6c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc9783e-14c6-4233-81bc-5d6712c2c494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c47e8040-634d-49fd-97e0-a3b18e525fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48565fe8-7d0e-4386-aef2-6158334c9a8d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74da66f9-f76e-4a50-bce1-173d6d092bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83ba24d-f616-40f7-a30a-0e473e1c67c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf94daf7-59b8-4977-bb02-457505c59365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8342740e-5a56-4d47-b999-699debc60970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf617d6-d1a4-4555-9b56-ff274f3ca75e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65933b41-94d5-47a8-a7b5-d57b89c58b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160faf2e-dbdb-4e39-a1ee-ca2039c0edf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e7b86d-faa1-4eba-98f3-a7189acd0d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bba6b00f-6a12-4e2d-8b48-807e4f5547f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87d5733-0d92-4fc8-810b-f0205ceb7da1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba92c4d-ac5b-425b-95f1-18d7e7e4b259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68509539-4d1e-417b-8f89-59591232b513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e196e1-b962-4f74-8a04-00741ab4ec7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4336dab0-a6f7-48da-b2a0-4959161b1da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c061c4-7318-487f-9a35-7b906118db6f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ee7931-964e-4790-a169-374b38603861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f17dd9-44e0-426d-95cb-a3c8a6ca2724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabb7cbb-a089-494b-9fb7-a886892071c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c94032b-3846-4634-9383-2d1c87730d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26dcf6f0-5bb1-4d27-be22-eb5cc339fc85",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad3729e-3862-4f86-8167-beeb0b5ce8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce9aa3f-7ab0-424e-bbca-98697c611386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6371b793-5480-4c73-a4f9-a6c18395e892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3afe75-91f9-49c1-9dc2-2eb982d09ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21858eca-a011-45fb-be39-dd78e6869921",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c242fcc4-bf47-4a58-9a59-885e4f11295f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05151764-92d7-4731-bc69-9d75f3041654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd97cfa-7501-40e2-8be2-6d4a7b5b63fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5217128e-354c-4626-a6a6-9679e80291de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2ac4f2-459f-4bba-9a73-f8ed82019138",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c773f6-6c75-4f6f-adc6-6ae62c0cae9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6db8296-10df-4ad4-9884-99428b277591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a640ff-a126-4936-8d9b-233584f69fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77b1d066-ae6a-4c70-a2ef-caae5a04559f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd4759b-0fed-4e34-8ec3-d130c704a9bd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91d7878-4ae4-40ca-8a8c-6cc5a96ea1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcdaa4af-cf30-4c96-8134-25c75f3ec3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e2fd15-4f89-441c-8643-e238d8b826b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5efc70d5-31c4-4f74-b863-5591cdb458bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed029e7-386c-438b-b6d3-7d8c7dc20acc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcf7437-d630-41b7-809c-f4c01cd700f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4913821-e91f-4e93-9af0-5160a6886fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9691ae9-a541-424d-8ea1-51c4b005c2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "94137f9c-d113-4056-bccb-46e17c77d7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d30a5b-cf2c-4adc-9d9f-61a5cf7c3772",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e631959a-79a8-4ffd-a49b-753ab13d93fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ee4f7e-e0d5-4b7a-a5af-8503a616d9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452f9bae-6709-4fa1-af01-ee18ab8af54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "652db4d9-3d6f-4317-b60c-10c30ce1c8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb38678-88c2-4d48-b7e8-e525246b3a88",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7e4ca0-e8b0-43c9-a0f0-8a7983bb2595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004cc892-ee9f-448c-a10e-5d52d1cecd14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bc728e-9872-436f-bf7f-9d7c2c788995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "75cb9fa0-20d1-4bb4-801d-1e73bd4b048e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671d6f04-e51a-4526-86f8-d844132290b2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6591e9-1cff-4477-8939-e94a81ea465d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e05f90-538a-4802-989d-1c92fb5091c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5ecfe2-c7be-4b34-977d-f6b0ba407e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a76aa0-f0c0-49b2-9c46-a3896888f339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c752eb7-e119-40f3-926a-85cdb9657040",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7680643d-fad3-47e3-b0dd-27cd76a6ea35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c049387-f2ed-4122-9669-5afe1e62b5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbf3453-f5d4-4c18-8537-3260ac8ca8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5f68f4-d220-488a-8cf6-2a660b3f808b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cfd130-3f23-4625-9265-3ea599debebb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f6d027-38cd-463d-90d7-e66700e44db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c6ffa4-a170-4e55-944e-b42979a98e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c806f5a-11dc-45a0-8838-682c04ef9483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c262bfa1-48cb-4695-b327-25691be33b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcf453f-f987-4d68-a712-b25b369a5f02",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c788b83-a8f5-40b2-8631-0b03a64f731a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6b0e8f-a26f-4134-bab6-6936ae0c8b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcde40c7-84ac-439d-8721-93868f3aa4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e82fc07-1c03-43d3-b630-2f01cfba72b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db291dd1-db3a-4918-b464-fddb7fbac8e8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53b60f0-f101-483b-b019-87264ac9ab17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e887e65a-18c0-47cb-b54a-84bbe029d2bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896bd509-2085-4b1c-95e4-9577695e4918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66ac3a4b-b55d-4467-bf60-533c365f9f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8562b6c-0550-47f7-a654-7d8c9d2c8442",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03b5ddf-c88f-4880-a3d2-06bfe27bab26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c92a032-c7cc-426c-bb1d-701374a4620a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f909d4-449f-4132-8418-34710c9beb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "953d6c44-90b1-424d-adc2-18c10b280f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b746d715-f1d8-48a0-b800-9e9ab30543a2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b7836e-1136-4e9a-a2c6-c4c61716b282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31179b80-67d1-4a89-8fad-73297702523b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d0ad6c-a322-4c44-9fb2-a3b6e2534539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "135a0a65-c59d-405b-9bad-7981a3dd151e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5394a0-9a6a-4ca1-9837-0e339016cda0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d693207-dae8-4c53-8975-393a96a89f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de77850-c043-4feb-b5f0-02a79ba63a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698a4a5f-1e83-41ff-9945-3a3e31e68be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6b7e89-4413-42b7-b06a-0018a55cce1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9202a1-ddc5-4e61-ad04-875bf427153b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb846a4c-4cdc-4d63-a1bf-d1bb27a16759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925688a8-8aa9-46d3-b32e-edb7785f6243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdfd18b-fc9a-4a4b-97ea-ba28af248c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "967638c0-e33d-49db-9651-18cc92a67e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0968a6-b066-4472-af39-02bb430aa1f0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b375c6-95bf-4cb3-b582-7a69ba46edbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6acd6a1-b96e-467a-8409-0ccbea2d0ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ba5732-ff16-4e02-929d-d513673b27e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86a006f0-4232-4b8d-a96a-155bc4a04f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a5a867-eb2b-4072-ba68-4d6e8dbf5de3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f11c57-314a-4f40-b22c-b266f41a61c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba6e1bf-11d9-40bb-8ba1-15bc11f08344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a114042-bbfa-4d18-b36f-46f7604cc8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "714c9e4b-644a-4281-86a8-b009eac5de3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21a61c1-9f36-4e06-b7fd-60b24fd3a8b5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bd88ac-291c-43f3-a3f8-c177b93c5b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e5cf2e-7986-43b1-b9dc-e0a95682f74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4728742-30c8-4faf-a4ca-2b9a0b654a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12acce41-46f3-490c-b0ca-0de0b326c60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609898d0-c4c3-43c3-a9f3-d51a934e3faf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bd1818-eb35-450b-9ec0-5656cad188bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1b5c9b-b028-4f1b-a604-094c1665abc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc2d223-b4c5-4ee0-a7b4-6aa6903389ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9abba551-0aab-4d57-99d7-466a863cbf99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26a3f4b-8847-4386-84b8-7c48e55a695b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986ffa42-13d8-4392-817a-6db575f8353d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d531f7-979f-4dd0-9be4-b9b74aeded08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63949c8-d031-4f63-9d4f-9990d6bd96e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1338dd7a-daaf-40ee-977f-8beef4d70ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff63f2b1-504a-4a5d-bfdc-f40ee25ccd9f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6664ed75-cd4d-4b28-aae6-64d881fd495b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3225779c-2e26-4dfc-9fb4-3e1308a98af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77804dc8-19ab-4bc3-88b9-df4fedfd2036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74cac78b-8938-49a1-8b25-e01823b1fa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df898ba6-120a-4499-ac64-233b83f5b7b5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b5889c-13f5-47ce-a742-5150f4ec2970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207eea47-4c07-4c5f-861b-93d5fa51403e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea79b0c3-5432-4413-9a6d-5e5b7eb4d771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccecc0b-069e-4c21-830f-cbbea24a00d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "636eb730-9c5a-4705-8bc6-4170855d6a2d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50a0317d-bf9d-4793-9792-c6319acd7947",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ee137d-ebb9-4f0d-9ef2-7c5d46824162",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bea2db78-c163-4f75-a9d6-97edbf4e4f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadf973c-c003-4d63-acff-e71a16223e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbe2f96c-6b32-4079-a5fe-3de81584c66a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26123d22-f336-4c32-80f6-93df8f3e12f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6f2a5b5-3f51-434b-a52b-05e71702f2ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3963b77-1810-4719-9253-a5ceae3b666a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14ca2b7b-d6bb-4172-b760-f15dc94dc003"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e72d78e3-5eab-4c4c-bad7-927b4eafdf25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b1d732e8-c61c-472e-8b5f-bf1cb875a75a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a8ad07c-079b-4858-b3e0-735fc9ace318",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de666e49-836a-42c2-a9f4-07d5e69fc342"
            }
          }
        ]
      },
      {
        "id": "b90c152c-4cde-4ec2-9b1a-8f7f3e343b8a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ce1e1119-00f5-49ad-95ad-cf0608e1bcad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac505462-b1f5-4d6c-b946-77ff7b052a23",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fc10c1d4-b4d3-40cb-b3e6-2813cd813875",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06478a58-ad18-499b-9191-5ba68ed1a4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4df3cb-3302-4af6-adfe-258664ad4b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549ecba8-7ff2-4665-9d62-e01b42aaa1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5bd5f3c-9dfc-4201-ad6e-75c5f1414c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b16787-f407-492c-8f95-de26df29d642",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2638dce1-20d0-4ed5-a26f-945c2787ce9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb4cab3-4ebd-4c8c-8f47-97862415a092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7026e5fc-0f14-416a-a278-cbe8e0eb0082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "72621883-96b1-423b-a96d-a8217745634e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f713d6-afa4-45e4-b9f7-fa5b8b73abc8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db94f1cd-8252-4b50-8adb-aef219ce30b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3dc510-952c-4105-9cc2-263e93ba007d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3ed015-6f0c-44b8-b70e-6ca8fb980508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9166eed-a235-442f-b42b-540d5ef58aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcee6fd2-629a-40dd-b0d6-2db875a5de32",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afca2d3c-fe56-4976-8857-75da594ec20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5ba8c1-227f-4373-b86e-5fd04cf27bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18af417-8e16-4c04-8832-d6a2a92e4767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58e45201-7488-4274-a053-dee2eac355fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc47d1ca-e659-4732-84c8-1845facac7fe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31053fb-bf21-41e4-b662-6c4d5204d900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6d7eb1-657f-49de-9891-d571b9e3b23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccb7753-ece3-43f5-9e68-2260b7bb817a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ed6d62-2c86-4a48-8928-7e9d1fd162f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddcbc16-2f2e-4192-8def-07c6cb170e08",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03eb1d9-2758-49e4-a666-6a2ef5f95b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb91c1b1-2613-4bc1-8364-e952beeba7ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4bc030-89b8-4bac-a682-20f50170ab5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff69bda-3448-4442-ada8-c01d198ea992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f42622-bf30-4d5b-bf05-09ae6d0d656b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e7312a-755f-4292-9560-2e71e9c81655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca49c42-d980-4ebf-b233-b98bf127e8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879d5f63-b996-4b14-8bbd-6b5b1a57db21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "57470cdc-f34a-458d-9f58-e8d8a0c3d7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da59261-cfb8-4bf5-abe6-609699706ccc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee160cc-9b99-4aa6-85b8-a55469d6d656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa17f830-65fb-4b50-a6b6-06869425d149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ca528d-9cce-4ecb-afe6-58376235ab6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f216993d-03fd-4520-8162-1f40edf6501b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5165c3a-78f0-47e8-abb1-8368cc294ec3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254685e7-1627-42f5-b507-234fe0cc5301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3129456f-127f-4f8c-ae20-5572d860c937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01076190-4a30-4451-9867-a67e5952e359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70fe8d72-8527-45da-b2a3-e1ae9ee6b38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226794bc-c5fe-469a-adf5-1369208c8b2e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b20dde2-943e-42ed-b07c-0924941f99bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ddcbb3-d31d-47e8-8cf2-f6f0e4a94326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9f11ad-895a-4078-a1b9-1cf4377caa6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f063608-3749-42f0-adb4-5ba67c3595e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b668643-6067-44d8-aff5-aff05385ee6a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044e2413-e2fc-4757-82f4-f1a52f01ed02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49dd851-e842-42ba-afff-e2a904226a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a3b891-af44-4f2f-acb9-f9a955a902e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f6889083-4c82-43cb-9ea9-fe1a3dde995c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a640ebb4-2ddb-418d-bcc3-1c6c102b3052",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76459740-d47c-4411-8b58-80d853243219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56555987-44cb-4023-b17a-76977588c671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06047aaf-ffd7-4ac7-80a6-b2eea09fff35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "688bcdf2-6b92-481d-a28d-2e0cb8136b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab4bcc2-4d5a-4a12-a06a-1bb999fea12e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa25226e-3201-4552-ab12-a5ba6a900fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c6c28f-4d1d-4d78-90b4-b921842db0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea191ef-6a6a-4101-ab45-893d41209067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d48d29e0-f65f-4ea2-b061-f316760bb75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92778e7-a516-4b4b-ab17-d5fd440b79e5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fdfc22-6bac-47f1-a92d-9a9bbf7fe776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7da946d-3e19-4f70-8d14-2958e21d1a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496d743c-bc8f-4f7d-9ab4-b565386684d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d55f20f-d6de-444e-b0f1-ad39f82af7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fd2d0d-247d-49b3-922d-77b66a98521b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df72fd99-cc37-425e-a61f-59cd93a83ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2521c89e-dd34-426c-9a7f-f870d40fe431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1b6cc5-bf00-4b90-ba58-2e793be5f64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a71e72-9bd0-45d3-9e33-cb63a9b15938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab3dea5-3bd9-4c08-93d1-d39c37b8fa9a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9132980c-4051-41ae-a577-4d36edbea5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5e841b-457f-4adc-869b-de46ffd7e604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2392f906-1e4a-42e8-a108-946706609ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "02bf5970-c686-42dd-9c22-5f7ace364aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464ac930-28f4-4ee1-b447-201316c41618",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489878b6-203b-444d-8ba5-4cc46bcdb2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27cd4f97-9358-46d2-b8d4-ebf29fa0a51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82be5c87-4900-4d7c-87d9-568e54488351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a69f73b5-c456-4cbb-b3c4-f09469bc5b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddff1ef-86bd-4790-b238-3eb5d671b0d7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f0d92d-c308-4819-bfaa-204508ceda80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ba0ac9-2008-41fe-9f0a-9287442c354a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b237138-e881-475a-9d1b-fd8e700e246d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac9b895-5dc6-4d1c-a676-7e89b9dd0af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ad15b3-a2e9-48d2-afd4-0dae1c625b7b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcae3e6f-f4cf-4e26-9c95-e750c990a325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b90b07f-408e-476e-ae24-41b36af65cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3867509-fc8d-48dc-9a99-6eac1b82821e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2be21ad6-28c3-4b64-ad56-be831cae77fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febb22fa-20d6-4e07-b12c-954fd5a9e08a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5d6882-3829-486d-960e-2e7cd1c4ccea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69cfe065-67cf-4be5-b84a-0925dd5ab0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b331e1d-bf27-4b1b-bb6e-53201a86dfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5989095c-392f-41f9-9d29-da11ce222d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e95de9-3516-41ab-bb67-8885ef05c639",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cc9759-e686-401c-b274-a7fd2148c52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433aed3f-df24-4eb5-968e-48931c0fdde1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceec4b62-53d5-4989-a9ec-e8b9fd9ff91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59425d13-9ecf-4fd4-b9c0-d664416f57d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151f3214-d6e5-4f1a-bea1-e732adec692b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7864e953-965d-4d72-9035-43c6e5c058b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba63d446-acf2-4993-bb04-08b2f5a43a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a730dc65-ca22-472e-9ee0-ab43cd2dfc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1a6066-f42c-4772-b95e-0ecc0007b269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65eea94c-c008-438e-91c2-fb5474c7cf3d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cca6495-0f1e-425d-b654-da0814287966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccef7f1-2716-4c6a-9394-f298d65b2712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926f14f8-239d-4ef2-b768-e536e96b7fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3629c9c-ca32-426a-a5e3-923d56e20319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b503f7a6-a5fe-436b-9063-9a5e97d4e709",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dded90bc-d9e2-4d44-add1-83dc75f8d388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d46da80-2691-4a41-a43f-8646ce583211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb513a06-e0f2-4a54-ba64-fcb8d716dc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c31f44e-8a3a-4d48-a9ca-1fb480f05c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3e2edc-7d80-4e0d-a8ee-b2566fd5eaa6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2309f5e8-9211-4d84-be72-8b74fd261fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb669587-b673-473d-a584-ae208db71d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771c06b6-764a-4ff5-965f-fab9b5aa0245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b561471b-3733-4ec6-8ab4-348dca17dd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a812c682-4d16-4e9d-9016-f53a4be6f4cd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65e363e-6054-4e50-8f8f-a1f6aeee270f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fd5b71-e47e-414d-906a-1d4933ad790c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffb2305-5969-4fc4-9877-31a34d3e53c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "def1945f-d5b5-4d36-88e9-f1e40032bddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4211f44-0318-4e78-8e5d-ebeb9279fed0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37f6e1f-b172-4062-a363-59fc17da3006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362baaa7-4bc8-46d1-b831-4d0cdfde3ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f483b4-e687-4860-acfc-b7df2a48ed21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0673b3a0-e6b6-47e2-b46f-60c6a9856be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e08afb-512d-4093-bccf-29deb1ba9c96",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401eef7c-e496-49af-b2d8-e3bb27c3dbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d3266b-8945-49d0-a40c-80e073620394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291aae15-b2c3-4020-b7a8-d1c3c5c78631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02172165-d9e8-4981-b735-5ce5f6d0b9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363823b9-0711-46e5-842b-e9c37a3d597d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20ab294-81c3-4d1a-b765-f3fea50b61ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66da5767-5691-415f-a2cb-edd9c441a9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ae899e-c478-46e4-9a67-186eca9e046e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c466b6a-771b-409d-a48f-82a0d2948443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd071b9-caed-4ef6-9b50-11675a0091d7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbdeea4-b01a-4053-93b2-19df3656bcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70773dec-3b51-4aa6-8974-a5e5044f67dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57344c71-b745-4cfd-8da4-3f463116742d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeea7537-5ea6-457c-8a1f-982d35b58ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c781e4ff-3b2a-478c-bf1b-bb4fa3259a25",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffc96e4-aa7e-4bec-99b8-ce44a48227d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5125586-08c8-4d56-8ec1-fc8ede227887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ec3e18-c0c6-4fa3-a5ba-77e7043a1dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6ccfe0-0d6f-4d91-a4ab-2a74ce6f91ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5f1740-39e7-4aae-b080-d9e07439fa02",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1820beda-e2c0-4361-8d62-5431c3ee61c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908d3fad-6cb3-4dff-8506-8deb0a697bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc45d3a-62d6-48c1-9306-f1b622c49f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60ecce14-95f5-4357-abbb-00aaa5e7e542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44beb50c-1f17-4b2c-b066-ddc728fae906",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdf985f-e773-4672-9320-67ef51ba6043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4222e62-1e11-44eb-a4ed-512e300fc136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580f9b73-995a-4e8c-8a6c-4358f0695076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd67d07-5ed4-46c1-be62-9c8b2a23ef60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cd8543-08f8-40bb-bbbb-5d331ec08578",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52870a72-e800-409a-ac15-dc58fc4efc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181d3c77-8e25-4a91-bcc1-f5d16ea53e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675fc036-47fb-4e91-b4d9-8464f64df9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75dee509-ebc2-4720-aae2-9c4df5c8371f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7e1496-f7e9-4b12-9594-44bde469350d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425cff98-9758-4b32-9f4d-9f4960094ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4474e2cc-d402-4f74-9e02-6dd89fd26e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d3ae69-aea5-440a-b55f-0a2afdbac967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65f5ff33-b44e-47c7-b41e-c80616f27f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9652ca71-4c0c-435a-a9d3-a26a109f2b2e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41abd9f3-8ef0-4296-b587-03402c4c2d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700c08fa-5c7c-455a-aa1a-651f7cddc2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4849626-c034-4346-90cb-9a8d868203d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "587264b5-136c-401d-be88-d63b616de80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc388e3-27c7-4e97-ab10-7cb8a276f8ea",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16af01fe-3ca2-4717-99df-1770e487186f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51705808-49f2-45e9-b102-f563cdaf4259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b947f5-744e-4840-a57a-14fd1aa7dae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9368a94-4365-447e-b6f8-6f7fe12fcee9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df3ad152-7953-4dfd-9255-7bdea8890708",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05bbca68-4913-42ee-ae8c-7807b2a4dfaf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dd827e-7b63-4702-8e4f-07707de54cc4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa381e5-73ed-4705-af8c-1f6a42e7a1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af674ea5-a046-4a89-9451-010a10e40612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6940e3f4-f6ce-46a1-95ae-553624754b98"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80a5947f-e459-4301-a823-8499f436933a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1891bc99-ff93-4020-a7ee-c9dec5937e2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a1e34c2-8f9c-4e16-b98d-a19bcf5ef61c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e826ff74-5478-428c-9cb7-b0f50b0e48e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d54e2ed0-31eb-4271-adb7-ef7fcdf134b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1f3bd979-de6e-4063-8eb5-074bf0e79ae9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28f0b245-fc40-4d93-be28-4536559f330c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f6aa310-1379-4ed1-8b31-7ef97fc981bb"
            }
          }
        ]
      },
      {
        "id": "589b9f48-8367-4ece-9d05-e50a88079f9c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "78cf717c-53af-4396-86eb-e2ee585b7361",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13ef7a73-70a3-4cdc-a3bc-be6e5d7d2dd7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b9a2a6fd-aba3-4f19-94ad-690631c8417c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766dc4eb-3d1a-466f-962f-97661f659fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c49bae-bf7a-4ca6-bd56-02192c24b287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37081ce7-07fc-45d7-af85-52aec3ad8130",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fa9cb1-ec24-4e08-b2c5-b89664a3b97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bbbee4-37e3-4dca-a397-aef0c8469787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd942a1b-351c-4d93-8f01-5be277c104b8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4e7cea-801a-4660-b5cd-54337ebd0efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea08f6c7-6f4d-402b-a34e-ca1dbbe4a030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6959191-2be3-4e80-b2c7-1890869d5d28",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f787093-1e18-4ecd-9060-a7032dfb2203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abccf6d-300d-42cf-aa6d-1c68ce2447e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa7b0ef-69d2-4ff4-8532-c62ff06e189f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd539457-cf3a-4e28-8343-babe779adf43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1927df5-e6e6-46f6-a588-ab0911112cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a86fc1-d6a6-448e-983e-dec16e171053",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810c97df-b91d-4de6-be95-53d0ae8c9311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd7c773-30f2-423f-9b9d-bd5a24652466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cb8706-7667-4333-951a-24596021d955",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2b445a-999b-448e-a662-827665073036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c2154d-3477-4364-97a9-9358a07fd561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a951242a-4bf9-4003-8bfa-1d712261de62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423543e1-9b78-4975-bd1b-ad27e14f37e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4680897-4815-4760-93bb-2c51d878702c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c2527d-bec3-47a6-a43a-9d5cbbbb366c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37242573-af25-432b-94b6-a7ffe2d58b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6906c6-deaf-4cc1-aed4-c572944b63e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0502985e-79a2-47c0-a119-af9aa1c9ca41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df8594c-60e5-444f-a58f-f29d74402e64",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7f4a76-a2c7-46b3-9c12-6a1009aaace3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47f5adc7-a33d-422f-85cc-3c9a839d5784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79ce335-e125-455c-a2f3-ef7d267fed46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed878c3b-4b4f-4ba4-bdd3-ae7851bbb26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1206b14e-d4a6-4c1e-909a-3645556a7604",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5432a44-56af-438c-b8e6-08651cefbcd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85ed6a08-949c-4a3e-8d81-87d9298c8594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd801e5-fef9-4986-813f-74a85f8d6ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623acf1f-8350-4b22-9596-c4b235d5f5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a15f569-1492-4934-9761-b12cfa30facc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9c7415-ae0a-4fb3-a538-8d6271a4d0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e02b392-85be-4d8e-91a5-6a9474186f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "680d7277-89eb-4d8a-885b-3cbdd99d1918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174d92a8-b360-4d5b-a9d4-af68e96cc4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08fcff6-aca1-40fa-8ca2-b015c3b9069b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6644bc7d-aa31-454a-8ef4-228e425a0496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d244d82-b275-4415-93e4-80d1351036c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e41920-5022-4e3d-bbc6-da7a98b667c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77658cda-5eef-49c4-9f3e-a83615828bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d87354-70fb-4748-b365-e2b495654640",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9aa8e52-4319-4b77-a6b1-a712bf84aa5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4869e291-e580-4e60-b017-8b0f01dd4b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b382e68a-26a1-4f7c-ad3f-0a73b017e299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d1b71c-e3ad-45e6-b1c8-12f07e472e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d70e331-fa3d-44c5-a298-e42a68d3c7ea",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6201f6c9-13c8-486d-a9ee-d323edef2463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d3dd7cd-fb23-4f64-aa72-92518e326427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0214acde-7c2e-48c8-b31e-bbccc3b4993f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2c5dc8-d202-4b09-a663-cd2fc77484b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253ca9a4-1e4c-4c2d-9855-df7ec6e8bed5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe5ff5a-603a-4ffb-936f-e3222bc0857d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2933d3bd-d6db-41c1-885f-594710fe858c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b993d05-3ac2-4d29-9435-3813320c8cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6753e81-d799-48cb-94f1-ecca9b44934f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee6011b-f5c5-4459-a4e4-25ffd4799695",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2303ee51-318a-40a9-a63b-3aab68db4795",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c53a2205-1f59-4b7e-992c-6f9099ff8322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036617cf-67d5-4f93-b89d-412ae7ec92ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71274aa-a0c7-4c33-89ac-658faeb4ed20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa21e16d-dbf1-460b-a554-224a08d8505b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7194021-1fb7-4847-800a-949578aaff94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed5cd90-bf82-42ce-9203-244176d6fc14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d017663-5a92-412f-8551-e3300b8a803f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1864d70a-ac52-40cc-a628-ccc21c5ab3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc7d657-9d04-41a7-a926-eb656e6b45ad",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c4f24c-84e5-40ae-8fa2-a7d18d6d9c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f726a7de-f60a-4462-b4b8-daee3ed02ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e66a71-e460-4102-906f-6294f7df28eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6672d4-d6be-4416-896e-70b5515b58d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437b37de-7843-4a1c-b83a-1cd417ce0847",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c7c630-cb59-4e56-bd1e-d47fef997df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e98921-1f40-49ff-a66d-53adb5de24e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2affe5d9-9f65-4956-8ca2-e8469770dbfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a90c39-72ef-4970-8c2b-3eef2a890ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28104f6b-5024-4a6f-9087-8764227f193d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b72688-006c-4e3f-ac07-05c9fa34a713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2d43a1-8742-4849-ba3a-fd1281e503a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2e78f5-6d09-4b9a-bea8-3e48bc4166c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29100609-e0d8-4453-af0c-1176b3b8b99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6ae44d-015f-4496-a315-83009d514c05",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5749e61-7e3f-4241-a111-8f68dee5f30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787f09ab-cc3a-43f8-91ea-15e1a748891b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdf7441-7f33-4081-bcd2-3ee4341105a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0066aad-cb58-4818-8d8c-749db8a94f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45df2be2-4aee-4326-a967-dfd410c62216",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28463d4b-2ff8-4a31-b7d4-bdabb9f111a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c69b2e9-4655-4f93-988e-3c65b704abab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb6e812-8839-43c7-a038-9f8d45adc846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afdaf8f4-0e39-4051-9e4d-06503e57cc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d91db00-cec6-4f5e-8a67-85e2f1363dec",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd61d737-e585-40d0-816a-74f6f6a252aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43c6a46-6ace-4f75-a2e9-32aba17dfc45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf319981-7a0c-4e80-b778-f2b0a0eecc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2c2730-612d-4701-b1cb-6d85ad3cdd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de29ccd-2c80-492e-a531-a27223e77257",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7337ce37-ab32-473e-9c5e-34515615aa82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6d343e9-59fe-474c-8386-ee08ed6bcfa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c929c14-11a8-4bb4-b04a-2e1cd542eb4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efddd15d-a58a-4f95-b9aa-bab16703e2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92fa04c-8eef-4caf-a487-d72401809aa0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dc55f8-c1e6-4aa4-aee0-795f0dfb2f74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2873d861-13f2-4736-8a34-14052941e4d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840d9352-944b-4803-9191-c1c82f346e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cda3dce-6838-4fef-9ddd-8670645e7a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfad4cfa-c1e9-4577-9a53-c855f15b3566",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a45dea1-7b47-453d-85c1-618daa50be02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43417b74-a90e-44c9-956c-5a9e20edd8c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9c0a54-c89a-4ef3-87ef-cf6462af1707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871c327c-2272-4ecf-abf7-a45558eaae78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfcd0a8-0243-4a97-9da1-09ef33d4f3ab",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f0c47d-4079-4359-955d-cea232bb5bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a5b6b6-f1b2-49e1-bfa3-5b751a809189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a4269b-690a-4cb1-b6e6-2ed7e4b4c5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342b934e-a7f7-45c5-bf96-d0cd9f1e8ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbae2db0-463a-4512-a282-ae456ff7d007",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79da3305-6b3a-4864-a9a1-9738818a3188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3c6022-ed4a-4b5a-8497-98d92ed057a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a275c43e-0430-40e8-89f7-b72740240683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c502b99-dc14-4630-bb53-9c704189012d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2758295-062e-406a-bfd2-d37d6697e23c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875da803-8190-4cba-ae84-db929beb271d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a75313de-4c84-4c33-879f-83a8a93bb35a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93971c6b-9e34-4eed-9f46-9ae25099bb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d7ca68-8f40-4801-9193-37f3685e7ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b86fc8b-b8fe-446e-91a2-4a4ed65cfe23",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82849af5-6abc-48b1-9b44-61d84a15ff53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "351b3303-a528-4a05-a8fb-eabab778d463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e5a717-d773-443e-8a5b-daddf62636f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a70cf49-da87-4074-b2da-2a8f5e4a9f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4209485-b9fb-42c9-91d5-f47ffb3003fd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee194c5-32d8-45ca-ba6f-9e403a76b3aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82feb6cd-96b4-41f4-8111-9b7853559be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e4f0d3-4f18-42b6-942e-99d63103673a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049a7129-6fc9-4133-9d22-4c2c06be52da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d58c07d-bf87-4897-a4cd-d2e22eb3b4a8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82334026-3226-447b-9a79-046d0e8639fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d564d4d-664e-470d-812a-eecf3968fb89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c24510e-f38a-491d-b1f3-b9b7167051e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e2117b-6824-47ae-a88b-792eb2d31d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4b69a6-68a2-491d-bd03-47fb9acb0827",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cf3fdd-1ad5-4408-a123-9ed639d442a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2b303c5-f264-4e62-b1f6-1969db626337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f88e34-a328-4057-a6e4-afdf5242f830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784e9ea6-2944-4c63-8c64-4a6548aef763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c270628-b455-49ff-a749-e275e81c6c69",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6b3527-25de-46b6-926f-c6ccb999df46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36a57b1f-dbd1-4156-a52c-f54efac7cfd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33565e9-a603-44b8-95aa-0bb9af1822c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b17fef7-9ad7-46c2-9986-b137c28da7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdedc5da-7838-4923-b869-1c774071ebb6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce49e7bd-9164-4148-9b30-16445c89b5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a5d5d1-015e-4c2e-871b-b375dc89c329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2323d6e7-cb3a-4777-81b1-b79e2257ea2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1756bccf-c11b-402a-803d-9a1e37378619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2365b012-3438-49d1-9c93-39bd377e3dce",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f78abf-6074-4ed0-92c6-bf8c0b09ee00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50861997-064c-4b5e-bc51-c60c360b1990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284ad7b4-7b88-478e-a17a-90d09aa212cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435d18a7-72a6-41e8-93a1-88f4d3af46e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f49047-cd36-41bd-b37a-6a1ecae7c9f4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33363453-a6be-470c-a98f-9fc2bf623b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bff5a2-a063-4cf4-98b3-857a9fcdd34a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdfef20-778e-4f61-8e48-e07421362daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6223c290-80a4-4402-8cc4-23df58dc794c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dfb2e8-b123-42b5-9243-71e7576a0fb9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9189fd2b-328e-4d9f-a3fd-e328c2e53d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4fc4e12-526c-445d-92b3-2782cd3a1419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe170b0-e848-4b01-a57d-3ec4e4509982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79556bdf-cad4-4fa4-ba14-975a311eee59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdf04f8-9839-44e9-98e0-d333710f8c1e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6526ce-f0bb-4bc5-9e30-afcc089f9f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f55eae-e3fe-4f1b-9227-7e24797adb15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33adfde3-7a3d-451c-8496-ba66592da376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5457e02f-51f0-43f6-9eb8-ea1a923f4c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d013dc-3e8b-4dc8-abd1-ef4067946217",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cd806e-dd7e-4b7a-86f7-0d33176aae1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0e18d0-affb-4c57-84bd-a49604bec9bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d76d1ba-0d75-410b-ab4d-1dc4a31c1a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75efc4e8-5b1b-465b-b975-3b9d706b159d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ac9a5c-ed08-4e6d-aafa-d20d73f6e285",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0fdd05-7a08-4e35-afe8-082d348abe6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf3be57-848e-4bcb-abd8-2e03a88b2e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d07d54-aaae-4685-a7a4-cc61d7ba0b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156fe091-6b47-49e8-8005-0973bfaed07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68879a13-ad8f-444f-bf27-533c89a1d0b3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf6fb70-d78e-4862-bbbd-e88d23c20c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4c813a-05ca-415f-b17e-13e6bded72dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcad581-d1aa-41b2-a7e8-b9f599f217af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6e95bd-971b-46f4-8172-6be717dd7f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa353c8-1869-4e4f-a88f-2fa0f05ba328",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152d6936-3a3c-4cf7-a3f9-bc744f23d395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa0eed6-f1e2-4286-8983-55af018f50a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2cc7b3-06b6-43e5-87eb-9b014087657d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6f3c08-75c0-4b90-9410-4ec461695cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce9d05c-e673-49be-aa0d-5d4bf24fa7ab",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c289583a-a113-4466-8f5a-24cd3647dd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ce8e76-57c5-4de5-99a6-f429057383e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0f5560-3564-4664-b933-cf9e6a5bb3ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a19358-ea9c-4cf2-b1fc-2195371509ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dc0df4-9929-4f9e-96b1-b1cdbd31deda",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a91829-db09-4efa-b71f-75025e779bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30b0aa2-0e96-4b1e-98a0-a71b669c34f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1ffd9d-280d-438d-841f-d761b4387449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f02daa2-a646-4d54-bc8f-47f63c17c33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2819801-c701-4246-8ee3-2770cd544966",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f4df07-0747-41a4-9a2f-bb4be606755f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26b2a9f-1067-4ad2-9451-19d2e0b11d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1b2c07-6ece-408b-91fd-09de5783ba5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08edcda4-9b2c-4ff1-a4c4-691ec13a7e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83484ac0-eab7-44ba-b49a-786a6159d114",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e0e057-252b-412d-9965-6cf2264b66e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67bf6454-51a2-4f0c-b1bb-88d2a320e6db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc743de-7e57-42f1-a563-dfdcebf991da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b86c70e-d4c1-4172-98cb-8c7ad9c9489b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447ec386-4a83-4bdd-8019-b00b99ac6bf7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b2759b-f360-4ab9-82eb-5dd478eba6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bdaee28-7a5a-4d7a-83b7-97569ccb39a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70570b5-eb15-44bd-9620-9d075042842e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d624798-e6e5-4cb4-896e-3a02f194ee3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19468ec-2085-4f51-8e13-1b6f15daab0d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cd7351-c9be-4d09-b7ec-a98a827c1427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0ca081-b595-41db-a608-a9ce69219ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5a5faf-40f4-4845-88a2-0667f9bc9f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a5b8ff-f8f5-4410-b5a8-8756b2a7054b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b332e49-1f10-432c-bcb5-4503affea5e3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc30421a-10cc-4d62-bff6-acf8efc306ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0ac459-12b9-4e95-847a-31a1d3542b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd73522a-bd94-4169-9797-f143557d0028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ff068e-b6ae-4da1-9f6d-803bbb0b7881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ed5cbf-dd98-4e9c-ba2f-35a31b4698ec",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d23db1-3468-4bdd-9309-634bfb51722e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1893e2f2-c472-4822-93f4-3b961b92d1bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b09f4f-8529-4bf3-b768-e7af8bc4e848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b2290c-c989-46a0-b723-b1f7a70b164b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49726c3e-5ad0-4ac1-b256-145afdf377a0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc46e9a-f41d-4f2b-80a5-72b7b72df801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8f81e5-5b4c-4bc4-a8cc-aacdbaeb38c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "496fdfd9-1b3c-456f-a08b-72472f15050b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead23f7a-7f62-450b-a659-cd4ce391d81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a01f79-deda-4b1b-b091-d68b7f0a47b8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f636a584-b564-457c-b774-598c0f8abe99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef54bda-00e5-476b-8e52-c04f7a193be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a33e10-a976-4643-874e-1214a22d613b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0794c9-ccdf-4823-8c47-d7c8cfff6e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f76fa1-335b-43c2-9883-c44c6cec0a53",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd62b7d-4ea5-4e16-98df-642a3d10f8a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725dd9c2-33e3-4946-b0cc-0ca21d63ab75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "140f979b-75a7-4a8f-9c45-922f3482af3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9f049c-170f-446c-ba33-7847063ab057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23692d60-142f-42bf-9a86-d2a6dff8efb3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67865abe-9154-4e3d-a151-42ddae81e15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1869df-7839-4b5f-ad17-82592ef83906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cf81ad-8a26-49c8-b734-c3ef37bed3ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9e3981-2fc2-4070-a9f0-0e114679faf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73993ead-e66e-4335-937b-c25c92ed56bc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6208b1-2a33-4ffe-8723-a88a79fe7c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234ff9da-34ca-4d52-aedd-700b068832c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4f26d5-41a2-4463-baa9-081e99f52a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e190880b-174d-4d77-a1a3-f87e4a706db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42389001-667e-4b44-b547-867083a98dcb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3794872-5eb6-434a-b545-d26c3a2989bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9a78b5-ad16-44d2-abda-17eb863195db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90d04d2-d1a5-4be9-b1ef-e7d3db4ce219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc061b2-e04a-436d-804f-56edd2a431f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c100cf5-d4da-45d9-bb45-6888c1fc83e1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe23ea85-cffc-4a62-b195-b60c815042fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b295edf4-6050-4a88-8831-ea4f156b57b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c7db46-9fad-463f-bbc9-379ac8d23317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c8ce95-5bea-4e2a-9c4c-089deaed9824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee3d2c1-94da-4592-bc8a-8f9aa45f8256",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bc539e-4add-44f4-a3bb-04b7222f846e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21ad9fa-8157-432b-a6c1-c985fb743f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ab00a8-cd43-40d7-8573-6814b94af1a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ee72b7-1b56-4208-b8cc-601e413ddca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a82f1d-1f84-4245-a20a-81e22531a866",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e6d68f-35bb-43df-a7c2-d135c0b56ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc2807d-4436-438b-b063-31de29ed41a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38711c80-ddd6-42ac-87d9-d2d6b0dd0bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8804ad88-b746-4530-ae5f-eb082eb10fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad226804-bbb2-4b02-9461-b2a4351eafb9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898ea200-2835-43ea-899f-684089b67fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3538ce6e-30ea-4b6a-94a3-ee4d17ded5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b87d29a-6b6c-4fc1-ae95-00fcb3201222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b07ea77-95dd-4277-ae8f-1815a9dc2d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e35f5ec-9c7b-424a-9fa9-e7164f840c69",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d83cd53-29f5-43f5-999d-a89d7fb719fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78142667-fe40-4ce1-b763-f1ec2ea7804c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7472fde-ed8d-45ec-90d5-e36e3fc74382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d665f7a-4436-46d0-b1c7-23df090581b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb9c649-4a96-4115-aac3-932bb77d3dfa",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f6da0e-eac8-42c7-a93e-23f98244144d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c1d0597-7f94-4fc6-af78-58534113a7dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "056a0d97-4114-48e4-aaef-9aba5ac236ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd712b0-e6eb-442d-bb2b-6dbe6fd4d1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ab901e-1a7c-480a-a00d-65747b919719",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b549b857-ee60-4644-8774-39c31d40d9d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c6413e9-cf27-4fb4-b031-4241929afe53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87f8cd3-4a55-42f2-9286-b6ed8238b3c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba835cd-cb88-4c63-aa74-ad578d9db39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07986c5a-7e3d-46d6-a74a-7d4418647357",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b08ac4-5c68-45fa-8a45-daaca9a03598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2196c6e8-fbd0-4677-a82f-6790e527b831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e178e0b3-4ba1-4be9-8139-fe19326e0b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826d2cfa-7637-435f-add6-3716e21a2574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25e3a50-7fbd-452e-92a5-0a9c015adad7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bce2fb-4611-41f1-afec-0ba1f96dd13f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "868ba032-1099-4be5-aaf8-a9eb599ff965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3027e976-3aca-482d-a747-e507ed232509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c6b25e-e50a-458a-8507-76b9c9d78bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d12d1a-275f-4276-8c98-46c9b5adf581",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94286ecc-89aa-48bf-ab6e-88c835ae3cc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0885255-b9d1-47cf-8194-013266b541bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "481faedb-0233-4345-8713-e1242a07ef45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6bcc60-19d5-4da7-b51d-9606ae87bbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fdd5bc-463a-434c-bdea-e6a94d8064da",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8a0a4d-965f-4896-a9a3-a98df2cb0bb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad3616ec-7c34-4b80-9339-61932c9b2923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7e2dc2-a768-437a-b2fd-7e1fa6b18d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e10214-7723-4fb8-9ac3-0105cc4259ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28efe550-aee5-45bf-a68d-88e7e30def48",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e5196f-ee35-4331-ad23-0ebf7890b060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5deb60ec-0b6f-45f6-8386-3619239a8c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6df3dc-b17a-4a69-ab49-aaa4518403b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2c17fb-69f2-45e7-852c-5442fef7606d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa4bfae-c5d9-4daa-8b0e-521b54434817",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a52130a-4ea0-412b-bb67-9673a69fd487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2261e5e6-f36d-4a75-a27a-098d64471733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f3f122-2c60-4e14-a754-8334fa10c1b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f6ba4e-6cfe-4760-b938-d212410a1cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46857734-1359-439b-8bb9-e1d651c711e8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8856d64e-44d3-4dbe-8080-38218ce4f93d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dfdd814-0074-4076-88c5-6184624cbfbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36314adc-fbae-4a57-8a1c-a0d350c2b40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8df482-51ab-4744-8cd3-0a0cedaa44dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317492f6-0a49-4882-b3b0-0edc3c8a4b5d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ef6c6b-29f0-484d-9e55-ef6db3392a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d914bbee-9b9b-4fde-be0c-7d0982ad6824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ac31de-0d9d-42cd-89c3-113184aaa9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ef0f38-6bdb-418d-9b3a-923fd33a4f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956f3ef0-ce6a-4295-a531-4c5e61c20402",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ffe410-9707-40d3-9378-549811ef6abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdcf93c4-f7d3-4f02-9bcd-176e261d27f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c098da-80d3-4e9c-80da-92acfd268283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a702e9c-d4dd-4c93-9b39-6a1fd542f118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99d4e84-e399-486f-b72f-3277f512908d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29770bb-74f0-4a6d-bb70-27e5692e544a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd677f29-e318-4796-9caf-e007e430e82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd3cd1c-b471-4ea0-96b4-06c69e4917b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d1ccf6-12f6-4754-a929-878f77a4901b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0962d552-2479-49b1-9bc7-d6c1f80b35f4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5eee5b-c40f-4201-a2d2-2c06978174bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "741c1991-5f56-4bc8-a11c-e26abc95d7f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea66d24b-2b8b-4965-8578-b43b1d258df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b0c4a3-0e12-4539-8bf5-14bbe08f1e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636a82b2-20e7-451d-894b-2b939cb9ff74",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3eb328-9197-4b83-b4ef-3fb9f9e37f56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "582c3611-2e52-4ca9-a8de-ba0d18fc4622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b73ee3-b413-4dc0-80c8-b91a03da20e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ebbaa5-bfbf-4149-a0cb-11dbaa92c1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bcc34b-61fc-4a5d-9bd5-02f8f716f466",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa3c92e-6c19-41bb-8b57-67076f1a2585",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "721ddb3b-3833-4f14-9a1e-86684db80f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b82945e-93cc-47c5-989e-e69cea41b7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df638513-06dd-488f-a084-e1f821d26ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c0788a-78dd-4451-8342-29a317cd20b8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc4289d-efec-4a83-ae0f-d12d3d7b2582",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e0a9100-bc75-40b1-8ff7-fc69c309aa61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb1397f-11c3-41f1-b903-837140fde5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad60aec7-f182-4e8a-9a97-25a018188053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ebc149-35f9-4b96-b21b-3af3c2783368",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe88725-5ab9-4436-aa7b-45651bf01d1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc65f7c7-703a-4081-81f7-4faf2de688a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c84280a-a962-4974-84b8-9cb7153bed4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99bcc434-edf7-4fd1-8914-44b12d1a18df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df64009a-e361-4018-b8df-a583bb1a5bc8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73fca69-f534-40da-bee2-f77ad4729172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67a9ca44-621b-4f56-9da6-c74538998f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe35435f-1cfc-4e9c-b092-c717ad7a2b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10df22b5-b3dc-4c91-a1ec-9df8cfafb046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965924e3-dc25-482a-b31b-404730caf886",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcbfc67-9b32-4329-b2a6-d9ba8dbec00c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab173df0-b9e8-4d3e-8e39-711e1f14cbec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb16981-4b49-4c63-80df-092af306e734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb65da7c-d4be-4b05-8ab9-4c3276a2451e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004f8e9b-4ab2-452c-8905-6edd1837faa9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6828e103-ba90-4d25-9d52-b0b0db0e4e02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf992de9-412b-4cea-8154-86112a249228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b50df1-2f4d-4305-9f90-a76bcabcf391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37b64f3-2089-467e-96d0-52e960620763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02961da5-619f-49d2-9f82-f5ec1d1e66bb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b722ee11-1504-4bb6-90b6-7e2fd336f185",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14d86dd9-5265-457d-9312-32ae2aa0bd8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4693ac1-9d6b-41b7-b7db-dd41cf164c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f665a3-950b-4b25-95d3-6a512aea49f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f5ae6b-a8aa-4f5e-80af-c18611ba3c0e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16269b75-5e7b-4636-817b-c48bdc7e526d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "150a0438-971e-4634-84bf-9c65606ea62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4c5460-5b74-4fb6-baa9-652b09082d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d72beb4d-8a3f-4e5e-9ec5-9468c7e2f529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3848a9-8c65-4419-ba8a-1901d447ab6d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85220b1f-5142-429f-b333-75b7cf9a266b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c09ecf25-1c0d-4de8-b8c3-01522e969576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc4244d-36ba-4e4a-89f4-a2dfaf5f8144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b95cea4-6de3-4433-afdf-f7e2413394fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4589d94b-82e4-4ffd-a03c-7f2d4d9b1a29",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5482c66d-e8eb-4882-b5e1-44ee0bbf9665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d421759-9719-4f50-9cc5-3e1cb2bdec83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18973cef-5d2d-48e5-8b59-125c77a119b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8631978f-8b34-47ec-a476-22e5f9ac595d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38172d6-45fc-46cc-8f11-274b503cfc29",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1c71ec-0907-4546-8b07-194025240b71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2d6fae0-1b95-4ad6-b909-675357cdedff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85118c8f-12cf-41a5-9dcb-dc5a1e16d91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2b83ad-49ef-4164-8c24-a7399ddc1ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f065d6ad-f0bd-4f75-8f0c-4f1147e9c07e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ef03eb-8aad-499b-a739-170f2efcc2f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1ac967b-1d3e-4771-9fed-a54688a2ec10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a669b9-a3a3-4a73-8903-2e451da32bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863d2aee-9692-4b00-8003-7c66a73404fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15362689-474f-4176-8f21-58eb0abf3c72",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65dd64b-079e-4275-a309-ceb999c2ef4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c95f4c8-38f4-43f9-b13e-1d220315496e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84af56c4-b73b-4dce-ab40-2fbdf1ed747d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cdf995d-a60d-460a-940f-dbb3f4b17ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c0027e-6c71-47fb-ba34-e03d9dad2291",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f0ee14-2c24-4624-8208-eece473b8bf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "501dea3d-7a9a-402e-96d3-b5ff87b3a449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d63ef8-6bcd-4561-b598-bcc4a34644e8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7254fa-2704-4eea-91b6-4f5af5129132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c5eb6d-5a0f-4701-9ffc-42032cd0a2c4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab02d059-4dd1-4ec9-ab46-7c3ba8b3ca5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee12fc60-7a43-4f5c-9382-1b1322d8be78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f05a3f-9332-4dd0-869a-414b2ef374cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a8a1e1-967f-4847-ad5c-dcd364c8b6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd3a178-29fd-4a79-9102-a86c292a4038",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd9a761-3089-4869-b146-2ebb1a052c6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da40669d-3a7c-49d4-be44-b0b5f8c97e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315aa0e0-89e0-4960-8a36-a085ff47da1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba402a5-6d29-4ca1-a393-4838e38d787e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8a204e-66d7-45c9-8b58-d287b93fed84",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bb35bc-305b-42b7-a982-c71f1e5621d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc32bcc2-9931-43b9-b4aa-992d58ba62ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c38a1d-0f6e-474f-835f-92945e3dce0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e49491-f870-4005-b1f7-91c1ebb26518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abdf5bb-170c-4955-a2f1-e17c0d80536b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4aab600-f655-4fcc-859c-1ffeacd95d1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "919fb187-f948-4484-8fe1-c3b3614f6078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4655ff2f-5920-4a34-a596-c7758ff3c98a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7578b03-7510-409a-8579-48f193efd7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c19135c-da96-44d1-ab40-64942acc111f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687c90a3-8a24-474e-8a66-45ca933363e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76b6181d-f049-4883-a15a-ca85a13cdbc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b2b851-a2f1-481c-8acc-12993f96ded6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487edf2a-9a8a-48f8-b106-81be6b845d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f9313d-1652-454c-a1d8-f8708b1c9cf7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079e8c63-1ce0-410c-895d-f30759b2a62a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efbf4443-ae72-441f-a8d5-e370f3628e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e064c826-9a35-4c60-bd0e-1f13b34ef2c0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f1e987-bb52-4f65-9695-1bc0f1a53f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9915f60-d03f-46b4-971f-b08f537cee6a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80227965-480f-4083-b587-6bf7593514cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa82e6e-1dba-491d-a8b2-e49acb3c1a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3906bd00-2100-4932-8d8d-0c65d2bad217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33991a8-b87c-4c11-8a23-1e54a0f3a0a5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d8dced3-52ca-4b1a-be66-720b3a777c4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b941746c-240c-45d0-b47a-5a6821facd2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb807fcb-a6b6-400a-864c-6fb36b60eec6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a21dd088-4aef-4d9f-af47-e45ea10ceb7f"
                    }
                  }
                ]
              },
              {
                "id": "cb685e47-a5fc-47e1-abbd-c6e93670bca4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a5d530c-7287-400b-b2be-31fadc0fd631",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abe8f03-b502-46aa-9e77-30628338c976",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "424a1e31-66d5-4ae0-ba25-183141cffce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb0f754-9388-47a7-864d-fa0039b26e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b8425b5-bc5c-46e3-a644-789c936363c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b0dda8d-5d68-4047-8d46-d878ee6314ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84a8c818-3ad2-4e63-8994-afeeda45d3f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8ace2ca-5eab-4d49-ae1c-e05b12e86819",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "664b5aa6-70ad-4d7e-a292-7c30e459f743"
                    }
                  }
                ]
              },
              {
                "id": "6c8bb62d-7d7c-43e0-8589-755fb8f856ed",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7fb18cea-17f0-4838-b25f-3fb1d6fe51f8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6b2ed5-4666-43a8-82b2-efdd6dec0f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5d8b3946-6e30-452e-90fa-a7491e91597c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21125812-0af7-4107-8a6c-e7c1b59345e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12c8479-f0e4-4388-9d35-520bd353475c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ee210c13-729a-4fc9-b897-d21d5f523f5f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a0ec5f98-21f7-47fe-b74e-117ef19f5639",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6548acb7-c4c3-4bfc-8f04-d46fc09b6a6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8e13e065-d7c9-4483-9f21-c491182168d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e77713d9-dd4c-4035-bd8a-a8fc8e3da13c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2458df3-ac80-485b-aaa3-e1667a7c87b0"
                    }
                  }
                ]
              },
              {
                "id": "a0193fc6-7ca1-4d2e-99ec-d89f7f117b22",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b467014b-5c51-4fe9-a97d-8b39e0394174",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7289f8cf-a651-401c-baee-fffe22aaa1e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "635fab38-525d-4c9a-b592-9dee5dc98eee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31756082-bf80-4220-93c0-72d311b400ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45d60115-f1aa-4716-b5ba-893241fda356",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a707eda2-4d4a-4d70-a073-38d9c43d330c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d19a47d-0ffc-4723-86f0-60e27608c4e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e65d89ca-7012-4a49-90d1-88be91bd549f"
            }
          }
        ]
      },
      {
        "id": "d3e42349-010e-435f-a430-44892ad2295e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0ac0f878-6170-4727-91c7-4af299b47afb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21531bef-370b-45d8-b469-4381ac86bf06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39005c65-bde9-4528-8c61-ad0519a7f754",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfef7964-26c1-4783-bf38-123e4c96de67",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "684bfaf1-26fa-4d09-b594-5727854d7426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74a1438-0b5a-4017-ad38-cad3b60d0473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e40781f-ac33-4e8e-883d-e1b9e0479147"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cc690e9-b84b-4135-8934-8410197ad95a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0deba029-732a-472e-a79f-0f5a2b846e73"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c4d6eff-c3bd-48bf-92d6-ad6079527331",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "447a745e-0b09-41b0-9faa-5532e39558b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f68a8de-3d70-4565-8b97-5a04995f8ea9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "38bb1044-b6ef-40c4-8764-91f88fb54e5b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74ff45f9-17bc-489c-b570-da1bafa34205",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d38d5518-bfd6-494a-97e7-2bce182b7797"
            }
          }
        ]
      },
      {
        "id": "fd30b5a1-3877-4d27-8999-53b46025d9b9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d9de8495-5643-444c-8501-f8d3f9c6c42a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "77eae090-6f7f-4d82-9314-e172e69dfdf8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9261a398-7f62-4d84-a47b-d397bf1a510b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea68051-8ac4-4a52-98ed-81fb419adbc0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c4a49c6-e8c2-46b4-b1c3-766a90d4ab7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9b3bda-15f8-4135-92c7-4fd52350de54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35b4e50d-632a-40f9-aa26-5951caa931ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ccfde65-1ded-4453-88ef-d0c56cf8ba95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0c5824c-0145-417a-8c37-b8b6c75c2c6b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f573ab59-b107-42cc-99e8-f2bd873a593c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db7add6a-ef40-4273-81ce-ef44f0096be0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6290ed0-a9a5-4a43-9b85-f764c97ea737",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "15d48e10-05ec-4014-8efe-547fd7c7b9cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5aa4af01-b4f4-44bf-8999-1f737fec33fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "208921b6-107f-4e1b-a6fd-013cfaa70860"
            }
          }
        ]
      },
      {
        "id": "41871b6b-40f6-4863-8646-466b68fd7f19",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "46057ce6-25b6-450c-8da2-2ccf7ce5a05e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87cf4a90-b3ac-4132-9605-304c1b29c1f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "797ddc41-1d87-4c53-80d6-639eeb386d94",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5749bb-9709-497a-9627-de3ff173e5f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a9ef8d3-a8fb-4a10-8be1-3b27766d0a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770580f4-ac90-4792-a69b-22b9603fb4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43e7f9a8-f755-4790-9799-084aa1963b3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f02783c4-c8a0-4045-b2dd-b04eef2cc2c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1dc240f-0bd9-440e-82f7-90d1cadf7b7e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a4fd1cb-c2bf-4c79-b897-4f3379808a47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "008f8037-f305-4496-b0a2-083c9930c054"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "434cc877-381b-49cc-826c-29ba08239cf4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d6a64829-fa86-48f1-8fb8-a615c4985cd1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20e671c9-3503-42c2-921a-9efa0adb99a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f9c9310-fc8c-4352-977b-d592e294e407"
            }
          }
        ]
      },
      {
        "id": "3c725072-8751-4b96-a8d7-119f29900385",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0025b6c-4ff0-43bd-90c5-d23e2de16a53",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da407cb8-43eb-48fd-a2c3-06c303c04e8c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b13dc7e7-5faf-4a55-a47a-e6baf6a7c9ee",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e662f2bc-eed6-4c90-ab39-1b3b5636a1ad",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d630d40a-dee6-4bac-af0f-3a9aff244249",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 54.059649122807016,
      "responseMin": 21,
      "responseMax": 245,
      "responseSd": 23.547189348044782,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707870846360,
      "completed": 1707870870941
    },
    "executions": [
      {
        "id": "28703f95-9ca5-457e-8ac8-cf1db88fbcfe",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "59c6c190-0670-405f-a325-5bb982f1e535",
          "httpRequestId": "97b427f7-243e-47e8-89d1-18b2e9f66967"
        },
        "item": {
          "id": "28703f95-9ca5-457e-8ac8-cf1db88fbcfe",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fafb4988-8b72-488a-b079-88dc31666993",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 0
        }
      },
      {
        "id": "79ab11fe-c926-4ad2-b28d-f3c80473f5b3",
        "cursor": {
          "ref": "79b42e14-e52c-477d-b396-86bb4cdbfc18",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "85e1392d-1e8f-4409-bb58-720331b14863"
        },
        "item": {
          "id": "79ab11fe-c926-4ad2-b28d-f3c80473f5b3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2dadde90-14b6-4836-9f63-37904d769e54",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "9ee51261-9324-48d6-87d6-53af9f14000e",
        "cursor": {
          "ref": "327fa4c9-1896-4678-a8ba-1a0e1a69515b",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8ad5e735-9987-4a8d-a9f5-a8dfe41c3b91"
        },
        "item": {
          "id": "9ee51261-9324-48d6-87d6-53af9f14000e",
          "name": "did_json"
        },
        "response": {
          "id": "be84eefb-d8bb-4b5d-92fb-dc103bbaeac0",
          "status": "OK",
          "code": 200,
          "responseTime": 223,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc38d233-2145-4f32-aba1-70a4c6d98b80",
        "cursor": {
          "ref": "46f94798-24f4-45f6-b218-13cd2039b10b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "455cf982-8942-44b4-8805-2174a3a488a0"
        },
        "item": {
          "id": "fc38d233-2145-4f32-aba1-70a4c6d98b80",
          "name": "did:invalid"
        },
        "response": {
          "id": "5d8dbcd8-464e-403c-8f40-391fbca12a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc38d233-2145-4f32-aba1-70a4c6d98b80",
        "cursor": {
          "ref": "46f94798-24f4-45f6-b218-13cd2039b10b",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "455cf982-8942-44b4-8805-2174a3a488a0"
        },
        "item": {
          "id": "fc38d233-2145-4f32-aba1-70a4c6d98b80",
          "name": "did:invalid"
        },
        "response": {
          "id": "5d8dbcd8-464e-403c-8f40-391fbca12a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9d4466-8ca3-4594-8218-d3a45fdca48d",
        "cursor": {
          "ref": "318e1c76-1da8-451a-98c2-1e6e843c9306",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "69df2a37-4462-47c1-92d3-a1ca4e26f8c9"
        },
        "item": {
          "id": "df9d4466-8ca3-4594-8218-d3a45fdca48d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5fa56381-b4f7-433b-a2d2-29302cb7a9b1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 86,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785099ba-89eb-4074-9141-7d2e59a2546a",
        "cursor": {
          "ref": "f7195e3e-0950-4403-a6b0-5d895c8411c1",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0e206d91-9326-432f-974f-5ba1db9d7b53"
        },
        "item": {
          "id": "785099ba-89eb-4074-9141-7d2e59a2546a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8fe3817e-3245-4b63-819e-6c940fc4504d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49996102-516f-4569-a8f4-d702182aa700",
        "cursor": {
          "ref": "552a7d2e-0759-422f-84ae-6f327116f4d6",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9c7eb3df-a054-48e9-870e-69ab3a8d961d"
        },
        "item": {
          "id": "49996102-516f-4569-a8f4-d702182aa700",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5313d8dd-c2b5-4451-88aa-6907027535c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdfeed0-9bfc-42d8-9f80-06fcab85b1e5",
        "cursor": {
          "ref": "f2769cb6-2b0a-4f71-872f-76afcdd9465e",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0c72f68d-812d-49b7-8a03-d71d307f0965"
        },
        "item": {
          "id": "ebdfeed0-9bfc-42d8-9f80-06fcab85b1e5",
          "name": "identifiers"
        },
        "response": {
          "id": "11782107-e2c6-48aa-948b-035d766a24cf",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0170c73-9686-45b2-9b72-6ec70abea85f",
        "cursor": {
          "ref": "3fb3b408-7433-4527-b907-bcd766da6904",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8136f16a-0705-40e5-867c-c1619fec8aea"
        },
        "item": {
          "id": "f0170c73-9686-45b2-9b72-6ec70abea85f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "758bf9e9-f1d3-4f2a-a8f3-0aab59c4fcf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15349d4a-a7e5-41c3-ab6e-72d638842cae",
        "cursor": {
          "ref": "9aef8899-e5f3-427a-b89b-5491dbb4529f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2c63df07-d64e-45db-bd76-23b23d1a683c"
        },
        "item": {
          "id": "15349d4a-a7e5-41c3-ab6e-72d638842cae",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "161ab3f7-2a06-44b7-a065-83bda2957ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc2f080-78eb-472c-bcc5-0afe345e1bb5",
        "cursor": {
          "ref": "f556ce34-e2ad-42f0-a8c0-4117dff9bab6",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9a4258c8-0078-4cbd-ab8d-ad810d94903c"
        },
        "item": {
          "id": "5cc2f080-78eb-472c-bcc5-0afe345e1bb5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7f965225-da7c-4a22-9e08-0bdafb56f2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec6f6d7-1997-4ca0-ab88-1e0fe30a8a6a",
        "cursor": {
          "ref": "03f5fd78-2a1c-4248-b4e5-2671e143b899",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b72264d3-0c61-42fa-b764-8a2dd36f883f"
        },
        "item": {
          "id": "cec6f6d7-1997-4ca0-ab88-1e0fe30a8a6a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5b7a0da9-6eb6-419e-902f-472056912acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89b5961-eb41-40d7-9251-e3fb33a98ac6",
        "cursor": {
          "ref": "f4c77332-58b4-45f6-8449-e3ee9568a848",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "dc58162d-c6da-4465-84f5-ab7c4be9d64f"
        },
        "item": {
          "id": "c89b5961-eb41-40d7-9251-e3fb33a98ac6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a7fd0e93-a412-4e34-a352-f08903240228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffd1e9f-78a6-403b-aa45-5fd244d89eb7",
        "cursor": {
          "ref": "fc38c08f-634d-4b03-a92b-01208ef79f8f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c17c1028-cd49-49b3-9b92-0dbf1b2b708b"
        },
        "item": {
          "id": "8ffd1e9f-78a6-403b-aa45-5fd244d89eb7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "01e3eef3-eb5a-447e-8d9c-4c6a976ebc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cf4083-2570-4885-bfb1-63984b15e670",
        "cursor": {
          "ref": "e7f409f9-724d-4933-bd77-6a409b320f4d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8a36378e-edea-403b-a647-e08fc14d1abd"
        },
        "item": {
          "id": "05cf4083-2570-4885-bfb1-63984b15e670",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c02222a3-dc7c-489e-920a-0f079cbd9ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19a4053-9e51-47f5-99fc-46c53c56cc81",
        "cursor": {
          "ref": "f70d42fc-105d-452e-9a90-12ee20683f61",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f0757112-6616-453a-b191-4f6ad7c51692"
        },
        "item": {
          "id": "a19a4053-9e51-47f5-99fc-46c53c56cc81",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "335996fc-9499-4137-ba07-02b8eb9cb660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2613de64-3ef1-4310-84ea-2c26dcbe746e",
        "cursor": {
          "ref": "8628ae6a-7f00-4b0d-818c-d5d89fb9a8e8",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5d571524-e5c0-43a0-b665-f58c0910b8b5"
        },
        "item": {
          "id": "2613de64-3ef1-4310-84ea-2c26dcbe746e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "67d375e0-5d99-4834-b8b0-332925ca8403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1069c8f0-8202-404a-a3ae-2a10cf6d7469",
        "cursor": {
          "ref": "3f1522f1-8779-405a-a75d-b6c0ea345d93",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cda306e3-1501-4526-a183-2a00d75029e1"
        },
        "item": {
          "id": "1069c8f0-8202-404a-a3ae-2a10cf6d7469",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "11adccb2-7246-435a-96fe-086424538a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a4ef33-9d49-4aea-a4d1-2c45bd72ccf0",
        "cursor": {
          "ref": "379c81c4-9b24-4b56-9b41-ab074e0a92d7",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3201b759-5cf3-452b-b28b-7574e82fc70a"
        },
        "item": {
          "id": "a5a4ef33-9d49-4aea-a4d1-2c45bd72ccf0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7bfd2605-f52a-4ad0-9bbe-365f27a77106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740c3aeb-5fa6-428a-bdc8-d70368e25e5b",
        "cursor": {
          "ref": "e3b45534-9e23-4832-a1a1-68c87f48e83c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ea67eac7-1a48-43a5-9e81-51c2668cda4b"
        },
        "item": {
          "id": "740c3aeb-5fa6-428a-bdc8-d70368e25e5b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "68979db9-88a9-4b41-b137-67aee33b0c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f778a63-1eda-4fad-a603-9975ab13c118",
        "cursor": {
          "ref": "9cf2eead-fe49-4233-a492-64a39a2ee595",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5f56440f-c694-4ef8-ba7b-a94c00a96949"
        },
        "item": {
          "id": "0f778a63-1eda-4fad-a603-9975ab13c118",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1015aa30-aa12-42cc-9ab9-cf178a18d509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77de9579-57ad-4a6e-9548-e44ec08739d8",
        "cursor": {
          "ref": "da9fa6af-b799-468e-8559-b521ab7db867",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "18770f31-4de4-4250-a2f9-c80861150721"
        },
        "item": {
          "id": "77de9579-57ad-4a6e-9548-e44ec08739d8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3e3433bc-1606-4781-a005-7af57d28f1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f920f413-b320-413c-9380-7b6e91b93321",
        "cursor": {
          "ref": "df0d3188-ae4c-4705-8be1-1f735c44473f",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dd0831ba-c364-4a39-8761-0e241c463c54"
        },
        "item": {
          "id": "f920f413-b320-413c-9380-7b6e91b93321",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "95fc18db-8a9d-42c6-90c8-4ac556c10217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a15421-33ba-4419-ba22-615b0c7ab875",
        "cursor": {
          "ref": "d49decbf-51ab-43f9-aef8-b0e69b9a9d7e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "44164f0f-1e8e-462b-a31d-9a1cd9d9db9a"
        },
        "item": {
          "id": "14a15421-33ba-4419-ba22-615b0c7ab875",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "651c6db7-5d03-4001-aadb-cdc9ad29714a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f612c22a-18d3-492a-838d-015e47bc7c18",
        "cursor": {
          "ref": "8c44ffde-d134-4c56-b58f-9902613af767",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "13846edb-26ba-453e-8dcb-067538e265d1"
        },
        "item": {
          "id": "f612c22a-18d3-492a-838d-015e47bc7c18",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "586f8d79-2f36-4485-bd71-9129589e5981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0160c3e0-79c1-4398-b970-e50e37c77342",
        "cursor": {
          "ref": "cbaeef70-0c70-4832-b329-525c28d9dabf",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9d04e207-d06a-4c18-899e-ec94cd654b19"
        },
        "item": {
          "id": "0160c3e0-79c1-4398-b970-e50e37c77342",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0a4605cc-b5a0-4020-8c0b-969891665a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e341bba9-54a7-43e3-82a0-21a271d60396",
        "cursor": {
          "ref": "86b71def-6159-4f5b-bba3-ee6f7570bc25",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6305987f-9902-490d-a521-1c8fb560d74f"
        },
        "item": {
          "id": "e341bba9-54a7-43e3-82a0-21a271d60396",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "80165390-5525-4632-8c6e-1934ae1f2f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b502709-b849-44a4-9c2b-07b6e135a4d4",
        "cursor": {
          "ref": "3c484045-aad3-4e5b-8129-2cb4786b9e83",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2e8b20c2-f7c9-441f-9894-b809c6d976ee"
        },
        "item": {
          "id": "0b502709-b849-44a4-9c2b-07b6e135a4d4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d43bdba8-1611-4397-bc37-7b5faeb75f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79585199-371c-41d4-8738-9366740410a6",
        "cursor": {
          "ref": "139914ff-346e-4ac3-a88f-b2c1ae22baad",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0cafd1e2-a951-4a3d-87a7-6ccf22a80477"
        },
        "item": {
          "id": "79585199-371c-41d4-8738-9366740410a6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0bdbe14e-d16c-46ba-8605-ee6d39fb4aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75af3c15-6a0d-4994-9a83-75182f5a6c0e",
        "cursor": {
          "ref": "9db13922-2c40-4da1-8c38-61831f0522b1",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0f075627-9ba0-4592-97d6-a50e88a6dd07"
        },
        "item": {
          "id": "75af3c15-6a0d-4994-9a83-75182f5a6c0e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2b3b55c3-821d-4e9e-a880-61550ef64cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b38ab2-be48-4311-8bd0-48a44c293986",
        "cursor": {
          "ref": "01f74d7c-8afd-4209-8c5f-8f30f1ba4ed1",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f1f823f4-f63f-4f49-bdcc-3b25381471ac"
        },
        "item": {
          "id": "a4b38ab2-be48-4311-8bd0-48a44c293986",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "03a92f86-4a7d-4507-8bf7-7e26acffc6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93369dbe-7d84-47c8-af73-bab1cd376e8a",
        "cursor": {
          "ref": "4abf5114-b955-4b99-abaa-022221d445f5",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2080b697-e72d-48f4-bf47-89022230bb09"
        },
        "item": {
          "id": "93369dbe-7d84-47c8-af73-bab1cd376e8a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7f5b5f3d-ac49-4cac-a1c3-50d2f3ecdd5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c142fa3-efab-49da-8309-df3e3b2b4fd8",
        "cursor": {
          "ref": "59d67492-a617-49c7-9cb5-09172a18bff6",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3ef09d7a-3ff0-46b8-88bf-cd8fa4c68f06"
        },
        "item": {
          "id": "5c142fa3-efab-49da-8309-df3e3b2b4fd8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "569c5ff7-9c1e-4cd9-b3d8-5bfdc76e3484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91191ee-abbc-420b-b8b2-8442cdfabb65",
        "cursor": {
          "ref": "a8ddad96-4252-4138-aa16-b040fe83b6ca",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "92b943bd-d641-4d14-b8a4-76098ebb28df"
        },
        "item": {
          "id": "a91191ee-abbc-420b-b8b2-8442cdfabb65",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "abf059ee-ed62-45a5-bfc8-319d6ace2352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0da32df-eb30-4d8b-8912-6e33c34bbd14",
        "cursor": {
          "ref": "aff330c6-bb20-4faa-891b-a16122762b13",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5c5eb093-0c13-4ba4-9600-13f2cd6e8f68"
        },
        "item": {
          "id": "b0da32df-eb30-4d8b-8912-6e33c34bbd14",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1ae6ec42-856f-4f5b-a49f-1261ca1b0069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d68c016-4d0f-40ac-a678-fe0182fcbce9",
        "cursor": {
          "ref": "e75a98da-0d10-4473-9a9c-e62f349cbb5c",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3837e613-7f80-4c9f-b36e-fad8eb4a0fbd"
        },
        "item": {
          "id": "9d68c016-4d0f-40ac-a678-fe0182fcbce9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a3cf7c0e-67a4-415a-bf45-7d0c367a3d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c103973-9f29-4dcd-a33e-ebe43698cbbc",
        "cursor": {
          "ref": "0f6f9d4d-1fa7-4d22-b4d9-b91f915b5aa4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "18364a5f-c94d-466e-b6bd-fe07ebc93014"
        },
        "item": {
          "id": "2c103973-9f29-4dcd-a33e-ebe43698cbbc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "43fa1cff-6535-40b5-8cd7-fccbe940657f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e71e74-e695-4a74-ab92-5c51ecb54909",
        "cursor": {
          "ref": "69cd71d0-91bb-419c-8de4-10fe622c68ba",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "60b82151-54ac-41dd-8172-b008147b4d4e"
        },
        "item": {
          "id": "d4e71e74-e695-4a74-ab92-5c51ecb54909",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "09a0dc69-a096-41fd-a2e0-94fd663a4b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc80028-1368-4771-b68e-e18b4ef4117c",
        "cursor": {
          "ref": "da660170-c534-4c1f-b47e-8be55645e3ec",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2bd83885-ded2-463e-ba4f-2beddf3df4b4"
        },
        "item": {
          "id": "3dc80028-1368-4771-b68e-e18b4ef4117c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3578252a-d6ca-4e7b-98f9-ad166ccf77a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c972eab2-d49a-4073-b4f1-b81b141f7036",
        "cursor": {
          "ref": "48062ae5-8cc1-4081-9b68-4b42cc3d4645",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "937ccea0-547f-4e3b-8cca-f74590d7c8d1"
        },
        "item": {
          "id": "c972eab2-d49a-4073-b4f1-b81b141f7036",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ad726033-ad3b-469d-9538-e74cce09218d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb09599e-1c32-4711-8465-c4d3995b613d",
        "cursor": {
          "ref": "5f2d8cb1-aae9-4c44-b8c1-83ef13c6c2d0",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7b72292f-068b-4927-8557-a21bfe3e9bcd"
        },
        "item": {
          "id": "cb09599e-1c32-4711-8465-c4d3995b613d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "12afa4b4-4db7-46b7-be71-359e461a9a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c824d3b9-fb26-4ab3-a8f1-f8eab100c763",
        "cursor": {
          "ref": "944adc7e-755f-45fa-84d1-a682d715e403",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cd9b8aec-1b0a-441a-9d59-b7d8360eb4d5"
        },
        "item": {
          "id": "c824d3b9-fb26-4ab3-a8f1-f8eab100c763",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "780e9d0f-9a43-4fd2-98f7-f77532a534e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e665d7-52cd-4d75-915a-038536165c11",
        "cursor": {
          "ref": "bca97a64-78b5-41b7-9471-cee44c892a17",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2535bad5-b0f1-4f3a-8119-e77ddc5f650b"
        },
        "item": {
          "id": "a7e665d7-52cd-4d75-915a-038536165c11",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c0291150-f999-4035-8e86-103b0376c24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe76c24b-3493-4add-bbf9-c5cb6df017a5",
        "cursor": {
          "ref": "2d22a375-c3c0-4888-822d-16885d65c90c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c971866f-64f1-40dc-bfd7-6fa3a08c35fc"
        },
        "item": {
          "id": "fe76c24b-3493-4add-bbf9-c5cb6df017a5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5bfc5bab-bff7-4e76-b077-a8c719a86560",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 223,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f828b829-28ae-4f36-ba44-e857f7b56a48",
        "cursor": {
          "ref": "5ffa331c-b3e2-45b3-b0b3-9e89a0ccc52c",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b4597b57-ec1d-4a1a-bc6e-b9a8bcc8f009"
        },
        "item": {
          "id": "f828b829-28ae-4f36-ba44-e857f7b56a48",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ca8d41b1-05c1-448b-8abf-6873e86091d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae48cb2-a1df-48a0-bc4e-a054c265537f",
        "cursor": {
          "ref": "6adff14c-1550-472e-9ad3-233ac6d3f697",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2a4d07fc-bb62-4c63-ac39-ce8603e18956"
        },
        "item": {
          "id": "fae48cb2-a1df-48a0-bc4e-a054c265537f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8eeea58b-cc3e-4f92-9d4d-964bd3d1c656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fb12af-b065-4576-93a2-e8629c705080",
        "cursor": {
          "ref": "ec4ec1ce-51ba-4e6a-b450-22e29dc58cb2",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "13d48f02-6eab-4bdf-a57f-61d3461fcd8c"
        },
        "item": {
          "id": "c2fb12af-b065-4576-93a2-e8629c705080",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2a84b9c5-1b0a-4ec7-8353-b5e5bbe1c905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2fac5a-4142-4819-a59f-4374d746fa34",
        "cursor": {
          "ref": "a8cb72c0-545b-47c0-b3f0-00bff4266f0c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "72ec7d45-e16f-4f7a-9c49-8109854bba34"
        },
        "item": {
          "id": "9b2fac5a-4142-4819-a59f-4374d746fa34",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5c600e76-3bd6-4214-a93b-6c40c4550763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0841a03-4637-4c2a-a8f4-8a048da617da",
        "cursor": {
          "ref": "4742524c-3dba-4df2-8d38-9269a81fde7d",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2e6def4b-777b-4e0a-bdba-9c26f0ee54e6"
        },
        "item": {
          "id": "a0841a03-4637-4c2a-a8f4-8a048da617da",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "739676f4-27d0-4bff-b415-9f33d88b4632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35882b5d-522e-49f1-a3aa-ebbca6d4b5fa",
        "cursor": {
          "ref": "64dbb36c-cc63-4bef-b795-2d62038bd0e8",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "12c9773b-4f55-4e6f-8141-c9d84031041e"
        },
        "item": {
          "id": "35882b5d-522e-49f1-a3aa-ebbca6d4b5fa",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2f1f4da6-bf0e-46fe-b406-e0371faac8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb065fce-8479-4ba0-a9c0-46824f98ba99",
        "cursor": {
          "ref": "f169f944-4bcf-4156-9250-2e37956ae86a",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0586d5e7-78c8-4f69-b439-c3cc3d431c77"
        },
        "item": {
          "id": "bb065fce-8479-4ba0-a9c0-46824f98ba99",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c58b0245-6b4b-415b-8812-d8f1d8cfcf57",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 110,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8179a47d-d1d1-4c86-a0a6-83857a7fc76a",
        "cursor": {
          "ref": "beeef761-4468-47ab-80fc-f342a95ea3e5",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "951b97b6-1619-4931-81c9-a9dfe15d90b9"
        },
        "item": {
          "id": "8179a47d-d1d1-4c86-a0a6-83857a7fc76a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0c56aaca-43ce-4f32-8944-eb7c594964b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47800d11-78b9-4e27-bce7-d75680579103",
        "cursor": {
          "ref": "2113abd7-27b4-4418-b40b-87e729ef118d",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "17a1fa8f-51d5-4c34-999f-acd80a945f50"
        },
        "item": {
          "id": "47800d11-78b9-4e27-bce7-d75680579103",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "be530590-8486-4b26-b293-b7c3c26bdb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108f5dce-46ef-49d0-9e77-343b867ddb3b",
        "cursor": {
          "ref": "824950af-11bd-43ee-ad11-1c593588310d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c4a4f233-736e-41b0-9aa6-6dfefb388adb"
        },
        "item": {
          "id": "108f5dce-46ef-49d0-9e77-343b867ddb3b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b1106cb1-829f-45a7-b2db-f421bec80db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4ffd88-a1f8-42f0-8569-190833d1ff49",
        "cursor": {
          "ref": "1e6fa6d8-276c-465a-9346-b66f21004e19",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "193c1c52-20ad-48d2-9f0a-1f2b858f96d0"
        },
        "item": {
          "id": "2d4ffd88-a1f8-42f0-8569-190833d1ff49",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "239abcf2-10a9-4601-9334-b34d285f447f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a42dba-381d-417e-b2e2-0e7b15441b71",
        "cursor": {
          "ref": "d3613889-ac97-4967-a9b8-3f1e2c44bc8d",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3ac2b1f7-e661-4e32-a7f1-ddb14b6b395a"
        },
        "item": {
          "id": "c9a42dba-381d-417e-b2e2-0e7b15441b71",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "06ca62a6-30e3-420a-a17d-5dbb79f6b022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3600aab2-6606-4001-ad89-2a44a9b909e1",
        "cursor": {
          "ref": "1830f8b6-a5f7-4141-b4f6-59886ec9e896",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "484d2d07-861f-4b28-9586-8de8b2ad73da"
        },
        "item": {
          "id": "3600aab2-6606-4001-ad89-2a44a9b909e1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f03dd3fe-2cb8-4c89-8bea-f057c26ff84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab7d8e5-6825-4e20-a1f5-b173f80ecbc5",
        "cursor": {
          "ref": "fb807ec1-8a7b-426e-b8b0-6eed2d261de6",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "97e90165-213b-48ae-8370-e2e5f4c033a9"
        },
        "item": {
          "id": "cab7d8e5-6825-4e20-a1f5-b173f80ecbc5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "281d8dcb-455e-4e39-b212-4e5b1e815e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80a5bca-5583-4245-97dd-88cf06e6588f",
        "cursor": {
          "ref": "928945c6-d01e-4280-83e2-0b558b3844bd",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "16a8d088-c2ce-4f90-b563-00d6a2358385"
        },
        "item": {
          "id": "c80a5bca-5583-4245-97dd-88cf06e6588f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "42593f1b-5866-4b6a-b48b-7b3da94a3e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266e01c5-c015-401f-be24-a329ed749e32",
        "cursor": {
          "ref": "298c9ff8-dc58-4dd6-a078-412a2a1e0312",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "dbf066cc-a3bc-42d4-84f0-51997d6f757b"
        },
        "item": {
          "id": "266e01c5-c015-401f-be24-a329ed749e32",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c28f09ee-2661-4ece-bd3a-3e5c95f2d115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497b7a3d-b675-4d58-82e3-8708990905a4",
        "cursor": {
          "ref": "dc8182b2-dd1b-4fdb-ac05-27cc112c6cf9",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "480c6dad-0148-4764-8513-e430c0aa5cd7"
        },
        "item": {
          "id": "497b7a3d-b675-4d58-82e3-8708990905a4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "457f18c3-517a-4c21-9629-253981bcbfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46819e14-ed37-4c7c-a31d-23cd4719a97b",
        "cursor": {
          "ref": "f9f3ab06-430b-4d3c-b85e-4b769240ef22",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "043e53d4-eb13-4029-a26f-cd70c79fd9db"
        },
        "item": {
          "id": "46819e14-ed37-4c7c-a31d-23cd4719a97b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e4b39c7f-151c-4cdc-b3c2-c3680eabdd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3e1322-a435-42c8-9f68-e3060e201eeb",
        "cursor": {
          "ref": "373a4b73-131a-44de-a2e7-5ce218ad0a3f",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "19c05646-1bc1-45e8-90d5-6b36200b2807"
        },
        "item": {
          "id": "7f3e1322-a435-42c8-9f68-e3060e201eeb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "68a11e57-fa35-4132-b6b9-29384c4044e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce7da55-888a-4cd4-9bd8-068d7645f236",
        "cursor": {
          "ref": "a3fc3cdf-184a-40aa-8881-bd770d60adaa",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "81da3d25-a3b5-4cb1-b958-e1a94e8981e0"
        },
        "item": {
          "id": "2ce7da55-888a-4cd4-9bd8-068d7645f236",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a8de65d6-55b0-4b77-85e6-19948c241dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d31e00-c98c-4973-bdf1-d56bfa2a6622",
        "cursor": {
          "ref": "508ba316-9e3d-49a4-a3ec-3d66e20e8259",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ed70f680-9d1a-4c01-b97d-d8db9e4c7243"
        },
        "item": {
          "id": "37d31e00-c98c-4973-bdf1-d56bfa2a6622",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9955f0d1-4ae0-45b0-856b-9ce5c3bec38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02db4f1a-ef51-459d-acec-02c5009c7ac7",
        "cursor": {
          "ref": "9d88f3f6-dc54-4a1b-a552-4daebf38a5f3",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "85043f59-963b-4ed5-b7ed-9528a89eb251"
        },
        "item": {
          "id": "02db4f1a-ef51-459d-acec-02c5009c7ac7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f9573c51-8535-456b-82d2-17a156716c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33860c9d-5bda-4151-aaa6-267b2cd02f78",
        "cursor": {
          "ref": "4d0b818a-e13a-4d3b-9fe0-f1c9e2f84e70",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "26276aba-7a6b-43aa-ba20-b5464b04e035"
        },
        "item": {
          "id": "33860c9d-5bda-4151-aaa6-267b2cd02f78",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d3580415-9251-4a0a-926a-5c7fb9f2dc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed66441b-6246-4840-aa2c-dd25bf2dc499",
        "cursor": {
          "ref": "9c4e5e50-1ce5-4be6-809a-56df246b8e6b",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a24a3237-feaf-4a6a-9774-e4bf73bfb0cb"
        },
        "item": {
          "id": "ed66441b-6246-4840-aa2c-dd25bf2dc499",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "84aa8605-d638-4c7e-bdcf-fc6afff1d2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea87a2ac-8540-4b0e-82fe-7b1023ca6b73",
        "cursor": {
          "ref": "779091ab-b249-4488-980f-8936e01e8ccd",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "61a17a6c-752d-4842-af04-f08aa1051529"
        },
        "item": {
          "id": "ea87a2ac-8540-4b0e-82fe-7b1023ca6b73",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b4e23c46-1675-4c56-b3d8-189a97598386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfb6137-3d2a-4141-a299-8555a3b205d2",
        "cursor": {
          "ref": "553cb68d-56c8-468d-bd98-f22c4e3d0451",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f56576fc-a433-45b9-963d-e4096bf2882b"
        },
        "item": {
          "id": "5bfb6137-3d2a-4141-a299-8555a3b205d2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f0caeb87-a993-45b6-8866-3f4d2a2cd76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541a8ac8-6e42-404e-aecb-f6315d2d6af8",
        "cursor": {
          "ref": "10ca8d41-1211-4640-b0d2-c740450965bb",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a2f676a3-31f5-49e4-8cad-3195bdee531c"
        },
        "item": {
          "id": "541a8ac8-6e42-404e-aecb-f6315d2d6af8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1e72f60d-c28e-4fb9-b18d-ee43b1f1958a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e0f5b9-0ca5-4d3a-809f-58f0a05b0f29",
        "cursor": {
          "ref": "e1c22df3-16ea-4462-a0df-2a65e869fde4",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "859a010e-a39f-4349-9e3a-56fe101f20d3"
        },
        "item": {
          "id": "16e0f5b9-0ca5-4d3a-809f-58f0a05b0f29",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2e217607-49b3-492b-993d-4fce050c423f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd7d132-6237-4601-9b15-cc9defd8ee06",
        "cursor": {
          "ref": "dec6a341-7711-442b-bf70-8eb1d6d0d9cc",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "eafffb7b-ae0c-4c82-bdbe-3db494317906"
        },
        "item": {
          "id": "7fd7d132-6237-4601-9b15-cc9defd8ee06",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b7bc1886-95a3-45a2-8247-d46867abae1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcb784f-46e2-48b5-8ed5-579e3fbdd876",
        "cursor": {
          "ref": "81aa21a1-d4be-4a68-ab26-db356528beb3",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "10684dce-88f5-4ba0-94fd-f2a5022b1b7d"
        },
        "item": {
          "id": "cfcb784f-46e2-48b5-8ed5-579e3fbdd876",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fe94064a-1a03-425c-ba67-103072a7bd61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b113ce4-7fb8-45a9-aad5-84047e8eb7c0",
        "cursor": {
          "ref": "bc1533e6-3877-4a64-8988-1b1abb3e6e37",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "07df87ce-a21a-443a-aabe-63f2672e3f28"
        },
        "item": {
          "id": "1b113ce4-7fb8-45a9-aad5-84047e8eb7c0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "97fc4d69-c780-4359-bf27-936f18ae6b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfe6014-7179-47d8-a6b2-4797259b3de4",
        "cursor": {
          "ref": "494d783e-428e-4f58-a925-52ca853f0da4",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4a6aa505-175f-47b2-8385-562ec8aaff29"
        },
        "item": {
          "id": "4dfe6014-7179-47d8-a6b2-4797259b3de4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e6da9137-414d-456b-8a79-b64b51f28e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0736d6-4649-4192-b356-ea6acd16257b",
        "cursor": {
          "ref": "d3975a53-77f0-417a-9f01-b8896985b968",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "95f8d7d4-ca02-41ca-aeca-72594a8e4ac8"
        },
        "item": {
          "id": "7e0736d6-4649-4192-b356-ea6acd16257b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "829f910f-ee4b-4889-9dfc-13c10bd652f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a35e0a-6dbf-4927-ab88-c414b6121834",
        "cursor": {
          "ref": "d2c1d4e8-4fcd-472a-86c5-f0aa530a9e5f",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "753f2b53-92f4-463c-a134-d7393c8f47b6"
        },
        "item": {
          "id": "48a35e0a-6dbf-4927-ab88-c414b6121834",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "15717dbb-0cac-4a27-8fe5-da761910895f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d743ed4-4d19-4bf2-ba68-e0cf2a387c86",
        "cursor": {
          "ref": "1fe833d8-fc68-4fbb-adfe-871a2091d06b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d514ecad-7c7f-407b-8cfa-8009558a1d02"
        },
        "item": {
          "id": "2d743ed4-4d19-4bf2-ba68-e0cf2a387c86",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a3274735-c512-42b5-a9cc-ce27ebb82f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c80995b-7b64-434c-8d69-ff257b760470",
        "cursor": {
          "ref": "20f4c42d-b100-4945-a2a1-c2406012facf",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d2ef3c13-2dab-4b8e-81fd-84655c82f70e"
        },
        "item": {
          "id": "4c80995b-7b64-434c-8d69-ff257b760470",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7c493299-9abc-41b5-8469-24bd9a14e720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd64d3d2-0cd0-4845-bb5c-9876e338e823",
        "cursor": {
          "ref": "e31aa364-631d-4d05-a094-4ed1085b18b2",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "01d25087-ba7e-42a2-b9ef-9d41e56c104f"
        },
        "item": {
          "id": "cd64d3d2-0cd0-4845-bb5c-9876e338e823",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ed321a88-9ad3-446b-84d2-063a142073ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5504a0f-5d2a-476c-9315-a78ce6357119",
        "cursor": {
          "ref": "9e03a05c-5a7a-4cba-9d3a-7576506745ba",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "528142f0-cbca-4123-afb4-59fcde2d70f0"
        },
        "item": {
          "id": "d5504a0f-5d2a-476c-9315-a78ce6357119",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1156b6ce-4129-4f66-a8c9-612b5c241329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e7c707-1d0c-421c-8ba4-2302610f6829",
        "cursor": {
          "ref": "0e806cfb-768d-4fd3-a215-47b6ad42a090",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "78455f1f-0201-4f8b-ab54-6fbe81f78eef"
        },
        "item": {
          "id": "d0e7c707-1d0c-421c-8ba4-2302610f6829",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2de66e29-9549-41ee-8109-48f9a62bdf93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16350de8-c19a-406a-8b98-204df3f49d95",
        "cursor": {
          "ref": "bd6ac30c-971f-48a8-be8d-f818e8e2d31f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2253a3f9-f070-4879-903e-05d6b75cf4fa"
        },
        "item": {
          "id": "16350de8-c19a-406a-8b98-204df3f49d95",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "635d6657-312f-4704-882d-b531e1630cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b774faa9-400f-4e88-8d93-1caa0e31e34a",
        "cursor": {
          "ref": "1b043f80-6014-470d-a2f4-94ca9154a8a6",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f0182d01-14e6-40bf-b2b7-0e1199566f3f"
        },
        "item": {
          "id": "b774faa9-400f-4e88-8d93-1caa0e31e34a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "df8e9553-c2a2-49a1-9651-fcb30bd0abe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5578ec-5535-458e-a378-6fb55569cd7c",
        "cursor": {
          "ref": "05aab334-b8e3-418b-9213-54bea41d67f7",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3efc06b5-018f-4590-8b0a-8126005db74d"
        },
        "item": {
          "id": "ff5578ec-5535-458e-a378-6fb55569cd7c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "597d8a1a-f704-449e-bef9-dfa59680c3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fafab17-0b08-4a0e-aca0-f6e177f87a73",
        "cursor": {
          "ref": "5fb5f793-9b38-444b-bb3a-2ef1c6be4563",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8d72ca3e-73e5-402e-93fa-d97541665ef8"
        },
        "item": {
          "id": "0fafab17-0b08-4a0e-aca0-f6e177f87a73",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "612c190d-ed71-4bc6-a852-3eb4bc79a8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37536080-1d7b-41fe-80aa-6a3bbfd224c4",
        "cursor": {
          "ref": "0dce21d3-d2c0-48a4-9a7f-ba9ad435cf4e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1581ee02-9dcf-4448-8088-f37bb8a25b87"
        },
        "item": {
          "id": "37536080-1d7b-41fe-80aa-6a3bbfd224c4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e5dc043e-8165-4b76-a33e-b2fb959f2658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104d96e6-a3ea-4ada-97ae-1d13d77cb516",
        "cursor": {
          "ref": "c52bc568-57fd-498f-97e4-c3c398239b9a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "597b8c3f-11ef-4d49-8f40-88c616c361c0"
        },
        "item": {
          "id": "104d96e6-a3ea-4ada-97ae-1d13d77cb516",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2cd606fa-3fbf-4be5-8d5a-d67e4a11ebba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba82321-47e3-4b16-a8a4-d7bb2adc8617",
        "cursor": {
          "ref": "168c1996-1df3-45c8-a19a-69df04fa6c1b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "38bfacf0-fc2a-4825-8717-762c1b2b4de1"
        },
        "item": {
          "id": "dba82321-47e3-4b16-a8a4-d7bb2adc8617",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4baca643-940f-4be0-b911-9f7923d15577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368e89f0-a71f-4185-8394-22bd37043a0c",
        "cursor": {
          "ref": "0f4b5bca-9e75-45e3-812f-d5455e53e5c7",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2c07d49b-3604-4507-abb7-fade452133a5"
        },
        "item": {
          "id": "368e89f0-a71f-4185-8394-22bd37043a0c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3cba2294-0c7f-4298-9756-44c684e2ab8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0bca73-1489-49e5-be18-3226e3d1855e",
        "cursor": {
          "ref": "6894dfb2-44e9-4589-a600-051de8d291c9",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2be7ff73-f6fd-4392-bdbe-6b8eac819a5c"
        },
        "item": {
          "id": "da0bca73-1489-49e5-be18-3226e3d1855e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7eba5984-6627-4e1e-8244-8c0f07e6ad2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45968ccd-df30-45b4-9314-699d21609897",
        "cursor": {
          "ref": "c978b272-e787-4e24-bf2e-820c611891df",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b6f7b0e2-e76e-4828-9347-6a4080763f6a"
        },
        "item": {
          "id": "45968ccd-df30-45b4-9314-699d21609897",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7d5beacf-d903-43a7-9079-ce178bf9bd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23d58f6-026c-484c-bba0-8626206de45c",
        "cursor": {
          "ref": "9820bde4-ce20-4236-bc49-365f6a6d3803",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b63278e4-3a72-4c26-9f76-047209a444be"
        },
        "item": {
          "id": "d23d58f6-026c-484c-bba0-8626206de45c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b48620a0-cfeb-420f-afd3-21b492ce9d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48468685-ce1e-4414-ae2f-b2d47b09f46d",
        "cursor": {
          "ref": "669b0f5e-d5c8-449b-9742-f8f655946741",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3b5569b5-c024-495f-a25a-714e463dd1c2"
        },
        "item": {
          "id": "48468685-ce1e-4414-ae2f-b2d47b09f46d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "42796a30-1265-4fd4-9678-eb7119ca0440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41752cfb-a521-417a-81e3-235b4df626cd",
        "cursor": {
          "ref": "214ee801-b875-4518-9330-a1b2e332e08e",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "878e7c5e-fbd3-4ffe-8a12-57e46fa1e247"
        },
        "item": {
          "id": "41752cfb-a521-417a-81e3-235b4df626cd",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4b1e3f39-792b-4125-b599-90bcafba99ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2973840-0daa-44d6-ab8e-63c2808ab95c",
        "cursor": {
          "ref": "3c82f8f7-4088-40ac-a46c-8ce96fc292d4",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f74324dc-e370-45d2-b169-4514487cf6a8"
        },
        "item": {
          "id": "d2973840-0daa-44d6-ab8e-63c2808ab95c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "338ae7e6-58e9-48ad-bd02-cbf07b5975f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db97862-7682-4718-a9b5-b92078c28ca4",
        "cursor": {
          "ref": "e70c0991-76b3-4674-9561-df15a073d000",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "30044f9a-4f1d-42ef-b683-19356ec2e5c6"
        },
        "item": {
          "id": "6db97862-7682-4718-a9b5-b92078c28ca4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "035730ac-00c8-491e-860f-ec19532ec6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992d2153-bea9-4f50-8c58-88b073b7d94b",
        "cursor": {
          "ref": "3d6a6ca7-c0c7-4b53-aad5-c8cc2348a31c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fcc49f84-8f7b-444b-9de3-1d4c3c0cf223"
        },
        "item": {
          "id": "992d2153-bea9-4f50-8c58-88b073b7d94b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "226bfee7-a8b6-467d-8205-8b82660ee9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3d4c96-c21b-46c1-a41f-a1d695c79c32",
        "cursor": {
          "ref": "f2e5cfbe-cac8-40f5-b856-0404eed13246",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6a433d82-fbf1-4b46-bda6-2f8aa430d7aa"
        },
        "item": {
          "id": "1d3d4c96-c21b-46c1-a41f-a1d695c79c32",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3f4865da-50f5-4c2d-9764-39477771746e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de337e6f-110c-4e20-b83a-49816e85b60c",
        "cursor": {
          "ref": "3bfbb102-654a-42eb-b03f-7a6af6c3470b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c6ce5ba9-f24b-453a-b93b-29ce27c01212"
        },
        "item": {
          "id": "de337e6f-110c-4e20-b83a-49816e85b60c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2ea54ec1-f500-466e-ac83-bcf56bfda0fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b368d850-cb65-48cb-a4c7-c462d6799421",
        "cursor": {
          "ref": "0e304103-e5fa-4b0d-b910-b3ea997953fe",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2e35bec8-5f9b-4713-adb1-01ef05cc8af4"
        },
        "item": {
          "id": "b368d850-cb65-48cb-a4c7-c462d6799421",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "aeb26758-ad79-427b-bc99-f90e55f4dce2",
          "status": "Created",
          "code": 201,
          "responseTime": 97,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae8cbc5-67c8-4e3f-8f54-43f2fd75c5f9",
        "cursor": {
          "ref": "e7d01706-d68b-468d-9165-da0c5da1cf73",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d7208ba7-1f1b-47e0-8cb7-15dbb5e87bd2"
        },
        "item": {
          "id": "8ae8cbc5-67c8-4e3f-8f54-43f2fd75c5f9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "956898bb-de53-4e35-8e6d-a5c42b0b1abf",
          "status": "Created",
          "code": 201,
          "responseTime": 230,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9328f70d-7b13-4e43-85a9-c8d5ac2934a6",
        "cursor": {
          "ref": "5232c779-c460-4373-ab89-de71a323e30c",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c52c9678-d60d-489b-b823-b164742c8531"
        },
        "item": {
          "id": "9328f70d-7b13-4e43-85a9-c8d5ac2934a6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e9f836d2-2e5f-4a0a-9a59-8b447198e32b",
          "status": "Created",
          "code": 201,
          "responseTime": 137,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "106b5613-279b-4004-9477-c50c82ab5ed9",
        "cursor": {
          "ref": "aad1f604-ec56-43f3-95ed-5cb5791b0cb4",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a6052599-d429-4807-8786-a4496fb7cc1e"
        },
        "item": {
          "id": "106b5613-279b-4004-9477-c50c82ab5ed9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "efb968a6-aa51-4ade-9420-3f8a62b904a5",
          "status": "Created",
          "code": 201,
          "responseTime": 73,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ed6bbf-c76d-478e-9b42-332d3b1e7887",
        "cursor": {
          "ref": "c9bc5469-c046-4ab5-93e6-a08e39b59663",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "12874186-83ca-43c2-9c11-3cea0706a4c1"
        },
        "item": {
          "id": "60ed6bbf-c76d-478e-9b42-332d3b1e7887",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0ab426c9-740f-4b05-a8e3-ea9f355f8ad2",
          "status": "Created",
          "code": 201,
          "responseTime": 75,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5454fd6-eecd-4517-a848-7c2424cd5613",
        "cursor": {
          "ref": "cbdcb2b4-f6a4-45b5-b9a5-aa8d04ee39e4",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ed1854f1-4a5d-4e9a-b0f5-69c419a1517c"
        },
        "item": {
          "id": "c5454fd6-eecd-4517-a848-7c2424cd5613",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5b23e2fd-dca1-4ed0-9c42-af0cbd41fadb",
          "status": "Created",
          "code": 201,
          "responseTime": 72,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce24a9f-0614-4874-a750-f0dfff03de5c",
        "cursor": {
          "ref": "f097ee81-c99b-4c58-ba39-9d0d98f7f752",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "47ab5f01-be33-4a01-a500-8125fb80f522"
        },
        "item": {
          "id": "0ce24a9f-0614-4874-a750-f0dfff03de5c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c3f3f4bc-6dae-4a8e-8580-2131902146a6",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15db39dd-ce8b-406a-ba0f-c15ad4cc4d07",
        "cursor": {
          "ref": "7cc2e8d3-cbb4-4395-87cc-48374590baed",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d75d37a7-8fc7-4570-a55a-5243e67e4554"
        },
        "item": {
          "id": "15db39dd-ce8b-406a-ba0f-c15ad4cc4d07",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b1b9582c-746f-48f6-820e-da7aef2a7bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695ed93c-2206-4542-9c08-86ae9fb4acac",
        "cursor": {
          "ref": "05896fbe-88f7-4f92-b326-2b5ede9443e4",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e2476f76-a362-4bf8-9012-611e227c5e26"
        },
        "item": {
          "id": "695ed93c-2206-4542-9c08-86ae9fb4acac",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8e44b283-fbdf-4880-a61d-c8884e164222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79e6263-6bbd-421a-98f3-2130cc1f3473",
        "cursor": {
          "ref": "97b33231-410e-40b4-aa70-20958ddd4c37",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f47cc93f-32e3-4b7b-89b3-839bdf1faff6"
        },
        "item": {
          "id": "d79e6263-6bbd-421a-98f3-2130cc1f3473",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "124f4ff6-3085-40ea-9cbf-51095acad4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a180959c-b4b4-485c-a99a-8dd50eb286e0",
        "cursor": {
          "ref": "670174a1-7618-41ff-ab58-89e2251853b4",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d4eabbd2-3c4a-4efa-8ad0-a1ea81abfd75"
        },
        "item": {
          "id": "a180959c-b4b4-485c-a99a-8dd50eb286e0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e44bfe75-edfc-46d5-9cac-eb86f999f6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50afed99-428f-44d7-b474-8f157e138d8c",
        "cursor": {
          "ref": "7c77300e-5a6f-4da3-911f-ece4318c44c5",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "467117ea-c175-430a-b6ab-bbe4d004f7a1"
        },
        "item": {
          "id": "50afed99-428f-44d7-b474-8f157e138d8c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "77e4e625-a611-4fe1-b64c-8b426eabb03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48565fe8-7d0e-4386-aef2-6158334c9a8d",
        "cursor": {
          "ref": "5ad6ca21-b31a-4474-bd48-7fdc0f43876d",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "884a0ae5-eee0-4bf6-8be7-8c94ff62057c"
        },
        "item": {
          "id": "48565fe8-7d0e-4386-aef2-6158334c9a8d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4ebcd9a5-131b-465a-8b99-05c0cec5caf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf617d6-d1a4-4555-9b56-ff274f3ca75e",
        "cursor": {
          "ref": "b6a46c59-b148-4555-b402-8b57d9543508",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f45dbb7c-567a-4751-9b32-e5f4797756e6"
        },
        "item": {
          "id": "9cf617d6-d1a4-4555-9b56-ff274f3ca75e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a00641ed-9535-4707-92dd-5cda45f853d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87d5733-0d92-4fc8-810b-f0205ceb7da1",
        "cursor": {
          "ref": "f272e97f-004f-4c26-ae64-2a83e1f06f54",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b0555d56-3cf0-498d-9b2d-bdd7d920646a"
        },
        "item": {
          "id": "b87d5733-0d92-4fc8-810b-f0205ceb7da1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bb0d9552-8bec-409e-8f18-2089fb99e00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c061c4-7318-487f-9a35-7b906118db6f",
        "cursor": {
          "ref": "13e4388b-3725-4520-9fa1-33af181ccee6",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b57ffc7f-b3e1-4c0e-9733-0a672486067a"
        },
        "item": {
          "id": "73c061c4-7318-487f-9a35-7b906118db6f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9a1cc77b-03f4-46ff-9962-77a11fafb16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26dcf6f0-5bb1-4d27-be22-eb5cc339fc85",
        "cursor": {
          "ref": "6f8bc06b-5cd6-4c0c-8cf7-910f4e9c9b49",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "750054c8-d4c8-40e8-9d76-66a16e65b3de"
        },
        "item": {
          "id": "26dcf6f0-5bb1-4d27-be22-eb5cc339fc85",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5229fe48-c4a9-49bf-93bc-b4a9fa010866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21858eca-a011-45fb-be39-dd78e6869921",
        "cursor": {
          "ref": "c424dc6e-d66e-4268-9137-d221412ffcb5",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bfe960a9-07f2-4eee-936e-78f7c0e47014"
        },
        "item": {
          "id": "21858eca-a011-45fb-be39-dd78e6869921",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bd216aca-bcef-4929-ab6d-75349405a811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2ac4f2-459f-4bba-9a73-f8ed82019138",
        "cursor": {
          "ref": "b6f4c094-4408-4e8b-bf99-84f54daf5627",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c0b9195c-dde5-4a93-828f-9520d28b2ada"
        },
        "item": {
          "id": "0a2ac4f2-459f-4bba-9a73-f8ed82019138",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c0916f84-1053-4a26-84b8-e7a048ff7d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd4759b-0fed-4e34-8ec3-d130c704a9bd",
        "cursor": {
          "ref": "1c542618-2c5f-45e6-8f5d-5285162b268d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "239ed403-29b3-4d74-b940-70fb67a7ada4"
        },
        "item": {
          "id": "0bd4759b-0fed-4e34-8ec3-d130c704a9bd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "da53885e-c956-4876-82c1-c8d5cffff5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed029e7-386c-438b-b6d3-7d8c7dc20acc",
        "cursor": {
          "ref": "ed89dd09-513d-4e1f-adab-3c1d3ac1cfdf",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c259a772-f816-4ea6-9c02-d09324046dde"
        },
        "item": {
          "id": "eed029e7-386c-438b-b6d3-7d8c7dc20acc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a5990c3e-ab45-4146-9a31-6e6b39bc22db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d30a5b-cf2c-4adc-9d9f-61a5cf7c3772",
        "cursor": {
          "ref": "34f27649-44f9-4c92-a62b-a5ca83b9b4bb",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6ff0f00a-9c38-41a9-9888-c8c871f3305d"
        },
        "item": {
          "id": "51d30a5b-cf2c-4adc-9d9f-61a5cf7c3772",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ecf3180d-3497-41f4-a14d-cc6feb661876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb38678-88c2-4d48-b7e8-e525246b3a88",
        "cursor": {
          "ref": "d9e24b5e-6a14-4f00-b11c-4aa11ed6e98f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0ffcef50-1051-45d2-b56b-64eef8563d48"
        },
        "item": {
          "id": "9fb38678-88c2-4d48-b7e8-e525246b3a88",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0b752490-0c52-4068-87b2-e323df763a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671d6f04-e51a-4526-86f8-d844132290b2",
        "cursor": {
          "ref": "dfd0ef51-359f-4394-aa25-05eb3f7781d4",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e0919fe2-c2a4-4dec-83e0-09f1b2d139a8"
        },
        "item": {
          "id": "671d6f04-e51a-4526-86f8-d844132290b2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "006c0e9c-dbbc-4093-a0c4-709390daca5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c752eb7-e119-40f3-926a-85cdb9657040",
        "cursor": {
          "ref": "3d086017-6b11-4c6f-8f8e-e2b111092655",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ac80ec6c-820c-40e9-a88a-7ae216ab2ee0"
        },
        "item": {
          "id": "6c752eb7-e119-40f3-926a-85cdb9657040",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7a17c8d5-9463-4894-9c7b-b537a6b5c391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cfd130-3f23-4625-9265-3ea599debebb",
        "cursor": {
          "ref": "4a1b5d09-0f29-4e8d-8dd0-7b917b85ef50",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b9f705d0-3cce-43c0-a8fa-0078fac84588"
        },
        "item": {
          "id": "56cfd130-3f23-4625-9265-3ea599debebb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "73566af6-5d83-463b-9a56-b05c68c7e4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcf453f-f987-4d68-a712-b25b369a5f02",
        "cursor": {
          "ref": "271c5bc6-4cdb-4eab-b31b-2f6d386e1947",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "257e9443-60d0-4a30-ab11-c02989aae403"
        },
        "item": {
          "id": "3dcf453f-f987-4d68-a712-b25b369a5f02",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5df085e6-21ae-4f40-a2da-7dbcbfc40f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db291dd1-db3a-4918-b464-fddb7fbac8e8",
        "cursor": {
          "ref": "d329cb16-b40e-4839-b488-cba65863f368",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "49fb5b02-375c-40f9-9ef2-3664d37336e3"
        },
        "item": {
          "id": "db291dd1-db3a-4918-b464-fddb7fbac8e8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8f75f579-479f-4771-a0cd-26af19612ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8562b6c-0550-47f7-a654-7d8c9d2c8442",
        "cursor": {
          "ref": "efb7a280-d038-4a0c-8fa5-70ec460a1358",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "34e7bb8d-f54f-4867-a123-5d6077665257"
        },
        "item": {
          "id": "a8562b6c-0550-47f7-a654-7d8c9d2c8442",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d07ac31f-c286-4e8c-92ba-1916eaf3d7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b746d715-f1d8-48a0-b800-9e9ab30543a2",
        "cursor": {
          "ref": "74f3bde5-17a6-4022-9a3b-dea847ad47b5",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "82d15ce8-3f08-4767-8907-14dec0e41f91"
        },
        "item": {
          "id": "b746d715-f1d8-48a0-b800-9e9ab30543a2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6b4a7444-2585-441d-bfce-1796e2f2b993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5394a0-9a6a-4ca1-9837-0e339016cda0",
        "cursor": {
          "ref": "ef7b3b59-0c61-47fe-91a1-d0ee25ca0746",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6ae37031-994d-40d5-a2a9-26eda3aadc52"
        },
        "item": {
          "id": "ed5394a0-9a6a-4ca1-9837-0e339016cda0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d091dcb2-9590-4786-9a16-93b38710270b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9202a1-ddc5-4e61-ad04-875bf427153b",
        "cursor": {
          "ref": "162efb4c-b4cf-490b-ae98-0b9cad018231",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b3d36a54-2b26-4391-ae37-f92ad41f679a"
        },
        "item": {
          "id": "cd9202a1-ddc5-4e61-ad04-875bf427153b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1ba12617-0a6c-47fa-928e-322b6373b42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0968a6-b066-4472-af39-02bb430aa1f0",
        "cursor": {
          "ref": "94a7455c-1c85-43d4-86dd-3aa6278ded97",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1297d07a-117e-44a0-a356-c533a3e3a2b7"
        },
        "item": {
          "id": "1f0968a6-b066-4472-af39-02bb430aa1f0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bc1d8535-8333-4725-be5b-8a450bc68174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a5a867-eb2b-4072-ba68-4d6e8dbf5de3",
        "cursor": {
          "ref": "24d3e2ec-f5f6-4483-ab93-2648ccafc13b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "051d571f-56e3-46c0-961c-4d75de577d8f"
        },
        "item": {
          "id": "24a5a867-eb2b-4072-ba68-4d6e8dbf5de3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "41538694-a05b-41f7-a1a0-a63229ecff8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21a61c1-9f36-4e06-b7fd-60b24fd3a8b5",
        "cursor": {
          "ref": "86bba70f-5f73-44e9-89b5-0e2ab3060645",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1b33de9a-df0a-4b71-9994-dc47a1dd5f35"
        },
        "item": {
          "id": "a21a61c1-9f36-4e06-b7fd-60b24fd3a8b5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0c12c305-9e49-48b4-8f11-4500946ab8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609898d0-c4c3-43c3-a9f3-d51a934e3faf",
        "cursor": {
          "ref": "c8c5e245-df8c-46c2-9001-b805429bb31f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8184e5cd-9ecf-454d-a3d3-779f48376500"
        },
        "item": {
          "id": "609898d0-c4c3-43c3-a9f3-d51a934e3faf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "15951a63-083a-4e24-8629-150cdc9274ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26a3f4b-8847-4386-84b8-7c48e55a695b",
        "cursor": {
          "ref": "9e1c03d7-8d66-4c59-ba0b-7ca4cfc0c0b7",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "80a17961-ed94-4922-a844-bc4ff5f737ff"
        },
        "item": {
          "id": "d26a3f4b-8847-4386-84b8-7c48e55a695b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "53ff31c3-14a7-4888-95eb-b152ee48316c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff63f2b1-504a-4a5d-bfdc-f40ee25ccd9f",
        "cursor": {
          "ref": "66c6c0f9-1204-49de-ba07-acbbe4de4ef1",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0b519dd5-66c4-40ca-b846-e8132cbe418a"
        },
        "item": {
          "id": "ff63f2b1-504a-4a5d-bfdc-f40ee25ccd9f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7f513c12-fb67-4700-86b0-e804b7d53dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df898ba6-120a-4499-ac64-233b83f5b7b5",
        "cursor": {
          "ref": "ef51d89d-fe20-489d-ae26-fa07fc566be6",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "36bd25c0-00c1-44ef-937d-32d8cc0dca2f"
        },
        "item": {
          "id": "df898ba6-120a-4499-ac64-233b83f5b7b5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "774f5a93-02f6-4930-9dbe-4a0d925ed7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a0317d-bf9d-4793-9792-c6319acd7947",
        "cursor": {
          "ref": "ca4aab8b-0c88-44d0-8587-4c60930b190b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1cec870b-2e80-4084-aa97-69dc09bbefdb"
        },
        "item": {
          "id": "50a0317d-bf9d-4793-9792-c6319acd7947",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "440c31a4-bd3d-4054-be69-89829b80890f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc10c1d4-b4d3-40cb-b3e6-2813cd813875",
        "cursor": {
          "ref": "38f0acad-a6e9-4324-b5c1-5d3ab34ecd45",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c99ee151-9c99-4e11-aca9-634b30dde953"
        },
        "item": {
          "id": "fc10c1d4-b4d3-40cb-b3e6-2813cd813875",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2e7619f2-5598-4f3c-8f78-f75239bd41d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b16787-f407-492c-8f95-de26df29d642",
        "cursor": {
          "ref": "8d0877a6-4760-4dbc-a942-749ae46f7fb7",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "aaa693ed-3240-4a21-9fdb-7125cd1c8bf8"
        },
        "item": {
          "id": "10b16787-f407-492c-8f95-de26df29d642",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "72d2ce44-6e5d-40dd-9523-06c90a69df0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f713d6-afa4-45e4-b9f7-fa5b8b73abc8",
        "cursor": {
          "ref": "ae9ea9c1-6a6a-4c4a-ac1c-2c8ca66c4410",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "59517f4e-1736-413a-b481-93e8152bc96e"
        },
        "item": {
          "id": "59f713d6-afa4-45e4-b9f7-fa5b8b73abc8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bdc70c41-3d16-47b6-b87e-6ddf8fb23a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcee6fd2-629a-40dd-b0d6-2db875a5de32",
        "cursor": {
          "ref": "2adabf5f-6c28-4749-94d4-642439944f1f",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a3f5568b-0e6c-4cfc-b82e-36a8bb531407"
        },
        "item": {
          "id": "bcee6fd2-629a-40dd-b0d6-2db875a5de32",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2caec74f-0154-41bf-862a-aab24a0de2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc47d1ca-e659-4732-84c8-1845facac7fe",
        "cursor": {
          "ref": "77839077-2866-4431-82e9-39141cee6c34",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "70416f8a-4df1-41e3-aa9d-0865354a4d88"
        },
        "item": {
          "id": "bc47d1ca-e659-4732-84c8-1845facac7fe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8dbc7e27-e3aa-4605-bdd5-a7caeaff9d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddcbc16-2f2e-4192-8def-07c6cb170e08",
        "cursor": {
          "ref": "7169423a-2576-49b9-84af-6fe7b49b2f3a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7ff12ebd-de88-40bd-a5f9-76cbf698e9db"
        },
        "item": {
          "id": "1ddcbc16-2f2e-4192-8def-07c6cb170e08",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5cd686da-df5d-40a8-b179-574d443a3a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f42622-bf30-4d5b-bf05-09ae6d0d656b",
        "cursor": {
          "ref": "14d044e4-c76a-4b64-a983-de54a60529c3",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3d5c6958-d660-4c4b-a078-9c30a8e93233"
        },
        "item": {
          "id": "a3f42622-bf30-4d5b-bf05-09ae6d0d656b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a733d6a0-17f5-4d65-97f9-ba6756e3a29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da59261-cfb8-4bf5-abe6-609699706ccc",
        "cursor": {
          "ref": "64c43353-571f-40cf-bbad-32fd05244cee",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1d03521e-721b-4dc4-8006-6501a4f5c352"
        },
        "item": {
          "id": "2da59261-cfb8-4bf5-abe6-609699706ccc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c0fd7d44-d0fb-4209-b373-897c4608377e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5165c3a-78f0-47e8-abb1-8368cc294ec3",
        "cursor": {
          "ref": "b0c25abc-ba23-412e-b261-246287e5b9db",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "374af5b2-1297-4997-9dd0-1754695969a6"
        },
        "item": {
          "id": "c5165c3a-78f0-47e8-abb1-8368cc294ec3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7f631bf3-6208-4f0b-8e6c-9a0cf884fd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226794bc-c5fe-469a-adf5-1369208c8b2e",
        "cursor": {
          "ref": "7267fb95-f3fe-49ec-8e3e-ee2eac40abd6",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3f16d879-fbaf-4bef-affd-6232109a0c66"
        },
        "item": {
          "id": "226794bc-c5fe-469a-adf5-1369208c8b2e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d2ef38d7-8e7e-4ac2-93d0-26fceecb7bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b668643-6067-44d8-aff5-aff05385ee6a",
        "cursor": {
          "ref": "2269393a-3767-4d1c-9daa-8bce26509e8d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5d0e3bd7-18c1-4335-9e9d-cea3c279a94e"
        },
        "item": {
          "id": "7b668643-6067-44d8-aff5-aff05385ee6a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4a1b9991-455b-4160-b860-5fd93e82bb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a640ebb4-2ddb-418d-bcc3-1c6c102b3052",
        "cursor": {
          "ref": "e6002ec5-197f-42b6-bc5a-0acf2f793b93",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4192f2c8-4127-4598-bc30-538deb9870d7"
        },
        "item": {
          "id": "a640ebb4-2ddb-418d-bcc3-1c6c102b3052",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3e8414e5-ea64-4259-8f7d-594c9cfad4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab4bcc2-4d5a-4a12-a06a-1bb999fea12e",
        "cursor": {
          "ref": "34411bc8-5bc6-4b72-af9b-adf765905a40",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2606afeb-d950-43ae-8be6-281c5b6f7b23"
        },
        "item": {
          "id": "3ab4bcc2-4d5a-4a12-a06a-1bb999fea12e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f0331422-7745-4fc9-ab31-b3deb69ea952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92778e7-a516-4b4b-ab17-d5fd440b79e5",
        "cursor": {
          "ref": "a2ddd64f-ed67-4683-8a36-5f14ffca02a4",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "24da4ea4-9fed-4a33-ac99-6bbd6e6bd0a1"
        },
        "item": {
          "id": "a92778e7-a516-4b4b-ab17-d5fd440b79e5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0f15a521-baf8-4660-ad9a-99c7381caef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fd2d0d-247d-49b3-922d-77b66a98521b",
        "cursor": {
          "ref": "9ea5a3e4-be7f-42c0-bd7a-3be9b3063b79",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "81628ef8-1abb-45a2-8a83-bd8c11712d72"
        },
        "item": {
          "id": "a1fd2d0d-247d-49b3-922d-77b66a98521b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "873f8896-6767-4d30-9a14-2a188f056acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab3dea5-3bd9-4c08-93d1-d39c37b8fa9a",
        "cursor": {
          "ref": "e0da74a4-772e-49d7-b719-4a88ef3168a6",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8c5df4eb-15ed-4a27-b092-3cb356840d63"
        },
        "item": {
          "id": "8ab3dea5-3bd9-4c08-93d1-d39c37b8fa9a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "753ac113-ab18-4fa6-88d7-2bf1d7d87d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464ac930-28f4-4ee1-b447-201316c41618",
        "cursor": {
          "ref": "bf05542b-c212-40c8-9770-b8aab72615df",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "168b2c9c-f8dd-4090-af30-0a0439196ebd"
        },
        "item": {
          "id": "464ac930-28f4-4ee1-b447-201316c41618",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a3ee0e21-40ac-4c90-961f-20ad2b119c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddff1ef-86bd-4790-b238-3eb5d671b0d7",
        "cursor": {
          "ref": "ffde73a2-1425-4958-ad0d-a168affe9975",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "51f2a10a-c683-4cb5-8618-5da33ba32dff"
        },
        "item": {
          "id": "6ddff1ef-86bd-4790-b238-3eb5d671b0d7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "aedf37c2-2f69-40e2-91cf-fc497f329522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ad15b3-a2e9-48d2-afd4-0dae1c625b7b",
        "cursor": {
          "ref": "c817e683-bc3c-4750-bce4-865ddc958f2b",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "aeef8061-07c7-447f-aa6d-840b8f6d1d44"
        },
        "item": {
          "id": "59ad15b3-a2e9-48d2-afd4-0dae1c625b7b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d5fc68e4-5305-4759-8e3e-545de40aa436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febb22fa-20d6-4e07-b12c-954fd5a9e08a",
        "cursor": {
          "ref": "39350c54-641d-4103-bc53-3fefacaf23dd",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d0ba899c-6112-4aa7-a59a-96658e5e3be8"
        },
        "item": {
          "id": "febb22fa-20d6-4e07-b12c-954fd5a9e08a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d5b9a04f-bd04-43b6-a8fa-3715f2bb5d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e95de9-3516-41ab-bb67-8885ef05c639",
        "cursor": {
          "ref": "ee39b35a-c73e-41c0-91fd-ba517b8d235c",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bd22e713-1402-48fc-972a-21edd05c5264"
        },
        "item": {
          "id": "a7e95de9-3516-41ab-bb67-8885ef05c639",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ec018104-fa2a-437d-b52d-46bfa224a895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151f3214-d6e5-4f1a-bea1-e732adec692b",
        "cursor": {
          "ref": "41807333-2c3b-49d3-b7d6-ab0ef24645e7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ac508b27-f79e-41c1-9aad-cf447a3263f6"
        },
        "item": {
          "id": "151f3214-d6e5-4f1a-bea1-e732adec692b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "55aaa4e4-178a-4b77-9566-49548217336d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65eea94c-c008-438e-91c2-fb5474c7cf3d",
        "cursor": {
          "ref": "943307ab-d91c-4146-974e-776a3de97ab1",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a467fa02-2a8d-4814-a368-5edece5b1dcc"
        },
        "item": {
          "id": "65eea94c-c008-438e-91c2-fb5474c7cf3d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7e4cd1ed-9b38-48be-b7ad-39ad21b3c094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b503f7a6-a5fe-436b-9063-9a5e97d4e709",
        "cursor": {
          "ref": "c4d3738d-381a-4e95-9a6b-f89d69050743",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8abb5d90-1728-4b7f-9213-2ff8c87de501"
        },
        "item": {
          "id": "b503f7a6-a5fe-436b-9063-9a5e97d4e709",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b10e3348-be2c-40bf-929e-215811ee41be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3e2edc-7d80-4e0d-a8ee-b2566fd5eaa6",
        "cursor": {
          "ref": "1dc9b791-47aa-4190-ba93-6c26ba362b3c",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a1c50d22-ea70-4da2-b316-f311f310abf4"
        },
        "item": {
          "id": "7c3e2edc-7d80-4e0d-a8ee-b2566fd5eaa6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1fb5992d-3667-4cfd-b6f1-dfa614d9e7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a812c682-4d16-4e9d-9016-f53a4be6f4cd",
        "cursor": {
          "ref": "3a81fa16-d2ea-4fab-a952-c5511d3bd843",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5ae7d168-666e-49ec-acb1-4e8bbc8b0322"
        },
        "item": {
          "id": "a812c682-4d16-4e9d-9016-f53a4be6f4cd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e3e32528-0b07-4e7f-abcc-7a1540fde2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4211f44-0318-4e78-8e5d-ebeb9279fed0",
        "cursor": {
          "ref": "2057b651-fe30-4816-8e09-d9ba9a1c2edd",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5e20e30e-763c-419d-bda5-46c636a49bd9"
        },
        "item": {
          "id": "e4211f44-0318-4e78-8e5d-ebeb9279fed0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d7adc0df-d779-46ec-a508-822d8cefda07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e08afb-512d-4093-bccf-29deb1ba9c96",
        "cursor": {
          "ref": "9a94f93a-480d-4f3d-90ef-dcb1a3f13e83",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f7a1c5c1-c5eb-4daa-8e7c-eabd78bfb8a5"
        },
        "item": {
          "id": "02e08afb-512d-4093-bccf-29deb1ba9c96",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bf35a982-0ec2-4707-a8df-6469f91094fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363823b9-0711-46e5-842b-e9c37a3d597d",
        "cursor": {
          "ref": "4cb14e88-5eca-4b6d-a1da-b5c3f83a8ed9",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "01672986-2c24-42d0-bb4e-a9909a8f5b42"
        },
        "item": {
          "id": "363823b9-0711-46e5-842b-e9c37a3d597d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a398aa98-36e1-4587-8125-a8d46da4b6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd071b9-caed-4ef6-9b50-11675a0091d7",
        "cursor": {
          "ref": "c0ba7acf-f226-4da7-b1d6-350f286fe7af",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "75f90930-7513-4b86-b85f-2b9115d5f706"
        },
        "item": {
          "id": "0cd071b9-caed-4ef6-9b50-11675a0091d7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7356890c-5106-4d5f-8148-9e30b226b59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c781e4ff-3b2a-478c-bf1b-bb4fa3259a25",
        "cursor": {
          "ref": "980521de-c070-4f30-adce-69836ed617db",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ded85aaa-3aeb-480b-824e-248176dc07fe"
        },
        "item": {
          "id": "c781e4ff-3b2a-478c-bf1b-bb4fa3259a25",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "14c25bd4-e42d-4c12-88f2-163469c6882f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5f1740-39e7-4aae-b080-d9e07439fa02",
        "cursor": {
          "ref": "2a03d01c-9816-438f-8651-d3189b75d89d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c6533a11-c401-4934-bbf2-618d9de7e893"
        },
        "item": {
          "id": "0d5f1740-39e7-4aae-b080-d9e07439fa02",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4c5b593f-a842-409e-994b-a65c6382424a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44beb50c-1f17-4b2c-b066-ddc728fae906",
        "cursor": {
          "ref": "1a7eb19c-d9f2-4cd9-9bb6-5ea9a580ebd9",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8f2e2b16-d663-4746-8ead-b9f81ca953e7"
        },
        "item": {
          "id": "44beb50c-1f17-4b2c-b066-ddc728fae906",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b1c9b525-6e8d-40aa-a948-af85afbd99fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cd8543-08f8-40bb-bbbb-5d331ec08578",
        "cursor": {
          "ref": "c1611755-f274-410d-bd48-9686c754868f",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e1237242-140f-4cb1-b253-27891a6fa0af"
        },
        "item": {
          "id": "07cd8543-08f8-40bb-bbbb-5d331ec08578",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "47318dcd-985e-40e3-b4eb-12ec012cacd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7e1496-f7e9-4b12-9594-44bde469350d",
        "cursor": {
          "ref": "46a9ad3f-6c95-47ae-b74a-6a027f15b0d0",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "34b3c2f8-33df-4edc-a92f-9f920ab45534"
        },
        "item": {
          "id": "7f7e1496-f7e9-4b12-9594-44bde469350d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "487ec2ee-7372-4fea-b85a-3771dc09b0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9652ca71-4c0c-435a-a9d3-a26a109f2b2e",
        "cursor": {
          "ref": "34fbae91-6a8a-458e-9ae7-b19df026ea75",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "dcc3a700-a881-450b-880d-0ed2eb23b080"
        },
        "item": {
          "id": "9652ca71-4c0c-435a-a9d3-a26a109f2b2e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1554f6ba-bbac-4ad9-a440-e935529f53f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc388e3-27c7-4e97-ab10-7cb8a276f8ea",
        "cursor": {
          "ref": "37df139d-5476-46a2-a490-34708f107f1b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f8793100-fab1-4eba-b741-a10034667395"
        },
        "item": {
          "id": "2fc388e3-27c7-4e97-ab10-7cb8a276f8ea",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3cadcbe0-e38a-4733-8e36-7435690aa2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bbca68-4913-42ee-ae8c-7807b2a4dfaf",
        "cursor": {
          "ref": "b11e488b-dd36-42a3-be5a-c2dec7d6e0a8",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ed75f056-dd9f-42d8-a05c-9a8add4e9162"
        },
        "item": {
          "id": "05bbca68-4913-42ee-ae8c-7807b2a4dfaf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e8310b27-53d4-4dc1-b1eb-3789ba8f9bda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a2a6fd-aba3-4f19-94ad-690631c8417c",
        "cursor": {
          "ref": "68e320dd-6c32-48d8-9fdd-72189b3c93fa",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c047e2af-0fd3-4c5f-a450-a64c93d4a3a4"
        },
        "item": {
          "id": "b9a2a6fd-aba3-4f19-94ad-690631c8417c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "facb74c9-ae22-4bd6-8f56-a82c51cab55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37081ce7-07fc-45d7-af85-52aec3ad8130",
        "cursor": {
          "ref": "7ea271a4-fd6a-4155-9185-0199f8909995",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ca3443a7-63ba-4176-a72b-05fb501e266d"
        },
        "item": {
          "id": "37081ce7-07fc-45d7-af85-52aec3ad8130",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4a7eedc0-86ef-4795-ac0a-1858270cf29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd942a1b-351c-4d93-8f01-5be277c104b8",
        "cursor": {
          "ref": "2cbe7dbb-f524-489c-a7c3-345162f6e298",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "973c3ab8-774b-4159-bde0-12f2e87d4077"
        },
        "item": {
          "id": "fd942a1b-351c-4d93-8f01-5be277c104b8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d411827a-58b4-43a8-a675-76c5f2318279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6959191-2be3-4e80-b2c7-1890869d5d28",
        "cursor": {
          "ref": "7bac3a26-5765-4139-aa84-38857ddb14b0",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9a7110be-7db7-4bbb-bf11-9dbfe6058e9f"
        },
        "item": {
          "id": "d6959191-2be3-4e80-b2c7-1890869d5d28",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1bcd9516-ecf3-48d6-99f5-cebef0963705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa7b0ef-69d2-4ff4-8532-c62ff06e189f",
        "cursor": {
          "ref": "e2f3312f-458a-400e-901c-16643fdb33f8",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3f340a16-a1a9-4823-a008-1f37f568200c"
        },
        "item": {
          "id": "bfa7b0ef-69d2-4ff4-8532-c62ff06e189f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1561fd3f-c02b-4ab6-8c1a-16d754cdd6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a86fc1-d6a6-448e-983e-dec16e171053",
        "cursor": {
          "ref": "9d41720e-abf4-4c03-a75a-2e939035d332",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5ed1da88-23d1-44d9-b9f5-c2658b15bd84"
        },
        "item": {
          "id": "87a86fc1-d6a6-448e-983e-dec16e171053",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "491fef54-2f0f-4a36-bfd2-6183deff3f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cb8706-7667-4333-951a-24596021d955",
        "cursor": {
          "ref": "ba374eb6-b12e-47dd-8ad7-8109f83fe292",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "78ae0092-8d81-45d7-b36a-bfff71850505"
        },
        "item": {
          "id": "a0cb8706-7667-4333-951a-24596021d955",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "24d1fccc-b690-40bd-8444-fbc2802bd37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4680897-4815-4760-93bb-2c51d878702c",
        "cursor": {
          "ref": "86f8023d-18f0-4620-8555-b0aba3c13f1b",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "32c9cdb1-8e7d-4925-b06d-91dd02873af9"
        },
        "item": {
          "id": "c4680897-4815-4760-93bb-2c51d878702c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e7993c07-d07e-42a8-be7e-41d301f791d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df8594c-60e5-444f-a58f-f29d74402e64",
        "cursor": {
          "ref": "7070fa08-5dd9-42e4-889c-5a5fdee914d7",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b8b9636d-f203-463e-9646-78a8aec2c526"
        },
        "item": {
          "id": "9df8594c-60e5-444f-a58f-f29d74402e64",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b934bcff-f0fe-402d-b9f1-043e9fbd95e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1206b14e-d4a6-4c1e-909a-3645556a7604",
        "cursor": {
          "ref": "b3059efa-d301-4873-bfe1-db4e7953aedc",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7ffac111-b4d8-47e1-96c5-654f4975656c"
        },
        "item": {
          "id": "1206b14e-d4a6-4c1e-909a-3645556a7604",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "acb73fb9-81d1-4ed0-96c1-fb13d60737d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a15f569-1492-4934-9761-b12cfa30facc",
        "cursor": {
          "ref": "bd6bd8bb-9be8-493a-82d7-1e74d37ada6d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8bf04dd3-0ea6-4f76-95a1-63fed718e5ae"
        },
        "item": {
          "id": "5a15f569-1492-4934-9761-b12cfa30facc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "01bd19f2-7c31-4b80-a67b-c33ca6a176ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08fcff6-aca1-40fa-8ca2-b015c3b9069b",
        "cursor": {
          "ref": "2cb20d4e-cc3f-48b4-9792-2e03082523bb",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "753243ac-03ef-476f-af0c-cbf1befd38b6"
        },
        "item": {
          "id": "e08fcff6-aca1-40fa-8ca2-b015c3b9069b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "df61f9e5-1c70-4bea-b3b2-5168b18110d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d87354-70fb-4748-b365-e2b495654640",
        "cursor": {
          "ref": "2c7b97bd-b824-4bee-b1ca-d3f4f6009072",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "84e63611-c68a-4b89-ae45-89f2a7383043"
        },
        "item": {
          "id": "74d87354-70fb-4748-b365-e2b495654640",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7244ec45-770f-4592-b91a-8ade58522e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d70e331-fa3d-44c5-a298-e42a68d3c7ea",
        "cursor": {
          "ref": "6791910e-6ca0-4629-a772-bda7bc0fe300",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "285c5cb8-d048-4a4b-a85e-e0075d6aca2b"
        },
        "item": {
          "id": "9d70e331-fa3d-44c5-a298-e42a68d3c7ea",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "60d1f750-244b-4a80-a28a-b63e8a052d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253ca9a4-1e4c-4c2d-9855-df7ec6e8bed5",
        "cursor": {
          "ref": "d1e56538-2092-4596-a78c-1cf224c45f76",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "48d897c9-9949-440f-ae2b-4c5036b376a0"
        },
        "item": {
          "id": "253ca9a4-1e4c-4c2d-9855-df7ec6e8bed5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "52a97dd7-4585-40d2-94e2-45429fb60df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee6011b-f5c5-4459-a4e4-25ffd4799695",
        "cursor": {
          "ref": "4f8b35e8-c5b9-48a8-9424-3eb98ee1bd99",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "cce1feb0-6ebd-4926-b316-4e54c56671f6"
        },
        "item": {
          "id": "6ee6011b-f5c5-4459-a4e4-25ffd4799695",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1562aec5-6dcd-4481-b10b-868dc1cd6e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa21e16d-dbf1-460b-a554-224a08d8505b",
        "cursor": {
          "ref": "d3df5a5d-2ea2-42e4-a94a-4c6fb3494eff",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3bf07756-4a06-44f7-b8e0-27d130dc984c"
        },
        "item": {
          "id": "aa21e16d-dbf1-460b-a554-224a08d8505b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b7ada819-a50e-4950-ba90-30cebb7aef6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc7d657-9d04-41a7-a926-eb656e6b45ad",
        "cursor": {
          "ref": "f131b47a-f473-469a-bdad-45742d582851",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4d0ba4f8-32be-4f0b-954f-343c62c457fe"
        },
        "item": {
          "id": "8dc7d657-9d04-41a7-a926-eb656e6b45ad",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dd7ef04d-7cee-4bbd-a09d-336c88fbb773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437b37de-7843-4a1c-b83a-1cd417ce0847",
        "cursor": {
          "ref": "4035adf7-7ef6-4c4d-82e3-e012e790190f",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "56996537-65f4-4c38-91d6-bb02b4c312b8"
        },
        "item": {
          "id": "437b37de-7843-4a1c-b83a-1cd417ce0847",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a757efb1-b9d6-4e2a-94b3-6d1296980512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28104f6b-5024-4a6f-9087-8764227f193d",
        "cursor": {
          "ref": "2e55b4c7-03eb-4b39-a631-d75bc67eb5a3",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "db1fd1a0-8cb2-4468-ba11-2b7233beef21"
        },
        "item": {
          "id": "28104f6b-5024-4a6f-9087-8764227f193d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a32737bc-1574-46b0-81ea-0e0f4ff0f341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6ae44d-015f-4496-a315-83009d514c05",
        "cursor": {
          "ref": "a7f57086-1829-4628-a770-59ecc508299b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6854e2dc-f72b-44ae-abea-875c0b98f305"
        },
        "item": {
          "id": "1d6ae44d-015f-4496-a315-83009d514c05",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e496942b-8203-4aef-af48-a0b910f17639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45df2be2-4aee-4326-a967-dfd410c62216",
        "cursor": {
          "ref": "c74bca0c-a671-44f9-adcb-4de6e9d340dd",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8e24b03d-c628-4b21-b284-50a7ccd9edde"
        },
        "item": {
          "id": "45df2be2-4aee-4326-a967-dfd410c62216",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "34bc2fce-5342-481c-aa82-75b1d7254e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d91db00-cec6-4f5e-8a67-85e2f1363dec",
        "cursor": {
          "ref": "132114d3-a050-404e-ab0f-841b84f0fb66",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a7c32de4-be8d-4dca-9573-7b711f9339b2"
        },
        "item": {
          "id": "8d91db00-cec6-4f5e-8a67-85e2f1363dec",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "79f7e657-d67b-4970-9568-057d3d7f7131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de29ccd-2c80-492e-a531-a27223e77257",
        "cursor": {
          "ref": "27c54275-3cc2-493d-a64e-d7d5e7f96ddf",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a8aeb546-7c33-461a-a47a-957470a0a226"
        },
        "item": {
          "id": "6de29ccd-2c80-492e-a531-a27223e77257",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "276d7e69-0235-4ad7-a413-479c579b3408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92fa04c-8eef-4caf-a487-d72401809aa0",
        "cursor": {
          "ref": "561badaa-be93-4c69-864c-d325cabf2799",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1f69f08b-b9fb-4608-8e1a-17a52e6d113d"
        },
        "item": {
          "id": "a92fa04c-8eef-4caf-a487-d72401809aa0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "272f5580-fa4b-4372-bdb0-fdc07ed0df05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfad4cfa-c1e9-4577-9a53-c855f15b3566",
        "cursor": {
          "ref": "d0df62d0-8ce9-479a-b3a3-6c1492c56c4d",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c48454ac-abc2-423d-88d1-923fb0d663ae"
        },
        "item": {
          "id": "bfad4cfa-c1e9-4577-9a53-c855f15b3566",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8b038c8e-ab89-4b3c-a212-572d4080e010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfcd0a8-0243-4a97-9da1-09ef33d4f3ab",
        "cursor": {
          "ref": "41356e64-cae2-47c8-9e41-176341be08e5",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fb502635-a0df-4cf4-905a-9d0b3908da2c"
        },
        "item": {
          "id": "0dfcd0a8-0243-4a97-9da1-09ef33d4f3ab",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "487fcaf7-a127-47eb-a1ba-7ef24a83ebe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbae2db0-463a-4512-a282-ae456ff7d007",
        "cursor": {
          "ref": "56e9083b-6199-4b01-ae9d-9eb23332ae9a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0d6e713e-b98a-4f6a-a913-9411721f682c"
        },
        "item": {
          "id": "dbae2db0-463a-4512-a282-ae456ff7d007",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c5d0b4d0-e431-471e-9339-8985615daa04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2758295-062e-406a-bfd2-d37d6697e23c",
        "cursor": {
          "ref": "48853b85-13b7-466b-909f-6df37dc49276",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "262a4ae3-10dd-49bf-a849-5dca2e7f408e"
        },
        "item": {
          "id": "d2758295-062e-406a-bfd2-d37d6697e23c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6b03247e-2358-42cb-9a88-e66a853de540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b86fc8b-b8fe-446e-91a2-4a4ed65cfe23",
        "cursor": {
          "ref": "d19e5658-638d-479b-ba89-b75878d4f9ca",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7dc29cb3-5077-4fc7-b453-10be93d2cd54"
        },
        "item": {
          "id": "0b86fc8b-b8fe-446e-91a2-4a4ed65cfe23",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c5848ade-b9e6-4719-9b5c-be7ca8d29cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4209485-b9fb-42c9-91d5-f47ffb3003fd",
        "cursor": {
          "ref": "250e58a9-e75e-4184-955c-cfdc018db7e6",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "805ebf67-c092-4969-ac0a-8c877b4fb334"
        },
        "item": {
          "id": "d4209485-b9fb-42c9-91d5-f47ffb3003fd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9df27f4a-3aed-4e8d-a677-6e982f430208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d58c07d-bf87-4897-a4cd-d2e22eb3b4a8",
        "cursor": {
          "ref": "c4d7660e-7075-48f6-8375-eb401d97d1e7",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8328471b-698c-4106-95af-d78fc95a136d"
        },
        "item": {
          "id": "2d58c07d-bf87-4897-a4cd-d2e22eb3b4a8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9dbbdbad-83bd-4a2d-ae9f-5568a58ee227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4b69a6-68a2-491d-bd03-47fb9acb0827",
        "cursor": {
          "ref": "3f035142-84f4-4b21-966e-680f6690d1a3",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "44266860-b0c9-4a30-8da9-d83d707f8658"
        },
        "item": {
          "id": "4e4b69a6-68a2-491d-bd03-47fb9acb0827",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "22513caf-f2d0-4698-87b3-d907859a7c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c270628-b455-49ff-a749-e275e81c6c69",
        "cursor": {
          "ref": "70febc30-8b02-447f-be5b-ddf924acd806",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "525453c0-8770-423e-b61a-c6f6a4c72e98"
        },
        "item": {
          "id": "3c270628-b455-49ff-a749-e275e81c6c69",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fa80528c-2eee-43ae-a1b0-8d4573ea4bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdedc5da-7838-4923-b869-1c774071ebb6",
        "cursor": {
          "ref": "5dba717c-3bdc-48fd-96cf-99c7214b4ff2",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b002d245-518d-4ec5-8314-abea894f8d42"
        },
        "item": {
          "id": "cdedc5da-7838-4923-b869-1c774071ebb6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8c528d86-78f6-4918-a80d-44d273603fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2365b012-3438-49d1-9c93-39bd377e3dce",
        "cursor": {
          "ref": "dcafe186-f991-473b-9b22-0d91140cb057",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7f4208db-27cb-4868-8c6f-f92b2c6ca78a"
        },
        "item": {
          "id": "2365b012-3438-49d1-9c93-39bd377e3dce",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "65293a49-99df-4e3d-adfa-3c62a84bb5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f49047-cd36-41bd-b37a-6a1ecae7c9f4",
        "cursor": {
          "ref": "c3011af6-0fd4-480e-9536-494ac75277ec",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9e9042d3-5a35-44b6-abc6-2e2e76f79e58"
        },
        "item": {
          "id": "72f49047-cd36-41bd-b37a-6a1ecae7c9f4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "419852e9-44c3-4630-811f-b41da7f7e699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dfb2e8-b123-42b5-9243-71e7576a0fb9",
        "cursor": {
          "ref": "849ea79d-9abc-476a-b31d-8d3995961d73",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e6c29371-59f1-4675-a39a-9c8d7a5cd79a"
        },
        "item": {
          "id": "25dfb2e8-b123-42b5-9243-71e7576a0fb9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8778a07a-c995-4d96-ab88-363428584614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdf04f8-9839-44e9-98e0-d333710f8c1e",
        "cursor": {
          "ref": "b3a75492-3a1b-44df-b03d-a9a6638682b0",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ef1316e9-b2dc-40de-a61d-3d91f8e680a3"
        },
        "item": {
          "id": "5cdf04f8-9839-44e9-98e0-d333710f8c1e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "354b864f-798e-46fc-8d2b-629b42f9a1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d013dc-3e8b-4dc8-abd1-ef4067946217",
        "cursor": {
          "ref": "777db2b2-c716-4e10-bab8-ce495f709882",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c5e2e662-368b-4812-ae35-708facb686c4"
        },
        "item": {
          "id": "73d013dc-3e8b-4dc8-abd1-ef4067946217",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b1f64e1f-aa5a-49bf-a9e3-51c8b68c0636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ac9a5c-ed08-4e6d-aafa-d20d73f6e285",
        "cursor": {
          "ref": "b87b7992-9c08-44cc-b45a-5d24f1a00601",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "02a2593c-65ba-4bdf-9f6c-54fed08b118f"
        },
        "item": {
          "id": "71ac9a5c-ed08-4e6d-aafa-d20d73f6e285",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8de8acc3-15d7-4569-a629-9624b809b4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68879a13-ad8f-444f-bf27-533c89a1d0b3",
        "cursor": {
          "ref": "19d8a8d4-bdcb-4a98-894c-49fded137e9a",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d2d8d635-a707-4507-b101-dc6e0369ff94"
        },
        "item": {
          "id": "68879a13-ad8f-444f-bf27-533c89a1d0b3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1d77f248-6ef3-4391-800f-6bc714604229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa353c8-1869-4e4f-a88f-2fa0f05ba328",
        "cursor": {
          "ref": "599f7e08-192f-4312-818e-1b75853ed505",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c6160bd7-4b55-4cda-a377-befb7b2105d4"
        },
        "item": {
          "id": "7fa353c8-1869-4e4f-a88f-2fa0f05ba328",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fb490122-e704-4b28-beea-f10a53599331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce9d05c-e673-49be-aa0d-5d4bf24fa7ab",
        "cursor": {
          "ref": "c1592fab-cee4-48eb-93d8-c551c80680ea",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "af1a85a2-d850-4cd0-b995-2099a9021233"
        },
        "item": {
          "id": "5ce9d05c-e673-49be-aa0d-5d4bf24fa7ab",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "067e4ada-79e1-48cb-bdc0-9bfee619ae0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dc0df4-9929-4f9e-96b1-b1cdbd31deda",
        "cursor": {
          "ref": "a256f09a-e1e6-432e-ba8b-07d45356012d",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "51f09f9b-611f-4721-8b39-f62c30481b95"
        },
        "item": {
          "id": "b8dc0df4-9929-4f9e-96b1-b1cdbd31deda",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "de0142b2-0950-41a2-980b-d77fcede84a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2819801-c701-4246-8ee3-2770cd544966",
        "cursor": {
          "ref": "c6634155-6481-43a4-83cc-5adc1ec00cd4",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "819033b1-cd0f-4a47-bbec-4fe061cf174d"
        },
        "item": {
          "id": "b2819801-c701-4246-8ee3-2770cd544966",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "aee599bf-1534-4bcf-8346-03af99a96acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83484ac0-eab7-44ba-b49a-786a6159d114",
        "cursor": {
          "ref": "20db167a-5a09-4d19-98a8-aad160b4de2b",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "02987522-6171-4612-8e41-df7525b33408"
        },
        "item": {
          "id": "83484ac0-eab7-44ba-b49a-786a6159d114",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "60586f1f-0d60-4742-a6c9-37594d024468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447ec386-4a83-4bdd-8019-b00b99ac6bf7",
        "cursor": {
          "ref": "8532f654-e1f3-4ac4-9ce8-02e744dd0dd6",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1735209f-ede6-4236-8818-27c79b5de249"
        },
        "item": {
          "id": "447ec386-4a83-4bdd-8019-b00b99ac6bf7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7b08cd62-6d06-4d15-b0a8-23b39aad06a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19468ec-2085-4f51-8e13-1b6f15daab0d",
        "cursor": {
          "ref": "84248c54-31bd-4159-98c3-5f816023acbe",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "43b569df-d3ca-4156-a9e9-aa287b17a0d2"
        },
        "item": {
          "id": "f19468ec-2085-4f51-8e13-1b6f15daab0d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bbdf0adc-1c43-43e8-94db-558fea51410f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b332e49-1f10-432c-bcb5-4503affea5e3",
        "cursor": {
          "ref": "1476c788-320d-4efe-bff4-665d1975f42e",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "469d4476-25a8-40f7-8c29-32c8c0c9da2e"
        },
        "item": {
          "id": "2b332e49-1f10-432c-bcb5-4503affea5e3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "178c8799-e90a-42b2-a7ed-368afa9a06f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ed5cbf-dd98-4e9c-ba2f-35a31b4698ec",
        "cursor": {
          "ref": "bac489a4-36b4-4ab7-80d8-eec9eab9e1ad",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "df7fa5aa-f44e-4232-96e5-cd7041d7401e"
        },
        "item": {
          "id": "b7ed5cbf-dd98-4e9c-ba2f-35a31b4698ec",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bff54f22-8f64-401f-a058-f72d310f88e2",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "49726c3e-5ad0-4ac1-b256-145afdf377a0",
        "cursor": {
          "ref": "21406675-044e-46db-95ea-2ce35f509682",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d5bd9917-01dc-4014-89ca-1ed4159b0f02"
        },
        "item": {
          "id": "49726c3e-5ad0-4ac1-b256-145afdf377a0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "419a6be1-bff5-4c0e-bd09-0720bbe09e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a01f79-deda-4b1b-b091-d68b7f0a47b8",
        "cursor": {
          "ref": "26bfaf06-d37c-44da-a584-17be605422a1",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "35b48b1b-f2cf-41b7-8092-07925bfdb26b"
        },
        "item": {
          "id": "42a01f79-deda-4b1b-b091-d68b7f0a47b8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "09677973-37a8-4629-8235-1abe27a8b9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f76fa1-335b-43c2-9883-c44c6cec0a53",
        "cursor": {
          "ref": "a310493e-b63d-4373-bfbc-0f44aec13330",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f92257ae-3420-4a49-a50e-b51f12391b3c"
        },
        "item": {
          "id": "59f76fa1-335b-43c2-9883-c44c6cec0a53",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fc91812a-5094-40be-a038-fa3fe2e8754a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23692d60-142f-42bf-9a86-d2a6dff8efb3",
        "cursor": {
          "ref": "84493492-2fbb-4da7-955a-c951c836f0ac",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e510d453-ace6-4872-b1e0-5a1e532a7f79"
        },
        "item": {
          "id": "23692d60-142f-42bf-9a86-d2a6dff8efb3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "47d49d31-b19f-493e-b397-e01c7df01ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73993ead-e66e-4335-937b-c25c92ed56bc",
        "cursor": {
          "ref": "bac203a7-0a5d-4768-b4a6-cd7325481730",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "500d4dca-0345-4054-b749-4a80014a2db6"
        },
        "item": {
          "id": "73993ead-e66e-4335-937b-c25c92ed56bc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "139ac5ab-c149-414f-81f3-ad892f6a50f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42389001-667e-4b44-b547-867083a98dcb",
        "cursor": {
          "ref": "3f0ef266-3a62-4db1-86cf-6e8d5af45aa2",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "89703bd3-4500-4751-99b8-f620ce49ed64"
        },
        "item": {
          "id": "42389001-667e-4b44-b547-867083a98dcb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d3c598a5-68b4-43f1-b522-a40f133c943f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c100cf5-d4da-45d9-bb45-6888c1fc83e1",
        "cursor": {
          "ref": "51ca5e9e-d167-40ec-a317-cb3d0cda6145",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7d8071d0-b463-449f-99c1-e2b5db3ac4cb"
        },
        "item": {
          "id": "6c100cf5-d4da-45d9-bb45-6888c1fc83e1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9fd3b193-bc39-47c5-b5a1-f09f29a43ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee3d2c1-94da-4592-bc8a-8f9aa45f8256",
        "cursor": {
          "ref": "fc463895-b501-47ed-a049-1a4455c60c5d",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "33f08e8d-b152-4189-b72f-d99d1f1fd275"
        },
        "item": {
          "id": "dee3d2c1-94da-4592-bc8a-8f9aa45f8256",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c580e936-28a6-4bc6-aa8c-36070e146088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a82f1d-1f84-4245-a20a-81e22531a866",
        "cursor": {
          "ref": "3e07c8e8-bc3a-4f1f-9643-3062ce69f2eb",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "49d8d217-cc05-4525-8015-4acd5fa809f6"
        },
        "item": {
          "id": "35a82f1d-1f84-4245-a20a-81e22531a866",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c4413aa5-b3d7-4f4e-bc2c-4e770a591c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad226804-bbb2-4b02-9461-b2a4351eafb9",
        "cursor": {
          "ref": "b96560a9-b05f-4322-b403-e33c41318f33",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d1e8ba06-9dcf-4da2-a6fc-c8d887b13b02"
        },
        "item": {
          "id": "ad226804-bbb2-4b02-9461-b2a4351eafb9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "fc6bd518-66b3-4746-8250-92bf89b5a348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e35f5ec-9c7b-424a-9fa9-e7164f840c69",
        "cursor": {
          "ref": "3f3d2768-b142-48ea-a3a0-b5e26f4dbcfc",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0cedcf78-c127-4a2d-8a7b-f0d371f2913d"
        },
        "item": {
          "id": "3e35f5ec-9c7b-424a-9fa9-e7164f840c69",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dfdcd6b5-e6cd-4fa9-95b7-b49f176bea39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb9c649-4a96-4115-aac3-932bb77d3dfa",
        "cursor": {
          "ref": "57bc0ffb-9384-4784-8173-313233dc876b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "213f4e20-8328-4056-9519-60eeea67dbc8"
        },
        "item": {
          "id": "3cb9c649-4a96-4115-aac3-932bb77d3dfa",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f6e233d9-e27d-403f-b4fe-8bc16f5a130e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ab901e-1a7c-480a-a00d-65747b919719",
        "cursor": {
          "ref": "cf272ae3-99f3-40e1-b6af-1c71de77d0cd",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ab61fd5b-76ce-467e-88b2-42a3764d85e3"
        },
        "item": {
          "id": "41ab901e-1a7c-480a-a00d-65747b919719",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "dcf0bf35-c4ff-4647-bf7b-0ad0accdc8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07986c5a-7e3d-46d6-a74a-7d4418647357",
        "cursor": {
          "ref": "e8229247-bdd3-41a3-87a7-bc159340430d",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b4ac5631-6dc7-40e1-8ec1-cfb8a1266ebb"
        },
        "item": {
          "id": "07986c5a-7e3d-46d6-a74a-7d4418647357",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ea1dfe39-a2d1-4f13-b4f9-1e0e632187bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25e3a50-7fbd-452e-92a5-0a9c015adad7",
        "cursor": {
          "ref": "8be216b6-5f5d-4847-902a-a2fcf1cce8d1",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a4a0f83c-6234-414d-866b-b4368e105009"
        },
        "item": {
          "id": "c25e3a50-7fbd-452e-92a5-0a9c015adad7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "62abdaa4-5c06-4ef8-8170-b886e53ac18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d12d1a-275f-4276-8c98-46c9b5adf581",
        "cursor": {
          "ref": "9f3d19d5-5a76-46c2-917c-fc75d558fa92",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "780e5065-0376-410e-818f-96bdcf52366d"
        },
        "item": {
          "id": "e9d12d1a-275f-4276-8c98-46c9b5adf581",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7bd08dea-6b1c-4aa7-91ba-26f184d1c699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fdd5bc-463a-434c-bdea-e6a94d8064da",
        "cursor": {
          "ref": "17029e23-fd74-46b4-b2f3-0eef38fb6970",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dea2b453-15e0-4ccb-a07f-7f2f6c8c6d73"
        },
        "item": {
          "id": "f4fdd5bc-463a-434c-bdea-e6a94d8064da",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ba2a4fde-8106-4281-98f9-288d36440d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28efe550-aee5-45bf-a68d-88e7e30def48",
        "cursor": {
          "ref": "17d4231b-5af1-42cc-a519-ce2864ca1edc",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "75f1b9f5-35af-4e54-8fa7-bffeab42a301"
        },
        "item": {
          "id": "28efe550-aee5-45bf-a68d-88e7e30def48",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "63b45f32-308f-4d8e-b87e-f0c0e5f09aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa4bfae-c5d9-4daa-8b0e-521b54434817",
        "cursor": {
          "ref": "075cdae6-1255-4e47-8d65-e560da530370",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7b7baeb4-00ce-4092-8264-cb04c80c294b"
        },
        "item": {
          "id": "3aa4bfae-c5d9-4daa-8b0e-521b54434817",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f42efcf2-bc55-4479-a047-87ad7e6ed530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46857734-1359-439b-8bb9-e1d651c711e8",
        "cursor": {
          "ref": "043a8272-bbe1-43be-8369-5457a5da57ce",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6d239ac3-7e37-42f0-b519-0603d9b11fec"
        },
        "item": {
          "id": "46857734-1359-439b-8bb9-e1d651c711e8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "19805113-92db-4f65-a483-7a5501e16009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317492f6-0a49-4882-b3b0-0edc3c8a4b5d",
        "cursor": {
          "ref": "d01dd65b-5f4f-479b-8353-8cb0bf047337",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d4e48239-7aae-4b08-900f-2964c3820e9c"
        },
        "item": {
          "id": "317492f6-0a49-4882-b3b0-0edc3c8a4b5d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "84a24343-70e9-4e5a-8977-050a0dc8748c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956f3ef0-ce6a-4295-a531-4c5e61c20402",
        "cursor": {
          "ref": "e51b3510-fcc5-4d69-8e8d-f98d778c6119",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f230783a-0e24-466b-a053-364316188ce1"
        },
        "item": {
          "id": "956f3ef0-ce6a-4295-a531-4c5e61c20402",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "824823b4-e19d-4d80-bbfe-c6af6312b918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99d4e84-e399-486f-b72f-3277f512908d",
        "cursor": {
          "ref": "204a7848-b38e-4414-9ea2-bc8df6523ca7",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3b320a69-8b91-47fe-a05c-e158a422b714"
        },
        "item": {
          "id": "d99d4e84-e399-486f-b72f-3277f512908d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "57954350-58e6-46ff-a5b2-3f7862ae204a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0962d552-2479-49b1-9bc7-d6c1f80b35f4",
        "cursor": {
          "ref": "c590102a-da34-4608-8e88-422f2d8d0478",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d4a2db6d-e67f-4bc4-9480-68fab22cec5f"
        },
        "item": {
          "id": "0962d552-2479-49b1-9bc7-d6c1f80b35f4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dd6b0f5d-c765-47a6-85d0-842d0940564c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636a82b2-20e7-451d-894b-2b939cb9ff74",
        "cursor": {
          "ref": "728d1823-169e-4cf5-b680-1bb9d7b2f75f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3a0771a2-a220-403c-a986-630da1d052a3"
        },
        "item": {
          "id": "636a82b2-20e7-451d-894b-2b939cb9ff74",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c80258ad-2d72-45f2-89b0-8d3ab7d7da66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bcc34b-61fc-4a5d-9bd5-02f8f716f466",
        "cursor": {
          "ref": "f109aaaa-94bf-4799-988e-afaf6b38a1c9",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "bfcf14d4-8c09-4e7c-b9ac-736528a2c9e1"
        },
        "item": {
          "id": "10bcc34b-61fc-4a5d-9bd5-02f8f716f466",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0442cdeb-ddf1-423c-afd5-9754868ce890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c0788a-78dd-4451-8342-29a317cd20b8",
        "cursor": {
          "ref": "da4744f0-ecf0-4f6f-91bc-257aaa99e392",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1fbf9e82-b6be-4818-8876-f74844490aec"
        },
        "item": {
          "id": "64c0788a-78dd-4451-8342-29a317cd20b8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a32dec07-5ded-48c4-bb74-fce78c9b88cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ebc149-35f9-4b96-b21b-3af3c2783368",
        "cursor": {
          "ref": "477a0220-9b56-46d2-adef-d83f34254703",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0d16c819-15f6-4fdc-b29a-25265e709762"
        },
        "item": {
          "id": "19ebc149-35f9-4b96-b21b-3af3c2783368",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "416b5841-41c3-41ca-9387-d004014c4996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df64009a-e361-4018-b8df-a583bb1a5bc8",
        "cursor": {
          "ref": "eed66e87-22f3-4a0e-bd5a-96bdd1164bd2",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4efae350-099f-4919-9ca0-13bcde1d4378"
        },
        "item": {
          "id": "df64009a-e361-4018-b8df-a583bb1a5bc8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bef1ffc2-8f83-46cb-b17e-b13bc057575c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965924e3-dc25-482a-b31b-404730caf886",
        "cursor": {
          "ref": "2ee2180e-f7ef-4cb1-a66e-090baddd0ef2",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3ab401ea-ebb5-45cb-8b0d-d94fbe0fd217"
        },
        "item": {
          "id": "965924e3-dc25-482a-b31b-404730caf886",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d408e5a3-9f09-4e13-afd1-99f8cd278507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004f8e9b-4ab2-452c-8905-6edd1837faa9",
        "cursor": {
          "ref": "9b71b857-8df5-4df0-bf9c-cb892b1aedc8",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0cfe368b-a4f6-40d3-b447-d3897ebecd8f"
        },
        "item": {
          "id": "004f8e9b-4ab2-452c-8905-6edd1837faa9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9b68e3f7-5419-4da0-b8e6-14a04313833d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02961da5-619f-49d2-9f82-f5ec1d1e66bb",
        "cursor": {
          "ref": "25595b9d-474a-4c1a-af2c-ad0475707d14",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4cc592ea-4f6e-42a5-95e6-597966145106"
        },
        "item": {
          "id": "02961da5-619f-49d2-9f82-f5ec1d1e66bb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9b205340-6c22-40a1-9d37-75ca14232126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f5ae6b-a8aa-4f5e-80af-c18611ba3c0e",
        "cursor": {
          "ref": "42f35f37-57a4-4b10-a720-a870c40f80d5",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "43493801-ce35-4ba4-ba89-c03033c9eb2c"
        },
        "item": {
          "id": "b5f5ae6b-a8aa-4f5e-80af-c18611ba3c0e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8020c47a-2ece-44f0-a315-9fda983cd9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3848a9-8c65-4419-ba8a-1901d447ab6d",
        "cursor": {
          "ref": "80ffb4ac-26f3-4eba-89c5-f3e4664890e4",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ebf4eeba-3a73-4938-98a2-04e0b88b5107"
        },
        "item": {
          "id": "bd3848a9-8c65-4419-ba8a-1901d447ab6d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a4ccc1fc-eb45-486c-95d4-2a0d492348a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4589d94b-82e4-4ffd-a03c-7f2d4d9b1a29",
        "cursor": {
          "ref": "f6ad78c3-3406-4346-9751-8886815fdffd",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ea9663de-743b-4fed-aeaf-817bde3208dc"
        },
        "item": {
          "id": "4589d94b-82e4-4ffd-a03c-7f2d4d9b1a29",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "81e6c5ed-a914-4713-8965-4e6fe78c8ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38172d6-45fc-46cc-8f11-274b503cfc29",
        "cursor": {
          "ref": "82d77347-5195-4ad9-9209-bb7131c5042a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f77a0261-8ea0-4832-a15b-cf1fb5dde0aa"
        },
        "item": {
          "id": "b38172d6-45fc-46cc-8f11-274b503cfc29",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7ba09199-b370-48a6-bf0c-c9d061f5c7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f065d6ad-f0bd-4f75-8f0c-4f1147e9c07e",
        "cursor": {
          "ref": "eae4dc89-15f1-4f19-946c-54945c99890c",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1b85660b-cb20-42a7-8f6b-d2efb48598ea"
        },
        "item": {
          "id": "f065d6ad-f0bd-4f75-8f0c-4f1147e9c07e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5b727660-0bcf-4f39-8931-9889762589d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15362689-474f-4176-8f21-58eb0abf3c72",
        "cursor": {
          "ref": "ef6866dd-64c9-4131-a1a7-a99a83d1ea83",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6b33fdf6-1265-4ce3-9318-c0a398e02b00"
        },
        "item": {
          "id": "15362689-474f-4176-8f21-58eb0abf3c72",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "26287464-2016-4646-8dfd-89811bc39f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c0027e-6c71-47fb-ba34-e03d9dad2291",
        "cursor": {
          "ref": "3355c043-a47c-4cad-bcd1-f897dbd3c4d4",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "39a8420c-1b6b-4b95-9127-67735c8f6438"
        },
        "item": {
          "id": "09c0027e-6c71-47fb-ba34-e03d9dad2291",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e69e9e82-f42d-47ca-80c1-9ef3411b4272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c5eb6d-5a0f-4701-9ffc-42032cd0a2c4",
        "cursor": {
          "ref": "3e8890d0-065a-4d3c-8b26-e0b33e96b18b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "45d3bfa0-3ae7-42bc-b980-b667670dcf1e"
        },
        "item": {
          "id": "89c5eb6d-5a0f-4701-9ffc-42032cd0a2c4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "13fcc161-a15f-479f-89e6-3a698d354908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd3a178-29fd-4a79-9102-a86c292a4038",
        "cursor": {
          "ref": "98704866-8880-47a0-9c43-d9eae8b89069",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e676c12d-c1d1-4b5c-b434-78620a4bcd26"
        },
        "item": {
          "id": "5dd3a178-29fd-4a79-9102-a86c292a4038",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "97ad2ffb-cee7-4045-b6b1-4e5a248c730d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8a204e-66d7-45c9-8b58-d287b93fed84",
        "cursor": {
          "ref": "e511ac3a-5d53-4028-a9c6-5660ac8b5a46",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9574df03-961a-4e99-9828-d4aa7542a5a7"
        },
        "item": {
          "id": "fd8a204e-66d7-45c9-8b58-d287b93fed84",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cb5b63db-b067-4de5-ae78-561ccda0b6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abdf5bb-170c-4955-a2f1-e17c0d80536b",
        "cursor": {
          "ref": "3e5a27d7-4918-4098-88bc-a145150a63a3",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "85f3351b-97a8-43ae-949c-168ae0c7ef0a"
        },
        "item": {
          "id": "6abdf5bb-170c-4955-a2f1-e17c0d80536b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e34823a7-0f25-4299-ace4-21ad2d1a989b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c19135c-da96-44d1-ab40-64942acc111f",
        "cursor": {
          "ref": "6e347b8d-4f60-4ab0-a108-ffb1a9eb636f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0a276fc9-cef6-4e6f-a3ab-2190a9e15619"
        },
        "item": {
          "id": "6c19135c-da96-44d1-ab40-64942acc111f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "61cd340f-6aa9-46b0-9fde-faf5d8d6ec34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f9313d-1652-454c-a1d8-f8708b1c9cf7",
        "cursor": {
          "ref": "5bacac47-3f09-4c25-83fd-a63913ae7ae9",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "83e54840-a6f7-4707-9c8a-7a1e25386441"
        },
        "item": {
          "id": "51f9313d-1652-454c-a1d8-f8708b1c9cf7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e80b492c-aaa2-4bfe-a2c4-7e07b7b219da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9915f60-d03f-46b4-971f-b08f537cee6a",
        "cursor": {
          "ref": "6ac07e0a-a5a3-443d-bac8-bc920b160ede",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e2333a90-a4ab-481f-8715-1481a7d4329d"
        },
        "item": {
          "id": "b9915f60-d03f-46b4-971f-b08f537cee6a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c49c9a3a-c4bb-489f-b433-d52ae44542cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5d530c-7287-400b-b2be-31fadc0fd631",
        "cursor": {
          "ref": "d11714ba-affc-4799-92b2-f6453529da7b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3705d639-3425-4d04-914f-3c478a14c5c5"
        },
        "item": {
          "id": "3a5d530c-7287-400b-b2be-31fadc0fd631",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ebc535f8-a58b-4485-841f-f4df41f026c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb18cea-17f0-4838-b25f-3fb1d6fe51f8",
        "cursor": {
          "ref": "0d863d33-39a0-4c3d-9815-d404717178a5",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d2fec549-e584-44b9-a897-96cc02372226"
        },
        "item": {
          "id": "7fb18cea-17f0-4838-b25f-3fb1d6fe51f8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ca735f7f-2f36-4572-9ba4-bd9d7468ab25",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ec5f98-21f7-47fe-b74e-117ef19f5639",
        "cursor": {
          "ref": "b995162f-0d6c-4578-b37b-8a67a45395c7",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f71f0176-93e0-40c4-8b64-ea41151bbe65"
        },
        "item": {
          "id": "a0ec5f98-21f7-47fe-b74e-117ef19f5639",
          "name": "credentials_verify"
        },
        "response": {
          "id": "83630582-a6ae-4235-a298-09dfed68716f",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0193fc6-7ca1-4d2e-99ec-d89f7f117b22",
        "cursor": {
          "ref": "19af8e92-f86e-4da2-9301-ec150c3dbaaf",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d939fcaf-405f-48e6-9e14-6f40af285a77"
        },
        "item": {
          "id": "a0193fc6-7ca1-4d2e-99ec-d89f7f117b22",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ac306e17-ecf6-4c2c-b511-f8b60e9a2ab3",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "39005c65-bde9-4528-8c61-ad0519a7f754",
        "cursor": {
          "ref": "4579236e-0911-4d0f-8fe2-893d14d03471",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "780a40eb-6858-458d-9978-2e4fd75b1f8c"
        },
        "item": {
          "id": "39005c65-bde9-4528-8c61-ad0519a7f754",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "267cbe05-4e6b-49b6-87a9-add45ff79016",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39005c65-bde9-4528-8c61-ad0519a7f754",
        "cursor": {
          "ref": "4579236e-0911-4d0f-8fe2-893d14d03471",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "780a40eb-6858-458d-9978-2e4fd75b1f8c"
        },
        "item": {
          "id": "39005c65-bde9-4528-8c61-ad0519a7f754",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "267cbe05-4e6b-49b6-87a9-add45ff79016",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9261a398-7f62-4d84-a47b-d397bf1a510b",
        "cursor": {
          "ref": "15c9fbb0-9dc2-4977-8172-90dbbf06f16f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "98748709-d9b7-4dd9-aff2-080625927ade"
        },
        "item": {
          "id": "9261a398-7f62-4d84-a47b-d397bf1a510b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ffdd8c38-b7c6-4693-b1c1-ee6899dac2ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797ddc41-1d87-4c53-80d6-639eeb386d94",
        "cursor": {
          "ref": "e8ac6e10-3122-4758-b2e6-0cb8210c02af",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "97d2f145-8783-40ba-8ec6-1b43159f33d2"
        },
        "item": {
          "id": "797ddc41-1d87-4c53-80d6-639eeb386d94",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "303c0980-b1a9-44aa-86b1-91562059244e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}