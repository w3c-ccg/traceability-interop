{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "40b034ca-4529-420e-a2b0-9c9fa53ef7f4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f745c1d5-a38d-45eb-840d-2e9b303ec255",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52dc4c53-9409-42af-8feb-7aa52e33dee1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "92bec991-f179-4773-81ff-f23b7ce65f2b"
                }
              }
            ]
          },
          {
            "id": "caed381f-6d76-434b-8da8-247a464a6f16",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59da59a5-05df-42e8-97c5-20cfabdd3f26",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "781fde64-bd5c-4c39-8226-b605e7f0621f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "88a54064-94fd-4118-86d6-91763db6f199",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0ce3aa1a-a712-4a6d-86ec-29ec5ba68ab8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f64ac632-c747-4967-83ba-32d1943ef894",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8480e399-2fc2-4621-a1d2-701958deae90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83b405ea-15a2-4841-ab45-3bc05d01872a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18e53553-6178-4435-98e1-5c39bc7c427d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b7ceb4b-7c4e-4274-9258-8038cddd3b32"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cedfaa7b-6b7d-4296-ba1f-f888611e2e5d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee311404-f0dc-44a6-a1c4-f8ee8373eb19"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "589978b9-0c9a-4f0d-b309-d0aafde1b9c5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fabe166d-1d1e-40ac-b395-697243dc7a34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a20cd61c-beb8-4c4b-80b6-2f28cf5b59e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b1823a7-bb85-4096-9824-b59660c567f5"
            }
          }
        ]
      },
      {
        "id": "1eb42e8a-5750-41f3-9773-a8b46ef83c6d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7a13399d-7528-415b-9e10-6ce10223f137",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea4cef18-7334-42b9-9ab9-898b97c235af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e4ebe6bc-71c6-4388-abd2-f9d25051d557",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c99e805-a499-4cf9-93a4-28605f5b94d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f235abbd-178d-4460-b112-b447c6e18e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94cdd81-764a-49c2-885f-88aca0f7fb85",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4192b8de-c556-4583-8a75-35c71d104f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a26e81a5-f6be-44df-ad0d-61d33a31287e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ebf156-fd8d-46d7-bbda-7221518b5693",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2036850-4f34-4a82-ac5a-3f78a3c1ab67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "266e66a5-832b-4d95-a58c-edaabfee7b07"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d469f25f-c214-4be7-a7e2-6597a2ec987b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "909b1380-008d-4027-9e0c-89b6c039c3b5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34b4591-b080-4beb-b222-7cffdf566648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5c9553f-6940-4d7c-bb62-31ea2d50cfb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d9c627-893f-475b-ac9c-98b1120724d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda77c02-e044-436f-8d37-a23db4598435"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "31f741dd-58c2-40a5-85c9-9c95764ea564",
            "name": "Positive Testing",
            "item": [
              {
                "id": "062842d2-5efd-454e-b23c-fe5a7fcf2c1e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9999a6d-89de-411b-a3db-b49579851a29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "750b54b7-f060-4310-aa98-97ad071faaa4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52fd2d0c-3852-416d-a38f-15b79fb71e52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e6d46dc2-d77a-4eeb-b1b6-c198a93585f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "360c9078-7ee2-4c21-aa6b-e1bf07cab71b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bbcfc7f-7bd7-46b0-9b9a-c866630762fe"
            }
          }
        ]
      },
      {
        "id": "d59f837d-6d96-43ab-ae1d-a22a1a29bdf6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a38dc674-297e-4535-ab67-a490ade0c27a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90eeb16d-b083-4f7d-83dd-2e5d218e9bee",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a0dc301b-e868-4361-9752-e642465bfb01",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ae2487-c0c4-4666-bc01-8a24c63202a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36ce75b-c868-410b-a287-7f4b2b731838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7814cd30-4198-42a3-a3c5-3b093b9017cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79277775-28f7-404a-9065-a0d0bc60bb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2812f6-cf04-4d20-af52-a0cb22bda09e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73935925-12ea-48b1-8ac7-1f2b8e8c1f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e83f665-0c7f-4bac-92cc-8e5909da9b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094fbfc8-a932-465f-8f24-e3c01204e714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5fc39fe-fd76-4435-a0d5-6253e83c2a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c78a923-0ead-4452-8506-a7927b9087fa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2ca2f4-9520-45fa-8ae6-66cd7bd8158a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc963950-b35d-4dfe-959f-96a9a64c8dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad64288a-68d5-421e-a3ec-d2f7c34456b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c3baded-650d-4de3-80b1-a16cfbc7eb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e955b3b5-f5e0-477a-80d8-1770863d76b9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fe2ed1-5b7f-4a48-a61d-c20174cc9637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdea6a9a-d818-4eca-b900-58bb3c8c6b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d70c57-3bf5-43b6-9675-437f820aba71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21a82d9a-67f6-4d62-b988-f3367d99633e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46144170-b639-468b-b251-758b9bbe0b03",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d67599c-819b-44ca-8080-930abe288c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1df242-1ab1-4a11-9c8b-f2d4d1812a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0812c8f-f15c-4c84-9f27-597009c3dda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc4e0c64-1af8-4da4-9007-9b02ae9e8dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c88726-954e-4ef0-9a2c-7b6e154cb7c6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6e6155-d15d-47b2-861c-601c7e25d79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4195194a-d325-41cc-b7cb-c2fc1f092bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8492d5-c74e-4f35-a7fe-207f4c7dabfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9315187f-3e56-4632-b434-6ca9348e9ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f34efe-3add-40b5-8072-adad1667b041",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb7c92b-a999-493d-b086-c4082954cb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3193cd-3cf5-4e3a-a1fd-dc8ea05ced81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63adc68-0554-4429-a286-096ff597270e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2e50e9c-e5d0-4b13-9bc8-e74f3409ebe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6054f8-b43c-4bad-9292-4bda2508df96",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf65f74-f589-42c1-81db-ff3b04996ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc131f5-e9d3-4b20-8014-b98ee34e7330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3da162-7d42-4159-89f7-c5cad0811b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9afb7bc-0ba6-41b8-9b9e-7a828376b53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fb70ff-3299-4b8b-9059-efb747a13251",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa0d07b-88cd-4065-a33b-3a39f87d5f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f28903-ce3e-4a90-935b-1e99a708323a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32210f0-f142-490b-884f-e8d71c9e6760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b3bc21b-6e58-4ac6-bce7-eb3fff3bd1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d5d32b-9153-4a0a-bac1-0e00d616be99",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfea63a-1f7b-4840-a689-5582caab4e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e826523-7734-4720-8dda-755f55dd0e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c4dd68-50a6-400a-8837-73871352b2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fedcac80-16a2-4ec7-98f9-76427d867bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f81f93-fe46-473d-b28d-8d491b0cfbf0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6547e196-b0db-471c-a4ec-733afa836481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9def59-e2fe-43bf-8390-30cd01038433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab16c20d-b6ba-48b2-bfcc-489b1bb7ac2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76142a97-380c-4ff4-a180-4fff4f88ff16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48afaf98-87b0-4723-9819-fb6cd2fa4211",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9af7fcc-7903-468e-a41a-c7fdf5a353ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11cd9725-c007-4f69-9fa1-9bfd3700647e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5dd56f-6c67-464c-9cc0-2d44e0127603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0695f82b-094c-45ba-8d3f-9848a0532c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5155b27e-5599-4edb-ac85-d7871e25d7c1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951307a4-31e9-4c7c-a5d2-d72e1fe1a5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f1c912-5261-4588-a001-8eed931ff166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2da3e12-7060-4be4-9512-e9c1e2eb2c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29f693a8-0415-438c-b7b5-1bf97c5fab86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfca2b27-d4cd-45e3-82ac-8df085295d64",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1d2c2a-9dc2-4d51-8899-5398983c0e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177f9b07-9b24-4474-b2bd-830f2dcb1556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69da185a-f530-4cef-9c70-1b81edf810ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64d1cfcc-bae2-429c-868c-79860ddfa94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda369b4-75f9-4d05-99c1-07d9ad25a76f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c8c3b8-818b-4900-98e6-fd44e887eac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45553c18-58a6-459e-802e-d161f9d54fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ef2c43-2cfa-4b50-a0da-8220f9da5147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80278fad-c0d6-4961-bcab-4fec53321e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0261375-0793-4727-9619-a72f5fb15c5b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68221b7c-07cd-47c1-870f-8abf25e7911e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376395c5-008c-4c45-a67c-afaf7cfd7221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eaed88-a580-47e6-8234-364a9cbdd56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4be8673f-5210-4a70-8a28-d7ebc939f26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db39f848-370d-483c-95f3-378cb2ef6162",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3a989d-e5d0-43c5-b395-04a26339c450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1fc72e3-d3a1-4dcb-ba78-4df149a54b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae90d2d-9e04-4f52-9b4b-eea3656e99a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad6742c2-a14f-4f83-a2dc-22d05ab9d038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bab8dc-b8c9-4938-9f04-276c773b7e04",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a93ace9-859a-4489-af0b-873355016796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4c1314-2b95-4702-8715-08491ff48232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23c32ee-206a-4feb-a5fb-cd9221a2fea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "31459deb-cfb1-49f7-af63-332afe7dc0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633b1f90-1908-4fde-8bc7-d367e42b0da1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54430f56-422c-4052-a09d-f007028f2d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414a7bad-a55f-45a0-9ca6-ad92a31874fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9046380-7eb2-4afb-8c54-1593de0c9a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d915cc32-a9cb-4694-902d-bb09dd7a0193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6801c76-c167-416b-b0a7-6da05de922db",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763ccb4c-aa2d-48fa-8ed1-0e8ecb819507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3fb1be-44c7-4da7-a9f3-c9a7789dff4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ff1059-7be3-4faa-8595-1ba501dead21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a5acb78-0ae6-4f07-8165-b59f7ecfa2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1115f3-2c23-45fb-9947-bf97aa4143a5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e98459f-5133-437a-a31a-1a1865de15d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254ea502-3fc2-4f1d-b93c-8d4ce721d50a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe721423-4a98-49e8-85e4-4fdd6d17591b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91cd4b92-4677-453f-8e30-44cab8d73fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2adaf36-5ae3-4cd1-9ddf-fcf7d1ca88ae",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda55284-fc68-4eef-8db3-c49a8c011b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acce3245-ac8d-4fba-8369-30ddb9516353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b4b0eb-c683-4808-b4cc-49fbcf2ccf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50d2efde-1fc7-4a3b-9fe2-324ab2c57a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004c332d-7a10-4e26-bcda-7d5bd56262fc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470f49c5-a8e5-43cd-8c23-be0cd7a81d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697df1ca-19cc-4e4d-a288-75415e0f82aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ca4a51-22e1-4d9c-9536-498dd695ad4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "776992bd-7a3d-49a4-bfff-b6a6d0e72c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b59fa6-713f-41f3-8dfa-2a11365b2381",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f36c302-3ed4-4770-98ae-c408b2cc55e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be103571-8b9f-4107-a828-92a5a31fb528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f0c777-78ab-44a8-933a-678738956d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "32b97814-1609-4fd3-a299-23b2127a9783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063730c6-187a-43b0-8bfa-667b63b8a1dd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c1550e-7db2-4f9c-a3df-b448c86ef38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f548958-7598-49fa-a91a-e9a818bf81c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2604245-a415-414d-bc7e-caa8b43e15e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "921a653c-e634-4762-98b4-a164d15ea3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e477ce-102e-4804-9faf-fc57637bee48",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179eb260-2128-4003-94b9-455e16a3c9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a577f9-1a4c-4af4-8bbf-269a912418f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e78ab74-2d44-4aa8-9872-894c3f1c4c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf265b5e-8e63-4263-96a2-c96164955771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29486a4-1fb8-46b8-b41e-9d10e713ca3e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ed2f99-d86b-40a0-b58f-a189d53997e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579b2f04-03f0-4ecb-9a5c-ed072e9f68e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad526a5-bf05-41cc-af33-b2d089ea7d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63752e7c-309b-41bc-8046-c41fc533c1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0681fc4a-8edb-43be-9fab-db4dd8b5c86e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb698e4-7a1c-415c-9918-0d0879ce3bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063719d2-5965-4a0e-970e-3c056ddcf9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86eb6ec8-099d-41f2-84c0-979d977d391e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97b69cf0-5f93-427c-ba1b-4f65c39f2497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ce8b04-5b94-4bce-a8f7-c2a48241ed34",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5624c15-18f2-426a-84c4-ff0f8b050d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad62805-75bf-40a8-8777-a97e8c5853f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5d40af-cb19-476e-859a-967b0581e07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca87b8e5-4fd2-4f90-bb30-e94887a48067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc14fc1-b7b3-4d34-938f-357881ef8ea2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1c9801-1983-4d81-b2a9-e0e26d7bc046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419d0a8b-952c-4fab-9247-04872ca18bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113e03ee-39c1-4fcd-9e99-c8e220c5eeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7949d890-539a-4cf0-8ec1-775c7e5bbe21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddc53b5-98f4-44b7-8fbf-21ad775c1edb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27be86b9-2d48-4fff-b68f-ae9f39202ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa4b42c-0782-4ed4-8be8-2fe307676f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a784bc-dfcf-41cd-b14d-967d365d3b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "224b1882-cd02-4f94-96c0-15b52828ee1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1ebaa1-6308-41e7-9575-4024d2f28fbc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4d2a95-e777-4c8e-8067-68b954ed2aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a7e41f-5186-4e54-9b50-d29100d850de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbf217c-784d-4142-90bd-8e316ff3d530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b45a909-b620-4e55-8439-e40af3692b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6937258-1ee6-4011-961d-013f0f731ff5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d501f58c-b3a7-4e3d-8dfc-52d8bbb0ca7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff43e6c8-9fe2-43ef-bcb5-1d3dbf116f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fd8bf5-799b-41fd-9f10-564ab2723dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "838e5148-3832-4377-9293-b659708ab4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc0091f-f96c-46be-afce-a8644b8fd1b1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4508f94f-fcba-4937-8fd0-4a59fe8fe9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7352933-f1c6-40f0-9438-e750d86b218d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8729786-d4d2-4418-8764-ae9a4a8637d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "167362bc-6be9-4a7e-9a58-88ca82207c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b60c33d-3c4a-4d52-b2bc-06c56ce662e9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f788a8c-0d29-4799-a75d-5f34939fb96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34523685-6b6b-481e-8af9-41bf99952de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017a06be-4d4b-40cf-b07f-0d37519746a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c87fabca-8408-4efb-af68-2f32992a2876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92035b72-5965-425b-89b4-4faf4eedb943",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2cdb95-3fa1-400f-8867-d9f3d23f7890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39953e59-187f-4b39-aa47-dfdd024001eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20af7b10-f4c1-42f9-98a7-82f64b5d5d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db3ef98b-cd4b-467a-88dd-7d0ddb18d1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1503b88-90dc-436f-b443-43cf64c7f9ef",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedab2ed-36d2-4c2c-9c8f-297517f8910c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de18660b-a8a7-4fbd-9140-78635cb5dd9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3fc616-6666-43d8-9878-288ae658ab54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f89978f3-f9f0-4a21-abf4-a054d1c5def4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f58fa8-a14a-4f8e-9fc6-44910e983cf9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331191cd-b46a-4424-9486-3509e5404d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dfb2c4d-62c1-47c9-83af-a42d363a9773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944391d1-1655-414d-8a8a-b757f1e64187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4824d2a-cfd4-4af7-bcd8-d916741f48dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d6341b-1f82-42db-a163-28d390bb9ade",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9571ac51-2c7c-4f68-958d-fafd4234e002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452ae8db-74be-4198-9c0a-272915179fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2245b01-8f34-4f7a-a8cd-6af46c868043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bfcb22-bf6d-4b82-aef4-b2131d2e7d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465900de-841e-450b-a803-1e264680d097",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bd75e9-21b5-4863-a4ad-17d6fb513634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c4dd39-073c-4922-9072-865e44a1c79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf857eff-016b-41ac-afe1-2eb54d555be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "830a360e-1f25-488d-88b1-acf3e8859eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4089aec-62bc-474b-8e9b-8e74f385d444",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122b7b42-eb17-49be-8d20-5a12f67c27a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd534bd6-c525-496b-975b-fbece43c5691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208fa72e-4f1a-4eb1-a438-54dbafdb7b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "22c201d5-3e99-4ef7-8587-06683ec6f27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b346cd52-b7a3-47d8-a213-7ab8638bdf64",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b320cb1d-fbdf-46aa-87c9-f8915f9dadec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b644d8-c211-4633-98dd-b3da813090fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32282c20-d4eb-4e5f-891c-c92c4726fce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0057a9fa-5e47-4507-b177-67f5aadb2c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75149815-b139-43e5-9388-6efa4cb2ab62",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ce3e97-0384-465d-9981-46c2d8782165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34392ac-5f56-415e-b83e-459d63b7443d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9c481c-1934-4030-ae4e-24b36c615e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "adfe519a-835f-4585-83ce-41f6ec4f8eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874174c1-4eea-4ea9-b3f0-52b5d47284af",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c22b0af-8814-4ff4-b240-c1ca15d086f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d42726-ab0f-413f-b11f-1dd035643e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34f71b2-8e64-4147-9c82-02aa85dfac55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d24a1012-f7bb-4598-bd7c-1ee940f0f652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6c22ec-04c6-4d11-91ab-b3eba1d69ab7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1371cfbb-8d5f-4d7d-bcb9-70e4e43b216e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0a9879-8ebd-40c7-87b7-ec496e434cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594075be-e924-4346-b727-b000307b9fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2600b7f-aec1-4d84-a836-2eba461ce612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568af024-4dfd-4b70-97ac-e17b9ed8d3ad",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952f3d5a-44ec-4830-a9ce-aae17c4d5a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01412050-f329-4fe2-ba0a-3cde9482d8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37339bb0-0236-4f13-bad9-ec3495951666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3777f683-8014-4ed5-a39c-c2a357e61f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df9f5bb-e38a-4b69-b0f8-0c8cc2534171",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367006d2-dc29-4f66-9131-1ab8521cf4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d553fba7-4cc5-4edd-a928-326aacafe218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52073947-7036-4d09-8d5d-caa7b1c2e8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d90fc2-3cb5-41c0-8e3c-6d9309686f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cf8b5d-f0da-4f3f-b456-50f6a9e43fa0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2445ac-f64f-429c-af22-1b5b8c3601a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dede32e6-78b1-4d4b-ab31-1854b91a8d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ae0c6b-aa53-497f-b25b-dbef4544b26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f9c63e-bd13-4c53-8084-d171857b9160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6db3bc0-4863-4ce8-a257-525fdf4b9261",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee7f7bb-3258-4ea1-b1c1-8d304e17b9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0516caaa-142b-45a4-8e06-7fb64a585d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8055220a-764f-4697-99f1-3db1d3f8e259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb172a87-6c98-4798-9ebd-11a73c2fb077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bf7cbd-33bf-40c5-9e16-dcfbd5935f78",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a721e5-e523-4c45-878e-d55dde6245c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cc1c46-2631-42fa-a9e7-76964f6986ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b851ef-bea8-4222-b689-39c9a4f23a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25850157-2541-41bc-9f8d-a85731de0a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccf30cc-e7a1-48f5-b7dc-4238c80dacee",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d59eb83-0a9a-4fc7-ac7a-90cf77c492fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135b87aa-fe25-4b75-a3a0-1a8fd6babbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3059f2af-3278-4e76-b460-3c4324e4cb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0ac434-e053-4531-9207-bab00abbdc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19b83fd-7270-401f-9404-1d26c17167d5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178ea829-7915-4e34-b669-4bf7e2c37952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270569e4-97ab-40d3-859a-1d1d85e842f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8840379-84f1-4732-bc27-5a276d967b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e36e768-9a70-4ee1-ba3a-d626a054b799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051ea8f1-0956-472e-8159-4dbeee74bf80",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f81fc5-bba5-4d40-a163-a0d0cbe7f993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c0d498-4a60-4afe-bfa8-725ab770aa38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a99b870-d09d-426b-bdb0-e435d37c192e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1d947c-7744-468f-a10b-380ac1374d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bbf411-002e-4e14-96b9-597261d306ef",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abbe448-6f3b-4528-b4a4-7ace30706f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23378280-ff78-4b2a-b29e-706de3dd4b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6e1309-f93a-4be9-a7e0-35f9c587497d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d0f347-0512-4651-8103-e1f597aa5c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3671bb3-8bc9-471c-b64c-3ae58471c851",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce67c3f-0540-4b08-b525-03e4e127fd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54e14a0-2bd8-4e76-a1ab-a9af164468fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188818e3-fce2-4bbe-9b4f-1a77f21e1fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06ff875f-477d-4c06-8470-f37ce3bf1060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddc92eb-2403-4b8f-bab5-885dc5b31e4e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf83a37-c0c2-4a3d-9204-2df1485a7ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51651479-65a9-4cb4-8323-bcb2643d71e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb34f81-a20c-42e0-9409-67ae45614e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "19a10a63-cbc4-4c84-b097-bf1dc205003c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708f99de-7f0b-421c-8f50-97d87380ed0f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c3a829-dae6-4b5c-8241-e0ef8a0d14d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bccdb9-876c-4b81-876d-343ff41b2055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1132b908-e56e-4a13-a8e3-29b8929e57e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4986750-c341-4baa-b552-292d01edc3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6da5ae8-3143-4e2c-a419-3f0fb1e47b29",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49057023-0cc0-4726-993c-3e6991eb9e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65bc0c3-51d5-4546-ad11-d2af68e668af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df52b040-10bf-4ff0-ad67-224e017d2a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc507ce-a624-415c-b325-0ba4cc03b8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb221fa4-a7c4-4537-af95-4b7a54fcccb6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a3fa25-667b-4b6a-ba4f-6bf12d256b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924de2d5-5fd4-4834-9304-e96723f8bf03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdea2065-1d38-4e0f-9699-40deef629317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e21538-6f5f-4dd6-9d55-438ef2b1ba92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ff277e-dcbc-407b-a3c6-1666e603866a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5483459-7409-44f5-9b15-29482be8b575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e4225a-e53a-4130-87b1-5b69567475d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66da2ed-662b-41a4-aefa-5590839979b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6515fd59-bf7f-47b4-9bde-eb56c1f08ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f4332e-1f27-47f4-a1de-4eb472104bbf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c954129d-b8a1-4c13-b4ca-588027e8f16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752b0fc7-8820-4673-82e0-62d79d50df72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e0039d-5e24-4e02-875d-191335f9a96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0fa29bf-3411-44da-88ca-bb0710310291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfc31b2-bafe-41c2-b773-8c1d4f923d87",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d616a54-bd56-48dd-89c8-8f6d189dce2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9b4564-d3b2-4518-9e98-c3fbb42a5cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f72f633-7291-4e06-b5fd-fc045ed15d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb59215-78b8-42d5-a16c-95f731151325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712fe455-372d-49bd-a405-3e779773b996",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4546caf7-c58b-472f-abcd-f599a725b2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c33540b-c362-4b10-863d-4b6ded25a4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba818eb-2104-43c7-8faa-180d34797482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e57c841-ad8f-4275-a788-49015e42743c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8401f5-1dab-477c-92a1-dc3594fea927",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f2e39c-201b-4b93-98aa-7872649569d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b38c10c-61ad-449a-b176-216e3bd456de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178b56ef-78d3-4e5b-a694-055ebfe61377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d68b52-0158-4407-a654-ee09f56663d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdff436c-22de-4b6c-a37e-39d580b1bb68",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0d3599-f3c3-4f22-b37a-74c7269fa241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8772421-a05c-41c1-83a9-a253e806be1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1e6a70-0ad2-443a-894f-cdc8e117c764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a63cc8b8-96fe-4f27-8c9a-967bdc8709f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800170fa-73dc-4753-923a-7151d240a3f1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29424768-e250-4196-b06a-706d9b64d6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beafa89d-a0ea-4ee5-9500-47a251cbd5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e489cfc-efc2-477c-b2e6-6524b26343b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7b2557-930c-421f-9496-7e75ed184dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0955e5a-cc4c-4810-b3f3-957a7c2d3f64",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5105f2d-77e8-4e27-987b-5433e14921d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91963791-e1dc-4b51-be42-2f3c952dd364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89929a56-081f-4187-ac34-d2617dab03f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0d4462-779c-467e-9a7b-c587c4c5792c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9475a5b2-6b53-4f66-83ba-86c55c83b011",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6b1dc0-e5ac-49c5-8208-75a86dbdb69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2529dda3-f623-45ee-82ac-80a389afac17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3150ef-35a2-4020-8d22-5df4c8453ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8c796a-f3b1-4dbb-acbd-988e94b7c4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c5319d-812f-45f9-8d09-62ce8e746f5e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5864a8d4-eb5d-4f42-a315-a8f1cb001cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aebbea77-dc76-4abf-b444-cd5d9a9183b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dde3642-05bb-4e1d-abb2-7e0720f12ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8093ba41-f5e1-424d-9c4f-984665b928d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d72edd1-84a5-4ab9-9164-40510a22f812",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671415ce-57c5-4673-af03-163e1c7f0426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d800df4e-1bd8-4d37-8932-ede0dcdfecf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29950858-4c86-45ac-b435-49d35c0ab3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97a6841a-73a2-43cb-bc6e-a1f7cbab9e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c852e5-7984-4221-8ca9-22f65587f703",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22c51e3-a777-4376-9b30-069f2c184bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf16cc0-a5e8-4da4-841c-ecbed0111933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b067f28-554d-4fc0-b23d-8c6459ef6b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79fd1e96-fe71-480b-bdb3-24a16914d9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f3f0a5-4bfa-4d1c-bf2a-80b348c6193e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51115a43-2c2d-47cc-a9bc-a505b039950e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc2a203-dd9b-4b2a-9a15-2bef27a034c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f45c76-cfbb-4e90-ace1-90dc897d4d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56d46b18-c2e2-49c0-bab0-d123d7a406e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7286877-d8ea-42eb-84b9-f699f36e943f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9499331-ee4c-45f9-ab72-8e62bc555b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628c481d-4b01-4a90-b103-37e2f553ccc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7682f67-e240-489b-b42d-02ac46ea033e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "037099c6-63ff-40a9-98b0-765fde313948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95c3b16-8137-4347-8e36-df5f23dd626a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92f7ba2-a2f2-45ad-86d7-926880da9808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5486b216-9775-45b2-a22f-477ffad10cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bc0d09-43e8-47ac-8aca-53342967c9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "334cb4f2-e42e-466f-ba6a-f897b698b4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256afb66-d3e0-4aa3-8b8c-aa3fc50726b5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab0503a-5354-40e6-83b4-3fc146a412f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e50b74f-10ad-4a0d-855e-6ea975f65248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18a5ad1-8d09-4327-9e24-eb9164c3a07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49e5f4cd-1d57-4e07-9197-835a3c73220d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7fb3a9-14df-405e-af55-eda660af7bce",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb102f4-9986-49ae-b609-9dd4f604db8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21f5c73-6531-4e82-a269-6899e526f3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afabc392-ec9b-4ae5-9795-f2bf4df473ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a39386cd-0795-4aec-95bd-dbc854361bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9c7650-a09a-456b-8444-cf98723e1f13",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9962a1-c5d0-4cdd-ba37-3f3687643e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8348803-3dd2-4fb5-b463-ce08f9e11c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f0bd66-45c5-4974-ba4e-5bb9eb7528d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc761fc-b996-48f0-96b7-9cd58fdfdc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf83682-d8d5-43e6-b873-2e5081ce8722",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b04b5f-59f7-4668-833e-20f783ba7fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b696b3-86fd-442f-add8-cbe1c58ab564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b752b65-c8ee-4edd-9c28-c40580620021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9abf0096-c16b-4be8-ac2a-bbb8a69ec3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0a5ce7-c79d-45d7-8f8b-a9596c7e2e63",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b4195d-761b-4c75-8c13-617bcb706e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba553ad-8799-4603-9d8a-d772f143eee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6f1237-c597-44b3-98ea-079a96b873f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd30ec50-3ad2-436b-85d8-3529d2df22a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ffa6bd-5d72-4c50-b2e0-85a49936d934",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051a5bad-e86a-4bcd-b270-47258ab9059f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a280c4d-65d5-43f6-9d3f-4acaf1c0924f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ae7717-995e-4338-9689-50861b1973ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9cce4a99-b375-4255-8e9e-462e412826e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae07029-46d2-4c82-b205-76cc778babbd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cc2777-c752-416c-b304-1ea69737bc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848e7d0e-2dd2-474a-ad76-1fabd11c4779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc21e7a6-3b1f-459b-acf2-298026cc3a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f65707cc-40d9-4b47-bc80-06212ce7d8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56b99e8-d35d-4dfd-8c93-b54aaa44f2f0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fa3b56-0fb3-482b-9c0f-59e12bd75466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598ee968-dfff-476e-b42a-c3de5ccc6aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab15a24-5ebb-4a86-9a06-2907cf1912ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17902a95-3ccb-4f8c-903b-597fd0febd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98220a3-0785-47a0-912b-d0c0ddcc2851",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9977371-44ca-4295-8a08-8a92b6d66615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e18ed5c-230a-4705-b648-5d42df07e424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a89f9a-fe42-4a31-aa5f-26912ff5bee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "440931b3-810a-4e73-be56-c9426a93ae8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a3eb88-d4bc-46f0-bc1c-094cd5bb5119",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8a0fe5-feae-4326-ad8c-0958b9ef7bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0bbbaf-4be3-4f2e-8ec8-b6c43411f4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec13d0ca-9c5d-4679-81f3-5821b7baf71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2c3763-a919-4790-bc9f-156240573638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc523a7-60b7-48cb-92c0-36101ff45cfd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dca843-9a94-4f89-809a-cf922c272988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c79093-f20e-4b94-941e-92746dbf7990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec511a8-eb96-4c70-8a05-ffc46419f566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0129539e-4fa4-4f1e-8219-ecaed428c454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b891784-bde9-42ab-980f-9ad4d46f1d9b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a347b0f3-9fd3-4a78-9c62-9a7a440bfbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62c7e99-cd77-49f0-9145-c42036bf9e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1996c1-1ee9-4816-a3a4-bc02d1525257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "660bd830-fef1-4cd5-8aca-2defc2061c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9c7d45-6f8e-43d7-a977-355ef786b6be",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5700d512-b588-44d6-a2eb-a26cb9c0e415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b7a1e5-756c-46c0-8e2b-7e870b0970e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b17a956-2857-4e0c-bba3-dfe4264c0111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "961baedb-d196-47bf-ba02-ca6e34d59ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d99acb3-32fc-45e5-8802-f9143b96af2a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da00ba0e-6b9c-4bd7-a462-1d947043b141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b151b72-8729-4be9-9f9b-1f73b980dd1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32401f43-911d-4555-95aa-76c6b925f39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d45b6ec6-e80d-467f-a2b7-79406db2f8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75af0391-0de0-4e8b-a0d2-eb7f51dcc641",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb06b00d-2180-44b8-bdc6-22589e333582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22aa403e-f6e0-4099-af72-fee767244e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d1def6-b12b-4dd3-a5ee-afb866bb63d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "322e698e-fc18-4d79-a19d-313a87ed6edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d08f4d5-9ddd-4db7-8646-8f0cdf9cbd4a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc65883-980a-41a5-9d14-4c9002c0d94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dba6208-1a6c-4b65-a46f-a1bcc11edcd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25268549-cc83-44c2-92ed-ce290369b4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "10a1dd63-dfb0-43e3-95ba-40f0b1cbcc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b810c4f2-4a5e-48f3-9dbf-6b349ea04fe9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe9852d-b6b2-4607-acbb-4b3dd6a35478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35711d99-4371-469d-a9c7-5b551f63bb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3ed3bf-1977-4f7a-9a19-be13416542ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "57cbbdb0-e354-4b6b-90c5-4e0f7d223272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80468f1a-9bbe-42bc-8c5a-d0e2149554e1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb7e3a0-aec9-4b07-a8c1-f062e8cad247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4d97f992-0ac8-4d6f-9e82-496f4fbad7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5acbba-b514-4655-91b5-98d63113ef93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a61d024-0809-420e-99e9-ccb0b36489fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "12eb8206-ff38-4f02-986b-bffef479b019",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1cc32203-0d4a-4847-b133-dd22da51c7b1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2087af26-876a-4ea8-97b6-719d0f22dfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ce9b33d-70a9-49ea-b601-2716e1641086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaff390a-db6f-419d-9d11-a0252d6c941d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b99b5e02-b996-44c2-8c0c-580d5f9866ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc5b8fbe-fadc-4bbc-980e-a4c9d950cf35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4c06c00-cae4-4a1d-934b-b54e959d3b78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8085ca2-94cd-4908-b040-9dfda1c4d287",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56d1fd8f-9c3f-49b7-a51c-8f23314754fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5101401f-416c-4eee-8fa6-08712588c910",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "061b07e6-8dff-4695-9a0f-e25f0735005d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "30c91f70-36e7-4fbd-8db8-a80960d5759c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "99bc0daa-eb8f-481f-ae02-7ffd694ce3c6"
                }
              }
            ]
          },
          {
            "id": "928707ca-5467-41bf-8f4d-d12b4d4770c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5fb410c7-f912-4a05-aaca-7eae702e9c98",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f20d3268-0edf-423d-91ef-69f09f7ce17c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcea6fd1-3408-451f-a7ee-e46bda3c1061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1153f55f-3a76-4790-b9ac-a7597df023ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa6039e-b6b1-4faf-9a25-950f08df9b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30977bd3-d799-4e9e-93a3-87d2a3f0e694"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4ca59758-c69a-48f5-a32a-10ec73a3417e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34fcf235-e142-4dd1-bb5e-3ef9deb96b5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f21ecb8-8ae4-4672-a422-f013573bc6fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b70ee1e1-2c8a-4596-a2d3-20d5e2c8f384",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8fc1b4ed-d214-4b3c-b741-c463440c188c"
                    }
                  }
                ]
              },
              {
                "id": "3cbf5757-d3d3-4c61-bd33-0852d253cbc0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f02cccd4-e664-4cc7-9658-c816bce4ca8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed9b88fb-603e-4d16-8c8a-a7a964decbda"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b18fbb6-aa03-4f25-a3cb-3820d823f054",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f816595b-5400-4d3c-b4c0-5dd0b6da34db"
                    }
                  }
                ]
              },
              {
                "id": "1d72f7f2-8774-464e-bafd-3f353aa5734e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ac06cd6-0926-4578-95b4-01bd3784e543",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2aad38e8-caa8-4f6a-a84d-818e916bc427"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86388459-ee76-4f8d-8892-c2fc01e39785",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "32879837-2a6f-4dbb-b289-09369bcf8fac"
                    }
                  }
                ]
              },
              {
                "id": "4c416a69-108b-408f-8bb9-23c15153381c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dcfa736-2abf-4609-8676-e22d9d73a32a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "166946c5-0f9d-42cb-b305-5ab45fb45f34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79c50b69-4032-4150-a345-13980cd9bf9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "112f465e-a5a1-4840-b50e-2abcea3b378a"
                    }
                  }
                ]
              },
              {
                "id": "8b4a5691-5dcd-4569-b0cf-ffd0ce62802a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf95747d-fd59-46e6-bb6a-e8eb96818856",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e041606-46f9-4402-b7ef-018bb7bf65ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5e09fce-d711-4cf4-9c64-e4b47dad7f05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c5155252-6619-4199-b7d8-e59400b8ff72"
                    }
                  }
                ]
              },
              {
                "id": "a22b80fd-7d1b-4972-a91c-bb9b596763e8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "894e97ab-3d11-4e11-9410-d25b0aa81271",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e587068-69f5-42fd-baf1-5e47746662a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f3d0878-9a84-4e48-ad0e-01ebd2817d23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "da4c5f96-30fe-4b13-bc63-e6d9b5fc2381"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7826be60-02d7-4415-aa28-bc519971c4c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "61a0b47f-8ee7-4d0c-ae1c-27e2d7b565f3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ef048fc9-98a0-4620-a6ef-b63bb8f2402b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de024f59-e822-44a8-8fdc-b3356363a872"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1202829c-9f1b-4a43-accd-c5b85d5720a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2b92e136-af7d-40e2-a443-3d961e4194e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5ca546a-284a-4fcd-9f08-231b3aa0cc1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "964e183f-2079-4338-896a-91719d422570"
            }
          }
        ]
      },
      {
        "id": "60e81378-b7b0-48fd-a361-ead42c0268c9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "80890f43-1cb7-419c-8669-0bf716c93526",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b31d9757-5119-4eb2-b90a-265a5f1bba3b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ea037217-c2e4-4515-b08e-01ebf24f0b0b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9109735e-31ca-4de6-b130-e8ca77faf279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb33a8bb-356f-43bc-bbb3-c4239135e51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02192d8-99f3-464a-9201-8da75063c1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3448762-944b-477e-96ad-b09637d374f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d46c39-4cfb-400e-a6fe-e45cea4bdac5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc73a467-3d20-4aab-954d-bfaf5deed806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce200eb0-015f-49cb-8d72-25972a56691d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f59bdd0-63b3-4dc3-b1e3-1224034dad77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f27556ce-3108-40a1-a5dc-51f62d6a7967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c8381c-6303-4e75-bf56-79c566dff1b9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a322c9e6-8b9d-47b2-97f9-2266630a57cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83157789-1ebc-4438-8587-55019578422c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfdfbb2-d5a9-4997-a60d-8ee6ac067a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7549924-a93b-4ed0-93af-8dd5edf5832f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc85dbab-0a7a-44e8-bbb8-24c1fb87f264",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46beb358-f383-42a4-822b-d3568eadfa9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa86d752-4fda-4291-8162-6d1af7b2cbcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4232b20-467d-47e7-b6f1-66d2cc262d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf3c02d-1882-40f9-b713-9dc8c9f48c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022dd8cc-ffb7-4f72-ab8a-e5199a1f8c9b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693d745f-6589-4e18-b194-584d7b25b6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3c19d0-42f9-4eef-8165-eb821f06aa8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fe1d9d-f98b-486f-b9f0-ae24f56307ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1652d52c-3a0f-43d7-aa11-b856b37555b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e159e73-9664-4476-bc9a-34539b76d084",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce607e92-1352-4e6a-8860-aad0edf101c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a13a9ef-03fe-492f-838c-fc6f13aaf154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2900184e-9988-4c06-9fc8-e3eaffb2b161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56ab4bbb-2b30-4115-a23f-69c7f7216dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46df997-48d7-4709-a00b-34241ed2e917",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a0d877-4193-4e14-92fa-80c64f438bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a273b756-fc13-4571-a110-4fd5fd436d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d858a0-13db-43f0-9717-e49be1b20b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff052dbe-b00b-4306-8913-87a1a5417a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bdbb73-3cae-44ea-958a-5691202cb50a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28013df9-c79b-45fb-8360-acd28573b4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e53e7b2-48bf-4313-a7f6-55ecb64cefde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0316375-1a16-4837-955d-0554407b9c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f870f3c1-07e8-48ac-ba91-29f3dcea7da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a65d9b-e594-4ec8-a7ce-f1840edd27c0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb47a3a3-414c-47da-a50d-a239dc9f6cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfff8fc3-96dc-4827-9725-b62c54f56ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caef38a9-7529-49b5-b59a-c912cda3f4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c644651-677b-4492-bdf9-c91c1343235e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7988252c-c22d-4971-b2c6-5cfa75f34a07",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2452fc94-a7c3-47bd-9bbe-838d3334a728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1baf3d-3119-4620-892f-b51aa3bcaa67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bf6200-dc8b-4ffc-9d9b-67d247f9f228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f0abb7-d0ac-4830-8b8d-c6fe7b4f1c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4f7966-f7a3-4199-8ec4-1f13df074a79",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6954a12-04ff-4363-8d21-9c14d1eb59bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab689469-228b-4ae2-94e5-510c582e030a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac05c8a-267e-45ab-8448-f7e523f9e3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2eaaae-40f2-4e9f-9a0c-99198b426561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c54a8ee-b744-491b-a899-67974d057f5d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711071ec-f66c-4b10-b5d2-0ee93bffaa76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27687546-f03c-40d7-b22e-d87ed6299c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebf429e-c515-4447-aa52-01e6e04b9cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "acfddb51-e0cd-4f1f-a415-f6a03f88362d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d59ff2-4228-4eb4-a309-b24dfba15147",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574ef379-fba1-4651-940b-9bff17cea6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab2bcd2-aa5b-4e47-8b5f-c37bfade4247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9096d7bb-e923-4906-b1d3-c87dd6d13b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "735bc5f1-6112-47e2-85bf-75c94b3861ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4357db-c592-4dfe-8f86-d0f6b237df20",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85504c3-f7b5-4a00-b1b3-22bafa3e5a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a339846-769d-4a9e-9d09-f877625ca822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f47853-a375-4499-874e-f2ba1a12bdb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eca87cd-db80-4dfd-a275-23828ca126bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a381b1f-770b-42e8-b184-0dbd7beaf525",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c3dce3-d544-4929-a5da-0249244fd3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5035afd1-caea-4948-a2fe-570c544feb41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49aa088-9fbd-43d3-adf0-8bcf144a35ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1343f0e4-9e4c-4af6-be14-5b1abf953713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5332ce-7fb3-4b7d-8da1-151a8a6c6e28",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a410cf2-ebe6-4e20-a442-f88022772f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca0f7c7-13b2-4e31-b3c3-8c4f9b99177c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54561af5-7f84-48fc-9d26-7b2dd823e94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1fcdc2b-f15a-4903-b47e-d2881096729a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2578322-0fe0-4c00-9f26-9ce18e019463",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30832f9f-c4b2-4784-9e58-13abaa2f0571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d31825-fff9-472b-88b1-d307af86bfff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2c13ff-1e19-4eef-b296-50023905172d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b73d1e2-620d-4581-b2cd-c7ca2fbda18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a1cb81-1798-4b2b-b2e7-d7c6e5c18214",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c55812-3cb7-422b-ab5b-ce73d4f6a902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6108b950-6705-400f-95ba-34fc7fe22517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a1807a-a64b-4019-8558-e3cbd502b1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "abe858ba-e5a9-47cb-b3e6-5497e0bba551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db68091-afb6-46d5-9b99-9a4b8a108ae6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70645240-d81e-43d6-a83d-60b9e0dae926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb43eee-ce72-4b39-9bd8-68015b689f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1511df4-2140-49f7-b1e3-e2332ef06f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83087b21-fece-4c87-a7b8-7361862bdf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9424e0-d6b1-4a3f-8f6f-6050cea63bfc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575c7615-2fb7-4c17-be14-1391188ea545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecbe662-c5fa-44e6-a6c1-ee237e81de36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0d41e9-9545-40fb-bfee-59d1e46c073b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "defd4aa7-a74e-4036-9202-e951533e631c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3a64eb-ceb8-4c60-a7a2-6d8f23338e84",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa199f48-3782-43e8-bfd5-d33d0b11cb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4dd718d-3556-415c-b20e-63e6c01ebc15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f71375-440c-4686-a313-e7bbf7bc7401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c1ef56-1611-4764-bb09-d8971b80ed58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a1a9fd-b645-4b48-9e87-6d8526232e81",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a89694-f2d7-4fea-be1f-b8eb3e795235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147d30f0-7604-4b98-9b95-c17b5fbcb6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d63b3c4-eed9-486e-9cf2-6e47d4960d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6250be06-25d5-4a5f-8d59-a30c37d1fa2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f25e48e-a295-4882-9035-454ce47a4f64",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2ff37c-d68b-43d8-9635-1c90fbbb8232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5900831-2f6a-4967-9c86-6d666a3a0ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cab137f-1548-4d6a-aabf-d7e0b06a3a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac22e18-1ef3-4aa8-a7b7-3d0f0e912a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2589c038-1a52-4dec-b188-396f9a5f1648",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3982eb-3aa7-4659-80ff-4bbff9db53eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c96da77-c9ba-4ead-b3af-9a28a2e83e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ed257a-1db0-4728-862a-7455f3823aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "581a524c-7b18-4128-9de5-072ec099c367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49d3586-8bcd-4b08-802b-4e2f5d995b24",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634cd05c-8cf4-4010-8a34-3744f5706529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70ccb86-f8b7-4fec-b33a-90f0ad5d8857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e44cf49-aaa2-4b68-a960-a00d06270064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ded186c-685a-40b5-b0a8-dceea272b77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66db507-c3f6-4da1-8f70-4888190b1fc0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690c572c-4269-4a2c-8ed6-fc2b2cbb2b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ce20d9-4d4b-4155-afe2-0328c5353860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0921a7f-f881-4ea7-a78d-ac9e04461033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2be0e4af-4c3f-4e44-b778-323a4babd31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e858b5-e757-46b2-a1a3-c37f69413f5b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3f696a-e09e-4a5c-be20-5716bc7625a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dda07ee-2a15-40ee-bbe2-66412a8aadea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82dcf5b-f545-4d66-9c6a-7401e54c4e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e518e0d0-9156-4e9e-b219-3d1ec9a52e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d6c84e-65f8-4e05-96c3-68f0339d12ad",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cbb139-9f2d-45bb-b9d8-a1380a5b5076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4af3bb2-2270-4a88-ae56-f95f3a935af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589020e3-402d-43bd-8f96-989df95dd294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0da2ec39-bd96-437e-9731-662026e3d6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d5e365-80ad-40af-92f5-dfd0db13f590",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8174caec-feb2-4a16-887c-7f3c468b461c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5198d64-7b3d-411c-a031-4dd44f229e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe43eb9b-4e7d-480c-a810-38afb9e48179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df868963-0909-4441-8b98-fa4f745a3014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22144c00-f6ba-402a-a02b-af27f7e4b4c0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d233c9-db88-4a4e-90e0-92d3e0a8f42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a7513d-14c5-4422-aaf1-404e8449a7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34805bb9-5540-4bc3-9709-7e1affafc042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2be8c8d1-1ded-4189-b51f-a529d3d44f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247ab0b9-9c71-42de-ac8c-fb6e5149d27f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062d792c-0445-4515-b61c-ba869c7d3358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1bd259-7578-494e-9571-39d6f0da362a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4beefc37-3152-4a5a-ad09-582cfbeb30d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3980ed8c-b0b7-4486-a5f5-a9ebefb77239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffe4462-adc0-40b6-a8f1-e3c135a820e6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15812df-d14c-4e24-be4e-12ae4ff63f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7f0099-f32f-42c4-9462-3686788d0f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d06a34-b385-491b-8eae-f42114626b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27532cb9-e6ba-459a-bae6-0adb3b0d7161"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b28e1a3b-c2c7-4deb-975b-7e3142fcbd84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb329c35-0ee0-498b-8ad6-37d56e6d3a0e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dd5b45-9625-47e1-ba9c-e342df05e44b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "732859ef-ff82-44d9-ba7b-db223b6ca45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188c7020-4b4a-4b9b-af9e-88c1b9c1bba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38a22840-1b9c-40ca-b96d-31ec018902ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c01b3ca-d794-42eb-ae1e-8584c68f764c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee05e906-046f-471e-a3b1-7b086e492982"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "523435a8-e9c4-4d7e-abfa-cb549c7245f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "159be8e0-4095-4d66-b2f0-1702eead159e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "690c01fb-7497-4c69-80ae-3e68b35d6bbe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "87fb8115-f4e3-472a-92f4-b5b63405bc0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73ae94c8-4a05-4be7-8e97-5004cb483312",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52fd883f-2579-46bd-88a5-facb1e662523"
            }
          }
        ]
      },
      {
        "id": "714e822e-d1f3-44fa-afb4-33207cf791bb",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "678f6780-7e5c-4cd0-bac0-89af40d1648b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7ef778e-6d43-4066-ad35-4fef243ce720",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "61ece515-5744-4629-93e7-dbf30acf4356",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36ccbb8-034c-45a1-99b6-b0015dc449ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a11234-8233-46b9-b84c-77e022121e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e366c43-03f9-4c59-9ace-f252c0f56a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4383a39-c501-4b57-9c1e-b91cc4f39ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20f0544-4978-422a-a6fa-29563b428690",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1012d22b-2899-4eb5-b998-62e56a82186e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8df1366-ffa9-4f81-8877-30a0ec0846ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04d3b40-4917-489a-9ea9-50b0c5425f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a829e3a9-d4dc-47b4-976a-d901e37e0a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fc211a-7e51-417b-a9a1-455fe539456d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdf3a53-05cd-4444-9254-f5fdc1932db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744fcd9a-67c3-4b48-bc45-0a4a0856db62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7dea14-1958-4db3-be5b-56608faf02c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3cb6c24-f5a9-4f09-8e91-5753491ef924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b68f77-9ed8-4c11-9e18-224044253017",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca2abc7-9e8b-4306-8d5b-ce2ceb8cd7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169ffa4d-7911-48d1-a07d-deef0d386fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b779e63d-30ba-413f-9df0-e07232c78145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26432f50-b32d-4565-8dd2-f9680035fe49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52237435-a586-41a7-a3c0-82dcfabcce62",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ed4ea3-f214-4360-b367-1fde74ae6a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522ffdf4-06d2-4318-bf4e-c0534c3d9036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85bd5a2-36c0-4c0a-83ac-199cb33973cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "498e5a3c-b76b-4439-8fde-461d9e70fd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145e797a-4363-40b2-9d3f-8094997177b7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc99fcb-9b7d-4a48-b386-f34ffbea2625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4cec59-a3c4-419c-9a84-8719ba9d38fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea65a02-caba-4de9-af97-8a9d62d34c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee20040-13ae-4f08-a5cf-bab803908814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e37014d-b906-4e9e-9bb2-2d76a5a00247",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdbcbfd-e0e4-4e43-8021-9dfe0d6c9fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df114b0-57f5-4e9c-bac5-d70df42d311a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a63f115-0c99-429f-a286-fb1cef85e9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "34eabee1-a4a6-44c2-b852-5972ec6bedf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88b4a50-dd4c-4b91-9cd5-0dfcbebb5f8d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a556d51-5fd0-4656-bde6-265bb55a5812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f9836e-b2c0-4ee8-a07a-bbac317db3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9612fe-4e79-4115-9eca-7379d66b5c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dce4b18f-4bf2-4fb2-bc0a-09b4df39871b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef66db57-f2da-4bf7-8943-6ac7fa3bf284",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6747c7-4a1b-4bec-a8db-10396b898b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b081d9-1552-4723-a4fd-4a9162cda614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017b7feb-d53f-4e47-8b81-d6b045616a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73762133-e444-429f-ad44-c2f7264a75b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97836e3d-793a-4c98-ba3c-497f632b3881",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c3ca23-b4d3-4b21-bdf1-9900f39fac0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1524dac-0a71-4cdc-9774-3ff036331ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c13f56-9c10-4cce-bfd9-fecb4dde2724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9c41d0-ee04-477d-9780-db5e22cf821b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c5e961-2a38-4d79-84ee-f5c4be8dd78e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3d3470-1c85-47dd-9d13-456aa7f51029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48570ca2-6287-4c47-85ee-c357b5629b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b8ee51-4f6e-455b-9f06-15124ebc6b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "20f9ed01-fe64-43e7-be2c-cd7ff96595ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d39d46-ed62-4217-96cf-2dbaf21f7fcb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a91682-94bd-422f-8124-d8f5b84019a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9923445-a141-4212-89cc-fb409e8ea799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4567290-1ea4-4b46-bac5-dd3c88324bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33d44010-29db-402d-905c-b59a4cc363d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e6da2a-6154-42c7-8742-39daf90374d3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a961438-4eda-4cc4-b08f-e6e22be4a0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11da4e7-1a6d-4424-a817-0c2b2d9f28bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8fa0da-38c0-4ae3-9ebf-5febd9414be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc2f0aa-68f4-4a7b-a512-842a9435b1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba249da2-5d96-454b-9cde-73fe0be8af46",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692e88da-3abd-43e3-a9f5-1259497ae80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f10345f0-4988-487e-bb96-bcf13843dd8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ca6b9c-4c3f-4705-ac9d-171c7c5210f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c28411af-a575-456a-84d4-8145c253a2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1258e2b5-b0eb-4324-92cf-43dee804a261",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7e6e66-60d7-430d-9595-614440d3ff49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b709ee-cda6-46c5-b535-a14e30efb69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cf7ab0-68d2-4920-a480-ac17a752949e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4249a5-03f8-424a-9dc2-382cfd446ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1b3aac-741a-41a4-9f09-fdc22b994f32",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191f88ec-e5e8-42c6-b9b5-3bbe39894415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eed21c4-8bb7-445f-b9b9-a2f03b5f3f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ef7fc5-ae68-44a2-862c-569f27a0bfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e3fcd2-6895-411d-852f-eda821bca3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3392def0-13a2-4020-a99f-f8bbbd9caf95",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c491f027-b551-41f5-ac01-57aa8bd7774d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b271b99a-7cc5-48dc-9c4b-7363e701cf02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c82451b-6d0f-4c3b-adfc-4971346446ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "72eafa54-d6d3-4376-bc1a-ead9d5e364a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cfc19e-69ba-4e9b-a7ee-57fb564f4aa6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ac3f9e-4fa3-4a07-abfb-3968aa63a227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a512111-c843-422b-b242-119058fbba46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b07353-f836-430f-9b19-d2318abb6b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a205510-036d-44a6-9cfb-7d966e9704b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ade8940-4951-4b08-b289-b257ae2ba8a0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1375bb33-725b-42b0-b0d7-daf1c8d01ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf82b242-2767-48ae-96ed-d0c21252220b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931e2b70-0eaa-4f59-9e3e-5dc6d15dd5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1a4e90-a27b-4c2b-9061-970b4d087d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4518a531-435e-4e74-a64f-20b97e097577",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff78d421-dff5-4a0b-877b-6797a1cb2f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a7e1d4-2216-45d3-8e62-1963950a062b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7fc90c-17e0-418f-ae1e-ee77488ff817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "303520ee-844f-4738-a6f4-f1e9e7f2d323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207ec362-eb1e-4210-afb4-65a52b263571",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad345a3-2a36-4102-a692-3ddb3c1b8768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc97a71-e82c-46b2-8c1b-eacb05107362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3b0b76-d9bf-40c9-abd3-aadd4494686d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e48e1a-0513-4cc8-bb42-6d049d7618a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666e3b7f-44ba-4159-aecf-d49c186f2cde",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f192b9-05ec-4eea-8727-bafd6a7cdf8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f54fe3-f655-43d3-8750-a8ef1f221f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1ea5d1-d7b9-45c9-90e2-c705ea23dc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "203956c6-c5b5-437d-95b9-2f444707d459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ba4dcc-80c3-4d84-b88e-d1410fef3509",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefec298-a5d7-4904-b4da-01a24f985243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b87dc3-1c5d-4c5f-ba32-40d57c9e4a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa3ce9f-dd5a-4ee4-8541-c02f506c6d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41666b84-4cc0-4fdd-917e-999b1c1b4f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d52b48-ae71-47c2-9e58-b514c63580f9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee23a237-ff3a-4b1b-aa7d-917847ce9e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54258d3a-db98-4106-8108-68a3a2916b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ec188c-0c5a-4326-9e1a-9d90124cfcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "490c8619-972f-4d6b-adf4-0c183af7f67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d72042-83bf-41e6-9233-ab29c1b77cc7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c942f4-65f1-4a8b-8e44-3023d5788e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9065d0f-1915-475f-8954-3aa836da97c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b74289-fa7e-4afc-b590-82b1418e4cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89b8e5fe-4623-4c2b-bf53-e12687237ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02de439c-44b5-41a0-901a-6e5bf386b79c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da582a8-9417-47fb-b943-8c9852630a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98e42e4-b551-432a-b69e-b535d3055a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08ec52c-8f7f-4430-92d5-8e4b907930c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "addc2783-90c0-4455-bf9b-6782e51ef059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9078f133-6f2e-4b09-9acf-17f9ca49553d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573fead9-5fae-4198-b9bc-b1c17836240b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce437a4-69c1-4b01-abac-d9c6ea8616c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7ca174-81c0-4e12-aced-488bd56ee717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8610777c-0bb9-476e-9e86-fd14622fa470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f846f62-bd1c-4e18-acda-955331885cc0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3163f799-b2a4-43fe-8c0c-20b8a1e1b778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d87b107-9510-467a-9fbd-3508484aa990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8306d0-1f83-4b4b-8678-40bd1d16c74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "590a41a7-e53d-43c9-87f0-f9fc9e82a3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9997d79-513d-4189-9234-c4b1ae0b542d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9251df-6c4c-4720-b07e-db622ffd4e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f42a17-b475-4630-9bf2-99f26721746f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250c7e22-13f7-426a-8a93-4e4913bf1a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11044eeb-c026-4a51-82f4-578b3587c0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28faf716-bd31-48f5-bc80-25c78d3ec509",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2482f251-cdb2-4e95-91ad-3744ac36696b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4911bb59-527f-46af-b5f9-e556b6f77a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a86ed15-1692-4013-abcd-45c56932d0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d207557-f0bb-4882-82e5-e8c5a05270d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73163a5-a82b-402e-be41-935fe38d3a80",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508efb4b-1217-41fe-9883-8e1a84ff5e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34abd373-0072-46f2-b8e0-54399050f12f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b06102-2c2c-4385-afca-2132253f7b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ed4217-49fc-4907-a5f5-387efb4603fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc47d9d2-a514-4c5e-9f4c-dfff2ce5febf",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226b558a-b494-43cb-ba7f-7fa4bfd6904a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de8ca0a-02a5-4d76-be8a-aaca58bcf811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a84f72-7784-4287-8978-3499441906df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65ac888f-4d7e-491e-b27c-018689cc535f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba3d4b1-fa92-440d-8c0d-3536aca2044f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4581d5-0ec1-485f-9a9a-4ed92003ec3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e419bdc7-fcaf-4faa-af99-0748f6752870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16067ba4-28ff-48ae-8907-6b55a98a1e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b8a163-d2f7-49c3-8dfb-cda938772295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd59f82-4ad6-409c-868c-0acd3917b44c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d6d440-4f17-4642-ac9b-191f5f31e9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9e70a0-571e-4084-9448-69e0233e8f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b12bc7c-1e91-45e3-b697-d664afc398ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77a403dc-f820-46a0-971a-ca91f2847643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63ddb0b-5946-41e3-8a76-08c518a9bd68",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539fac3d-1b69-4c86-81c1-4378417e1300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6565bde5-0127-428b-8300-701c5964064c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e4adce-b391-487c-9e40-642ca0c3e3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b507a925-7c6c-43e3-ad5b-6ef654acd5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2578f5f2-5e4a-4fca-bef8-0514edbd642f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4376722-9c16-493f-b275-6c51704ba52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc1f210-c57a-4750-b2e6-f3b9eac10881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bf416f-8cc1-4c70-bf2c-e40353899fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2aeff22-ea63-473b-9dc8-16aea545764a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce0f486-00a2-44c8-8912-72d789a49e61",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3214b04-ca2e-4cb7-a197-72887e5fb4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57aa208f-ac88-4790-8981-f3991f7fad04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f057b8d8-869c-4d6c-9a13-b14c7974f4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b58063a-fd02-4107-b132-808eda74515b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd034ed9-0dd1-40e5-bffc-7bf10add280f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7f25a80-09ed-4f65-8e49-c070fba22ecb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0118cb-10ed-44fe-aec7-a42e49767c56",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "be79e93c-49c1-48ad-b222-62dd6143ae4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1541ec26-f932-4cbe-9e0e-7bedb1360961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af1a1b57-7e92-4b08-b515-7d204b27460f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bc85038-f276-4c4b-9abc-86778a687178",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34f32e9d-28d0-4b10-a4e2-8f74a02ab98f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "078744bd-5893-44ee-bc4c-009eb9770be6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcf378c9-dcfe-40bf-aa88-068ed0202016"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d669cb0b-f9c0-481c-ade7-7ba5c30424e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0624dbae-30f5-44d0-95da-e5218e37b01c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1040e5b2-92ea-4c74-b70e-5a51f31c989a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a88941f-16fe-4129-9865-c01540652e5f"
            }
          }
        ]
      },
      {
        "id": "1d54b0f9-7ffd-4139-af48-8ae479f8f138",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ef5e4bdf-c5b7-49d8-a190-fe3b90e47e6e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0007b05-d8fa-4aaf-bf7f-813c3a47499c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ebbfc6d8-13e4-4dee-85f7-92f8247fa02d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae631c6c-80b1-44bb-acdd-737f56ad2d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259f65fe-ec6a-4dfb-9cc9-5e3170f71b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09541fb6-ee82-4c26-928c-98dcfbda886f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7a2397-c0e1-4b3c-a038-828843a2a863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81080812-5bea-4723-aa5a-7af0544d3d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4318b30e-0eed-4b6f-8678-604a712842e7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15643f97-4c81-496d-a787-64f6e03a5cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c03a748-e336-44d0-a0c2-dc9783bf13d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e59a90-7bfe-4fe8-a6c3-dcf34f543819",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a17362d-1b41-426e-8fbd-22fb435aea55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f1b8f7-17b1-4cba-9b7d-841205e21710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0f4a53-fcae-47fd-b213-f6ccbb7999bd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825db7de-67c5-4b74-8481-7e898c11a67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb2fea8-aa7e-4492-a5d3-c6179c87c531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62cbf18-5bba-4e7e-971a-7463cee8f426",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7fabae-e0cb-4828-9836-d1405f422cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760eb899-bc5d-4561-ab8f-c12b5028be78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6bc63e-2bfb-4d5f-906c-903694329d45",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1615e14-8e08-4510-98de-1988114c104b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947d1ab9-80df-49d6-ad8e-559e4512b953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa425d33-edba-4b9f-83a1-7a14015c91b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7cbd46e-0b4a-4819-afe1-e146af1165a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2db1d26-13db-4fbb-83a2-71a1ade922eb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c5c1f0-1677-416f-856c-bd35420561b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b38e36f3-a45a-4011-b485-44cebc5e87c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7c160d-2d11-4a85-8a9f-c03ac4a270fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0615eb-3c6e-40ec-ae3a-50ab2512a4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f95282c-d6e7-49a7-be43-9eca27186cbe",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4009d14-7d53-490a-b4eb-7cf6ac8f9f53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2578fc2-d602-45aa-bc37-fa5b070c3ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec503b1e-1ed2-4e91-85b9-5ab983bfba70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354f8ed3-10d2-4a95-9b95-8a39d7250cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02fa2b1-dcf1-45f6-837d-ad38d6faeedb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2a6336-abde-4d9a-b94f-8d3651a65a51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11a563ce-c373-42c3-813d-3a36350d8e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ca74fb-9f59-4fa6-b2b5-2fc970c657a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f8988c-a990-481b-8d42-119a32bd29ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fec03f-c492-4127-8d8b-95c575810608",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e8fde3-179a-4ac2-93c6-496e19c6b6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fc6f92-7c82-4b80-9b60-bc4ef9157ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f4cba7-b21a-4b5f-b371-0e9bf28b5d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72679414-1b55-4dde-8e1e-870e72391127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a91b5b-10b7-4fb1-9c24-bc47694a47e3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850cbb4b-8247-40b8-98a7-59113f5bc2cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34441455-287b-4eb9-933a-2682afb7fc7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "822e0822-6b24-4230-85fa-2fdb347fb1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ef2bec-e4fe-4438-aa92-bbc2f31bf7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7e3716-c5ed-45da-bf66-f1edcd1b9b2a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b509edc0-5e86-409b-98ab-d9bb5e6dcf86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "615b805f-ea8e-4f6d-9479-ac938e26a282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "454d194d-544b-4a4a-8ded-adf3f9f1d728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20012e6a-4500-46b2-8213-b2df23d36b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445565ab-5cd3-45cd-b61c-77b9e554a706",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05624d21-0603-4473-b057-80bdc5c2081d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dff12cf2-416d-4473-98b0-57d2baee2fed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2f0e78-cd34-408a-9abb-f547f67c6c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b195fabe-5f6b-4014-adc6-e67ae9c5a40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebf0a20-b5b1-412f-831a-b47fad49936c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9cb29c-934e-42f9-91cf-d028f6b285d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad839a7e-e08e-46d4-aea6-6edc580950e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ca69c5-de6a-4adc-b395-3702bf0340dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf84c15-6689-419d-83ea-3e2aaad0153f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690f508c-9204-4f80-9e45-e6c209288fb2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd3cd0d-4f1f-402b-9f12-6135d510a400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f640d4a0-f6d2-44d1-94fe-24564000b74a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5720b23e-c49a-4bac-8b6f-49f1aeef4f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79810777-0423-4f01-9eda-592aa5ffb367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c49995-c5c8-4c14-ba46-03698fe2eb27",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff8b422-079f-45c8-bac9-87df91f9aa55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701c689c-7347-490a-bb1f-4fdb033d6f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3d94d8-2e26-4177-a568-75e67ea83c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d7789d-4d33-48be-a208-583eba99bf3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db86cd2c-2cd5-4e7a-b41c-4ff06bb97976",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56baf1c-760a-4cb6-83c2-9a4f6716b73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8879cc-0fba-4432-806a-6ec6fe54d18b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f364671-49aa-4528-b174-ebd2cb69ff2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552adf99-e80f-48a7-a233-bca750ebea28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def5cc5e-0e5b-498a-aac8-55172e98a809",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f931bb27-a0dc-4c4e-8938-cdc05640b5e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd69635d-cad9-4e33-ad5b-3583fa0accd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d14a57-7af3-4b69-af94-2ffda50dd9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652d19d6-3ced-4f3b-874e-ff1a987c2ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bf29eb-04b5-4c08-a3df-306111a800e5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f556513a-e04b-46b9-aa49-73ea79a08179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90dab17-7664-417c-b7b8-97e8feb925aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a115f6-f974-4428-918c-56e113d579be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5963f24-530b-430d-b5e7-3d1bc0f086ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3effad-5e04-4f23-94f2-23ec8e852016",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c466330a-dd7c-4788-8adc-9d3bade60d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab374ef-5db4-4504-9c48-4ad84d1d4e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0243a718-1d58-4256-93eb-294a0e030520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0379d6a9-6dad-45a0-a46e-b252e4f265eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2a663c-ff11-4c6a-abe1-ff0e3a506972",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173e7ac8-5b60-489b-aabe-0adb7f432490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abbb45b-7040-41c2-8f20-5845c10aa39c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1176a784-c7c7-40f8-b4af-594a0fa7200f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40fed51-1911-45db-88b2-df1e882b54e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90c21f4-134a-4aab-b353-bfe5730e6ddc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7480afbf-6c66-42bb-a23d-e569a7702a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1bee45-e902-4bff-b7dd-428639cad77e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8683c97-7bb2-4067-8136-ef8ddc5f5ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cfeb582-712d-4a68-9f54-d9301d791cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bab6736-e139-4f39-a9df-4a9b809c4044",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8ca2c0-b44c-4278-bd89-0ada892078dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f95aed7a-ccc1-4a9f-8f90-30b82045eed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e699aef-8f1f-4c6f-abe6-86087627f7f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92cb84b-5829-4938-8157-783e276d13e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf07d4a-3dd1-4159-a9ec-949271852b9d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addf4b02-5c0e-4ef2-a5ac-8ced91a43864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "806a672a-acc0-4d24-99a8-429ffdb25941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ee593d-1a5d-4a53-b422-9601afd324bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f421da-052a-40f4-9d2f-f03fe850f2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb8fa47-3f03-49c3-8216-ddde7ad8d9f0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73da04c-4c22-4a1d-bbde-76dc2fe45421",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff74ebc6-8681-4ffd-a0b8-9ace8a1e7da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd42a26-d02d-4166-b399-ceb0d7af281d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7c4e63-788c-4dd1-8ceb-6c83352090bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2d28f8-dc51-4df0-8040-cac637916045",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aceed010-5059-4389-99dd-035fd6680a35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "937bede4-1f96-4477-a176-80c100602af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3a775b-2731-43fb-9f8d-687acc5a545f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9c98ed-e2ae-446a-a60b-3afaf4a9bb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b179708b-af45-4b30-81ba-1319ff8f91c2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1a1404-21c1-4876-89b8-962ab4ec7b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54511cd1-1a73-48c6-9e9e-01806dfec3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cfbfe4-0c42-430d-a4e2-cab8eead23cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed67ce4-33f6-42d8-a2c6-a14143ea8738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef488033-ec42-469c-9d50-0b0c755d37bb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185cbbdc-3a91-4131-a492-983d54133cf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd7f9467-ff70-46dc-af02-f507cc3125fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9c86cc-2caa-40f6-8ba2-4d47d4a35ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ce553d-9d08-4d54-adc1-5bcdc697c76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ded460-be5f-4752-9ddb-7819f717fe84",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52edf95c-b1c9-4e33-9141-bfb77a879d61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a53b223-1470-4afd-8121-8930272a5c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1792be52-7b46-4283-8496-c7acb434f869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12598625-4e5b-49b5-bffa-87dfadbaab97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a001617-01f9-40c2-b4f1-7666c662e61e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8965fe7-beb5-4465-b802-da2b7751e8a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7de7fa3a-356e-4099-b11b-a744f27b345a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12627576-ab94-40a3-a70f-c2f7669ab19a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3958f2d1-cdfc-4249-8ce5-5d367417282f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326b544c-7205-4c39-afb8-f67b8fd91f35",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4f1ac7-f462-4c92-81bd-595f70ec5493",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fe7555e-cd0a-48d5-8b3f-079d4f9bb555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da96c20d-91fd-4cf2-b0b6-6b44108981a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd28d4e7-86a5-4da4-a7c5-7b33280133b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559e7542-edf8-4503-a4fa-d9a2b45be780",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6622b7a3-01ad-4616-ac80-b9680b2d7380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "953b0016-9ab5-43f7-a189-8ead3d7a1839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "800ca943-7127-4919-8591-da961ac7d2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d58e116-21c8-4b98-bf11-cf6670f4e642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b11c707-502a-4bda-b97a-9841e4c4b12d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2bf5d0-9c50-4634-9a86-f2f2091cb51c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c48d8d2c-2ff1-4ac6-963e-490734d32713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd884c09-7b1d-4164-af3d-40ededeb1528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c40972c-c09d-4a2d-943a-b7e5823f2c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d575c8-ae6a-4755-a73f-a170b4784f69",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2204b1fa-66e8-4ee4-81b5-1c67bc79ef22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "441e3a0e-ffd4-4f11-8f22-b7d261dd6040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4848bb0c-fa59-463f-8e2c-54a7b5f3d909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e15537-e51c-47e8-96db-b054b1b7c93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cbb2ba-c7c7-4f77-98d2-d8677e566d7f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cce0f3f-649a-4f78-9c04-540f60198883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57524d2a-3498-4eb5-91e7-ea1ac2493ec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601168a5-998d-43da-b64e-bda510d872cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d88652c-841e-4fee-a433-6ec2c9732622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d294a84e-4bbd-48c1-8799-42857c23a6d3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee992f8-d97b-47c7-aae6-f7ce9b53a068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db6a6c2-9ee0-4ece-ab92-3ef48244e0b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43ca4ef-d5b6-41a1-ae45-7696448552b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a421641f-e98d-4668-a3e7-666ae04fa48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622a0f7a-823a-400b-9234-6ef0187e7646",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfa17c8-9a17-4eb9-9122-f6f229064827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d4e98c-4b27-4378-8e40-08f7ec10c22a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a268d23-1c7f-4246-bd80-7835991f0251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10f9abf-f58d-4984-a283-8f3c20df8856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673d62fe-8446-45b6-a289-df454e4705aa",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e3036e-bb48-49e9-a1ae-1636d23fd074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60add650-9d3c-481b-86ce-2ffca75e9111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c08adec-7c20-407c-8e85-0bba9fba805f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c37e6d-99c0-4396-ad64-f15a59dd11fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8badd6b-4eb5-4e0f-a289-d86f25f57e57",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdad252-943a-4e1c-98a7-1e24167fd965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24c2037-4187-4045-b860-fe7945a55b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512f3c55-f3c3-4444-b7ba-32ac4f962b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a182849a-a2a5-441a-8eef-0bec344ba6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637891b9-ccb6-4418-a39c-f1c4dd14c0c0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15a0cce-7b56-4486-ab5e-549a8b003ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bf956c-6d56-4947-beec-aa2b07392ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a87eba6-826d-473f-8051-91e037706965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f42f97-93b9-4961-b6da-a1d5fc30de97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3954df6-8899-44fa-90a3-c225562cb799",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ebf6be-d4fe-4b82-92a6-c764b26949f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75060454-d02d-4e0b-8dcb-7dc171ac57be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f50254-3578-46a9-a4d1-a01eccce80ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8f3a09-4e4d-4ba0-bb6e-f62794a54bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40af05af-fe80-44a6-b106-99c71a3baceb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0844f5f3-3066-415d-85aa-0d7924e1b70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca3f6f3-a4af-4e9d-a313-42aa76f93054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9c913d-60eb-4a87-b28e-e1cfbcd8af46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2260495d-5a06-4f10-9fc0-5e939345a88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149e4571-50bc-4b0b-b373-2dfc23116483",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04eee04-37d8-4239-8d0f-a877c70c5cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f3ec07-d3b3-40df-a36c-68069b4a295a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b3be9c-12d4-4667-8d6d-9c78fafc4de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056f694c-6ec7-4844-a955-c5d7f3773a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e989a1b4-226f-4632-8969-fac1d97acfbb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac1a3e9-828b-4b62-b773-c1a7e5ffa36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a61c7c-1aa3-440c-a872-2480d051214b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e817dd8-c081-4b8d-99ea-6ed486b6ba3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05fe334-da44-4713-96f8-c72121167ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce39f92-a369-4fa1-b5a5-ea0374296396",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9471d305-b83b-4c93-bd12-a189fbd3577f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fed2e75-2a8e-41d7-a203-b082db17c536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb91ce5-0cd1-4fc7-8017-8edd766a5bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a193c6-84ea-46b9-9bd1-f4ab39394078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960efa14-c63e-4de4-a1f5-bf184717ee0e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3181d0f9-4bf6-402c-8da7-47c4484c564d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b19539-7975-4604-b2c3-c5bc25dc89fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042ea507-c172-4685-8fb0-714e3abea06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8afdb4a6-fc50-4c03-9e2b-d8f18516c837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b10f3d-2d14-4e3f-9211-ecbac0968d7b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c3f27d-3bf1-45c5-9603-06fce5f44008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d8869b-4541-41ce-9250-030980908f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef6f581-4abf-4ca3-81a1-fec0c41e0add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916c8d5b-c41f-4e0d-9697-704c101771fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc8ba4e-ae7c-4b0f-9837-d6930bb8242e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2247253b-aa8e-495f-8f60-62274ef2d168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6253222-1252-461f-a406-b7e3ce37d7b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df665a57-4c2c-4bc1-a448-bd056e4792e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37801018-9425-414a-8dc8-e90c1ee9c970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bde09e-6613-4ad9-a186-d24b627d8b60",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e268789-af75-40ae-aff2-fe97212c806f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec30b519-f7fb-4396-941c-719c157e6359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a0ccf3-f3a2-43a5-b131-76190307b8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f235b94-a810-40b1-aeb3-34bb001fe2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2a16b3-edb4-4a6b-946b-78860769b6e6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6317099a-2e67-4975-8917-deac7a0fa11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18caa0f5-f708-4c8b-868b-366047fe094f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1902c116-5787-423e-a3b7-2f1d436c28b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb39f371-481b-46c3-98c2-f77fef7ef69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495bd6fe-f939-4d87-964e-6311e7b33d70",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e82f60-18f6-4e5b-9d4d-fdd5cfc2ab7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bfd1723-f7d9-4a93-9905-6c184d6c20d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "420f3e82-0041-422c-945d-6f82ca2d89b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77cc1599-8e81-41c0-b25d-4358d817398b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d063065-e422-48ad-9637-fd22d66c1335",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b866220-4ab1-4665-8d42-0783e134da7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a4042e-e79c-433b-86fd-68814edf48aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7cd146-1fc8-4bf8-9a48-31b90d9f8b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0abd6c-096f-4a41-bf7e-35c8c4dd830c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e63fc96-2de0-49c6-9290-60f682523274",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f882a8-fbf8-47ab-9f44-5d0f3bc6a405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca772cc8-2144-422c-b25d-5a683d3f4fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d72488-321d-491d-88eb-91c1ac00d684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8f1035-25c6-4ebd-9d47-65dcea184184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a06dff-1ca5-4be4-9f24-a1166dc2da57",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc34a78f-7374-4de1-82ce-e96b08e830ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d89827-4d1a-4138-b71e-420e77f09a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e212c557-a7ed-47b9-b506-33e9a4389e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce516ffc-4578-4c9c-9e02-5ea2be568b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a514f688-5c98-4fa7-8422-7a700f5fbb6a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af785eae-0e6e-4b26-8df7-1ba624063cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fc9ca6-e697-4c1b-aed6-9dff3aa483a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e485c4be-d8be-419b-b087-239dceb6771d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56858b0d-38a6-4ad2-8a21-532afa0bb07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfbbec3-cef1-4770-8871-691a533bb528",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486cd3fe-3711-42ff-8f96-c9393181ee8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e4e564-5ff9-4fa2-b2b2-a49527b0b590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d09a488-9762-4682-a6e1-8bdf1420217c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b867e2ee-2632-4d02-ae66-e69d079a8718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80e1326-a8e7-4163-ad98-61b0f3f33e2f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6807baa-32d5-4ada-85a7-2a38a05e15e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e9b648-0841-46f0-949c-b3d8cce41c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b83614-2fcc-4ccc-b176-e9526eccfc8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640c88c8-d5a8-4701-b511-ffd1b31f946b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668b2770-0728-4954-856c-2887f228e31b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd8b011-9312-49cf-a4ca-034546270a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db306d5-2e92-40f9-8171-fd04c26132a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ae80cc-ffa4-475a-ac8a-ba765b2e19bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda59da0-121f-4de7-96ec-50d8ffc52984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a908cb-ebd3-451b-9e6a-2a743c620c32",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad1cd39-4c57-4dfe-b4b9-d524ebe3a120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b63408-5d23-4d2c-87b0-43fc18e99191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3959cc-89d3-4a7f-831f-8de36a6964bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba7e3ee-af54-427b-8579-899b34f729a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87016ddd-7a7f-43e8-82cb-efd8a4d8103f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ea0aa2-fa98-4ae1-86b7-2ca02b61e65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00ee8eb-a0b0-457f-8666-64e2224eff91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973eaaac-587e-43b2-a1a0-207d67dd6896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fe56e6-9502-47fb-9d8d-31fa50349d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e2caf2-071e-4412-9600-9886891245ca",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e377ec-98f9-4dbc-8ecc-0c5f6fbb3fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb14197b-8b66-484b-b2e6-01c721981068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea9bd59-b2a6-4146-9416-147b4f11db50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9248606-1b1f-4e9b-bf7c-d44c3eaffe03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f755cb82-05ea-4f27-806f-158941a1971e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a782cd10-5005-47d6-8cd0-a2c8487ed0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5282424c-d3f3-4c7b-901d-95bcd9b8bc6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636e1a15-9c7a-40bb-96d6-1532c089b745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a6de7d-303e-4542-b3d2-f664838c1198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54364d33-30b6-4e09-8cd3-bb24cdfa759f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17cd52d-ce60-41f5-ba50-5938ca3d703a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58296627-ecac-4faa-8c1d-55f5bff059d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21f5f7b-1a10-4763-8d5b-43f178392273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95aef4c-215e-4615-9961-baf65bc0c445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11e0a51-08d0-43d6-b579-53878e8dc9ce",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6e0dd4-694f-4189-a431-80f24c6bc867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed71e692-e61e-4618-b3ef-b72e41ad86d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c09756-0bca-4bad-82e1-862b06004feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ba2d29-2738-44d9-9ebc-39e102e98deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97092af0-0195-4c59-a180-7b0302c68e37",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3589038-baba-44b6-8951-29b74019d3eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30d79854-4329-4ab2-8978-40352b36486b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b164831c-7d32-4690-ab40-672c7bbd1391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4108dc-de01-47b7-b4aa-c5ef60680193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5477817b-de5e-47ff-ac57-88766c4965e9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa31e80d-4ffa-4778-afcf-22d7f42b4ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dea66ebc-9622-4663-a044-4e7b6880f086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8abf65-5b3f-4713-8322-76d37b9bf71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562e5e4e-d54f-4b5c-a0a5-644e39ef3c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbea1bc-1d72-4d76-8c68-06672d3f264c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a78d52-c10d-4157-a73c-5d5cd25a5740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8ad3c6f-5e8a-4848-9a88-373b082a173e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d455247-7069-411d-a8f9-ced819224e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6291e7a-0827-424c-867b-8962912653f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ad3bcd-788b-44da-b433-23e0ba1b1baa",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317a61cd-47a6-46a0-a4e5-075ef9035849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdb7d8a7-352e-49b8-8020-466b4626dbf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c786775-5097-4ffc-975f-c6b27750b340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b97eb5a-860d-473e-bc0c-6f101ab180fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09a0154-813f-4dbb-bab2-b7d6db026a66",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3194b208-9240-4cdb-9b86-c0c31f8a2f48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab637a92-d35e-4d8f-9358-a5d8c922db83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a8fea6-e604-42a0-8bf7-36a72cb40b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a451f45-6ee8-4d08-9d47-bf4149cd806f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234e3e5a-9a6d-4e34-b3f3-186a0f1172dc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69e310b-febd-4521-bc4f-51cd52fe4693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cfdeb21-194e-4956-b13b-970e6539411f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a004802-e7b0-4b40-969d-5efb4a9cd5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8a2f48-69a7-4edb-8588-64a8feb525a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59658a4a-57c6-497b-8339-4e615c283de2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a66410-26c5-419b-829e-6fda1bac89d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b47f3617-7c08-4133-b2d5-275bfb562bd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21171c42-74dc-487c-bef3-33a61efccd7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5f4b86-e5a0-4044-b0b5-9717bbf83efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b048b931-6b67-40bc-a3bc-5d6fdc2127b2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd81946-7fd9-4abb-816b-1c31cf09a86b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c247a9f-0b9d-4eb2-a057-1cb6400dbfbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb93ef3-cc70-4e1f-9c6d-fbdd716fdeae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d190f00-efa4-4cbb-b5a8-96fd5f0a6ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2430fb9c-e07f-41ed-9013-46c02b7feca8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7d51a9-5099-4baf-898a-3946f70d7265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "100fe881-e00d-4dc8-a85f-859e1b311cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1210df11-3e91-4f32-b5ac-e7d4b8413cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410c7879-7676-4def-9ad4-993a7281e98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276eed35-603c-4ec7-86bd-31442e2e6a92",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e0d765-0d8a-419a-8c00-0bb2c6d1233f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4567d817-adf7-458c-a6e4-1e5a7b44c3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33b5067-8000-4617-b2e6-1a0a4973e6cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d61730-024b-459c-a4ee-cb0bacff6a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b947d7e4-86ad-45d9-8507-2e041d285969",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45afa06-bf9a-4354-9919-697d383d5b37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20f6cc3c-9e58-49ae-8140-7fb9fd3e6b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abe91ef-d810-4798-b32a-e7f9574d0484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79b769f-23be-428a-a464-18d2a9c365f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426a9964-0339-403c-b11e-b6d57ac9bc94",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae719e9d-0331-4755-bf5a-1fd56fc3952f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f3377fe-9d44-4bf7-8810-4c076c520857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de27b971-93e2-44ae-8f7e-ca74c63960d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94c7573-d0ce-4ab2-a1ad-6f7009aa47c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6023d8ff-01bc-4bdd-b4ce-87ad9cd7b120",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cfbb15-4809-4b21-a06c-622eecd8c55e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7048785-0450-4d84-84aa-df4ffba1d94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ece673-5617-4ff4-b93f-4b35a00e36a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0506d781-0bf4-4ba7-beb9-96f2664fa382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa60756-4e8f-47fa-af6a-39bfef9d8e65",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6239cac9-e5e9-4711-865e-e8231a0cfed6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "499d6668-7805-4853-b6a2-52063d84e60d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30838f90-4100-4b5e-9d3c-6b159aa66309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c49a5b-d1b9-48a4-9e50-2713e4c1533d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e62030-847a-4664-842e-5d8f78ae6c04",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6ea970-ae37-4232-9e5b-9d167920fc35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbb0aa5d-f3d3-4959-9a3e-7af146546861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bfa9a6-8fd0-4bdc-be50-5322a838851c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b1cbda-006e-46ed-b8a9-43ea0977c493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aae3e71-4fdf-4a25-b8a7-4b89d7a53461",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f165d034-92fe-4dea-bf70-f167dfca123f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9bf4b1e-27de-4fb6-b5eb-f150d78bbe72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5b6b54-0e7e-45d5-85d0-db4a1ea6a9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1ee133-1486-46b7-b56b-8344064625a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34d0256-c87b-4aeb-8069-85ae45115aeb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670f425f-fe1f-4a4f-8d38-8eb8a0bdd1ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae521104-0cae-41e6-b9bd-90123ba39238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cc46f0-4e6a-4f8a-a871-356301f4e545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a12da1-ba9d-4d0e-8808-13abd9eb7461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac61244-b859-496e-9ba1-c241d3a82331",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc2937a-d98c-4eec-a0ac-54376a5cef56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bc4a7ea-c674-40f1-8fef-321d3d06db9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbf977d-4bd5-4512-9c0a-86a5e5abe3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be0012a-1bb2-4a2d-80a8-30b6bda118dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657eec77-da06-4cdf-bd68-fd07f6e09c12",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6f3aab-1a0c-47ae-8302-0559fbe11a26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bd8cede-ee87-4a22-b2cd-9b4512e76b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43679c8-ef97-4ad9-a618-4186988854eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56448079-ec5c-43c0-bc7d-200310e7c077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066711cd-0bfe-45df-8d2e-d8efa9f56cd5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd61800a-e53d-4506-8279-9203f0da0594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c29875c-2c1a-4c20-8918-1e5c667664aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c40c05c-1621-4f8c-b4e7-b67b3cfb11fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddfbc76-63d5-4359-ac7a-81eaf60ac4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39bcbba-3a35-45c4-b6ad-ea79543c9cef",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbed61fd-b10b-4015-93b4-a0e3cc4dcb1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ed17e43-a734-43b3-895c-a089aadbbe27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1974b464-6760-4a73-8b06-80e7e1979294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38b8653-3e89-4460-9742-3918555f9679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184b679d-d446-49b0-828c-6ba635b6031a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2d4c26-b212-4f5f-8d4d-536bc06565c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "160a28b3-8b9b-45a4-a591-1b836bcdf9c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57ca99b-df58-468b-87b5-668fb5aceab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72802dd0-d50b-46cc-aeff-d6aefa6e1956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02935ee2-4b86-4532-9a4c-febd46a752ff",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19089d6-e35b-4e99-a687-4340755b049c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d71617da-d4aa-4e6a-8caf-62e9b6c0df57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8690923-e19e-4185-9376-77bed6b407a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db77270b-4d3e-46ea-960e-5c75ceebfd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0217b58a-750c-4d29-b183-ff5cba71adf1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc232d1f-1e4c-488a-a2b8-7b334b27c7ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdfdddf7-61a6-41fc-963b-94bfcf1cce72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6706fb5-61b4-42c4-806c-14189a969026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e16fd3-77f3-4f0a-83d5-d523fa873637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe67db4c-37b4-4839-9894-e6eca8580f1a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac9bbcf-53d6-498e-a527-3a852f3c06dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "835c26ef-7814-470e-b06e-79a933581e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10301c2-2f5a-4d95-82f7-8a77a8cdf957",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6484134-c862-4b30-9836-e3e0df9f03f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e526e05-fbe6-453d-9671-e61a2ea781b2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68a2606-bb1c-46be-8f7c-cfadef4be1ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed8d49ab-9d8a-4382-b03f-2e36d8794d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "779b8507-e091-4305-a27e-1c1c85d684cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd9255d-f893-47ca-a9f9-d3c07e0e2dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7ba34d-f2f9-4203-88a5-46c99c6a3899",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71e17d7-4a66-4761-96eb-a4e941f6a902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12cee4d4-063b-4bb8-8984-076bf6595270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a87be43-927f-4f53-8f33-adabd3459e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37040c0e-0f4c-4928-be19-43ea4396f903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec9c3f9-5e41-4284-bb2f-eca149b73c39",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91c812a-377e-4502-b4a9-f02db11658d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3483e39f-a657-46c0-9487-2442fd12b1ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fe536c-4a52-4c76-a611-5c8cf00eaef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47b09e2-7890-4c36-83a9-a9f5c3d0fa02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e7e82a-a96e-45c6-8f2a-bfe8b440398d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa222fd-5175-4b75-b57d-4b697d356a5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cd52f13-48e9-4c5f-8f02-16e0bf0bd2bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfb00e6-7782-431b-919a-464bbaf573f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9163d5a0-4d18-4d75-bffe-a03ffe379fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8d4de7-20ef-40fa-a073-ff69b8ef7f83",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8a51b0-0b3a-4479-ad35-cc146cc01cc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa64669d-c901-41ed-8d02-8deaec4ba32e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafe4e5f-7ff3-4b6f-9aa0-78c5c6e4a934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55741ea9-d8bb-49ca-8b8e-85ce8f6c99fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7a68b4-854e-4625-af46-9e76cba6cd13",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b520f70d-4a27-4e22-b154-8040577f856c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb2a8a15-69d7-4c8e-9411-63fee99abc39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c74787-fe8e-4ee1-99cf-6f8f0ac997b6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07c2dde-d305-4d03-87eb-4e2a507069ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01658191-5e87-4c94-a53e-ab12aa989c93",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51189369-f651-462b-baa5-207f3916b9f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6074b2bb-f5c6-471d-9bb8-4f9a29b8293a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6bccbe-b68c-46cd-b584-a26936c4b5ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ddb1fdb-4dba-431d-9857-78eda861c5ec"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "958eaef4-dd6c-4015-87d6-9dce0c20486d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34489ac0-e6c6-42c6-9e2b-826737f2ed38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1d9162e-a698-460b-acb6-297c35735554",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f33b862b-fac8-4008-b264-be2fbbb148ca"
                    }
                  }
                ]
              },
              {
                "id": "1a4f0bc1-9063-41b8-8668-b474a15bf575",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c32b0ed0-5c20-48d3-8dbc-8144b170398a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a6aecc-ee78-4a3a-8098-982adfd2a3d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "672ba0b8-bc38-4955-8782-bb702bd13eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "494287ad-8729-451c-8c00-94a7a84c5582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df49f742-0e08-4795-bd70-e9c47e39458c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "909c61ff-332c-467a-85e2-70baa5a331b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9ff7ee7-3975-4f3c-b7dc-70ffe6ab47cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a904f82-3fd0-4ec6-bffa-30ba376e395c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e61c72a-5ca5-424d-a709-7f4a9a294ed6"
                    }
                  }
                ]
              },
              {
                "id": "287246f6-a640-41f0-854c-76c32d3e4899",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0498de00-bc9a-4687-b79a-d779babae17f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2b6c89-0ebb-4971-87cf-45da081a0357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bd0e2578-ff75-48b6-8233-588b368ff822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdf8af9-0adb-480b-9d73-d6b28ca2dcfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56925a44-d566-4398-ba15-70f1008b6ab4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6b93817d-f58d-481f-8ca7-2565cc7b4313",
            "name": "Positive Testing",
            "item": [
              {
                "id": "91c97efc-f235-4e0f-b9e5-bee1ee2ee114",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0b7b99b-f6c8-402c-858a-1225d0c39905",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6c2d9aae-91dd-415a-a3c8-b1d3fe041c22"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff175601-4f9f-49a9-a7f7-b3d3e2cb8033",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b239afce-4f1a-4539-89f5-71c02261a191"
                    }
                  }
                ]
              },
              {
                "id": "7ac21211-52f9-4027-ace2-5b9a7a66be6f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5814f8f9-7e9b-4161-a174-3d1e913c7aae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e489f5e4-139f-459c-84fc-c6a9cd3362d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efb73d23-d6eb-4f25-a72c-a9d320aa0550",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b117bb1e-e513-473b-8214-fe618a5e13f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6de2893a-4096-43e1-8ed8-5b7c49dded33",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b21b77e9-6e21-453c-808e-6ff52e7cebb1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fed808ef-83ac-4fb2-baec-af79db9f6ce7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "918f84ba-de45-429c-a900-dcc48c97ab5a"
            }
          }
        ]
      },
      {
        "id": "d250401a-8808-4d06-b0e2-c0b66b9bfb8d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d40148bd-c142-4d48-a2ed-100528bf2cef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87f22c59-6340-445b-a621-c637c1b8278a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "beb28258-e5d3-4e44-b409-b0111279de5c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619c835a-8077-4e38-a834-d4d753cb8b62",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bf58f5b8-493e-43c2-9af6-1c8c861bf497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4694597-0df2-4ad9-9bee-1a161b2cde35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47d17196-146f-4b11-8dec-bdf69d22ee80"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cdf727a-62e6-4eee-9a55-ba6199d57b8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce2a3101-60bc-42c2-8238-6c78db60feff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a07e7e0-ff4e-494f-8e24-ff36a7cca284",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21d0cedc-7b76-4763-a5b8-42b6444a89c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "616ddd11-5bbb-4f3e-b4b3-d58302e7bb71",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "43153a54-c447-4af5-a409-dc9285e2690a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aaf6f84b-da3e-418f-b7ea-32f8457cf6ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d6b6f2c-d837-4964-b618-41ee3da041b2"
            }
          }
        ]
      },
      {
        "id": "a0ae1146-df16-46a1-b754-8e8e1dea387f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "abd35e4f-8f79-4b1b-ae1f-ba83076df11e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29ba0382-4c30-46e1-991b-0c086db7ed8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e21e09cf-7434-45bc-955e-08f1f7ab5a98",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11fd532-4cf3-42fa-bb92-2c92cfba08cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1354a520-b6a0-44ae-9bf1-44d9ecb4abbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228116e9-2eb6-4d35-860a-e90c3fce39b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e27bf69-efea-47ce-88e8-30be29c0415d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "842a7a99-e4d9-4dee-b96f-427cb3d20378",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df6d5dff-04c5-4d42-876f-2c58895f1e5c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c50a2ca-d07b-409c-98e4-31770556ec09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42516034-3cac-4b7c-b2f4-25fb37548c9a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f7b2875-6843-48b5-8058-6e7b16397b78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0ef872ec-fd24-450b-9032-00979fef838c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9511c18c-3059-4f63-937f-9c4145155848",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd9271e3-8f38-4235-8fe8-bc82ba47556d"
            }
          }
        ]
      },
      {
        "id": "8c84ad69-fcf8-4ea8-8349-9dcfa46fcda9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6eb3c0bd-6173-4639-a252-197b9b240ceb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c873633d-5031-476f-9cad-88027521934e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a674b33-b2ac-4ff7-bf93-42a4975b6296",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a275eaa-6a94-4e44-848b-17cec5ad56ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e21a0bdb-a870-4045-a9d1-81e48598a7c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa82c19-d355-47e3-83d5-a002ece1c399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c45c0218-c689-449f-af96-453184d8904c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c82da06-54e5-42d6-a88b-62cf09f9c71f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55942dec-12f4-43a2-bb52-5ade6540f72a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6ab5b01-734a-4fd4-bf36-3c411424cd6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68ca4d7c-2e55-4928-84da-360a61e3c4e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4b9590e-b6bb-4529-8cb3-cc52ee0c984b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "05b667ba-4ba8-4611-b0a6-e8995f3e671c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1aa726b-afd6-461b-b46d-04987d4038b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa51534a-e6d3-4911-a46f-7b80b8b4037c"
            }
          }
        ]
      },
      {
        "id": "5e682264-fcda-4ffe-9846-7172d15ab3b3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6d706b5-bf17-4cf8-8ccd-c3d9c7e93974",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "added214-a41e-4bc1-8498-83281ffae2fc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f3fb77b9-6b31-46df-82b3-f3731a1b6064",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fd28caf-f798-400e-82ce-66f40f04a171",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bed76220-5167-429e-ad8a-03dd51c0bbf0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 140.5824561403508,
      "responseMin": 5,
      "responseMax": 2796,
      "responseSd": 327.59036954484566,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703637262066,
      "completed": 1703637311297
    },
    "executions": [
      {
        "id": "f745c1d5-a38d-45eb-840d-2e9b303ec255",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0152ae07-7ce4-4b45-ac01-7ba7c0022cdd",
          "httpRequestId": "2e9db7e7-8c94-4021-92ea-d118862391de"
        },
        "item": {
          "id": "f745c1d5-a38d-45eb-840d-2e9b303ec255",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a932a712-7db8-4504-8ff9-0702361e1c8f",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "caed381f-6d76-434b-8da8-247a464a6f16",
        "cursor": {
          "ref": "a7049efd-5468-4804-a575-ef70c4755d12",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "efbff092-d0d1-42aa-ab91-6622846e5616"
        },
        "item": {
          "id": "caed381f-6d76-434b-8da8-247a464a6f16",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "70450b2b-01a6-4c54-a9b0-ef37b360b9b9",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "f64ac632-c747-4967-83ba-32d1943ef894",
        "cursor": {
          "ref": "65872325-5adf-4bd4-8d42-7a746df1f689",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4724c7d7-80cf-419d-9244-92d5074d8f8f"
        },
        "item": {
          "id": "f64ac632-c747-4967-83ba-32d1943ef894",
          "name": "did_json"
        },
        "response": {
          "id": "049194b0-f196-448c-a500-1465fa141442",
          "status": "OK",
          "code": 200,
          "responseTime": 624,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ebe6bc-71c6-4388-abd2-f9d25051d557",
        "cursor": {
          "ref": "5792a566-db54-4b10-9101-26ecf41d0986",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bbfaf195-4b92-4e71-8f43-23746752f1fd"
        },
        "item": {
          "id": "e4ebe6bc-71c6-4388-abd2-f9d25051d557",
          "name": "did:invalid"
        },
        "response": {
          "id": "30ce4425-1320-4fa6-bfe9-1435133937da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ebe6bc-71c6-4388-abd2-f9d25051d557",
        "cursor": {
          "ref": "5792a566-db54-4b10-9101-26ecf41d0986",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bbfaf195-4b92-4e71-8f43-23746752f1fd"
        },
        "item": {
          "id": "e4ebe6bc-71c6-4388-abd2-f9d25051d557",
          "name": "did:invalid"
        },
        "response": {
          "id": "30ce4425-1320-4fa6-bfe9-1435133937da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94cdd81-764a-49c2-885f-88aca0f7fb85",
        "cursor": {
          "ref": "0da1dc33-fc51-479a-aaee-3f33953ae7b6",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6c61521a-31c4-450e-8b10-1b41bea724c7"
        },
        "item": {
          "id": "d94cdd81-764a-49c2-885f-88aca0f7fb85",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "34522029-d70e-443a-992c-63ac91fd65ff",
          "status": "Not Found",
          "code": 404,
          "responseTime": 189,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ebf156-fd8d-46d7-bbda-7221518b5693",
        "cursor": {
          "ref": "c0e38c76-de53-4dc5-a38f-a78279e5e83b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f7197165-62c8-47ee-ad82-b59dda0cf883"
        },
        "item": {
          "id": "56ebf156-fd8d-46d7-bbda-7221518b5693",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "36d84a2a-9b7b-4574-8ef9-58f0e7728221",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909b1380-008d-4027-9e0c-89b6c039c3b5",
        "cursor": {
          "ref": "c66cf712-2808-4100-930d-f5db9412f618",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "578af8cd-7666-4929-a2f6-f2122bfe67ba"
        },
        "item": {
          "id": "909b1380-008d-4027-9e0c-89b6c039c3b5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cce5721f-0c66-495b-ac2f-2820ceb45827",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062842d2-5efd-454e-b23c-fe5a7fcf2c1e",
        "cursor": {
          "ref": "682840f7-4c08-4bfa-882f-b613bd21c681",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b3e4c3d3-2d81-4724-9bd0-76b8f3703b81"
        },
        "item": {
          "id": "062842d2-5efd-454e-b23c-fe5a7fcf2c1e",
          "name": "identifiers"
        },
        "response": {
          "id": "735d380d-8781-4855-bea2-07eaed7ef6fb",
          "status": "OK",
          "code": 200,
          "responseTime": 343,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dc301b-e868-4361-9752-e642465bfb01",
        "cursor": {
          "ref": "75f52603-a833-4e67-a305-a59b0943c314",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0a53eaf7-721a-4fd2-a0cf-f53f727e12b5"
        },
        "item": {
          "id": "a0dc301b-e868-4361-9752-e642465bfb01",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "83396ac6-b67b-4651-95a4-23805dddbb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2812f6-cf04-4d20-af52-a0cb22bda09e",
        "cursor": {
          "ref": "a516ae5c-f4a1-4b83-b235-b9c8f4014386",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "825145c0-afd1-4c36-b14a-8d1689b906cb"
        },
        "item": {
          "id": "8e2812f6-cf04-4d20-af52-a0cb22bda09e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "63afb2ed-152a-4132-bfb7-cfbe2e1c2f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c78a923-0ead-4452-8506-a7927b9087fa",
        "cursor": {
          "ref": "a2414f2e-37d7-47b8-b60b-4b222b883a67",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8758ae21-c380-413f-9100-75c0a8a38d83"
        },
        "item": {
          "id": "2c78a923-0ead-4452-8506-a7927b9087fa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "67de8cd9-407b-4838-a0d4-6f181332696e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e955b3b5-f5e0-477a-80d8-1770863d76b9",
        "cursor": {
          "ref": "e613e404-fc82-468a-a4f1-d4ee31fea0ee",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "13053362-70fb-4393-b3da-b49a40ef1122"
        },
        "item": {
          "id": "e955b3b5-f5e0-477a-80d8-1770863d76b9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "da48278f-55f5-4748-980b-c92178e431a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46144170-b639-468b-b251-758b9bbe0b03",
        "cursor": {
          "ref": "69958e9e-241d-4440-9eb2-1ca9a2d27472",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4a377b5d-e8b8-4ee5-8ada-70822c8a660f"
        },
        "item": {
          "id": "46144170-b639-468b-b251-758b9bbe0b03",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e0f662fe-afc7-4989-bdae-a54378da2c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c88726-954e-4ef0-9a2c-7b6e154cb7c6",
        "cursor": {
          "ref": "45fff834-3d30-48d8-9036-928279d37dde",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2c93ec2f-f20e-4aef-bfbc-30e326dc75e3"
        },
        "item": {
          "id": "c8c88726-954e-4ef0-9a2c-7b6e154cb7c6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ba38dce3-38de-4607-8cf5-7962140c7c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f34efe-3add-40b5-8072-adad1667b041",
        "cursor": {
          "ref": "b3fb98cd-1c78-4f7f-8e64-d2d047a37d6e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3d40112d-2dc5-416d-990d-8a0dd354680d"
        },
        "item": {
          "id": "e2f34efe-3add-40b5-8072-adad1667b041",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5ca1888b-f510-4771-9348-d3f94a8f93c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6054f8-b43c-4bad-9292-4bda2508df96",
        "cursor": {
          "ref": "cd272b61-f49f-41e0-8bbe-ba1a49f0d525",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c1bfd34f-daca-40d9-87b4-8a32cd835205"
        },
        "item": {
          "id": "bd6054f8-b43c-4bad-9292-4bda2508df96",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "44440739-8df7-43b9-b11a-12585ed7ce69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fb70ff-3299-4b8b-9059-efb747a13251",
        "cursor": {
          "ref": "a0545493-c186-41c5-8d22-fb58b1dbb857",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5c6390c7-b9df-4a45-b69e-eb49a6b0eafb"
        },
        "item": {
          "id": "25fb70ff-3299-4b8b-9059-efb747a13251",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b1eacb80-ab67-490b-93b6-95aed49d40f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d5d32b-9153-4a0a-bac1-0e00d616be99",
        "cursor": {
          "ref": "97c208ae-130d-494a-9c92-f2de8e154e79",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f800b1e2-9d48-4b96-8cc8-8dcb01f3323f"
        },
        "item": {
          "id": "80d5d32b-9153-4a0a-bac1-0e00d616be99",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2edd8b26-37fd-453d-bc6d-38819c48c9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f81f93-fe46-473d-b28d-8d491b0cfbf0",
        "cursor": {
          "ref": "5117ff2e-d46a-4525-9a1f-b3b750f9ff9d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "080b5dca-4b96-49ba-a33b-2e2adef19fff"
        },
        "item": {
          "id": "c6f81f93-fe46-473d-b28d-8d491b0cfbf0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "aaefbee1-6dc9-4431-965f-3f67eb18ea07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48afaf98-87b0-4723-9819-fb6cd2fa4211",
        "cursor": {
          "ref": "e2f365bd-1816-4d05-8f24-2dc27a49f3dc",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "54414ee1-e0ac-4dac-94ee-3867f711e49b"
        },
        "item": {
          "id": "48afaf98-87b0-4723-9819-fb6cd2fa4211",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c4afe6dd-9a6f-415d-a8d3-c76eb6291510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5155b27e-5599-4edb-ac85-d7871e25d7c1",
        "cursor": {
          "ref": "84fdec5a-7b46-4490-83a0-0611edd68a85",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f845eec4-8620-4623-b3a5-fa316ea01e2d"
        },
        "item": {
          "id": "5155b27e-5599-4edb-ac85-d7871e25d7c1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ea9e346b-1f76-42e7-b528-a5b44251f749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfca2b27-d4cd-45e3-82ac-8df085295d64",
        "cursor": {
          "ref": "e0a75fc8-c9cf-45c7-ba9a-e457ae4f39de",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0538097c-7460-44a6-9b2b-113c69c87655"
        },
        "item": {
          "id": "cfca2b27-d4cd-45e3-82ac-8df085295d64",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4ae9734d-8584-423b-8450-42ec5affae9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda369b4-75f9-4d05-99c1-07d9ad25a76f",
        "cursor": {
          "ref": "fe0fc882-f595-4c32-83fa-50aa1ac9bbb2",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d2fcee02-693a-4c17-a8ee-61248b95ae87"
        },
        "item": {
          "id": "bda369b4-75f9-4d05-99c1-07d9ad25a76f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e15cf838-bfa2-467e-9fcc-cbd641e0fce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0261375-0793-4727-9619-a72f5fb15c5b",
        "cursor": {
          "ref": "55bf7cee-573b-4435-9a57-99281fb7ce83",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8c81622e-8d82-4f60-abd7-075d68ecff7f"
        },
        "item": {
          "id": "d0261375-0793-4727-9619-a72f5fb15c5b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "be0efa86-972c-4870-b816-ed98082c0aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db39f848-370d-483c-95f3-378cb2ef6162",
        "cursor": {
          "ref": "459e4567-51a8-4dea-a88d-d8796a23b700",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ced5808b-94d9-409a-81ea-5fe0d0ea2319"
        },
        "item": {
          "id": "db39f848-370d-483c-95f3-378cb2ef6162",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e74533b1-4bdb-4eb8-a702-db7f8f99994e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bab8dc-b8c9-4938-9f04-276c773b7e04",
        "cursor": {
          "ref": "1263ce90-81d4-46f3-84ee-5b4744927462",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3aa751fe-dd4f-4403-9d9f-531b05fd480c"
        },
        "item": {
          "id": "d0bab8dc-b8c9-4938-9f04-276c773b7e04",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fe122acf-9ab1-424d-b756-ad4d811abf28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633b1f90-1908-4fde-8bc7-d367e42b0da1",
        "cursor": {
          "ref": "27c469fe-4a70-4975-a49c-af55dd29a01f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d0faac03-fd05-49bb-b063-ccd27da4e807"
        },
        "item": {
          "id": "633b1f90-1908-4fde-8bc7-d367e42b0da1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0bb94f49-2fdb-46fd-9825-4e0169637dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6801c76-c167-416b-b0a7-6da05de922db",
        "cursor": {
          "ref": "5a034a03-c086-4f8f-a0f8-6447bf1d79b8",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7e3d9b0e-572f-4d5e-8b7c-04c256472e70"
        },
        "item": {
          "id": "a6801c76-c167-416b-b0a7-6da05de922db",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b7d404a0-8fc8-4839-b846-2eac2530bfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1115f3-2c23-45fb-9947-bf97aa4143a5",
        "cursor": {
          "ref": "d5be4551-2434-49f2-b1ed-5e9d6d54b85f",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "075c1529-4ffe-4958-9279-2acee7aa178b"
        },
        "item": {
          "id": "fe1115f3-2c23-45fb-9947-bf97aa4143a5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "54e33bcb-e595-4ee3-9763-83827a8e931e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2adaf36-5ae3-4cd1-9ddf-fcf7d1ca88ae",
        "cursor": {
          "ref": "96a674bc-b182-41df-abce-2c51087e5316",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "92262e45-839d-4dae-97b8-cb8e9874d9f6"
        },
        "item": {
          "id": "d2adaf36-5ae3-4cd1-9ddf-fcf7d1ca88ae",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ef84cc6a-feec-41a5-93d4-7763d142cf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004c332d-7a10-4e26-bcda-7d5bd56262fc",
        "cursor": {
          "ref": "ff38128a-e3d3-46f1-be9a-6f6f7478f68d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c398ebaf-d6e0-4eec-aec5-2e8145e5d0ca"
        },
        "item": {
          "id": "004c332d-7a10-4e26-bcda-7d5bd56262fc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "aac530ea-1e2c-40d7-84fe-409a229e5007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b59fa6-713f-41f3-8dfa-2a11365b2381",
        "cursor": {
          "ref": "99def163-2763-4cf3-996a-6fe2afd4528a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e101377d-f7ce-4e6c-b554-6c088c569e97"
        },
        "item": {
          "id": "f6b59fa6-713f-41f3-8dfa-2a11365b2381",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f9ee0c2f-a728-4f24-a643-6c01d89eb151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063730c6-187a-43b0-8bfa-667b63b8a1dd",
        "cursor": {
          "ref": "58399c61-4415-4974-960a-c02696ef0756",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "793aa1de-a385-456a-84ec-6632375be344"
        },
        "item": {
          "id": "063730c6-187a-43b0-8bfa-667b63b8a1dd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "fe7f9f21-9085-4e39-b916-a0eaf581aa6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e477ce-102e-4804-9faf-fc57637bee48",
        "cursor": {
          "ref": "f0efa33f-36e4-40d8-be23-34eee5aa040a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e6890777-6282-459b-bfc3-b8c62d6bf2aa"
        },
        "item": {
          "id": "45e477ce-102e-4804-9faf-fc57637bee48",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6fb98815-02b3-49cc-9d2f-389e406821ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29486a4-1fb8-46b8-b41e-9d10e713ca3e",
        "cursor": {
          "ref": "5ee13d7c-a487-45b7-9f3e-6df8341fc7b9",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a9b109d7-7411-4b5a-aafe-8decb0754a5e"
        },
        "item": {
          "id": "c29486a4-1fb8-46b8-b41e-9d10e713ca3e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "780b6ac9-5521-4569-8200-5fedbd8b1b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0681fc4a-8edb-43be-9fab-db4dd8b5c86e",
        "cursor": {
          "ref": "ebaa583a-6ddd-4be9-ae2f-ddbc22d2b876",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "65face4f-5a7e-4925-9488-7372edd040c3"
        },
        "item": {
          "id": "0681fc4a-8edb-43be-9fab-db4dd8b5c86e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3a8a8669-7f7c-4750-b243-a06505af1f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ce8b04-5b94-4bce-a8f7-c2a48241ed34",
        "cursor": {
          "ref": "91ae98d4-21f7-4da7-bbf4-3b4a83c04720",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f42116b8-8370-4cbb-b936-85bf2c024a40"
        },
        "item": {
          "id": "24ce8b04-5b94-4bce-a8f7-c2a48241ed34",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e1f7b25c-dce6-4eef-bbc3-8112cd66216f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc14fc1-b7b3-4d34-938f-357881ef8ea2",
        "cursor": {
          "ref": "c8e88742-6e55-4f0c-b020-de890f4e6900",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "11408900-abff-4376-bfdd-a23393a91b50"
        },
        "item": {
          "id": "9dc14fc1-b7b3-4d34-938f-357881ef8ea2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "48ce1044-68f3-402b-824b-8769575ea089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddc53b5-98f4-44b7-8fbf-21ad775c1edb",
        "cursor": {
          "ref": "a3fa9157-a775-4ae7-ab4a-35bbad119a79",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1665354c-ffd7-4d2c-bc3f-d7dc6c3621c2"
        },
        "item": {
          "id": "2ddc53b5-98f4-44b7-8fbf-21ad775c1edb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "459c1304-573a-4719-b5a0-d11cf85c0be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1ebaa1-6308-41e7-9575-4024d2f28fbc",
        "cursor": {
          "ref": "39dc3a3f-c5a6-4e94-880b-81e1aa80f79b",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "94837321-8b72-4cf1-bbe3-77cf8dcade81"
        },
        "item": {
          "id": "3a1ebaa1-6308-41e7-9575-4024d2f28fbc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "05c8c3f5-afdf-4847-b54f-24a1b8979481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6937258-1ee6-4011-961d-013f0f731ff5",
        "cursor": {
          "ref": "c2b29e36-ec40-4fbc-a886-b8fafbffbd39",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7fabc332-59b1-4f36-a9b8-074c44271805"
        },
        "item": {
          "id": "d6937258-1ee6-4011-961d-013f0f731ff5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7e7ab6b9-e617-40c2-9544-cf103bd218aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc0091f-f96c-46be-afce-a8644b8fd1b1",
        "cursor": {
          "ref": "382a07ab-6e15-4167-b7c1-3fa9143825d8",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c4dc68e5-e49e-46f4-b9d8-49b8b9b545a4"
        },
        "item": {
          "id": "5cc0091f-f96c-46be-afce-a8644b8fd1b1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "79b5e8d8-f208-4de5-a628-638a34ab3e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b60c33d-3c4a-4d52-b2bc-06c56ce662e9",
        "cursor": {
          "ref": "d4196fcb-0da3-4e9d-b69b-17ff518cd070",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e219bfa2-1f8b-4230-9d27-f2619fddd2b0"
        },
        "item": {
          "id": "8b60c33d-3c4a-4d52-b2bc-06c56ce662e9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "385da4f8-0234-461c-87b7-8ba8451db0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92035b72-5965-425b-89b4-4faf4eedb943",
        "cursor": {
          "ref": "ba79db0d-097f-45e7-a3ef-742314e3dfad",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cdf24709-5b23-47fc-817f-070c95657009"
        },
        "item": {
          "id": "92035b72-5965-425b-89b4-4faf4eedb943",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cff755f6-5fa5-41bd-b68e-5e65fa56db19",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 355,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1503b88-90dc-436f-b443-43cf64c7f9ef",
        "cursor": {
          "ref": "c427b763-71d0-4167-bd5b-7ba47e020b21",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6397e77f-ac40-4e1b-b451-6b5a0b88ac41"
        },
        "item": {
          "id": "c1503b88-90dc-436f-b443-43cf64c7f9ef",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "004815cc-7267-4cd7-97a8-aeddc8680a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f58fa8-a14a-4f8e-9fc6-44910e983cf9",
        "cursor": {
          "ref": "b451e61f-aa42-4f3b-89c8-7a9e86ac78d8",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f1e53a95-b238-451b-9506-5ee9c50f6a87"
        },
        "item": {
          "id": "a8f58fa8-a14a-4f8e-9fc6-44910e983cf9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a218d10a-e903-468d-8284-e492883f8ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d6341b-1f82-42db-a163-28d390bb9ade",
        "cursor": {
          "ref": "8e14e057-5d9e-4103-9d8b-666058ce82b3",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "377dc8f2-546f-41cd-aa80-7accb2aa3374"
        },
        "item": {
          "id": "61d6341b-1f82-42db-a163-28d390bb9ade",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f4cc1339-f6ca-4ede-a03a-3c394d633a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465900de-841e-450b-a803-1e264680d097",
        "cursor": {
          "ref": "06758084-3742-4f7d-9e7c-51444dd119c2",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4fb655ea-dedd-4b8d-960c-b9c94c90dc2e"
        },
        "item": {
          "id": "465900de-841e-450b-a803-1e264680d097",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "74ca6f9d-9d11-4f7b-bad6-5b487acff55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4089aec-62bc-474b-8e9b-8e74f385d444",
        "cursor": {
          "ref": "9d6692a7-1d23-4c63-9bf6-df7a035fc6d8",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "564ffb5a-82c2-411d-9fea-aaf57ea51544"
        },
        "item": {
          "id": "c4089aec-62bc-474b-8e9b-8e74f385d444",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9ce60c25-c83a-415e-a7b1-fdfa37d5b2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b346cd52-b7a3-47d8-a213-7ab8638bdf64",
        "cursor": {
          "ref": "48064d13-9688-4555-b6eb-ff72fec67649",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9f41d83d-f0e2-4161-819a-6996bea04487"
        },
        "item": {
          "id": "b346cd52-b7a3-47d8-a213-7ab8638bdf64",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e8ccc785-26e0-4230-8481-cc538d24137e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75149815-b139-43e5-9388-6efa4cb2ab62",
        "cursor": {
          "ref": "a2a949bc-feb2-4b72-a945-316baa13b2ad",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3d58f9cb-4ec2-4355-a7d4-04a149a2beed"
        },
        "item": {
          "id": "75149815-b139-43e5-9388-6efa4cb2ab62",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f6193a99-6271-4c78-a3d1-23fc029f92d2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 362,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874174c1-4eea-4ea9-b3f0-52b5d47284af",
        "cursor": {
          "ref": "1d36e2e5-4fe2-4d82-bcdd-15d8004be7dd",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b003248e-8aa3-4c87-a2cd-2b7b47f977b4"
        },
        "item": {
          "id": "874174c1-4eea-4ea9-b3f0-52b5d47284af",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7e5712ee-402b-4dd9-abc5-e0826e3a29f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6c22ec-04c6-4d11-91ab-b3eba1d69ab7",
        "cursor": {
          "ref": "25302afc-3231-4c4f-9465-aea3a8456c84",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7999ca7a-5a9a-4e18-94f1-d98eeae8d178"
        },
        "item": {
          "id": "ba6c22ec-04c6-4d11-91ab-b3eba1d69ab7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "17f0b246-90f2-4397-b970-b110b4fc177e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568af024-4dfd-4b70-97ac-e17b9ed8d3ad",
        "cursor": {
          "ref": "06e9fe5d-8fee-4c01-a38e-3e5d12a26953",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f11197a5-6404-4c90-9afd-e2a6ea0e4c8c"
        },
        "item": {
          "id": "568af024-4dfd-4b70-97ac-e17b9ed8d3ad",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c12fa978-e348-49d1-8a7a-54bffd0563b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df9f5bb-e38a-4b69-b0f8-0c8cc2534171",
        "cursor": {
          "ref": "c35208b4-05c8-4dfe-a5a7-0635ec2e8411",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7b69c59f-fd9d-48ed-a2ef-fde43b986c73"
        },
        "item": {
          "id": "1df9f5bb-e38a-4b69-b0f8-0c8cc2534171",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f11ee42c-4b2d-493b-b9ee-540f4a3c9810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cf8b5d-f0da-4f3f-b456-50f6a9e43fa0",
        "cursor": {
          "ref": "54780c60-f87f-4a95-b5c8-62ee43209d76",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e5a2aa56-2d57-4bbf-887c-84f2abe35d79"
        },
        "item": {
          "id": "22cf8b5d-f0da-4f3f-b456-50f6a9e43fa0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "51ed670b-331b-4977-a1b7-7f040bc05bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6db3bc0-4863-4ce8-a257-525fdf4b9261",
        "cursor": {
          "ref": "e7e87aac-ab45-4b8d-8286-528423320cd8",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6f018908-5c69-4905-84bd-a14d4b06b24b"
        },
        "item": {
          "id": "f6db3bc0-4863-4ce8-a257-525fdf4b9261",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "15d9ba6f-2508-4e46-ae55-4a5f0feac304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bf7cbd-33bf-40c5-9e16-dcfbd5935f78",
        "cursor": {
          "ref": "84d77b61-86c3-4dcb-9e88-1c1118fb2b23",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f17d6033-5537-439d-8477-e53f4bb073ed"
        },
        "item": {
          "id": "f3bf7cbd-33bf-40c5-9e16-dcfbd5935f78",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3336b4dc-cbac-4447-9254-909f4155f0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccf30cc-e7a1-48f5-b7dc-4238c80dacee",
        "cursor": {
          "ref": "45ac78f8-e2ce-4f20-aeec-36ec8c5fc181",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "91b1e906-799c-40e4-bf6b-df0b81e767c2"
        },
        "item": {
          "id": "6ccf30cc-e7a1-48f5-b7dc-4238c80dacee",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "33e8902a-5c6a-4e46-a6fa-7dc2c33e714e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19b83fd-7270-401f-9404-1d26c17167d5",
        "cursor": {
          "ref": "deda8d29-4904-4bcd-8520-9fbae90aa027",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "af9bf56d-fca7-44e6-a812-99dec55c265d"
        },
        "item": {
          "id": "c19b83fd-7270-401f-9404-1d26c17167d5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6b3c1899-4ee9-4c38-a5df-28a63d6e2e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051ea8f1-0956-472e-8159-4dbeee74bf80",
        "cursor": {
          "ref": "8e365edb-4613-4fdc-a752-10fe9a08bb0d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7ed04f31-01d8-4195-84d6-bd77e40f20ed"
        },
        "item": {
          "id": "051ea8f1-0956-472e-8159-4dbeee74bf80",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e0951473-76e2-4eaf-b333-ce32b04be44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bbf411-002e-4e14-96b9-597261d306ef",
        "cursor": {
          "ref": "79216b33-1842-4f70-ae37-877b617c50cf",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6b220bea-fbeb-4216-8da2-36b8eb47d835"
        },
        "item": {
          "id": "75bbf411-002e-4e14-96b9-597261d306ef",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b321cb09-a5bb-40b0-9cc2-5a5b49bc80d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3671bb3-8bc9-471c-b64c-3ae58471c851",
        "cursor": {
          "ref": "58900247-ce1e-44cf-945b-571cec969302",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "409a273c-437b-4a5b-8a43-31bb35466852"
        },
        "item": {
          "id": "a3671bb3-8bc9-471c-b64c-3ae58471c851",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8ba9340f-65ba-410b-ae3f-d24fb85202a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddc92eb-2403-4b8f-bab5-885dc5b31e4e",
        "cursor": {
          "ref": "19f526fa-ae08-44da-b5be-bfcadf6a8a9f",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e6553433-3d74-4c75-83de-c79620f2b2b4"
        },
        "item": {
          "id": "0ddc92eb-2403-4b8f-bab5-885dc5b31e4e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a56001b9-44a1-4d46-9813-31aa8f01864a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708f99de-7f0b-421c-8f50-97d87380ed0f",
        "cursor": {
          "ref": "f478f788-1517-4cd8-a16f-60f260031031",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3a52835c-24ac-42c1-85d8-2e950866ae4a"
        },
        "item": {
          "id": "708f99de-7f0b-421c-8f50-97d87380ed0f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7d87c388-2c88-4926-b8d8-3cb6554cb446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6da5ae8-3143-4e2c-a419-3f0fb1e47b29",
        "cursor": {
          "ref": "1ef9d9af-ba32-4e47-9f77-cef4649d7505",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "81527c4e-64ec-4f80-bf71-5af76020a5f6"
        },
        "item": {
          "id": "f6da5ae8-3143-4e2c-a419-3f0fb1e47b29",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "27d13b8b-587b-4566-99dc-79979dba6b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb221fa4-a7c4-4537-af95-4b7a54fcccb6",
        "cursor": {
          "ref": "3c876a3f-d5be-4288-93b2-58f300a85bca",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "180d2e8e-a1cc-460a-bc74-7ae141b97410"
        },
        "item": {
          "id": "fb221fa4-a7c4-4537-af95-4b7a54fcccb6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "51b85ce8-a777-4438-a111-77e2f2012390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ff277e-dcbc-407b-a3c6-1666e603866a",
        "cursor": {
          "ref": "02cc3e07-b481-411c-9fe6-f7f28c6c5199",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "05b8cd04-b10e-4457-93b2-c94aee29bbb8"
        },
        "item": {
          "id": "54ff277e-dcbc-407b-a3c6-1666e603866a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a2e1715f-31de-4925-b362-10eb740589eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f4332e-1f27-47f4-a1de-4eb472104bbf",
        "cursor": {
          "ref": "e9722325-e9f7-46c8-befe-5f2af2945536",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "39ba4d80-6cc8-44f3-b601-e2ee444ab5ac"
        },
        "item": {
          "id": "21f4332e-1f27-47f4-a1de-4eb472104bbf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5afeafaa-931f-4a49-9f28-dddd43e4291a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfc31b2-bafe-41c2-b773-8c1d4f923d87",
        "cursor": {
          "ref": "718e1cc8-9981-4ea0-8e67-facee75f5936",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d18ec34c-b41b-4bcd-b926-83994bf11fd2"
        },
        "item": {
          "id": "0bfc31b2-bafe-41c2-b773-8c1d4f923d87",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ca4713ef-971b-4b7a-88b7-e159116aa8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712fe455-372d-49bd-a405-3e779773b996",
        "cursor": {
          "ref": "a9245e95-b710-4459-878a-9020ca98ddb0",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bf6d5986-a961-4a0e-853e-cf49519915f3"
        },
        "item": {
          "id": "712fe455-372d-49bd-a405-3e779773b996",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f607bc47-86c4-489e-a48f-258cf6392fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8401f5-1dab-477c-92a1-dc3594fea927",
        "cursor": {
          "ref": "3f0462ac-ca34-4ee7-85a9-abd5ec0424bd",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ced1a205-da4b-4a3f-93bf-c273487b3b77"
        },
        "item": {
          "id": "be8401f5-1dab-477c-92a1-dc3594fea927",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4bd04b85-c676-4cf1-bf84-4887ad2ca89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdff436c-22de-4b6c-a37e-39d580b1bb68",
        "cursor": {
          "ref": "ae7b62dd-5738-45d5-b266-b1fff033b07b",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1e610df4-7d14-4689-b89f-349226005db6"
        },
        "item": {
          "id": "fdff436c-22de-4b6c-a37e-39d580b1bb68",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a843d792-e1da-4f88-bb57-ae5f4c9064cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800170fa-73dc-4753-923a-7151d240a3f1",
        "cursor": {
          "ref": "8031c2c8-ca36-4a7e-b1fc-25ebdc821266",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0687187d-60e2-42ab-b0f2-377ec5a8cc94"
        },
        "item": {
          "id": "800170fa-73dc-4753-923a-7151d240a3f1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "932b104a-84cd-4b13-84d4-76c6930927ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0955e5a-cc4c-4810-b3f3-957a7c2d3f64",
        "cursor": {
          "ref": "d1f116e3-9072-4ef0-87a3-7d9cd5a6f43a",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "68034b70-18de-47de-bb80-9dcfb90605fa"
        },
        "item": {
          "id": "c0955e5a-cc4c-4810-b3f3-957a7c2d3f64",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5adb78d3-5031-49e0-a845-4643b4cf4b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9475a5b2-6b53-4f66-83ba-86c55c83b011",
        "cursor": {
          "ref": "5ee7e2d5-02e0-40c6-9a0e-619859b7bbcd",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c0e77547-890e-4209-a067-d0b2439fa5d3"
        },
        "item": {
          "id": "9475a5b2-6b53-4f66-83ba-86c55c83b011",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ac4f7a9c-2a7e-4a06-ad52-5fd2bc203637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c5319d-812f-45f9-8d09-62ce8e746f5e",
        "cursor": {
          "ref": "41934ccc-013d-4872-98c9-d383c7c07a17",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "99b897f4-1222-4c5f-947a-7a3c16550381"
        },
        "item": {
          "id": "50c5319d-812f-45f9-8d09-62ce8e746f5e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "80e624e0-24a2-4f49-9938-da531ef32188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d72edd1-84a5-4ab9-9164-40510a22f812",
        "cursor": {
          "ref": "80a0d8b7-03cc-4dc9-898c-14dcd7c165ce",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "60ba8a2f-2cf0-44d6-8fff-9bbfe597f4c8"
        },
        "item": {
          "id": "4d72edd1-84a5-4ab9-9164-40510a22f812",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "640cd974-6506-4ac9-9515-abe6bc93a342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c852e5-7984-4221-8ca9-22f65587f703",
        "cursor": {
          "ref": "565fe147-b81e-45b9-93b1-af08e6759f7e",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "90e96a63-5110-4404-9551-46a7ab74ec82"
        },
        "item": {
          "id": "69c852e5-7984-4221-8ca9-22f65587f703",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "42eec575-1194-42ff-9df4-f1bdac1cf1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f3f0a5-4bfa-4d1c-bf2a-80b348c6193e",
        "cursor": {
          "ref": "b704ff63-3fe2-4d9a-921c-636c968c6c4e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d64c39f8-adfd-4315-98a9-5a9ab50fa4c0"
        },
        "item": {
          "id": "85f3f0a5-4bfa-4d1c-bf2a-80b348c6193e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d600d01f-5446-45cd-a00e-5a4529f875ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7286877-d8ea-42eb-84b9-f699f36e943f",
        "cursor": {
          "ref": "58bb0c66-ee1d-46cc-9fbb-35dd70b893e6",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "27a8748b-2c3d-404b-a7d3-db315008a0b2"
        },
        "item": {
          "id": "d7286877-d8ea-42eb-84b9-f699f36e943f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "440b2017-23cd-4da3-94d3-8bd8d3d93bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95c3b16-8137-4347-8e36-df5f23dd626a",
        "cursor": {
          "ref": "a04c4d59-da4b-4ec8-9bc0-7aa71e24d2ff",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0ce37a71-9ebd-4df1-af05-649ee5e6b972"
        },
        "item": {
          "id": "c95c3b16-8137-4347-8e36-df5f23dd626a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "79da6d57-dfb9-42a9-976e-73cd6ae2b6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256afb66-d3e0-4aa3-8b8c-aa3fc50726b5",
        "cursor": {
          "ref": "8cdec1c7-4b7b-4f76-8446-d3febf6bc3b3",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "71fa6a8e-e706-4438-9f01-c311c1a095ca"
        },
        "item": {
          "id": "256afb66-d3e0-4aa3-8b8c-aa3fc50726b5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0eefc1c9-ad8a-443e-9ccc-3b628ec761c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7fb3a9-14df-405e-af55-eda660af7bce",
        "cursor": {
          "ref": "0c55ddd8-b086-42a6-b6a2-3b41702fdf3a",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0a360495-3aee-469b-b3c2-1be1400af306"
        },
        "item": {
          "id": "ed7fb3a9-14df-405e-af55-eda660af7bce",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3a22b029-f1d9-4ffa-bbb3-a52c036cdf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9c7650-a09a-456b-8444-cf98723e1f13",
        "cursor": {
          "ref": "d12c5c18-8cdf-4136-b745-b62945c2c4bc",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5b85a4e1-b924-4d68-a069-6f2b70458ede"
        },
        "item": {
          "id": "2d9c7650-a09a-456b-8444-cf98723e1f13",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "09cc0d54-22bd-4703-83d0-cd51abc3c4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf83682-d8d5-43e6-b873-2e5081ce8722",
        "cursor": {
          "ref": "e379998d-6455-4a2e-9e17-3ab168d62ea2",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "36ec61ed-b341-4194-8dc6-937cdf8d254e"
        },
        "item": {
          "id": "ebf83682-d8d5-43e6-b873-2e5081ce8722",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3a22d44b-671e-4f4e-bd78-3d48325ddf8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0a5ce7-c79d-45d7-8f8b-a9596c7e2e63",
        "cursor": {
          "ref": "cad30172-dba5-4c43-b2ef-28bca87455bb",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ef294a21-6b9c-49a6-8d17-58ce60a0693d"
        },
        "item": {
          "id": "9e0a5ce7-c79d-45d7-8f8b-a9596c7e2e63",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1714ab2f-6a94-4719-bd14-70207ab13a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ffa6bd-5d72-4c50-b2e0-85a49936d934",
        "cursor": {
          "ref": "62b47c6b-a736-4bf0-a5a8-12e21cdc4c56",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "269c975b-9bf8-4d95-89b5-b9e39bdc2acb"
        },
        "item": {
          "id": "93ffa6bd-5d72-4c50-b2e0-85a49936d934",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7270cca6-7bae-4e37-8847-8b2079065757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae07029-46d2-4c82-b205-76cc778babbd",
        "cursor": {
          "ref": "cb6464ce-eb11-4a72-8046-02bc5ba044b0",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "031e914c-1c67-4f1c-b78c-65150bce2f9e"
        },
        "item": {
          "id": "8ae07029-46d2-4c82-b205-76cc778babbd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "642ee9f3-958b-4c8e-af94-fae7629d925e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56b99e8-d35d-4dfd-8c93-b54aaa44f2f0",
        "cursor": {
          "ref": "8966751f-a05e-4250-93a1-53b5f2edbf01",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "71886797-b83f-4182-8118-8e15c77d2fdf"
        },
        "item": {
          "id": "e56b99e8-d35d-4dfd-8c93-b54aaa44f2f0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7939e7c3-a986-4c77-88ed-6942e6bfb0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98220a3-0785-47a0-912b-d0c0ddcc2851",
        "cursor": {
          "ref": "ff379917-5f0f-40ed-b345-5b8e9bb32f69",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b6e00c82-e636-457a-b080-f8fc527fda32"
        },
        "item": {
          "id": "b98220a3-0785-47a0-912b-d0c0ddcc2851",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f28dd7e5-9dec-4ea3-9fe6-e34fb3df6fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a3eb88-d4bc-46f0-bc1c-094cd5bb5119",
        "cursor": {
          "ref": "630c7345-8404-4f13-8c48-5ccb871122dd",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f6724a85-7da3-48ab-a936-af26addc361b"
        },
        "item": {
          "id": "b5a3eb88-d4bc-46f0-bc1c-094cd5bb5119",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "88664b3c-87cc-4f5f-be2c-267f785f4fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc523a7-60b7-48cb-92c0-36101ff45cfd",
        "cursor": {
          "ref": "d0572564-b03c-412a-8fb6-7f3770a424f4",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "61afad49-a13f-4ef8-bb25-ec220bb34772"
        },
        "item": {
          "id": "4bc523a7-60b7-48cb-92c0-36101ff45cfd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "688642a2-0a76-4a04-90fb-740d2ba4b3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b891784-bde9-42ab-980f-9ad4d46f1d9b",
        "cursor": {
          "ref": "1b2ae7c0-9bb7-4d0b-8cef-cc21cf2e9b28",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9b4fa8a1-3437-4412-9be2-96944d46fb12"
        },
        "item": {
          "id": "5b891784-bde9-42ab-980f-9ad4d46f1d9b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1d274954-5b77-4ab0-9184-be626a7c5836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9c7d45-6f8e-43d7-a977-355ef786b6be",
        "cursor": {
          "ref": "07b9f75c-f060-458f-8442-9c81d8abdfdd",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "15ad9b9c-a1e8-435b-9419-8a063046c435"
        },
        "item": {
          "id": "ef9c7d45-6f8e-43d7-a977-355ef786b6be",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a404efec-7772-4819-9899-7befd7606bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d99acb3-32fc-45e5-8802-f9143b96af2a",
        "cursor": {
          "ref": "ddb3c730-125a-4be1-bf06-1816d568de19",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e406ccc9-082b-4806-86f0-6e57aae1bb7b"
        },
        "item": {
          "id": "7d99acb3-32fc-45e5-8802-f9143b96af2a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2237767d-9202-40de-9840-838a90754348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75af0391-0de0-4e8b-a0d2-eb7f51dcc641",
        "cursor": {
          "ref": "d29d5224-92ad-423c-a0de-de9bd1b7992b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "01539236-aaf1-460d-b20a-bc22f33b6891"
        },
        "item": {
          "id": "75af0391-0de0-4e8b-a0d2-eb7f51dcc641",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ec1ab3e2-9316-4e5a-a9f8-7e2c15adcde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d08f4d5-9ddd-4db7-8646-8f0cdf9cbd4a",
        "cursor": {
          "ref": "646abcf8-e260-48a5-b425-15724c1207e1",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "77f1d4d2-4290-4964-9f42-a9f53555a5a1"
        },
        "item": {
          "id": "6d08f4d5-9ddd-4db7-8646-8f0cdf9cbd4a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "dbe0570e-dfee-450b-a52e-8147828f726a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b810c4f2-4a5e-48f3-9dbf-6b349ea04fe9",
        "cursor": {
          "ref": "abac5269-04a6-4e03-95ff-619caa3e0593",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fd7fc885-9b78-4426-b909-3b2d83afc953"
        },
        "item": {
          "id": "b810c4f2-4a5e-48f3-9dbf-6b349ea04fe9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ddd0549b-7d5d-4813-92cf-66a237f9c871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80468f1a-9bbe-42bc-8c5a-d0e2149554e1",
        "cursor": {
          "ref": "d6a450c2-36e6-46f9-8aed-7d0b68b43169",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "930a832a-8013-45c8-aa1e-1e93590049e7"
        },
        "item": {
          "id": "80468f1a-9bbe-42bc-8c5a-d0e2149554e1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d131ce81-3570-4425-a02d-ad074de834cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc32203-0d4a-4847-b133-dd22da51c7b1",
        "cursor": {
          "ref": "d5499926-e1ca-4e98-843a-cdcfb138d104",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bb6dd920-44b0-4f10-ac4b-2c000fd58799"
        },
        "item": {
          "id": "1cc32203-0d4a-4847-b133-dd22da51c7b1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f8223dc1-9a24-4999-8c6b-f2117f98f8fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20d3268-0edf-423d-91ef-69f09f7ce17c",
        "cursor": {
          "ref": "3c862439-ce3d-4d14-a046-160af09d2717",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fd61d592-6292-4609-ab14-9d8f456cb06a"
        },
        "item": {
          "id": "f20d3268-0edf-423d-91ef-69f09f7ce17c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "69acd75f-93f3-4335-93f5-b9553b47b92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4ca59758-c69a-48f5-a32a-10ec73a3417e",
        "cursor": {
          "ref": "00b8effa-12a7-4211-ab17-01187d26cf02",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d0f8f13f-53bf-4512-91fe-aa541f54f650"
        },
        "item": {
          "id": "4ca59758-c69a-48f5-a32a-10ec73a3417e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1ea32629-6ece-43b3-abf1-06535e2f2c11",
          "status": "Created",
          "code": 201,
          "responseTime": 2796,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbf5757-d3d3-4c61-bd33-0852d253cbc0",
        "cursor": {
          "ref": "bfa05d6b-0605-4a82-a5af-48ad387d7ab2",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f3cde7ff-41a4-49c0-9121-57fe4f4d0969"
        },
        "item": {
          "id": "3cbf5757-d3d3-4c61-bd33-0852d253cbc0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "044c6747-7cbe-492e-a9b0-c554755d6f13",
          "status": "Created",
          "code": 201,
          "responseTime": 2786,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d72f7f2-8774-464e-bafd-3f353aa5734e",
        "cursor": {
          "ref": "cb05c297-7fc1-4f1b-9406-1a9a31776cf1",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b769c30a-d79b-4dff-9d78-900ba10112aa"
        },
        "item": {
          "id": "1d72f7f2-8774-464e-bafd-3f353aa5734e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c0c662e5-dbd6-4150-889b-5baf9b282f8d",
          "status": "Created",
          "code": 201,
          "responseTime": 2198,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c416a69-108b-408f-8bb9-23c15153381c",
        "cursor": {
          "ref": "5cdc561a-b375-4934-af61-efa8292d8700",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bdd09472-b826-4f3d-91ee-56fe8a00e22b"
        },
        "item": {
          "id": "4c416a69-108b-408f-8bb9-23c15153381c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ec8b5cd5-7671-4d57-aa51-d23e2f35ac1a",
          "status": "Created",
          "code": 201,
          "responseTime": 2072,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4a5691-5dcd-4569-b0cf-ffd0ce62802a",
        "cursor": {
          "ref": "c588cbcb-30ee-4720-99f9-679a08c3b5dc",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3e245408-55ef-49b7-b108-1f734dc2a006"
        },
        "item": {
          "id": "8b4a5691-5dcd-4569-b0cf-ffd0ce62802a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2f217d8e-64b8-4702-afc8-4db2bfd94183",
          "status": "Created",
          "code": 201,
          "responseTime": 2240,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22b80fd-7d1b-4972-a91c-bb9b596763e8",
        "cursor": {
          "ref": "6c223518-84e3-4c39-bb9c-084ee34bcae3",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d267bfab-9d68-4234-b18d-66afcc04a90c"
        },
        "item": {
          "id": "a22b80fd-7d1b-4972-a91c-bb9b596763e8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ab7c1d8a-2c96-4171-b946-12fe883e0162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ea037217-c2e4-4515-b08e-01ebf24f0b0b",
        "cursor": {
          "ref": "b58fdea2-723e-44f7-8895-b19a99019705",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a2147dfe-2bbf-4c0d-8412-5c293bc5343a"
        },
        "item": {
          "id": "ea037217-c2e4-4515-b08e-01ebf24f0b0b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "943a444e-5cf8-430f-9cdc-0fced1c91e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d46c39-4cfb-400e-a6fe-e45cea4bdac5",
        "cursor": {
          "ref": "cf4d4c60-a89d-4a3c-bac6-ffaf19a269fc",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6304fd8e-704f-459a-9571-0e131b7cf817"
        },
        "item": {
          "id": "52d46c39-4cfb-400e-a6fe-e45cea4bdac5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "de87f3d0-264b-409e-a4ab-64ecf5e2a083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c8381c-6303-4e75-bf56-79c566dff1b9",
        "cursor": {
          "ref": "a41ff049-a042-4ea8-956f-51f75cc6697d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a8b7fb98-1e5a-461d-93da-a19fb24ceb36"
        },
        "item": {
          "id": "c2c8381c-6303-4e75-bf56-79c566dff1b9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a19e5929-2529-4512-8312-5c4d1a3cc16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc85dbab-0a7a-44e8-bbb8-24c1fb87f264",
        "cursor": {
          "ref": "61cc8eee-1608-4fc5-b820-7110ffbfed77",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3c62f3bc-d3c2-4fde-b50c-8e7f61957315"
        },
        "item": {
          "id": "cc85dbab-0a7a-44e8-bbb8-24c1fb87f264",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "df78ee14-276f-4d42-b9ca-be5d36726cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022dd8cc-ffb7-4f72-ab8a-e5199a1f8c9b",
        "cursor": {
          "ref": "0283f626-4378-449d-af1b-01d06503fc2f",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f1c8d0a7-f341-435d-8ebf-0b5118588bca"
        },
        "item": {
          "id": "022dd8cc-ffb7-4f72-ab8a-e5199a1f8c9b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2a8769f1-4292-465a-8104-c7e0425749c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e159e73-9664-4476-bc9a-34539b76d084",
        "cursor": {
          "ref": "986bf6ce-69c8-4fea-8847-0b03236417c5",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "29a41cbd-0243-491f-adbd-3023f53047cd"
        },
        "item": {
          "id": "2e159e73-9664-4476-bc9a-34539b76d084",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "84a4ceef-69dd-4167-af15-5b3e4fc16da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46df997-48d7-4709-a00b-34241ed2e917",
        "cursor": {
          "ref": "5a98183a-197c-40be-9617-a6c999823975",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bf28fd80-a0a3-4a76-a4d9-e52360899840"
        },
        "item": {
          "id": "e46df997-48d7-4709-a00b-34241ed2e917",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3c8a6535-087d-4dbe-9b3d-1526a13090ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bdbb73-3cae-44ea-958a-5691202cb50a",
        "cursor": {
          "ref": "96d4a5c6-0ea5-432b-a5d4-161e00ec06c7",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "84a3fba8-b68f-4bee-ac23-58c3c2f6fd55"
        },
        "item": {
          "id": "d2bdbb73-3cae-44ea-958a-5691202cb50a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6c0f1034-4c7d-422f-8490-52e807fe7dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a65d9b-e594-4ec8-a7ce-f1840edd27c0",
        "cursor": {
          "ref": "3fd447aa-b36a-4bfe-a039-5158e1f264bc",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "10937d17-1765-482c-958a-e46686cd0913"
        },
        "item": {
          "id": "30a65d9b-e594-4ec8-a7ce-f1840edd27c0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "de70c737-a993-4f65-bcc0-3aa664cc525b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7988252c-c22d-4971-b2c6-5cfa75f34a07",
        "cursor": {
          "ref": "38b54436-cb66-4dd6-9d62-49b70130db2d",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e2cee9d2-da7d-4ca3-b735-a03551cfac26"
        },
        "item": {
          "id": "7988252c-c22d-4971-b2c6-5cfa75f34a07",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6cbdcb0f-71ac-4af1-9347-453c80478db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4f7966-f7a3-4199-8ec4-1f13df074a79",
        "cursor": {
          "ref": "8f3dd6f0-7b0c-4197-83c6-472539e530ae",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "18d255c2-f360-4555-bcac-456b57de06ae"
        },
        "item": {
          "id": "ad4f7966-f7a3-4199-8ec4-1f13df074a79",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6d16be20-b701-4308-8cbc-2c07c40707c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c54a8ee-b744-491b-a899-67974d057f5d",
        "cursor": {
          "ref": "5b8e9eb9-74fe-4cc9-9e04-b7a2cc52037c",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "47dd2e51-b61e-4f6d-a876-21502fb6910a"
        },
        "item": {
          "id": "3c54a8ee-b744-491b-a899-67974d057f5d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "48490e07-698a-4dfd-ac99-93f32f376efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d59ff2-4228-4eb4-a309-b24dfba15147",
        "cursor": {
          "ref": "121d8a57-5307-4b1a-a9e4-9f6040c33f56",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "84b65607-eb44-4f5c-b3a2-95f8f4f8e1a2"
        },
        "item": {
          "id": "02d59ff2-4228-4eb4-a309-b24dfba15147",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "18ba13ca-6f8d-48c1-a383-efb8bfadba63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4357db-c592-4dfe-8f86-d0f6b237df20",
        "cursor": {
          "ref": "eab77f5c-c58e-4799-96b3-330aa4b305be",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8d042060-bf27-44e8-800f-29207e98ef23"
        },
        "item": {
          "id": "6e4357db-c592-4dfe-8f86-d0f6b237df20",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5a85385d-df12-4f43-a77a-1ab2d14f809f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a381b1f-770b-42e8-b184-0dbd7beaf525",
        "cursor": {
          "ref": "b7518fd0-08af-4189-922d-9b0cdaace0f3",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6fb7c181-3ed3-4ee2-96ef-a02f79ea9328"
        },
        "item": {
          "id": "4a381b1f-770b-42e8-b184-0dbd7beaf525",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "10cf2cbe-3867-49f4-9f29-5e03136dfb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5332ce-7fb3-4b7d-8da1-151a8a6c6e28",
        "cursor": {
          "ref": "7bc4d1a3-6c04-4634-bddb-2e9423347c7b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a7c9c98e-37c8-467e-9965-d0a559c6e852"
        },
        "item": {
          "id": "dc5332ce-7fb3-4b7d-8da1-151a8a6c6e28",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "83151f36-72b9-4abe-b3c0-99c7bd475d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2578322-0fe0-4c00-9f26-9ce18e019463",
        "cursor": {
          "ref": "0aa6da32-6662-4fa9-aedc-3e409dd52bd8",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f7f6f436-83d9-4dee-b5bf-507e7af5d9ab"
        },
        "item": {
          "id": "c2578322-0fe0-4c00-9f26-9ce18e019463",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ccec8d4c-54b1-4178-bc5a-c6947fc3265a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a1cb81-1798-4b2b-b2e7-d7c6e5c18214",
        "cursor": {
          "ref": "48c855d1-41a0-475e-a820-d40933d46725",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3bdc6979-461e-47da-be97-a57acbb4ae0d"
        },
        "item": {
          "id": "40a1cb81-1798-4b2b-b2e7-d7c6e5c18214",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "89a741d9-a0d2-440b-ad60-9adfee9d20bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db68091-afb6-46d5-9b99-9a4b8a108ae6",
        "cursor": {
          "ref": "5d438afd-365f-4bba-83a5-5d527e00281b",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1ebf1203-0d5e-4266-8d11-226e8b93e30b"
        },
        "item": {
          "id": "2db68091-afb6-46d5-9b99-9a4b8a108ae6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e2dab801-f375-4689-8d84-7a4f36718051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9424e0-d6b1-4a3f-8f6f-6050cea63bfc",
        "cursor": {
          "ref": "07288c52-6454-4b21-bba3-5582846a4464",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ac8146fb-187f-4884-a8d2-b6904ede838e"
        },
        "item": {
          "id": "5a9424e0-d6b1-4a3f-8f6f-6050cea63bfc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a938f1e9-c962-4334-8ecf-976b883e5370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3a64eb-ceb8-4c60-a7a2-6d8f23338e84",
        "cursor": {
          "ref": "2061407b-12bb-4709-b2ff-90951a5bba40",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5f916d1a-ebf2-4cd9-a84f-edba5d9da942"
        },
        "item": {
          "id": "0c3a64eb-ceb8-4c60-a7a2-6d8f23338e84",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bd8b98e0-6d46-4018-9aae-a83f0aa41bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a1a9fd-b645-4b48-9e87-6d8526232e81",
        "cursor": {
          "ref": "ce748592-7fe2-45a5-a8ab-b05fbe02120e",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d73493f0-ca8e-4b81-8ea5-72bd2a658284"
        },
        "item": {
          "id": "98a1a9fd-b645-4b48-9e87-6d8526232e81",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "26367cec-27fc-44f6-9605-6b10cfa49c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f25e48e-a295-4882-9035-454ce47a4f64",
        "cursor": {
          "ref": "c673cef9-f2bb-49a7-b5d8-ffbcff27571f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2f355bdc-5133-4824-978c-e9e6ca648225"
        },
        "item": {
          "id": "9f25e48e-a295-4882-9035-454ce47a4f64",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "495937ef-0877-4cda-9c15-51a4da407535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2589c038-1a52-4dec-b188-396f9a5f1648",
        "cursor": {
          "ref": "e025269e-80cb-45a7-8560-ee46b246b32a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "975daa55-5758-4be3-8019-b112c5c3eb5d"
        },
        "item": {
          "id": "2589c038-1a52-4dec-b188-396f9a5f1648",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8014b8da-9e38-45c3-aed6-36deaec15237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49d3586-8bcd-4b08-802b-4e2f5d995b24",
        "cursor": {
          "ref": "95ac8e48-e600-4134-a68c-cc433d12d346",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7e8a1967-ea61-4735-bc78-6a51b27ac2f2"
        },
        "item": {
          "id": "e49d3586-8bcd-4b08-802b-4e2f5d995b24",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5fbe042f-4a54-42d2-bcd2-68c42f69b679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66db507-c3f6-4da1-8f70-4888190b1fc0",
        "cursor": {
          "ref": "322d4d6a-1611-42c3-85d9-90070381da06",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5a3ab11c-0fe6-4386-a8e9-87fd232c1780"
        },
        "item": {
          "id": "e66db507-c3f6-4da1-8f70-4888190b1fc0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bb6a7591-764a-4171-90b1-4f9af1e91edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e858b5-e757-46b2-a1a3-c37f69413f5b",
        "cursor": {
          "ref": "535f707b-30e2-4cfb-9df2-72a67c96e296",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3369bea4-698f-4b6c-a38e-79ce5dbcfbbc"
        },
        "item": {
          "id": "b7e858b5-e757-46b2-a1a3-c37f69413f5b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7d0f74d8-f226-4796-acf8-7ff715deba00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d6c84e-65f8-4e05-96c3-68f0339d12ad",
        "cursor": {
          "ref": "0028a186-9489-471b-b752-50f2918f7f0f",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7b673995-fc94-4a4d-b2c6-875f43f115f9"
        },
        "item": {
          "id": "d9d6c84e-65f8-4e05-96c3-68f0339d12ad",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ba6b4519-5d1d-4206-af57-c7e455c63b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d5e365-80ad-40af-92f5-dfd0db13f590",
        "cursor": {
          "ref": "16bc3fee-60a1-44b0-a639-7abeb2e1cf8a",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "99d57fbc-4afe-49f3-9e80-2cdf24368d9e"
        },
        "item": {
          "id": "f8d5e365-80ad-40af-92f5-dfd0db13f590",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b28710de-0945-4665-819a-ef30a555dc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22144c00-f6ba-402a-a02b-af27f7e4b4c0",
        "cursor": {
          "ref": "eafa73e2-17b7-409e-bbaf-e26fda718e32",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "129572e8-0174-4db0-908c-15c4d666a0b2"
        },
        "item": {
          "id": "22144c00-f6ba-402a-a02b-af27f7e4b4c0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f9c886cd-a3be-4298-9ea5-39255be3cc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247ab0b9-9c71-42de-ac8c-fb6e5149d27f",
        "cursor": {
          "ref": "c088a262-7f92-44d6-8e06-94420bf3b82b",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e8512499-17cc-4c69-a773-6cb279aead19"
        },
        "item": {
          "id": "247ab0b9-9c71-42de-ac8c-fb6e5149d27f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "87487604-c46f-435f-af5d-0acd8c611b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffe4462-adc0-40b6-a8f1-e3c135a820e6",
        "cursor": {
          "ref": "a5aa586a-625c-4b4c-86ed-79741ec14e47",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e155f2b7-f95a-4c4b-a593-cc422b9588ff"
        },
        "item": {
          "id": "6ffe4462-adc0-40b6-a8f1-e3c135a820e6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ce461623-0a27-4f72-8a71-49f89ce26d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb329c35-0ee0-498b-8ad6-37d56e6d3a0e",
        "cursor": {
          "ref": "5ccaaff3-24f4-4256-94f3-ca87f77d357f",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "46bfb1d6-d075-4c07-97ad-f9dd55dc3e6c"
        },
        "item": {
          "id": "eb329c35-0ee0-498b-8ad6-37d56e6d3a0e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1ab721d6-6552-469d-b83a-188cf152cdab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ece515-5744-4629-93e7-dbf30acf4356",
        "cursor": {
          "ref": "d1db1a2b-477c-41ff-a836-ff1746316c57",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "de6d41fe-8a13-4b16-aea5-ac58f329133a"
        },
        "item": {
          "id": "61ece515-5744-4629-93e7-dbf30acf4356",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a9697fa0-5591-423f-8d57-a759116e7956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20f0544-4978-422a-a6fa-29563b428690",
        "cursor": {
          "ref": "0860a8af-f666-4d94-adfa-1b301fcc83d4",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "59372f65-5343-428b-9e08-67c91d02748e"
        },
        "item": {
          "id": "a20f0544-4978-422a-a6fa-29563b428690",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7c7c9c55-b065-47a6-9bac-6ba6a1730d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fc211a-7e51-417b-a9a1-455fe539456d",
        "cursor": {
          "ref": "398e7873-710f-42de-bb26-32a45c0080bf",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f84346d3-ce55-4ae6-b22d-2b30787b5274"
        },
        "item": {
          "id": "f2fc211a-7e51-417b-a9a1-455fe539456d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e084364f-47f8-46be-9000-b2703f79c0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b68f77-9ed8-4c11-9e18-224044253017",
        "cursor": {
          "ref": "2a119b86-59bc-43b7-ab79-6036652fbbc7",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a312f5d9-e5f7-44c7-b0f6-9476114d8255"
        },
        "item": {
          "id": "54b68f77-9ed8-4c11-9e18-224044253017",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "18726caf-19f3-4de4-962b-8e08e9482998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52237435-a586-41a7-a3c0-82dcfabcce62",
        "cursor": {
          "ref": "6377bb1f-7cb3-4f0f-810e-46f90c894127",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5066eabf-8fac-40d9-ad15-8b966ffc2b50"
        },
        "item": {
          "id": "52237435-a586-41a7-a3c0-82dcfabcce62",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f49d40b5-ab5e-4838-a82b-6202177730cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145e797a-4363-40b2-9d3f-8094997177b7",
        "cursor": {
          "ref": "040577ed-250a-4d4e-a12e-dceca4174237",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7f4d5ba6-d595-4f96-b95c-496a1abb4da8"
        },
        "item": {
          "id": "145e797a-4363-40b2-9d3f-8094997177b7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7dbcb8a5-345d-4eeb-95dc-4ccb15c0ce09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e37014d-b906-4e9e-9bb2-2d76a5a00247",
        "cursor": {
          "ref": "cc870d8d-2d42-4352-b2d7-074d2604fcf0",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "52c90910-d452-4864-a77e-e7b1b4642f4c"
        },
        "item": {
          "id": "7e37014d-b906-4e9e-9bb2-2d76a5a00247",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "21b81fc7-7602-4309-9d5e-4b50ad98349d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88b4a50-dd4c-4b91-9cd5-0dfcbebb5f8d",
        "cursor": {
          "ref": "0bafea4f-b547-478e-abd2-b6ed2cf423e2",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e401c429-1ef0-488c-ac7b-78551415801c"
        },
        "item": {
          "id": "f88b4a50-dd4c-4b91-9cd5-0dfcbebb5f8d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4c555ac3-eeb1-4671-923f-9da0c3474da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef66db57-f2da-4bf7-8943-6ac7fa3bf284",
        "cursor": {
          "ref": "5c55ab6d-74cd-430c-9c04-4f04c6dfb1dc",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b65447ba-aeb0-4c05-bc20-b355d42cfb19"
        },
        "item": {
          "id": "ef66db57-f2da-4bf7-8943-6ac7fa3bf284",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4ab92fd1-4ee6-4440-8a82-0ee31733074d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97836e3d-793a-4c98-ba3c-497f632b3881",
        "cursor": {
          "ref": "54014e69-7806-4aa9-8e01-fbf1a15f7412",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9552fddf-59ea-490a-aff3-71981ce6ba19"
        },
        "item": {
          "id": "97836e3d-793a-4c98-ba3c-497f632b3881",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d491562f-9499-4bc7-a96b-eace10c45699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c5e961-2a38-4d79-84ee-f5c4be8dd78e",
        "cursor": {
          "ref": "b991089b-5948-45bb-b997-cdf94a99957b",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a277a95c-8f17-4a36-9f08-9944d1909f57"
        },
        "item": {
          "id": "91c5e961-2a38-4d79-84ee-f5c4be8dd78e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "959ef827-aefb-4d18-bb57-706cafff2210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d39d46-ed62-4217-96cf-2dbaf21f7fcb",
        "cursor": {
          "ref": "88741c86-945f-4160-b6ce-c5adbe1d3147",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "409ac1b1-d0db-4f4a-937c-2d45a240334e"
        },
        "item": {
          "id": "65d39d46-ed62-4217-96cf-2dbaf21f7fcb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f26b2d7f-3e99-47cd-a59e-b532e3c639e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e6da2a-6154-42c7-8742-39daf90374d3",
        "cursor": {
          "ref": "6d1a5b25-909b-40e5-bee6-d99f94538084",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a27a3dda-5359-454e-b85a-cf183356c417"
        },
        "item": {
          "id": "e4e6da2a-6154-42c7-8742-39daf90374d3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "014c13a6-7be6-4919-87d5-a6f9068025ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba249da2-5d96-454b-9cde-73fe0be8af46",
        "cursor": {
          "ref": "4e113b90-19e7-4674-9504-a4b2d3b35c50",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e02b0989-7547-49b4-b33e-9ed74715f63c"
        },
        "item": {
          "id": "ba249da2-5d96-454b-9cde-73fe0be8af46",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "01b0c431-b500-471c-b7f7-edb27b7bddb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1258e2b5-b0eb-4324-92cf-43dee804a261",
        "cursor": {
          "ref": "26a72fa8-5cb9-4f1c-a0c7-0ee8bb6e0450",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a93ed515-d31a-43a3-9826-a90ff0a764e8"
        },
        "item": {
          "id": "1258e2b5-b0eb-4324-92cf-43dee804a261",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2ca91d02-8101-46f4-a1aa-962cc3f6ff4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1b3aac-741a-41a4-9f09-fdc22b994f32",
        "cursor": {
          "ref": "8bc90e95-5811-4a94-84fb-c834f0a707e2",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6b401720-40df-44e5-b2f8-9a1fcd9df242"
        },
        "item": {
          "id": "5c1b3aac-741a-41a4-9f09-fdc22b994f32",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ec5a79d4-d83d-454a-b59b-92506a246746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3392def0-13a2-4020-a99f-f8bbbd9caf95",
        "cursor": {
          "ref": "2b1f1e3c-bd26-428a-ad89-e5519150b800",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8a15c649-e4d6-4df0-a185-10095a1ad959"
        },
        "item": {
          "id": "3392def0-13a2-4020-a99f-f8bbbd9caf95",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6eec942b-527d-4b55-b1b0-882ba8881858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cfc19e-69ba-4e9b-a7ee-57fb564f4aa6",
        "cursor": {
          "ref": "389d8ef3-c26d-4282-80f8-86be6633db14",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1eab9848-9873-4eb2-9d07-6bf50afc0f2a"
        },
        "item": {
          "id": "03cfc19e-69ba-4e9b-a7ee-57fb564f4aa6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7fe138e8-25ca-4c6c-aa34-0d19b3823f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ade8940-4951-4b08-b289-b257ae2ba8a0",
        "cursor": {
          "ref": "e53351b1-b075-4756-b832-899913e27539",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "314c1553-7bf5-4695-9683-d0467a925ef3"
        },
        "item": {
          "id": "6ade8940-4951-4b08-b289-b257ae2ba8a0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6ded562e-d760-4f33-aa1f-f46e26d1e5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4518a531-435e-4e74-a64f-20b97e097577",
        "cursor": {
          "ref": "67628de1-24e1-45c2-9ef3-852f9e754780",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6bf361d8-80a0-450e-8c1d-8782f9e2d8f6"
        },
        "item": {
          "id": "4518a531-435e-4e74-a64f-20b97e097577",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "818d926c-a141-498a-a77f-75242e317570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207ec362-eb1e-4210-afb4-65a52b263571",
        "cursor": {
          "ref": "7e9e71fc-42c4-40dc-8666-39eb2bfa4f5f",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a6d728a9-ecc6-4aa8-a5a0-038d916cdec4"
        },
        "item": {
          "id": "207ec362-eb1e-4210-afb4-65a52b263571",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1e894d16-4ebc-4d2e-88a1-b217cb934cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666e3b7f-44ba-4159-aecf-d49c186f2cde",
        "cursor": {
          "ref": "fbb3a4d5-cf43-4caf-b845-9e057fbfb18c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e4d0d91f-5df5-435f-862d-bab6ae5b59bc"
        },
        "item": {
          "id": "666e3b7f-44ba-4159-aecf-d49c186f2cde",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e63898e4-a58e-4172-a7ea-8869b011555a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ba4dcc-80c3-4d84-b88e-d1410fef3509",
        "cursor": {
          "ref": "c3768b05-bd69-4f7b-935f-610d9f584e2f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4c88a65a-4d08-4fcf-8999-9e029386fc1d"
        },
        "item": {
          "id": "73ba4dcc-80c3-4d84-b88e-d1410fef3509",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8ab37eca-6ce7-4a9f-bdc5-0faf392e40a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d52b48-ae71-47c2-9e58-b514c63580f9",
        "cursor": {
          "ref": "ff6fe8ac-9c1d-47d1-a949-bfa6ee2ba855",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "456f3c67-8c89-41ad-b827-45e62fb0ce1e"
        },
        "item": {
          "id": "b1d52b48-ae71-47c2-9e58-b514c63580f9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2c54fb54-5b9b-4ecf-904d-0b9eb6f1447c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d72042-83bf-41e6-9233-ab29c1b77cc7",
        "cursor": {
          "ref": "09f513ff-7e92-4052-be68-6e92d1a1e3c3",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "aff4c99a-821e-4b12-ab76-b20b0d99b3b0"
        },
        "item": {
          "id": "21d72042-83bf-41e6-9233-ab29c1b77cc7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eaa8dd61-bca9-49e0-9b43-ff5fe9996ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02de439c-44b5-41a0-901a-6e5bf386b79c",
        "cursor": {
          "ref": "e6c2947b-e8eb-45e1-85c5-c983a10d8bc2",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a10f1856-d26b-4bf3-9a75-a86001dde869"
        },
        "item": {
          "id": "02de439c-44b5-41a0-901a-6e5bf386b79c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b1bd0f5e-d84a-4cd2-9c9a-c6f83cf40970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9078f133-6f2e-4b09-9acf-17f9ca49553d",
        "cursor": {
          "ref": "7fd0297b-ee66-440b-ac83-bba20fa5fb7a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "07f081e8-e74a-4cb7-b470-6b2e44457d84"
        },
        "item": {
          "id": "9078f133-6f2e-4b09-9acf-17f9ca49553d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "934bae68-3f6a-4b55-b1be-3118352c9bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f846f62-bd1c-4e18-acda-955331885cc0",
        "cursor": {
          "ref": "a8e3d787-d516-46a6-8ff2-950ef47b26ef",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ba73f56c-6192-4d17-9ba5-2cba4392f498"
        },
        "item": {
          "id": "6f846f62-bd1c-4e18-acda-955331885cc0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "760fdb4f-7e24-42a0-87d0-56b3d38a7938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9997d79-513d-4189-9234-c4b1ae0b542d",
        "cursor": {
          "ref": "00534b1f-4b15-478c-b6c7-264f018dc168",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7dc4139f-4436-45ac-8c10-eb435d1afcb9"
        },
        "item": {
          "id": "a9997d79-513d-4189-9234-c4b1ae0b542d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "981c07b6-f659-49df-a3c9-c068b9483e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28faf716-bd31-48f5-bc80-25c78d3ec509",
        "cursor": {
          "ref": "5e5f352c-644c-4929-8f72-e6e0385c7b3c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c837ef7a-c095-4e7c-aad5-872ea4ec98f0"
        },
        "item": {
          "id": "28faf716-bd31-48f5-bc80-25c78d3ec509",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1218808b-9645-49b5-83a3-1c48746d321e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73163a5-a82b-402e-be41-935fe38d3a80",
        "cursor": {
          "ref": "ad8174ac-624f-440f-be67-ba96a54db2f9",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "78c08b58-e772-4abb-9f5a-425c895d7f82"
        },
        "item": {
          "id": "d73163a5-a82b-402e-be41-935fe38d3a80",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "97f08814-da7e-4461-858d-b351795c00ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc47d9d2-a514-4c5e-9f4c-dfff2ce5febf",
        "cursor": {
          "ref": "f6b5bf44-bdfa-42ce-9efd-951494f44132",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1ec22873-6659-461d-8267-6c707d52fb1e"
        },
        "item": {
          "id": "cc47d9d2-a514-4c5e-9f4c-dfff2ce5febf",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "214dc44f-2cc3-42a3-9f2c-6fb9bb4f2d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba3d4b1-fa92-440d-8c0d-3536aca2044f",
        "cursor": {
          "ref": "71e62b0a-0ec9-43ec-96d3-4318043f8e1f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b57e34f0-cef1-4baf-8c38-33d928ff93f1"
        },
        "item": {
          "id": "dba3d4b1-fa92-440d-8c0d-3536aca2044f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4476cd62-1e98-4445-ab76-de746b1262ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd59f82-4ad6-409c-868c-0acd3917b44c",
        "cursor": {
          "ref": "42c517cf-49f1-4ca3-95d7-1a28fc65188e",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3497ab5c-75c3-4dde-9b98-11f8967ce444"
        },
        "item": {
          "id": "fdd59f82-4ad6-409c-868c-0acd3917b44c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "86bc7f9f-8e8a-4404-a021-336b603949e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63ddb0b-5946-41e3-8a76-08c518a9bd68",
        "cursor": {
          "ref": "3a8467b4-2484-43ab-8ead-08d3b12d3d26",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c8ad62b8-033b-46d4-a161-d39ed6261d69"
        },
        "item": {
          "id": "f63ddb0b-5946-41e3-8a76-08c518a9bd68",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "89fa7597-19df-41a0-a61d-d9681a116ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2578f5f2-5e4a-4fca-bef8-0514edbd642f",
        "cursor": {
          "ref": "4d607c57-4931-44f4-87fe-96b0f0cfbfc3",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "10468bf6-ffd6-4a73-a7b3-1f1167fc3e89"
        },
        "item": {
          "id": "2578f5f2-5e4a-4fca-bef8-0514edbd642f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e378ea63-05a9-4775-bf38-6ca7e4274316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce0f486-00a2-44c8-8912-72d789a49e61",
        "cursor": {
          "ref": "0e208ed3-134c-463b-b0e2-80b48e87c7b5",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "97cf2b76-76dc-4198-b790-03992743500b"
        },
        "item": {
          "id": "0ce0f486-00a2-44c8-8912-72d789a49e61",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "dd1e47f6-c64f-49fd-9a20-52d7f659a394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f25a80-09ed-4f65-8e49-c070fba22ecb",
        "cursor": {
          "ref": "89fae863-d67b-4af0-94ad-a0a3f3e437cd",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "262495b1-2942-4f5d-9b70-f81348447045"
        },
        "item": {
          "id": "b7f25a80-09ed-4f65-8e49-c070fba22ecb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "96284c50-1be6-4ca0-8474-61b4916c9feb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbfc6d8-13e4-4dee-85f7-92f8247fa02d",
        "cursor": {
          "ref": "690fb2b3-ca2b-42d4-bad5-9c7a9f8f761f",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e59c1451-f67f-4733-8ca2-123e4ca0b6c5"
        },
        "item": {
          "id": "ebbfc6d8-13e4-4dee-85f7-92f8247fa02d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b8dd90ae-8f6b-459e-b406-dff0afd1c063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09541fb6-ee82-4c26-928c-98dcfbda886f",
        "cursor": {
          "ref": "ee14135e-edde-48b2-b400-339e6438bfbf",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fbfe7e18-7c90-45cd-ac4e-e56b3fb98b4d"
        },
        "item": {
          "id": "09541fb6-ee82-4c26-928c-98dcfbda886f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9dead56c-c587-42cb-a76e-5a6dba7e3d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4318b30e-0eed-4b6f-8678-604a712842e7",
        "cursor": {
          "ref": "e6d6a12f-e444-40a2-ac49-5799a2e49697",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fc2f4b34-8c0d-4dd3-a8f9-a89e81819312"
        },
        "item": {
          "id": "4318b30e-0eed-4b6f-8678-604a712842e7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7c78eeb8-8605-4534-8a2b-6fa78926fe91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e59a90-7bfe-4fe8-a6c3-dcf34f543819",
        "cursor": {
          "ref": "334f5fb8-befd-4813-8a36-842c0db6b865",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fdc338e0-7997-4157-b42d-f6ecbbb0b506"
        },
        "item": {
          "id": "43e59a90-7bfe-4fe8-a6c3-dcf34f543819",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e9e4b542-c9cc-46cb-afde-fd399aa1d6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0f4a53-fcae-47fd-b213-f6ccbb7999bd",
        "cursor": {
          "ref": "29fbc369-4f78-411d-8b22-d29d42741377",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "918f0a7e-c168-42ca-956e-b0c9f38b8676"
        },
        "item": {
          "id": "0d0f4a53-fcae-47fd-b213-f6ccbb7999bd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8b95c0b0-d29e-4056-aeed-0c6052b82ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62cbf18-5bba-4e7e-971a-7463cee8f426",
        "cursor": {
          "ref": "2c6af2d0-73f3-4460-82b1-5f1fc85d344b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "276752db-6385-4488-b096-1ba86922efdb"
        },
        "item": {
          "id": "f62cbf18-5bba-4e7e-971a-7463cee8f426",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "996d28da-8a0c-4ac9-abb9-309285a5f735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6bc63e-2bfb-4d5f-906c-903694329d45",
        "cursor": {
          "ref": "67f27a3c-4563-40c8-bc50-c193ab41aa74",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4222b2ca-e97d-4156-91b8-e87bd3d8c062"
        },
        "item": {
          "id": "ff6bc63e-2bfb-4d5f-906c-903694329d45",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e345dead-895b-4230-a166-d6d8d7af69a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2db1d26-13db-4fbb-83a2-71a1ade922eb",
        "cursor": {
          "ref": "7775c0fa-4257-4f3a-93a6-30836325e9d0",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "21ae3c3f-aee5-4a0d-80d6-d208e8c3944a"
        },
        "item": {
          "id": "d2db1d26-13db-4fbb-83a2-71a1ade922eb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d58bfceb-53ab-4958-ad38-ee050224a888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f95282c-d6e7-49a7-be43-9eca27186cbe",
        "cursor": {
          "ref": "6d23c0f0-3c0b-4618-acfd-0ee7e1e35ca0",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5d0d3fe3-fefd-4fe6-9610-8ba0dc4cb724"
        },
        "item": {
          "id": "0f95282c-d6e7-49a7-be43-9eca27186cbe",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "faf28785-9591-4372-b03a-ffcbd0c607a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02fa2b1-dcf1-45f6-837d-ad38d6faeedb",
        "cursor": {
          "ref": "0e7558a3-5b55-40d3-8b9f-f7bb56963657",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0c80403d-c18c-4c79-b067-3c0360dd2570"
        },
        "item": {
          "id": "f02fa2b1-dcf1-45f6-837d-ad38d6faeedb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8e7221eb-f5c3-480f-af8b-094d0981a365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fec03f-c492-4127-8d8b-95c575810608",
        "cursor": {
          "ref": "d0e832b5-d406-425f-b097-90c6e95515f0",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4660f738-076a-4835-ad65-6e32ab415661"
        },
        "item": {
          "id": "a1fec03f-c492-4127-8d8b-95c575810608",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8713693a-1a76-48ac-81a6-1ef8c86cdbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a91b5b-10b7-4fb1-9c24-bc47694a47e3",
        "cursor": {
          "ref": "0591d788-54ab-4a2f-93d6-a3c315e7fec3",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ffa8cc0e-2ba9-4f6f-8e92-997fec8da09c"
        },
        "item": {
          "id": "93a91b5b-10b7-4fb1-9c24-bc47694a47e3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8f8b3414-57c0-482f-b6c1-19934dcbbf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7e3716-c5ed-45da-bf66-f1edcd1b9b2a",
        "cursor": {
          "ref": "68a899a7-e73b-430c-bce9-518187505cbe",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4a22448d-3911-402b-aa7f-ba939ef143cb"
        },
        "item": {
          "id": "4d7e3716-c5ed-45da-bf66-f1edcd1b9b2a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ec957cc4-d37c-499e-82de-9cd857df5616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445565ab-5cd3-45cd-b61c-77b9e554a706",
        "cursor": {
          "ref": "9ff954cc-2e05-4baf-996a-ca7a6bcd2aad",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cbaf961d-00f1-4343-973b-3ff49a12ddb3"
        },
        "item": {
          "id": "445565ab-5cd3-45cd-b61c-77b9e554a706",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a18b4e0a-407c-42e6-9dfc-9f74f51225dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebf0a20-b5b1-412f-831a-b47fad49936c",
        "cursor": {
          "ref": "b2693ec4-e40c-4040-9171-966f1958eab7",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "02a15bc8-527b-42c3-8a81-84e0614bb50d"
        },
        "item": {
          "id": "6ebf0a20-b5b1-412f-831a-b47fad49936c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3ceca390-82ee-42b9-b207-4304a0df5191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690f508c-9204-4f80-9e45-e6c209288fb2",
        "cursor": {
          "ref": "f65ebeb2-2f89-4ff1-a8c2-518e64ab8a12",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b616846a-9f98-45db-ad55-016bba0fc6a1"
        },
        "item": {
          "id": "690f508c-9204-4f80-9e45-e6c209288fb2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f1a3dc25-c7d5-4040-ba49-ed23084cf69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c49995-c5c8-4c14-ba46-03698fe2eb27",
        "cursor": {
          "ref": "d690eadc-f949-4ed2-8514-02ef41518453",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c1029f08-ad4d-4af0-b1cd-d2aed5e28956"
        },
        "item": {
          "id": "e1c49995-c5c8-4c14-ba46-03698fe2eb27",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9dece6e4-660c-4bd8-b56d-567295805ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db86cd2c-2cd5-4e7a-b41c-4ff06bb97976",
        "cursor": {
          "ref": "5b5ce02a-da33-4b17-9e7d-fa8225c700e5",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "031cefc3-e6c8-4e6d-8dca-f7ea545d280e"
        },
        "item": {
          "id": "db86cd2c-2cd5-4e7a-b41c-4ff06bb97976",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4adc48e6-b8f6-438d-8869-156236144096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def5cc5e-0e5b-498a-aac8-55172e98a809",
        "cursor": {
          "ref": "b5fe926a-3185-4dd3-a293-50dfc5d616ff",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5396d716-cbf6-4dee-95dc-39535825aa9d"
        },
        "item": {
          "id": "def5cc5e-0e5b-498a-aac8-55172e98a809",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "779c5ce2-4cb4-45b3-b3a3-eac82dbcb8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bf29eb-04b5-4c08-a3df-306111a800e5",
        "cursor": {
          "ref": "a6dd92fe-4af9-4d22-a642-e572a5f97ac3",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "768c3379-def1-476b-9f2f-249d2e66a6f2"
        },
        "item": {
          "id": "75bf29eb-04b5-4c08-a3df-306111a800e5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "af27314f-7585-461f-b9e3-7f2adbb2fcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3effad-5e04-4f23-94f2-23ec8e852016",
        "cursor": {
          "ref": "23a9115a-c1a6-46c7-a2cf-cd017ca21f89",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8d4eb1ba-8015-4e44-ba5d-157f07b10e96"
        },
        "item": {
          "id": "9e3effad-5e04-4f23-94f2-23ec8e852016",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "db5f23c3-a795-4b5f-87d8-4ce1acbcd6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2a663c-ff11-4c6a-abe1-ff0e3a506972",
        "cursor": {
          "ref": "b7657fc4-54a8-47f7-a3d2-bc060d49a705",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4f1c4997-5cbf-4509-b3a6-5b02a9c2fdb4"
        },
        "item": {
          "id": "6e2a663c-ff11-4c6a-abe1-ff0e3a506972",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d1f3fe88-bbee-4e7b-9f44-fda2c2bf3810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90c21f4-134a-4aab-b353-bfe5730e6ddc",
        "cursor": {
          "ref": "9f1c1b9a-3f7d-4550-aeae-288262f20ef8",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a3582d18-3c5f-4d40-b8b0-aa4c25c7cc97"
        },
        "item": {
          "id": "f90c21f4-134a-4aab-b353-bfe5730e6ddc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "539ac296-8938-4a7d-9a08-e520bf152ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bab6736-e139-4f39-a9df-4a9b809c4044",
        "cursor": {
          "ref": "80b08979-d6c1-471e-96f3-881b17e48030",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ccd46652-c298-46d8-b62b-45b14be9b897"
        },
        "item": {
          "id": "6bab6736-e139-4f39-a9df-4a9b809c4044",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "12ec8227-2b2a-4a22-b265-fe3badc3e46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf07d4a-3dd1-4159-a9ec-949271852b9d",
        "cursor": {
          "ref": "df2f8e61-666c-4ecc-8645-1132a2fbd6d3",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "beed8d0d-177e-4b8c-9656-d76bb466403d"
        },
        "item": {
          "id": "ecf07d4a-3dd1-4159-a9ec-949271852b9d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3b1b6d7b-3f4a-4c3f-b320-ba9bf98efae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb8fa47-3f03-49c3-8216-ddde7ad8d9f0",
        "cursor": {
          "ref": "10044d88-66a4-43ee-a530-fa81bafb1c88",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b7929bf7-d92d-4535-81b2-0521706c5049"
        },
        "item": {
          "id": "3eb8fa47-3f03-49c3-8216-ddde7ad8d9f0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "53030560-2f07-41a5-9330-a7095e99fe17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2d28f8-dc51-4df0-8040-cac637916045",
        "cursor": {
          "ref": "b5f49a00-a2bf-4eb6-ad1f-93c538580cc5",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "138cd8af-b78f-4109-9e79-0618cbf4f8e4"
        },
        "item": {
          "id": "9c2d28f8-dc51-4df0-8040-cac637916045",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "db23deab-02a5-43fd-b659-ab8068bb00e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b179708b-af45-4b30-81ba-1319ff8f91c2",
        "cursor": {
          "ref": "5ba27b2d-3f21-453d-8283-7cb08072e2ea",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2f045e50-1e86-4343-a137-8c759119b4c9"
        },
        "item": {
          "id": "b179708b-af45-4b30-81ba-1319ff8f91c2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e799fe21-d5bd-4ce7-bcda-e88f1c0df384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef488033-ec42-469c-9d50-0b0c755d37bb",
        "cursor": {
          "ref": "7cf590d1-5ebf-4828-bfd3-38c44ba1ae06",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8eb00089-84ce-43e6-8f1a-7157457434d3"
        },
        "item": {
          "id": "ef488033-ec42-469c-9d50-0b0c755d37bb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b4c63c8a-c8c5-4e46-95c9-b4946ee19395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ded460-be5f-4752-9ddb-7819f717fe84",
        "cursor": {
          "ref": "e76b2771-ae1f-418a-90ba-a79afd67f546",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8bc21b58-758b-4bb6-925c-999a2d32c1cc"
        },
        "item": {
          "id": "63ded460-be5f-4752-9ddb-7819f717fe84",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "00a8cebe-9072-4614-bc99-3ce957127719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a001617-01f9-40c2-b4f1-7666c662e61e",
        "cursor": {
          "ref": "a79a6448-7604-4147-858a-8d66b7c5c3c6",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dca1cb16-99c6-448a-bfd6-ce3003e2a7d5"
        },
        "item": {
          "id": "3a001617-01f9-40c2-b4f1-7666c662e61e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7cd73d75-677b-446b-95fb-985a381e1073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326b544c-7205-4c39-afb8-f67b8fd91f35",
        "cursor": {
          "ref": "320b64af-f7be-4e7a-810e-622e1936f34f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7fbdb3f2-cdb3-4161-acb0-0e46e988eea3"
        },
        "item": {
          "id": "326b544c-7205-4c39-afb8-f67b8fd91f35",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "43bbb326-047e-48bb-b54a-5031720dcd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559e7542-edf8-4503-a4fa-d9a2b45be780",
        "cursor": {
          "ref": "0f14dea5-c9da-40b8-90f6-302d963d22db",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "397905b3-48e3-4f1f-9157-554a2a03c84b"
        },
        "item": {
          "id": "559e7542-edf8-4503-a4fa-d9a2b45be780",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "24488b45-1599-43b3-8085-131f1a96b719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b11c707-502a-4bda-b97a-9841e4c4b12d",
        "cursor": {
          "ref": "04bc12db-206b-4fd7-9b06-88632c1bfb32",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4589c3e9-ac24-4c6f-8d96-782b9f2472d5"
        },
        "item": {
          "id": "3b11c707-502a-4bda-b97a-9841e4c4b12d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f0215b8e-056c-4b45-8ba1-a2c871d6a1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d575c8-ae6a-4755-a73f-a170b4784f69",
        "cursor": {
          "ref": "27c03865-3f1e-4443-83d6-04a8de4b9d25",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c8790ed2-7cb5-4565-8fe9-519929259620"
        },
        "item": {
          "id": "59d575c8-ae6a-4755-a73f-a170b4784f69",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3945ff53-9fee-439c-96e0-949eeddbd43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cbb2ba-c7c7-4f77-98d2-d8677e566d7f",
        "cursor": {
          "ref": "6a895af2-8947-478b-9075-e1d791f22408",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "08c56299-9975-41ad-9623-eafd61d3e518"
        },
        "item": {
          "id": "b7cbb2ba-c7c7-4f77-98d2-d8677e566d7f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "94f28770-ad44-4fb6-8329-733b50f45323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d294a84e-4bbd-48c1-8799-42857c23a6d3",
        "cursor": {
          "ref": "d7be5061-f9fa-43a5-812c-86397ca55527",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e3e4523f-c737-40f6-b426-f9b72e9b740a"
        },
        "item": {
          "id": "d294a84e-4bbd-48c1-8799-42857c23a6d3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5b8bcd2c-52b3-44ae-a547-c041d8437e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622a0f7a-823a-400b-9234-6ef0187e7646",
        "cursor": {
          "ref": "1f14e780-8b62-4334-9f22-b7d42d63e8ce",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "98902779-7e45-429e-bde9-d0ca34d66ebf"
        },
        "item": {
          "id": "622a0f7a-823a-400b-9234-6ef0187e7646",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f552e916-b98b-4fba-954a-626be45c8c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673d62fe-8446-45b6-a289-df454e4705aa",
        "cursor": {
          "ref": "b50eed4d-723d-4eff-91d9-d6a420402648",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "945651c0-59d1-4995-896c-dd299cd4ab7d"
        },
        "item": {
          "id": "673d62fe-8446-45b6-a289-df454e4705aa",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "404be285-f22d-4ed1-8e3b-462e0e2224da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8badd6b-4eb5-4e0f-a289-d86f25f57e57",
        "cursor": {
          "ref": "ab355bb6-2ecc-4701-9f5d-3562cb340415",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c75f29ec-46b6-44e7-89fd-301be1f857ca"
        },
        "item": {
          "id": "c8badd6b-4eb5-4e0f-a289-d86f25f57e57",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2b1e9936-f167-4f6a-aba2-6dcccb4c8fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637891b9-ccb6-4418-a39c-f1c4dd14c0c0",
        "cursor": {
          "ref": "1c2c3709-b143-4828-a556-88994085cea0",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bd00a533-0004-4ecb-8ebe-fd55e74dc3e5"
        },
        "item": {
          "id": "637891b9-ccb6-4418-a39c-f1c4dd14c0c0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "67cc3a24-3e2a-4da0-990d-bbad3a9d32df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3954df6-8899-44fa-90a3-c225562cb799",
        "cursor": {
          "ref": "02a6d4cf-f144-48d6-89f9-cf7fdf9d8e98",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2b8f8267-6249-4caf-91c1-2674a0e90676"
        },
        "item": {
          "id": "c3954df6-8899-44fa-90a3-c225562cb799",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b13746c6-c151-4696-8045-f7336fd6b278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40af05af-fe80-44a6-b106-99c71a3baceb",
        "cursor": {
          "ref": "9fad5b25-7ead-428c-aec3-6b4c5723c39f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2cbac3cb-e7af-4353-ba09-7154a91d39ed"
        },
        "item": {
          "id": "40af05af-fe80-44a6-b106-99c71a3baceb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "af5457f4-a35e-49e5-ac56-02e6d7efadc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149e4571-50bc-4b0b-b373-2dfc23116483",
        "cursor": {
          "ref": "3fa5f2e2-2b7c-4d44-9cae-aae8f9d96597",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "50d57ed2-7880-4c00-9725-f625521a818d"
        },
        "item": {
          "id": "149e4571-50bc-4b0b-b373-2dfc23116483",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "33112d97-9c8e-41d1-ab83-c70b7675c83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e989a1b4-226f-4632-8969-fac1d97acfbb",
        "cursor": {
          "ref": "852fe850-d377-448b-a0d6-192de8259fca",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e6a1e098-2ab9-42a2-abe5-2be3534b7220"
        },
        "item": {
          "id": "e989a1b4-226f-4632-8969-fac1d97acfbb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3dc0bcce-3d4b-4240-ae15-e560748be0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce39f92-a369-4fa1-b5a5-ea0374296396",
        "cursor": {
          "ref": "198df5df-3394-4e06-9a61-54b326ce8f11",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4cb63289-3a5a-4b5e-8ded-faf16bca334b"
        },
        "item": {
          "id": "bce39f92-a369-4fa1-b5a5-ea0374296396",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "711c0b52-94c2-4acb-bdf7-b8135fd431e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960efa14-c63e-4de4-a1f5-bf184717ee0e",
        "cursor": {
          "ref": "893539b7-d767-4995-bacc-5e37e805216c",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f8ca4f2b-1a8b-493e-a026-eff9cc2796a9"
        },
        "item": {
          "id": "960efa14-c63e-4de4-a1f5-bf184717ee0e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "103d7e4f-8012-44f9-82cd-5ff29b70435f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b10f3d-2d14-4e3f-9211-ecbac0968d7b",
        "cursor": {
          "ref": "b94a8a3e-acaa-4ae8-9a11-d416e1eb62ae",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "906ba0c6-5086-4ea0-b495-c3e0adade2db"
        },
        "item": {
          "id": "d9b10f3d-2d14-4e3f-9211-ecbac0968d7b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ef21eb32-06ea-4723-b893-61e7d83d35ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc8ba4e-ae7c-4b0f-9837-d6930bb8242e",
        "cursor": {
          "ref": "0eeaabf5-d6a9-4f76-b9ea-a287a1d56b99",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bc2b06c6-5694-45a1-862e-7c85062baf8c"
        },
        "item": {
          "id": "0bc8ba4e-ae7c-4b0f-9837-d6930bb8242e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c7d16132-7de2-486b-9ae1-f2490c851247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bde09e-6613-4ad9-a186-d24b627d8b60",
        "cursor": {
          "ref": "4157a8aa-6c62-43c7-b53a-58d843664457",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "76c13a62-0f89-4a59-8282-d18dd54d42e8"
        },
        "item": {
          "id": "94bde09e-6613-4ad9-a186-d24b627d8b60",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b07298e9-259a-49b4-9a3e-f16ee71d72af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2a16b3-edb4-4a6b-946b-78860769b6e6",
        "cursor": {
          "ref": "3b20f811-3841-4260-b02e-4170480ebd21",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4753d0ce-7bd0-4199-9774-3e819bf22e33"
        },
        "item": {
          "id": "4a2a16b3-edb4-4a6b-946b-78860769b6e6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "44bf8a4b-040d-4ad8-b1d6-a91a7bfdbe02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495bd6fe-f939-4d87-964e-6311e7b33d70",
        "cursor": {
          "ref": "6ab86e8b-aa73-424d-bb1c-7792553aa0b8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3b2f59fb-164e-444b-a40a-68d73de49db4"
        },
        "item": {
          "id": "495bd6fe-f939-4d87-964e-6311e7b33d70",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ab8631d6-c8fe-43a1-a235-a96ed9c8bc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d063065-e422-48ad-9637-fd22d66c1335",
        "cursor": {
          "ref": "9c7ba757-ef77-49db-ba4e-8bbc318bfbe2",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e68062ec-229d-4a61-b483-981cda853e86"
        },
        "item": {
          "id": "5d063065-e422-48ad-9637-fd22d66c1335",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4b27a27f-66e6-424c-984e-d3dfa63aa11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e63fc96-2de0-49c6-9290-60f682523274",
        "cursor": {
          "ref": "b5dd9aaf-ef5b-4c14-b079-ceec2d273861",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "812a9909-c4c4-46cc-b531-45b58094aec0"
        },
        "item": {
          "id": "7e63fc96-2de0-49c6-9290-60f682523274",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3bc7c730-c30c-4f4a-b69f-825c8dec15ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a06dff-1ca5-4be4-9f24-a1166dc2da57",
        "cursor": {
          "ref": "4b2a0ac7-4a73-4e9b-99ae-f482148ba6cc",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5a3f5d96-83e7-4436-8be5-90d061fb1ff0"
        },
        "item": {
          "id": "92a06dff-1ca5-4be4-9f24-a1166dc2da57",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "53bcd38b-d779-491e-a51e-b5336514c5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a514f688-5c98-4fa7-8422-7a700f5fbb6a",
        "cursor": {
          "ref": "31871690-b44f-48b4-b88f-be8c74d58358",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2c874e49-af43-4ecf-8817-debc3b3f80d9"
        },
        "item": {
          "id": "a514f688-5c98-4fa7-8422-7a700f5fbb6a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5311015f-31cc-47ac-b794-cd69683efc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfbbec3-cef1-4770-8871-691a533bb528",
        "cursor": {
          "ref": "00ad93f0-f255-48d4-8d1e-050b7057a1ca",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "18892b1e-24a1-4a0d-9f08-006d7474e425"
        },
        "item": {
          "id": "3dfbbec3-cef1-4770-8871-691a533bb528",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "92426528-979a-4188-89cc-dd03ea41062c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80e1326-a8e7-4163-ad98-61b0f3f33e2f",
        "cursor": {
          "ref": "2c5edadd-9e77-45e1-88df-84d346921371",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6bc1d48e-b2de-4291-974b-ee95fb88d277"
        },
        "item": {
          "id": "d80e1326-a8e7-4163-ad98-61b0f3f33e2f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5ac5efb5-898d-4bd9-bcaa-85db2424537a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668b2770-0728-4954-856c-2887f228e31b",
        "cursor": {
          "ref": "bd1b816d-4b05-42cc-83c1-8d7e6df55fb1",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a8a1c294-3327-4b53-865e-23028cb68797"
        },
        "item": {
          "id": "668b2770-0728-4954-856c-2887f228e31b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a8241e66-f840-4495-9544-a74530102511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a908cb-ebd3-451b-9e6a-2a743c620c32",
        "cursor": {
          "ref": "5981ded2-d8ab-40ff-9069-762f71801acf",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fba5f725-61ae-4c52-90da-6d8a7b37329e"
        },
        "item": {
          "id": "60a908cb-ebd3-451b-9e6a-2a743c620c32",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b1e942ec-90b9-42d9-a547-660ecc818d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87016ddd-7a7f-43e8-82cb-efd8a4d8103f",
        "cursor": {
          "ref": "4de1d066-f238-4953-842d-485f5413eb71",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "96c3edac-1762-42fa-ab55-48d3ca80adef"
        },
        "item": {
          "id": "87016ddd-7a7f-43e8-82cb-efd8a4d8103f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4160b6c6-3fc2-4c6d-a3e6-59db82d1cf38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e2caf2-071e-4412-9600-9886891245ca",
        "cursor": {
          "ref": "2d9c999a-ebf9-4b63-a015-4ed808073431",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "67d82b8f-6644-4096-9051-3ee25c196802"
        },
        "item": {
          "id": "e5e2caf2-071e-4412-9600-9886891245ca",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "14fee12b-4112-42d9-87e4-755dcaba081d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f755cb82-05ea-4f27-806f-158941a1971e",
        "cursor": {
          "ref": "c9e474f8-500c-44be-86ba-33d343a32a87",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b9ac513b-5402-4770-a9a6-c65ef219ad34"
        },
        "item": {
          "id": "f755cb82-05ea-4f27-806f-158941a1971e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4bf6611e-a3c2-4df0-a881-01407f032bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54364d33-30b6-4e09-8cd3-bb24cdfa759f",
        "cursor": {
          "ref": "57ea62f2-1a10-44b9-a89a-fe091ef15669",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2e809132-6be8-4220-b0de-28e5f2a8514c"
        },
        "item": {
          "id": "54364d33-30b6-4e09-8cd3-bb24cdfa759f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "253e05b1-f60b-4647-8376-b7b5af2b17b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11e0a51-08d0-43d6-b579-53878e8dc9ce",
        "cursor": {
          "ref": "c47718ee-d5c1-4085-9127-5f90b44c437e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9f9c1925-50e5-4797-a9f8-037bcf4d7b13"
        },
        "item": {
          "id": "b11e0a51-08d0-43d6-b579-53878e8dc9ce",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8b083608-7898-4478-a68b-7e4bf30d4df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97092af0-0195-4c59-a180-7b0302c68e37",
        "cursor": {
          "ref": "3263474d-9056-49da-9dc2-b260dceb63eb",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c2f42d21-1a31-405a-b3be-8bb9881297a9"
        },
        "item": {
          "id": "97092af0-0195-4c59-a180-7b0302c68e37",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dbd81f33-2a1a-4c3f-aa21-620e08768e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5477817b-de5e-47ff-ac57-88766c4965e9",
        "cursor": {
          "ref": "89a8c6d4-8e94-4a9d-acac-ce9f54576785",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9599ffd7-dfe8-4a26-98bc-91ae4b37fcb7"
        },
        "item": {
          "id": "5477817b-de5e-47ff-ac57-88766c4965e9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "36bb4ea1-e246-4aed-b292-5109ba6a03be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbea1bc-1d72-4d76-8c68-06672d3f264c",
        "cursor": {
          "ref": "e2f74fe9-71aa-4a13-a7e7-156d26cc7a43",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b4622898-1933-424b-8276-a3d7d6afeea3"
        },
        "item": {
          "id": "6bbea1bc-1d72-4d76-8c68-06672d3f264c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a3b64096-ff13-4543-b471-31fd0394d6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ad3bcd-788b-44da-b433-23e0ba1b1baa",
        "cursor": {
          "ref": "3a187240-06e1-43fe-bc34-8f962c652848",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cbf74751-8133-43f6-9497-dbba5b16ab34"
        },
        "item": {
          "id": "d1ad3bcd-788b-44da-b433-23e0ba1b1baa",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2c2a6841-4790-4d9e-9f3e-d8aff900ad7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09a0154-813f-4dbb-bab2-b7d6db026a66",
        "cursor": {
          "ref": "422f95ef-1ed7-4712-b8b5-adad9c49ee6b",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "403b796b-afe7-4b0b-b883-f201e1fcde38"
        },
        "item": {
          "id": "f09a0154-813f-4dbb-bab2-b7d6db026a66",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f9a8f2fa-c7d4-4f02-9e8e-4e6e9df1468a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234e3e5a-9a6d-4e34-b3f3-186a0f1172dc",
        "cursor": {
          "ref": "c2cff3af-c228-49e2-ade2-bf388f91466f",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4d10da53-5398-4893-9330-d50cab997dbc"
        },
        "item": {
          "id": "234e3e5a-9a6d-4e34-b3f3-186a0f1172dc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dcae7915-5d0d-42dd-8a2a-066e6b18c88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59658a4a-57c6-497b-8339-4e615c283de2",
        "cursor": {
          "ref": "256c39ec-c78f-4d0e-a280-7f9345538111",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ec815b5d-5d9f-4575-9f1a-7745d5cea043"
        },
        "item": {
          "id": "59658a4a-57c6-497b-8339-4e615c283de2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7d438b57-d244-4dee-b78b-8902888d7e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b048b931-6b67-40bc-a3bc-5d6fdc2127b2",
        "cursor": {
          "ref": "84794451-58e6-4322-a846-f4a86b7dc9e2",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4ab6d980-3078-4ddc-b54f-ddff84a3e9b1"
        },
        "item": {
          "id": "b048b931-6b67-40bc-a3bc-5d6fdc2127b2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9e243f8c-487c-48a3-a70f-e20d61705f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2430fb9c-e07f-41ed-9013-46c02b7feca8",
        "cursor": {
          "ref": "43a8146c-9c60-4ec1-9cf9-c090be7ed13f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "fd26e977-35cd-456d-a986-d54516fc81da"
        },
        "item": {
          "id": "2430fb9c-e07f-41ed-9013-46c02b7feca8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a68ae788-f310-40dc-bfdc-d2687905c42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276eed35-603c-4ec7-86bd-31442e2e6a92",
        "cursor": {
          "ref": "27176a88-e86b-4fc5-96bf-1ce9cd65966b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f6daeebc-dbb7-4a09-a571-fb89f14d7188"
        },
        "item": {
          "id": "276eed35-603c-4ec7-86bd-31442e2e6a92",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "69a271df-03d5-4c0d-a3cc-f8a0b5be8bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b947d7e4-86ad-45d9-8507-2e041d285969",
        "cursor": {
          "ref": "c1a4366e-fa20-4593-938b-df31fa1b0899",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5578ce0a-7b3f-43e2-b6f2-726a3592a404"
        },
        "item": {
          "id": "b947d7e4-86ad-45d9-8507-2e041d285969",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4bfaf569-b223-4783-a2c7-513bf49eeeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426a9964-0339-403c-b11e-b6d57ac9bc94",
        "cursor": {
          "ref": "17c327cf-fe3d-437a-82ee-f221777bdfad",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a70f4079-0dda-4a04-b1c4-79bba337ccf0"
        },
        "item": {
          "id": "426a9964-0339-403c-b11e-b6d57ac9bc94",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ac34ee70-1a0d-4d25-b2a7-7384c01c7b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6023d8ff-01bc-4bdd-b4ce-87ad9cd7b120",
        "cursor": {
          "ref": "76bd116c-6651-4a7d-8ba6-50105aa4c19e",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "75bb124c-7e3c-4afd-9c31-e54291cc3359"
        },
        "item": {
          "id": "6023d8ff-01bc-4bdd-b4ce-87ad9cd7b120",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c7bb755a-e3b4-4a00-9b66-80d09ffc776a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa60756-4e8f-47fa-af6a-39bfef9d8e65",
        "cursor": {
          "ref": "b0647ba6-a4f5-4b7d-a34f-c09c1579e319",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "733f0fb0-9d71-4950-b0c2-821d0da9a174"
        },
        "item": {
          "id": "dfa60756-4e8f-47fa-af6a-39bfef9d8e65",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9f4497c5-6801-429e-a66e-eb18e167ff0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e62030-847a-4664-842e-5d8f78ae6c04",
        "cursor": {
          "ref": "6f989adf-e8b7-48de-bec3-721488e17847",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "fe2e568b-09bf-44f8-9078-d922271e8d29"
        },
        "item": {
          "id": "51e62030-847a-4664-842e-5d8f78ae6c04",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3f2b5600-a7cf-4a22-bad6-59d31a47b788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aae3e71-4fdf-4a25-b8a7-4b89d7a53461",
        "cursor": {
          "ref": "bf6071ea-d7bb-4cd3-bc6b-b36424b964a4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "80159288-3295-4e9e-b76d-8fa2fd1ecf08"
        },
        "item": {
          "id": "2aae3e71-4fdf-4a25-b8a7-4b89d7a53461",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "17e4db60-6c52-4314-980c-3d4295fb168d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34d0256-c87b-4aeb-8069-85ae45115aeb",
        "cursor": {
          "ref": "14983306-48da-4466-8576-e0a6e311d444",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "fe2a8af8-4206-4338-971a-c7695e5c26e5"
        },
        "item": {
          "id": "c34d0256-c87b-4aeb-8069-85ae45115aeb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8ef233c3-2026-41ed-8b00-98cb84df5a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac61244-b859-496e-9ba1-c241d3a82331",
        "cursor": {
          "ref": "7745afab-e602-4221-90ea-ad28df2a4ff7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "907cbd4a-a84f-40cb-9f93-e6ae8df9d0b9"
        },
        "item": {
          "id": "5ac61244-b859-496e-9ba1-c241d3a82331",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9fac65a1-f42e-4b18-ae7f-5b6bb4f356c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657eec77-da06-4cdf-bd68-fd07f6e09c12",
        "cursor": {
          "ref": "45501e08-78cb-4faf-9fbf-45375a7408d5",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "31543072-0814-471f-ba94-df441e7feeb5"
        },
        "item": {
          "id": "657eec77-da06-4cdf-bd68-fd07f6e09c12",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0d4af0e3-fdf0-402c-b155-50cc350258c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066711cd-0bfe-45df-8d2e-d8efa9f56cd5",
        "cursor": {
          "ref": "e8b2a51c-4711-427f-9336-7575267e63f6",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "95e602db-5ef8-4b7f-a3e1-c649cbb60fac"
        },
        "item": {
          "id": "066711cd-0bfe-45df-8d2e-d8efa9f56cd5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "23528a1d-bbed-410f-8107-f3b521852bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39bcbba-3a35-45c4-b6ad-ea79543c9cef",
        "cursor": {
          "ref": "fd10df10-5f2a-4f94-9807-ac4995e4fbfb",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b4721a32-66e3-4f90-abc2-fe4438aa9277"
        },
        "item": {
          "id": "f39bcbba-3a35-45c4-b6ad-ea79543c9cef",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d0fb1628-603b-4d16-9726-b3e6fe4f9c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184b679d-d446-49b0-828c-6ba635b6031a",
        "cursor": {
          "ref": "435c46e6-6989-4dcf-920a-7cc3bc8e8e0e",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2d7df7e7-7207-4cb6-9b75-9436aaaa1523"
        },
        "item": {
          "id": "184b679d-d446-49b0-828c-6ba635b6031a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "eb18d426-da44-4ba1-ac38-0b165b491adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02935ee2-4b86-4532-9a4c-febd46a752ff",
        "cursor": {
          "ref": "9daecf24-a511-4e14-a637-bfd53480ec93",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a70042af-962f-4484-a295-c561e70cfb03"
        },
        "item": {
          "id": "02935ee2-4b86-4532-9a4c-febd46a752ff",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d2aec0e1-3464-4404-929c-006f4a424f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0217b58a-750c-4d29-b183-ff5cba71adf1",
        "cursor": {
          "ref": "77df8687-89ae-46c0-a804-d493dad5fc26",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d65ddde0-08a5-4037-80b8-9014aee3d376"
        },
        "item": {
          "id": "0217b58a-750c-4d29-b183-ff5cba71adf1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3990f244-3f35-44fd-9f7e-bddfd4758867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe67db4c-37b4-4839-9894-e6eca8580f1a",
        "cursor": {
          "ref": "8a017e2e-af7f-4798-87a5-616daeb75edb",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7f1da576-78a4-4dbd-91d5-dcec902571d8"
        },
        "item": {
          "id": "fe67db4c-37b4-4839-9894-e6eca8580f1a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "39f7a108-39cb-4f08-859f-e26bc30e2d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e526e05-fbe6-453d-9671-e61a2ea781b2",
        "cursor": {
          "ref": "b8769dd4-594f-43dd-b300-68647e141515",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "244d10ad-5197-4bdb-a30c-418b79e28ca0"
        },
        "item": {
          "id": "8e526e05-fbe6-453d-9671-e61a2ea781b2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ac3cd7e2-f817-4a85-8470-07935f356efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7ba34d-f2f9-4203-88a5-46c99c6a3899",
        "cursor": {
          "ref": "cfd8052c-28b6-4fc7-be92-983b7fec4352",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "61c9d5e2-6b55-4164-acea-222c1fc778c3"
        },
        "item": {
          "id": "1e7ba34d-f2f9-4203-88a5-46c99c6a3899",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "24c56e15-f35e-4761-aa08-866041e85c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec9c3f9-5e41-4284-bb2f-eca149b73c39",
        "cursor": {
          "ref": "4582524b-f854-459b-89f2-e79d479d2728",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "253861d5-bb40-4bcf-a113-a9d77c81d45c"
        },
        "item": {
          "id": "1ec9c3f9-5e41-4284-bb2f-eca149b73c39",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3a57eb2a-481a-4d1d-8736-ab6d86b6fe4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e7e82a-a96e-45c6-8f2a-bfe8b440398d",
        "cursor": {
          "ref": "d10f4d0b-c510-4197-9f1e-249dd7a071c5",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7fce7a99-873e-46f4-87dc-0dcf999d2794"
        },
        "item": {
          "id": "48e7e82a-a96e-45c6-8f2a-bfe8b440398d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "793ed4c5-0fae-46fa-9a99-796dbb2abf0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8d4de7-20ef-40fa-a073-ff69b8ef7f83",
        "cursor": {
          "ref": "6d3e2841-a84d-4da3-8dec-8e946f2d092b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9f8f5e98-3a5c-4323-91b5-897251223d2e"
        },
        "item": {
          "id": "4e8d4de7-20ef-40fa-a073-ff69b8ef7f83",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b78240f5-e64e-48fe-b619-e546a02f6a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7a68b4-854e-4625-af46-9e76cba6cd13",
        "cursor": {
          "ref": "24a04e39-180f-46df-81d2-faec94e4b140",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "931d31d1-7092-42da-9bb1-25ea8ebad89c"
        },
        "item": {
          "id": "2c7a68b4-854e-4625-af46-9e76cba6cd13",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "83cfff80-f5b4-44d7-9ed8-7e3cefcc4b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01658191-5e87-4c94-a53e-ab12aa989c93",
        "cursor": {
          "ref": "e1d1eb1c-e172-431b-9a3c-eda424af6aa8",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "feb08b27-7511-493d-abdc-8b12f146fb31"
        },
        "item": {
          "id": "01658191-5e87-4c94-a53e-ab12aa989c93",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0748f2de-ac85-4686-9da7-b878d83e187e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32b0ed0-5c20-48d3-8dbc-8144b170398a",
        "cursor": {
          "ref": "579acd02-605f-4432-bfe8-3eed0e7f1374",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "efb1a39d-f549-48ec-b763-215e8ba92471"
        },
        "item": {
          "id": "c32b0ed0-5c20-48d3-8dbc-8144b170398a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e642098a-0036-40f4-aecf-466f9086c25b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0498de00-bc9a-4687-b79a-d779babae17f",
        "cursor": {
          "ref": "55f2aaa0-3394-4326-b787-aa170fdd586d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5b0bde69-606b-46b0-9a8f-5786f8fc225f"
        },
        "item": {
          "id": "0498de00-bc9a-4687-b79a-d779babae17f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9001858f-8e59-4d98-b6db-071827c7632d",
          "status": "OK",
          "code": 200,
          "responseTime": 123,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c97efc-f235-4e0f-b9e5-bee1ee2ee114",
        "cursor": {
          "ref": "67cd4b9a-f923-47bd-82e1-b2cb56ff7dba",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "87e9b6c8-ab4a-4c15-ac57-11ed5d848c31"
        },
        "item": {
          "id": "91c97efc-f235-4e0f-b9e5-bee1ee2ee114",
          "name": "credentials_verify"
        },
        "response": {
          "id": "452ac1ab-5b08-4763-b34e-939c12490092",
          "status": "OK",
          "code": 200,
          "responseTime": 1357,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac21211-52f9-4027-ace2-5b9a7a66be6f",
        "cursor": {
          "ref": "f8176e0e-9af9-4a4c-b644-eabe5e5e32a5",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f9e7ddab-0e83-417b-80b7-babbe4b60542"
        },
        "item": {
          "id": "7ac21211-52f9-4027-ace2-5b9a7a66be6f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e4e74923-b11f-4bdd-947b-bdb383420de4",
          "status": "OK",
          "code": 200,
          "responseTime": 1276,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb28258-e5d3-4e44-b409-b0111279de5c",
        "cursor": {
          "ref": "1fc8249e-dec5-49ce-93d6-8b6f31f1d712",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "651780dd-0987-459d-ad9e-8c7ddb6e7b0a"
        },
        "item": {
          "id": "beb28258-e5d3-4e44-b409-b0111279de5c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f85fb1df-40f1-4966-99bb-3e601cb07739",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb28258-e5d3-4e44-b409-b0111279de5c",
        "cursor": {
          "ref": "1fc8249e-dec5-49ce-93d6-8b6f31f1d712",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "651780dd-0987-459d-ad9e-8c7ddb6e7b0a"
        },
        "item": {
          "id": "beb28258-e5d3-4e44-b409-b0111279de5c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f85fb1df-40f1-4966-99bb-3e601cb07739",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21e09cf-7434-45bc-955e-08f1f7ab5a98",
        "cursor": {
          "ref": "897cdd00-e382-4686-9c52-4ac1ce1093ca",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "07502cfa-e8f6-4cc2-b615-6df9d625dbb7"
        },
        "item": {
          "id": "e21e09cf-7434-45bc-955e-08f1f7ab5a98",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dcb3bb86-746e-45a3-96f8-2fb80c134108",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a674b33-b2ac-4ff7-bf93-42a4975b6296",
        "cursor": {
          "ref": "5f774422-97f2-44ea-b9a0-50e7186b2b24",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "fc3b77bb-9b33-413d-81e8-3cbaa492e931"
        },
        "item": {
          "id": "2a674b33-b2ac-4ff7-bf93-42a4975b6296",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2f98a88a-8cd0-47eb-9bfe-f4a508274851",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}