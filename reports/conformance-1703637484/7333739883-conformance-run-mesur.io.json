{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "44ae3813-9143-434e-89a0-c00c22cbb345",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8d540659-a6c4-4990-b50e-5991520b80a2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fd168cca-40f2-4beb-83b1-cfcf6c6820e9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "656aabff-ac29-488b-b975-241ccd93df37"
                }
              }
            ]
          },
          {
            "id": "e5461519-1075-4c66-81e8-d611800ef9c6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c9a9af6-273d-4f24-adc8-200325c8cf7c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7f5e424e-de99-48cd-b6b7-2f00ceaea5fb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "73c7d101-be2f-4253-ad30-93c7a27e3e83",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2ebc309c-1a43-4c4e-b04e-213b3e72f7aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4ae01bef-b5ec-420c-be98-59557ac2d947",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6953ef02-904e-48fa-b222-347151f11bdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f2308a9-9772-49fa-94df-6199eb877eda"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3cc74ca4-b9d8-4372-8035-c908ff22d7f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b363b14-f378-4ba8-97e8-43cf9deb3a43"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "983ec007-d3f3-448c-85ed-aab673a4ae9b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7273ac3b-677d-4f5a-af9d-77afd5f21ce5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1be3c4c-100d-499f-ba1e-52266d77e82b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c7f45d11-bdc4-4b50-b7f6-33aaa7392f07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "815a6380-3831-47b2-bccc-606ec83a9851",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a434041-741c-4abc-b3b6-b7a126119b86"
            }
          }
        ]
      },
      {
        "id": "c2012d0d-7ff0-4065-b6ce-082211ad761e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "701d1957-5051-4b1b-bf71-a30e854e9728",
            "name": "Negative Testing",
            "item": [
              {
                "id": "749148f7-78bc-4552-a036-ac379dde7709",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "10edb96f-a972-4d58-a7ae-001563fd9862",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefa20a9-dd53-445c-9816-3dbfc5155e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab1e6629-8405-45da-94a7-a571bb015be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8404c83a-3977-4ecb-8763-278a6721e472",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0177eefd-511a-4f04-bf4d-a83219d540ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a0d9536-ee9e-4c17-b6fc-3a1b1fa97085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac692a92-ace6-45d4-9df5-2fb1b46f6a37",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b6367a-f911-4416-8cb3-35118301a470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "587c3398-2df3-4033-a20b-17db4969d8e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8d16816f-8700-4305-998e-54712da103f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5fe436f1-a04e-466f-851a-a12980d0f903",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a54c589-ac5c-45d2-9de9-7e1edffb5f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b1d6db2-8bde-4b1e-882a-cd9cc27aee60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c353a7d9-9bf6-402d-a9aa-ee728241ec3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1166228c-d264-4b0b-8060-6ae88295810a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "03a39e9c-a75a-46b9-b861-73daaa1a30c4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2d9c1f39-a2be-4d85-b9b4-021f38f62f2f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a4d3bcf-809e-4b25-ade4-4d01189406d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7744dafb-e660-4eca-99d3-38996c2c10b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91787907-72aa-4e55-9be3-2134d05ec39e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a25efd2c-927d-4035-bade-a39ed6f4024d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04121905-27f6-4716-8033-92243a4a002c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58060b7c-cb08-4341-89a7-6334541c4346"
            }
          }
        ]
      },
      {
        "id": "0f00eeb9-37ff-4465-9017-3059837d9d06",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "39246d1d-5f89-4e2b-aad1-38574ae00c33",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e44c67c2-1188-4ce3-9e72-573889998615",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "86d9bb8b-ca1e-4580-a350-699055224b5c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443415cb-65b2-4d88-8b2e-e63704a32a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310b9bbc-c09d-4bcb-808a-53ae4b774ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385ff3a3-41bd-4953-99f9-b7d9fc288b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "767dba81-d933-4c36-96f1-82d6fd7d463e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3660a648-5455-431e-9e3b-c7f9da52f26e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9227f802-2bdc-4f0c-8759-832231d5c669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7965c1ed-b8b9-4cf4-8f2c-1452f25401c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6133c67c-db15-4434-a4a3-1ba272a58588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c126993b-c7e2-4e67-9572-e182a0599c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48207744-983c-4c2d-94f4-4c0e109c24eb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3969ba5-1a66-4029-85fa-e3ae5cb92e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e09e08-d60c-44bb-a344-f136675c1786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ab7afa-40b4-463f-802d-42dd8733f03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54d5154b-fbcc-4983-945e-b73e3392aa0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0696f64f-20c4-470e-9ad5-77cf9fa7a76f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0334621-7ad6-433f-85ef-f3e440d833ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c14bedd-5b33-4ac9-bc08-39d56f6af3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689b0bf0-6a67-461f-83e6-2c31b7316ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1737d492-6586-4e20-bb96-8d4d87800643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39bb402-ea28-4578-a761-d5065347c78c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e52e4b-b40c-4cbd-ae9b-49bad1fd7fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f2dae8-92ac-4857-86c1-60262f20d265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec04ec7-1cb7-458b-816d-82f99aa66354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c30ef68-1b7c-461c-be91-2556c9a4e6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe815d19-f516-425c-a6c6-be8dee31df7c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0e168b-5d89-4f4c-8216-599dba9b997e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52a5769-76a4-40d0-97ae-338488564142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceba9946-6ed7-4c9c-93f2-8cef051b5b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "435d304e-da42-4701-baed-da84cd6c4a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29cb1f6-7c32-4bef-a915-5336535a9e5f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd5725d-38f1-41d6-a252-229a938a3886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50a5d93-345a-49ff-bacf-5053fca4aa9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ad4246-9ff5-434e-a635-cd82502feb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6570a9f2-0d34-410c-95a2-421dc97b1103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd54e02-de30-4f9a-949b-947b914e867e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feebdc60-0b1e-4f0f-b6d0-f096fbd3c84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4155e9-3e16-4391-8632-53c2e67d534f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2df465-e1d0-403b-b370-70587d4c088d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5cad32f-e57d-409e-96a5-63c2de0d1062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbc1ae5-d128-4e59-a8e1-c9b3fdd7c021",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaef4bc-1282-47fb-8af3-008e085c4973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a777d70-eea0-4bf4-8abf-f71cd1ed8b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110ffdd9-ad77-49bb-873a-4553c8ed1751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f809362-ff69-4abd-a4ca-c7f11b1e265f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e384676-dd93-43bd-8fbf-9ec1945a5aff",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338fbf2c-3c33-4ea9-a98c-20cab6590679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22488ef-9563-4a33-bd1a-04c15918be74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80704956-897a-44da-987d-0d79a098fa26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f14774f-4727-4875-8ee1-321457012c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823e8ab0-5cdb-4ab1-9833-01e39f27b96e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7a890c-8b36-4c48-b678-00b74377d34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c256f2-6501-4ec8-a831-8025f2c64456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337b56c1-333b-486a-8516-c469bfe61c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f01275e-468b-4e60-902a-04407a928290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b18a427-35a1-42d5-9450-fe29d0b64a89",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4395e296-8da3-47bd-9f06-8d97d44bf318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb3ea93-8b4d-470e-b48d-d9e632f0677a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845dcd23-64b6-4e85-a761-75bf433bd54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02b5a5c5-6ab1-4d2e-ba2c-fda6cb0179a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd76112-ee8d-449d-826d-15787320526f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc12013-f6c6-4458-93a3-b4dbeb970faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a94a67-b87e-4842-87fc-8131a7640db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5e70d7-ed6c-4f24-8240-1813da6889c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8ba082e-f409-487e-8d59-58401becfdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e64426-715f-4276-858e-5d98969a0b9f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef8bdab-c5e5-4f90-b14b-9040dc1c0efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead9cf03-c2be-432f-a6bc-6548b83519a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3906f0e2-569b-40d8-b0a6-e744cff4a5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17bd0aa0-17f5-48e4-907e-a69202da5bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef76dc7-c44b-4067-8e78-f8522a0ae4f9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcfcefb-7863-4ba6-824c-c053c2972f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790458dc-0368-432c-87f4-d5beb329499e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b910fc-0a35-4b93-80a7-b6da56ba2e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9635882c-c544-4eaf-85a9-413b0210a359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320fe36d-204b-4278-aae0-abdc99765591",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa56917-3134-47d4-84f3-9a3b7d2d3aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383fd978-f3a3-4cd9-ba86-176451a09efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6378c5a-a89d-4079-97df-81c179913cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20f8c5fa-30b0-4696-8d10-e6835c4ba2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eba828f-0a14-4bcd-a283-ba79878512f3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45f8db1-3cf4-464c-8255-efd6a162be84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935a7548-031f-447c-9813-8307a2dfb92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93136cbd-4a5a-40e2-98ab-0631d5b4ae93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d45779c6-e2ea-4c9d-8a7f-adbd91010b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77fa95c-5a1c-48b4-b457-d50d02df3087",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d075a4-799c-4986-83f4-30d5e8f5a94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26af282b-2fa5-42fe-b9fc-51c6732180dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0f5160-f587-4b3c-927c-79b9a367caf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "41193c3a-b81b-4366-b6bb-dd7590b25d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d6af44-bee2-4c53-9fe2-7cdddf8c6d4c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5500ba-1486-4315-b630-550e22b10caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111a1a2c-f21e-465b-b11e-6eb7c84b5c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c5faad-454f-47fd-ba05-1f8a3903d087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e18d5d8-5aff-4197-a306-252b6f582d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae893c2-33fa-4c30-8559-c13dd0aaff98",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb405d83-a9cd-4913-9cef-cfb00c40868b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1f716f-3d73-4804-8962-1fcfac16c625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22156f0-6b01-4576-9d53-5fb0b2796b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be628299-7f96-44bb-b635-ccca867aa833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2147be-4b2f-4a48-9690-f75801d98b28",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac32464c-5cbe-4592-8862-04c121f2808a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887111dd-a9b4-4b01-ba1c-e87b12f384de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a02a55-e90f-4e2b-9f03-df721bf2c7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f91f33bc-bfbf-404b-83cd-52056b826c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9caa816e-e5d1-4a8b-b5c8-d3c38cb5dc7c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e990d326-baea-4fd0-ba5a-279d049108b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93cc3997-bb6d-4e1e-ae4f-953d75962b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bd06e0-2b11-4114-b864-59096abbc530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e136d10e-0738-41a8-bd58-0759b3001966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbaac38-f6f4-4e23-afee-a24fcf594959",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccb889c-7615-4cb4-86b3-b0cdb1b55b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c160cae-590e-45d2-acec-147089997d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd771613-14f9-4fa0-814b-42180dd55d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b21937ff-18f3-4344-a36a-ce4a6bb38ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f678bc71-9ac2-4ba0-bd41-4ef2beacdeab",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24935efe-0ea9-4f29-8bdb-6069d115805b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b6321e-99b2-4926-b4d3-ef508a82feb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b55c425-e035-42e9-a3c3-ce4f52662a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4428726-b1aa-4a41-8f4e-a902cac4a317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858969e9-0118-412e-a5cf-d412a152789a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3e9d88-dfde-4366-aa58-501a6fff8c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e48f91-3b8f-4e28-a74a-d1e92c5d465c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450b1d54-26a0-4b9d-9d57-aed989aa9b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9420d89-07bc-4742-b461-648f8e502887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9051cf9-a5a8-4b90-9d2c-0e1a5cae5f66",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edb136b-a842-4e2c-af14-0dd61747d352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c3e833-f646-45a1-9b0b-99c73e10059c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d49db9e-30b6-49be-9ef3-7d405394350b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38ccf769-9722-463b-84b0-f876d61162cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b302ef72-b2e0-4c65-b386-70c8f7edc5d3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50795bc9-f40f-48c8-bf37-c85895339b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed55862c-ca69-4c08-87dc-99979ae57ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4615eab1-298b-4195-b4a8-f98ce016e12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5d1d22-9c89-4ea2-9ad7-0813f4188824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac1ac03-63cc-4b1f-9c86-1454064c2fe4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb45b9f2-9208-4ffa-aeff-daf7bf150603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a0e017-62b3-4826-875b-3a39f3c8836c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982147e2-fd8b-45e6-a932-bd9ce2e738d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5acef4e-99bd-434d-a930-0a718fdbb12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13200377-025f-4381-93dd-0d9b0fe64ea5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1368c27b-468d-4a16-ada1-5edec14b0310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0096d6-cec1-4bab-ac8c-8d290b9ce35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd5639c-6801-45cd-98ae-dd696d289c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b06e7c0-44dc-4f05-b391-20f85590724b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8046c5be-4051-4c0b-9212-b6f2039af314",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b005cc-a8ca-4cac-9faa-0471cfdd35d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae31b77c-7556-4fa4-8fb2-a0af01a1c364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e945b528-75ea-424a-b1e2-414245ad93a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9b7062-0e57-4528-9bdf-1c1be2b984b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a70828-b7b8-4dc6-af50-32260128ac44",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "babead7d-2899-4416-90d9-5426a86351b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7217492b-450f-4e58-a10c-e9f6aaa77dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e69f19-9d54-4586-bdea-a12b8cfecf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b40f35a4-9ccb-44f3-bb40-3399a6d71fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4a04fb-ac57-4048-ae0d-ce4651560ce9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4aa09e-bc71-40e7-a21d-5996f1c90aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3aa2847-163f-4e7d-9e4e-93a8783317ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c168c2d-c26c-4751-864b-b5ebdbbd18ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67acdddc-3e83-4083-bcff-d1902b7f3dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb110910-10d2-4a86-93ad-85fb7736244d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aff4306-1252-43da-9191-dcb1206d02cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2db7472-5a87-4296-87df-6caa831eb3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e480479-cfeb-4150-a5b6-613206614e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d666b6f6-0172-48fa-a123-41c39453872e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b742f561-2e3e-4002-8b4f-97dbd78de210",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a8e894-2b56-4ef1-bcbb-26b2f24d35a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334e6704-f00c-41ed-a03e-7c563fa0859a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf92571-8746-4d89-82c3-ee3f2dbaa80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d305c820-3862-44cb-8435-426907518743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700b2f11-567e-4ade-8c14-55be3235925b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b009d25e-8c16-4392-a0ae-2a1ff24d185b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da80916-1985-4a7c-a72f-b8538819a93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3255b0-764c-4a35-9f13-df359b7b76e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f7916e-cde7-4506-8cae-dd01d46f6494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1821cd8f-e886-4e0b-9ae0-6907b4f49e52",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dca925-438c-4bb0-9b82-26ae68edaa6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ea60786-cd3c-4de7-9a75-2e4ab8edbd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffdd5cb-f72f-4d08-a529-85d39e225d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d87167f6-a3a7-42c6-a9d4-f913e5a1c8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f8e687-a0dd-4da5-9ce7-725ad9141ebe",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09480b68-a045-4b69-8ae9-5048b7f351a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebec6e9-ca61-4166-806e-0244089077e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dbe286-5fd7-4b35-b0cd-d7e5b0eea45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49235ab4-76bb-4ee3-b2de-3ba791763193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bd71f4-3945-4887-9da5-6f19a18de2dc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657f2dbb-2276-45fb-9b69-b045d2434245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d032703c-b8af-4e78-b265-532f9b3d1f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb1b9c0-33df-43d3-8caf-32fb99660fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e24c4973-989d-4566-b1b1-90c24fbf1d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5debdf9-4f03-48ae-b0bc-35d388ec5cff",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b05fc8-a3d8-4b54-9b18-cdc1c0564f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d71ad6-cb2d-4798-a62f-525ff0ac2c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22682884-da74-4882-b397-319a4289e9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb1bc73-f42c-4159-bb98-a0db359e179a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1feedab8-077e-4b41-a86b-b6759c1a5090",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7569d5-6280-447a-915c-cde4bf72af8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe54a84-6668-4ce3-aec3-2182e334cab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2937009d-cf64-4b17-8a8c-f243628d1a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d973c4c-8c0b-469e-bf12-aafa65aab326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91d02af-3f7c-49a1-b1b0-065dd4cee177",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8a3e96-5590-4d50-9a63-0e0b5c87deef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f62570-8460-4ec2-857c-1a6235d39285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2506e1-699b-4d1e-a744-8004d41d15d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e759b9b0-adee-4b9d-b3c8-990d7fc72346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21251bef-a570-4449-8bbe-74ed10e3ff23",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abeacfa-6d57-4a3e-b75d-6bf155abe6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38817c4e-c51e-45bb-8c59-ec68633c8ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed380f5-168d-4d0c-8b86-1fa39a304219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "563d9283-966e-470b-9caf-93b616c53425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ce869f-451e-4625-96d3-571374b82a70",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3acdfc-9970-4675-be26-d5489998f5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d989d5-8d7b-40d7-b2d1-50667349d125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2d0887-54dd-480e-9ad7-f1652902cfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9fc44a6-6445-494e-b198-31def315fbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23203756-b011-4e69-8634-be9042d3daf5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ab288c-93fc-4a1e-9a8d-62d4844cb789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38297ee4-7c83-4235-b319-333832a076a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5de699-1cba-4a89-a032-859b6bf202b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "519d79ea-9a5f-4454-ac35-0aeba4052c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626536bd-9af5-4800-81b4-32cd0a5648a4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c43af3f-9d3e-4e27-9b99-8fe0b178c187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1b619a-c395-4c48-8af4-0feb8f161b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b397a574-359d-4833-8900-3c61e222681f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d98ce441-7e9b-4ed8-baf7-d2d063593535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c4fd35-1019-40d7-975d-0864dd4af1e8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7447d1a2-1c1b-4d3c-9a67-04138df50146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8fe778-13f9-4984-b06f-2b2599ea71f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a407919-e6a8-480d-9066-c0bd34d024a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b04c978-55d0-40d7-9b6f-62f44d22d8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c934e0d-87bd-46d3-aa5e-31feac8f3f09",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ad2590-6e0b-4fe3-a5ca-579363b906f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73234585-a314-4016-b4a3-7171108cc7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcae594-9823-4fa4-9d5b-d80a1c725c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9dc2f77-d5ba-404f-8d50-8ed57a10e9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4caca9-320f-4338-92f8-57047ddde5f5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6dddcd-b553-4727-ae62-b258499dfa18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d5ba0d-6dd9-46f9-8635-2bd82370f2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13befb7c-f703-4075-b353-ef24d50167ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d70ab80e-359a-4f7b-9f00-05439cfa79e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a54ff2-8f20-4d5b-8978-2e5d7e6e989b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555beda4-44ff-48f9-a40d-bd96284392ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deaf5365-c3b3-4346-9a2f-5cab288d6870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a662db9e-b98b-438a-8c9e-cfc872924e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7280fde5-1273-4b5e-ac26-69f23ff478e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d01ccf-a6e6-49f7-ba56-3537e6e15902",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39848f21-94df-4f95-aa66-d6c78d73a3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e5590c-3596-43d8-8de6-3189dceed264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b447ce-bb9e-4c3c-a758-ef28637c0fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3180af06-98e9-4f31-bae4-1c27741b7dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161f9453-6de0-4e62-b82c-acc0d90b6c62",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc44eae-99fa-4d7e-b169-b723a6d4d77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b9bb4b-3fa1-4841-871d-95018852f531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463bf276-55e1-4ed1-944b-930af936bbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "283b987b-2761-4a8f-b590-03cadaafa38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2a26b4-16c3-4d73-947f-6a3f0a2ad142",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3099ef6d-9265-48e6-b2f3-e0434319d465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c564c4e-f91b-4aec-b562-b167fd049f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1a8813-db14-47cc-b0fd-1c1ac13c89ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa80f3a-a7f5-421c-8a98-b8566ef88bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1881d8-5280-4f68-b736-a794e8f9483e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a4cbff-8f53-496e-a282-8589a7e02a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0619b9fe-a2ee-4232-b9c0-8a83c311a990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db57ad41-ba77-4d66-930b-b6218c44a7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f8bbe2-75c6-4301-9d7c-e8933847b8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b15e4a-3c4b-440d-b5e7-cb826aa240b7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e3e586-d6e6-46b2-9776-8e801d454d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f12751e-e24b-4d8a-a47d-470f7525efd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10c3d93-828e-4585-b3f1-bceeb8d89fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db6b5f1d-2287-4b75-ad8f-1dc2435f7665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3cd4a7-48d3-421e-a904-14117b799430",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebd7c59-c42f-4ad9-8bc8-72770323d372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f2e419-963f-4b47-afb7-c544ce3358ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06500bd5-cfff-49a4-8ee2-8cc9036b81f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea18ace6-1770-476b-a324-765f58c3b92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4956b7-c90c-4868-baa6-fdc7dae3ad01",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b4de02-b7de-41a0-bcf9-6d0ee8d64b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f4b99f-439f-434e-a23a-918a83d52c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e03db6c-027f-4b9a-8665-f65180dc0e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "479b7570-120a-4cbe-ba6c-ab5c08d2bb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23013f7e-32e2-497c-ba17-1b5a0cffb0ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a15680-d577-404c-afc3-979f44728b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a01844e-fcf2-4ff6-9004-aa3c8c58c49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e2b521-48cd-4f95-b355-ca86c79a08dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "296ff9fc-bd9d-4306-a4ee-e04c8b3d7f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bdcdb4-f82f-48c7-872a-82a56afe92fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f1392c-33e9-4652-8215-1dad3a7e95d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9542836-a347-4958-9408-922d29f9d943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a13c15-a8cc-4ad3-b256-4c540d9c49e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ace59ed6-d38e-4204-a193-4b751cce0000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75c4cff-e119-40f9-8f42-d9d8c62471a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1f6690-8b5a-4de5-8dac-f2bfd504c459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862188e4-fe88-4591-8c07-1e3aaa10982b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8a0772-75fd-4bcc-8c72-c8c151721441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "adf6815f-d6ad-41f6-b62e-80be10354bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4527dab5-16e8-4128-b4c3-432b222c74b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5a4d0b-3aef-40ec-aa13-b3acd979e4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6bbb75-e47c-4ca6-b688-ba01208ca153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e85adf4-dccc-42f3-a960-e5d69f86e8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0dbc3a-cead-416d-adda-975f6b9dceb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9548af11-4b50-4764-a253-a4158aece8a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba344ca7-da79-47e7-979f-2e04acec0f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0709bb-364f-4680-a00b-588aced611ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43564aa4-30fc-4ae1-9302-3a4a639be79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef830b75-b01a-40f5-8aa3-55bea3f317eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205134e9-03dd-4840-8fcb-da8d41207f74",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfc63b9-3c86-487c-973d-361ad270c77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdecc03f-fa40-4b59-ad51-eb4f1b1c832a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1935aede-bda2-4fdd-b6a8-aaf67866eeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "75bc5615-65bf-4710-9d34-670193b0448d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d62d836-7ae4-4c34-a80a-f21a010f6e31",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdfec17-b58d-4856-9393-014eb2bc47ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286239e1-3ea3-4c1b-8358-dd17de2ed3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5da73b6-98af-4dcc-a334-5ee7520b8000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "153cdcce-ed86-465c-b9b3-a05e1bfa8852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030e1595-6402-4b6c-888f-08afd5a1a24e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0faacf45-89ad-4bf2-b5fb-954616342341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302bdfbe-fa3b-4da6-a9e9-cce377f6dead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6804307e-57f2-4f79-af41-6b074f674c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e24246d4-4eee-40de-aa12-ecc3cdcb06a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ce876c-9671-4bd3-a46a-f4305d9b0a46",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab6c2ac-92f4-438c-bf4c-a9b2989d065d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8bbcb4c-b3a8-40d1-b655-63888bf928e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e7df88-3088-4ad1-bcee-179b526c1af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1760afb-0257-4fcf-825f-60db6c80f6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce363f52-9738-4bbe-82d1-1dce5286c351",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fccd37c-a4f2-4247-9c2d-7b197fe39057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d125a6-33a7-436b-b6b9-430a8ae97eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f66b18-0c86-4557-adf7-9124f88febb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90c3baed-3b7d-4806-8b60-c507488c4238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86a6f5a-b922-4c22-88bc-b83eb5f9ae9d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cea2193-db7e-4675-b651-00b90faa781e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bae01b4-da3e-46b5-81d8-de9afb902fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997202f5-58d9-46a0-b222-ff009d9ced41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c824d1-d7ac-43d1-b465-45fe580f78de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a84f6d-87fd-4e0c-a555-6615c9e497f9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216111d8-22b1-4fbe-87b2-6f33f88ebe0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032674e0-15a8-43ad-83c7-01ca1f7f6941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047ca28c-974d-44bf-98d4-cb31f5daaa0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "07b0e2a9-29cf-41b6-8688-c3dc82e12da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12958d5e-6643-4a2f-b3db-39601ebe2c2c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7ac69b-9a1a-4bf4-8a1b-678407e52e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0478376a-e4ba-4be2-848e-d521a6a8ba55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96d6873-a34e-400f-b534-df360af311ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "05ebb32d-5851-42b3-8731-3b31e23f206f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c5085b-923b-4e4d-90a7-cf21558e0be8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85547df3-b566-4df8-b6db-66a367c5a438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c3f75f-aaa9-4a27-a412-788cb1fc9d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d49c0f4-357f-45e6-b26b-4e909cc7caed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2913671a-a345-4365-8ff5-18e39957f780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2e437c-bf26-4338-9f17-b22ff2dc04a9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4151cb07-44b4-449a-8d0c-a9074183e89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d386eb55-e052-4639-83cb-aeef67a37f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8313ab63-e04a-44a2-a166-a2d30b1f2bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a56eb357-16ed-4250-9df8-166fd1a8bf48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd948f3e-88f5-4063-b927-cbf56dbdd973",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20731f00-b72e-4848-a00f-22471f32f737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854f0855-d456-49b6-af77-d18e4e4b61ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f8d47f-1e75-4bd2-808b-818aacb30d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8917697-0daf-45e8-9381-4ed165500ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d881ee-3c23-46b9-8c34-f745a013cb7e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4040f4-e188-48a5-944c-159a023015a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc898df-db24-4292-b4ed-d3dc6691bf59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8846def9-d373-4f87-ace8-a55b8efddc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "237284ba-b989-472c-b3b5-c3200eb43d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cdfbde-0d6a-4204-8907-a59219c884d3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5e38be-eba2-4e72-9c4e-f330ff46ec3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ef1052-5ca6-4c05-8a2c-2c391a96c812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c7f1e3-9162-4a28-aaf7-7660eb555e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b9cfe9-1aa2-4463-a44f-43cbeb443639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b295662-1c0e-426f-bdec-09280ceab10d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a5a317-f8a3-4300-8e7c-f59b393ce631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fc02a5-7621-4d76-b06a-fdc6c89645c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3479962-7371-4947-8b51-fb3fa404c0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ee8da0-17e0-492d-9be7-17051589b2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994b93cd-ea78-49c9-a052-91ea1b93f191",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6bcb69-d53c-4da5-8a2d-0e75bcd74003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3baf4032-b0d5-42c9-979a-8cb29a1655cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10dc2239-af52-4557-a383-5a14a8a515e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73e05477-1aa4-49a9-847c-4df2dfcbd9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ceb90b-9f3e-4ea3-897e-556912425ec3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c972e2-1c37-4589-844c-6251fe67c49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8bbf05d-b647-4d88-a0cb-08dddbfc2c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f177484c-7651-4ee2-a7d1-cbb9a27c5018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da23bef0-a0a5-4ce1-b581-fcdda286b2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182d05bc-fa88-4196-b417-3af1259c6847",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcf4769-aa61-4f50-a19e-605509d96819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0037f5f-9272-4627-a041-c527157d38d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f10dc2-2c97-4cf0-bc20-542e175941a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c85f1f3b-6d12-41f2-9761-a99643e675d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebeb08e-3efd-4e84-9e0d-dce5bdf65c2f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56486c36-0bda-4f93-8a54-575deec897a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d091b48c-aedb-4c22-9ff8-027464a6552b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16efe6c5-0e56-48ee-9c8c-2e0bb7eb2cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "816eb27f-be43-4e55-b561-13c8e3bf8117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e98f6a1-f47c-47a7-84fa-4e2fddffc3b2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22902e4a-9122-4019-878d-6c95ee8bdca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28437dc-c0f3-4b25-bbb6-6def66cf69c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9a587a-d201-45c3-b170-01d8efd772fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3678e48a-9f82-4631-be3c-6ef0c817facc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17350aa0-735e-421b-bfbc-919253d51212",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f6da3e-586e-4122-a3fa-6db6c04c13cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeca4054-2282-45a9-935f-27e1eadf32e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cb11e1-e87a-41f5-973b-174504678624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "769d1341-c1c9-41d7-b43c-5afde08fb66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e532a45-f37b-42a7-8181-f54fa147a169",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a448651-6060-479e-a434-5ecb9c19b03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc4160a-fd04-47b6-a241-215d9db0ac2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a730b272-f81b-46d9-9246-80d41350482f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "795d28e8-7d5f-4562-b441-8ce5c3cb9301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9026a75-b38e-40b9-bd6b-97aa96852322",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaadcf59-a066-4d10-859b-039fcb5bd2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7191c36-8f85-487c-9c71-55d3c8b09fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880aef2f-e9cd-4a51-b9a2-763eb65cb249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9a993a-274c-408e-b7ca-cba490a667da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe663ce2-66f9-4ec9-a14f-a3781db83038",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bab3a45-6dd1-491c-81f7-d0f6b6f6251a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611146dc-ede1-44bc-9919-608ea78b5ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634ecb87-ebd4-4161-91c7-935c34c4b515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08034490-e4a9-4c9d-a935-025050d9c4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31bc50d-7cc4-45ad-a4a3-1f90a660dd9c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cfabb9-eed0-44ee-a5e3-b0d3d75822b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc3922d-884c-4ad1-b644-2c2869309697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f66de1a-57ec-4794-9af8-934591184013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2390f2-42b0-48aa-949b-9c9f599436d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae665f0-9325-4318-b6cb-095e3bf98d6b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8129a3a-aec2-49be-826b-48e6215a2cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0350dacf-69b0-4191-8ef7-c71adbc34b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd049d4-5233-41ee-a632-07dedaf1f4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf0b47d-a9f1-4ea8-bff9-f6901e05f367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311d73a7-24de-41fb-afdf-47aa6209e7c1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230e416c-6b85-4073-9bf8-b2bdc2855b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f626237-f6a8-4a65-be66-e12c3ae97821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec51f09-e83c-441c-bada-c696466d1525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "44195817-cf89-464e-afd6-131cf44c7d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0eac126-4c31-49e5-9d75-6ed3e2d8cdec",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79637d31-675e-434e-8909-cb202588f42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de0dba7c-fcaa-4475-b1b8-bf7d7e2d2a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a42d18c-0199-4cdb-b93e-1ad18dfe4b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c428ab1-c56e-4ad9-9648-f3f674be9d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9baaa48b-86a1-4e52-b9d7-5afd33ce05fd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb13fbd8-cf5f-42b1-a74e-9ceda24451b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44acc5e6-4353-4cbd-bdbd-dabb860d1de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbadc93-87ab-4a11-bd97-66f226d7266c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bedf85e-a9a4-4414-9521-bdd22a3b5e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9429986-aebf-464a-9f4b-3eb35d972796",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9336a646-e083-47d7-829c-0dd6ecc9de69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979e4cac-af9a-4b5c-a7d6-ba52d4b32a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8305a6-f281-4dc6-93e9-574f89d348ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7064fc3d-e26d-4f37-9643-530d53d1f784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e96622-a3c7-4f30-93f6-bac9f854679a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5505a8c-226a-4073-9ddb-1ee7d33ea84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88a23c3-1fd4-4ee1-8748-6995bacca057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f54a21-3c59-4727-82af-af4effb6f177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a45aa818-ef07-4efb-8fda-ea02e7821d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e73145-6675-439d-b6da-ecf690b0df51",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983128ab-7d55-4013-b443-00ddb79cbcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d625ddcb-69d6-4a44-b98d-311708eb8cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81922d68-3d4d-4517-a7bc-d9a43f8c9b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b08c036-0cc5-482f-ab69-aaa61d668396"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c13f6fb0-64e2-4616-862f-7b2aba7c3004",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "90fbcc60-a7d4-4093-be2c-1ae7e7856e6f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8739c4f5-e96a-4bef-bacc-44e78bf2bd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7aa0ab58-f391-442f-b149-f4b3723db2fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb791799-787f-4b6e-8966-0f0b7abdcfdb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8506fac-7756-40a5-88b1-9175c8341253"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf6c0b9a-5730-4541-9c77-99baeee05e04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6baaf2f6-cfde-424c-b82b-49d9996b2128"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e19d233f-4c46-43a1-b45b-5a7d2cf2e7b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bf6ea3e-b7c9-485e-80cd-423ac6f57957"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "44249248-7471-46c1-b66d-b331da104887",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca19e566-f3c7-455b-8de9-1b35cb1a8cb2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "33d3cfde-a490-4851-afbc-e171edd32bf6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "312ce80d-01f2-41d3-93e8-689c0d410840"
                }
              }
            ]
          },
          {
            "id": "81a23dfb-1d7b-4bc3-90d7-a210babd88b7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "65317aef-a13e-4957-ad68-44c3dd5abb34",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5dee6ad2-b889-4a06-a183-fd143f55b586",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da6d063-e92c-4a17-9bd4-3ae103262b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "23317c43-f680-4c2b-a008-c4d0c60b3927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3154f62-22f4-433b-9ee8-ad715e29dcf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0500c6-efb1-4e0d-b8d5-f980c6e5bb87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d002255-d414-4da3-9bc1-e21b7ed76ca5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b686661-9d6f-4db3-80aa-eb1baa0283d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65a8085c-0771-4843-89b9-1a333f463bd0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0c3dd55-fec4-47e6-b955-53159723a609",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4e414968-ee50-4ffa-b9b5-5387eac8292f"
                    }
                  }
                ]
              },
              {
                "id": "721e71d8-f379-4c9d-b559-eee67be6a07b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "084bed63-dc7a-4b86-9776-78524df3c397",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd019ddc-1542-4ee9-8406-bb07fea31958"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33bdaf71-f072-42e3-8911-83f69e5603bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "94660d14-feed-44c2-ba92-40a64963a081"
                    }
                  }
                ]
              },
              {
                "id": "821c6c14-cbeb-4949-88b2-982bf6484f90",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ef07981-9f40-4396-9a0d-1b54e9bad007",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75f78e69-43bb-4622-84f5-612b60fc5757"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17d8cbdd-8786-4770-bed1-b30bc827aab9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "19b7e7d8-fa45-4daa-a603-0d4c70748164"
                    }
                  }
                ]
              },
              {
                "id": "1897281d-ce86-4385-89d1-0530aba0e33c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2779838f-0dd9-4d94-8e64-09bb6e8b4b7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3fcd2d0-0b3c-41a4-9b14-ed5b7690b5f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6577995e-f1f1-47fa-8dca-e00fa31b0527",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "249573ed-92cc-4054-8758-1e603c643be4"
                    }
                  }
                ]
              },
              {
                "id": "17ff3d52-c4df-4b8e-a790-b3dabbe685a8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e89429c-21d5-4dc2-9c79-64f50a34fc14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "487f59c6-6505-4c35-a3e7-38a1e7df33a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f9831dd-3005-4726-b48d-6700a72a147d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "abe3ac7d-3187-4b6a-8941-e70906c91675"
                    }
                  }
                ]
              },
              {
                "id": "17774508-c361-43f7-a469-1cca795d1cd7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb2e4ec0-7c83-410d-a20f-fd0140532c3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2cdd4a9-5ef6-4ca0-a531-d748ebc23a50"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "317b157a-29c3-4379-bbe2-d7e099837547",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d5384c9f-a1da-4f10-9c7e-9448a192d196"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ca778d6-d6bc-4925-a0f1-186f72f2017e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd6cb015-4778-43b4-a6d9-ac73d7cff099"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "424ca1c8-43c3-49d1-9e2c-4e86a3feb0bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8124dfa8-e7e7-43a2-b2bc-af8edb90f50d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5eb4e511-3714-4047-89fc-b5693bd5b68a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2bafa35d-c3ff-495b-9250-17346511b673"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4922825f-743e-4a52-a93a-6dc6e09ae111",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfecfe81-67fb-4b61-9b9c-f4fb92882494"
            }
          }
        ]
      },
      {
        "id": "cb1a3aad-02c5-489a-8ae6-3520983e341e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d19817ea-1f7b-4fb1-8e3d-721402d7f8fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70b8c995-e8ca-4ba3-a13d-12aad97bc067",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f61c528d-c2af-4388-8cdd-c4fd19c4fd12",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f054b4-2780-4c65-bed8-cc6a8a36c40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e71e47a-c2a7-4c14-91e9-7a16009e83ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343d06c3-a7d7-4357-9bf2-19edd0b9dd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "537388e0-ab6d-40e0-b7ed-80cf5460404b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c60d6a6-6839-46db-9842-403533ceb298",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e6d9a5-21eb-483e-8662-8325a5d95781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aef6433-bb74-4333-ba89-92bb4ead8414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724a6efe-5c7e-4c5e-83dd-9a7939b777eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a37ba637-b9a7-4467-bd53-a14941f385ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72301261-2637-4a4e-a128-050c2432702d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a372fcd-a311-4f72-92fc-6d18ce365381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072c9e6f-79a4-4d6a-a465-08e9e485167d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfe1219-7c09-41ed-acc4-fe3944c29745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d58d13e-1292-4cd2-80b0-d9538986b517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de35ef02-fc6a-46ba-bcd1-59cf75ea7c4f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd51d3e0-798d-40db-991b-47927b982c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1367f24-c62b-484b-a433-e87973ec7b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2df774c-69ce-4111-b609-2fc98d060ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90c620cf-0e1c-4f20-a944-39a1444eb83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3e8189-21c9-439f-86b4-cfba6e7ac5df",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23c87b0-e213-436a-9e38-d69c0427409c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49afe476-ac09-4688-b056-63c80cc32eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6902cef4-aacb-4fa0-8b7d-a0a4e8b551c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3be21ce-a7b7-4ded-9378-fcb999246927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd5a62e-746f-45bc-8dd4-d039328711e8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9217bcaf-432e-4e9a-b25c-f84b40e8ae8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43cfcd4-1090-4d1a-abe0-9bc23ed1e935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa14f2d-80e5-447c-a780-708b1242177d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f697e5c-6cad-4d09-a3dd-825d489fb329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad39f587-fd50-4024-a44a-44bff0efecea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26feb99c-2164-42ca-a05e-c824ca0495b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546589a6-5401-47ec-9514-49886fc8195c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caee6287-2438-441c-9780-9e818ea4dc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "944c8762-dc8d-45f2-82c0-9ab4f30b92a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b9f712-16eb-4598-b855-31fa02ff39fd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5f0165-882a-4688-a285-1ddee66c0852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9c2d20-4352-4012-a691-0f1b205572c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f957bf93-7867-48a2-8ba8-0c5e585ed816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dea8720-f759-4cbf-a709-7dccbc01de0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9888de64-7897-4fc7-888d-9bc66a8ccf87",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c9f72b-f8c4-49c3-9aa8-d6e5307395a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fb9842-8929-467b-a5e4-59a0d9e032e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c814bd-fb7b-41a9-9cac-5e468e2c54ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb1c135-4e23-4fcf-85a6-41340bb915a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6ec397-c789-4e0b-bb0a-b20e00436214",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe2fd1d-2c99-4a91-b09f-415e88a599a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e23f27-c9f6-4e98-8ee8-801527a9b25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbe8681-4223-43fc-bd92-a21cd6e29a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7189d16e-075e-484d-8d03-7a42dab6e949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c0233c-6032-4d56-b744-8346aff578ca",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07697000-dc4e-41c1-9d33-19e759eb2bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7646b2-a930-4a13-b80f-d5ad743ba1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda9f9cc-510d-4c9b-9fde-2d3e8ca37db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b97eb129-4d73-4ba4-9a95-1e3fa65f32f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6910c3d1-1e76-4347-9427-c61e5906ffb5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f1315d-da8f-40a7-9323-447aeae285ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda1559d-d9bc-4942-8da0-4375bfa239c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c674e6b-7415-4bec-b6f2-c7a8465e99d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "067bbc49-c053-42e5-b72b-3258f41323d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569d3f3a-879c-43f9-9c2f-90c83c327027",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95068eb9-f631-43cd-a5c3-82436b553d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed56f8d-e7b1-4e63-bd91-ffdf4ad0c403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa0f9f7-4f33-4d58-a71a-d40f1aeb3b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "278ad171-e648-423c-a9f0-e5770eefc77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60832bc2-e0ce-4206-b796-7a1bb682bf94",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6849bf-9566-457a-8c1e-a86f71b56551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6a8bd9-f6b7-42ab-b1b5-7aa38cd71d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600027b8-24e5-406d-a3ef-529eb5b02e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6c8373-276f-4014-844e-10b241bb8aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e310560f-2d0c-4c2d-9df0-f04a9938497f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bf9767-6bbd-4468-86dc-6faa7b966f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272d7431-6c76-436a-af84-6e24897ec3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fad804-7b43-41fc-9991-7ba64784fb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "30c88cd7-2f14-41c3-b3f0-3cb38695228a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f70bb4-dc1e-4891-9e07-bae43cd6862f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b66d1c2-1969-44d6-b6fd-b8f1bbeba357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7118bc6b-2c21-488b-ba8a-3dae608bdf0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4cced4-2c61-48c6-95f0-ee0ba324b338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "708b5760-fc10-4995-8c02-b0e800930168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da10188-88e2-4598-be05-4f72dfc9ac4a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242bfe0e-6036-45ff-a90d-cabc39e03519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083067df-19b2-45fa-bc0d-5276b096b9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c0788f-af25-45c3-8c6d-aef31eb2f2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef77588e-0f95-40a0-b893-e5762986c2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1847b32c-c6d5-42f7-a1a2-42a16b4aa6fe",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebce26b-6f3c-4a2d-8cf9-03006253e945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da99cc4e-0c79-413b-8a4f-f2d2db975f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64567dc6-ac00-45a4-a0b3-c3b831ca453e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "25f3c238-ad81-4f87-bdc8-ddc0fff98338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d810232-8a9b-4372-84d6-9334d2066925",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66823e2-5eed-4708-b4e0-7c125a1c8019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9bf63a-59c2-481f-8fa7-173a484d127a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ab23ef-9c9c-4c7c-a6c2-d75507a25aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "157f76e3-b722-46b3-a3f4-acc4b2b1fcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a248408e-14d4-41a3-ad69-06484b1128e8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ccb373-9d92-41ad-8841-b0195bd5b210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d1d3f9-8d60-4345-8850-5c3a3b309bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b24b6eb-045c-4275-89c6-4d8a51fc2e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d948a3a-f09e-4f1f-85bb-025f17de424a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8545cf-de27-4f2f-87a5-b2966f8c368d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637d6a13-0337-4ed7-bd04-147c67a01eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5d4573-4fb6-43dd-ac87-93d9aba9b8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afc8b76-7e6b-4b30-9666-8e30e3605c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6524e39-91b1-4ed5-9fa8-a1d04ed877ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b78072-c8f2-435d-9a04-ca8268846aac",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8203fb95-3232-446d-8cb0-9914a805c0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6712fbc4-341c-4f09-95b1-5bf311dd28ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b59111d-eb2f-4397-b3b4-64975d537e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0067ed77-9e4f-49ad-b398-2dc97638668b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd596031-5de6-474f-a26b-22ea94c99c56",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66662c4-47d6-47fa-a28e-49a6a24aa22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c414c7d3-b73a-4351-8fff-05a68e159f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2a54da-f4f3-40f0-9fba-702e8c15fe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0d0c71-5228-417e-922c-06ce93d11f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bff39b-7dbf-40c6-9f2c-d132ff1bae6d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038967e5-6c3b-4db0-b4f0-dd52fcd389b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e59e925-6d9c-4039-8796-315914aed5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d89a97-1c49-4062-ab8b-0ad4b1c939a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b20a1cd-09f3-43ce-8666-6406e0d74448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4511f557-19a5-4cfd-89ba-dc2177b1f680",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e705cda7-a6c1-4fb7-b106-ae3384ea1677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10720ce5-e742-420a-a390-2c66ad961465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe26b2f-36c1-4d3f-ad13-abe6fffc65a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d94c3a-a086-4496-90d2-83d4725acd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99c689d-8e6c-43c0-813d-242b2209b7a7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3294c4ce-a0ee-4ffa-86d7-9eceb9b488fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937136d1-5384-47b1-a583-bd0d449ce43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ee8ce9-7920-453c-856a-b2a3b2374735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2e3112-5ce5-47cf-8104-8143bd885965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a310c98-9546-48cf-9ec7-614192b81056",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af83344b-bc2c-4fbc-9f2e-5ccf9dc92134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3ebdaf-8f09-45c0-8cf0-d2d67b8126e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c9a545-f7ef-4db5-a36f-d843736201ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ce8b01-8cc3-46a8-a7fd-8bace163ee1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f61d54-f4d9-497f-ac3d-32fb5d665326",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3fa112-7eee-43cf-822b-f1cba37c1e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b2513f-b0fc-4083-a263-26baeb3ef3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88cc81c-e289-4642-b2c0-b228326aaef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dba703f-3a02-4633-b060-591bfb2f4627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7299ed08-d102-4990-8244-9aae709a6097",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36f7cc2-e599-406c-b632-ced345751bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68abffde-c7d0-426c-9586-eeadcd1cf37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09fe369-7d78-42fa-803b-1a3f272f4b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "949c8a86-3d09-4cb6-82be-a29d2635a6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912e47e4-66ee-47ba-8966-0641c2c08239",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bf9f02-f2d3-4afd-b29a-db825f382cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59007f48-9377-4326-9696-c6c1f9f3881d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf434c1-69d3-41bc-a470-a2940b112f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84ba7d43-0031-4beb-8019-8f95fcdfae19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ba11d0-8d4b-44c6-8b90-bb3821dc347f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c8c3bb-1c09-460f-856f-594c6ae284f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7c2484-52dd-43db-b8c7-8d8e26ffda3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70226e3-3e8c-4359-96e3-567a515acc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee914032-f54f-407c-b43a-eda126f0d8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7139d37-435b-4c8f-998a-4e535f916d3d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcd59f4-095d-4d3a-a26e-3423aee82dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4c159d-e7b3-4559-a6f2-b0833bcff0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e548e2-b870-4a79-bccf-ad98b1464d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44792915-8f33-4612-8480-71d3a24c7d99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e54a9b19-b597-4281-b238-f9d5e84b768f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a731a9f-bd84-42c3-ba77-6374ca4abad5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d1a260-c4a6-4edc-a3cc-16e932751d85",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "faa2ddf2-1a59-439b-9a58-f4eb0e8e6fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d312b7-932a-4110-9df4-972dd68c7e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "601b55a2-b959-4898-8a1e-4e6001dbb82c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "017923ef-5e8e-41c4-acf6-aac4a08c9b7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdc205d5-b480-49f3-85ab-cd00bd9788fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94f384dd-d30f-400b-8c00-4d8a51e6bcc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8916e51-3be3-4ad8-bc77-8c69cf108fde"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67d8270d-726d-4255-9141-2c942b7cbd24",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e1ec819-b1fd-457b-84a6-38a42a1fe327"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4853621-8b40-4ab9-a414-e61a0ed11fd5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba60b24b-ab8d-4d98-b509-a41f8feed291"
            }
          }
        ]
      },
      {
        "id": "bd288a2a-81bb-400e-aac4-99a25db5a9f2",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e568c112-30aa-4515-b304-af93a57b4be5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6244d46-dfca-42b7-a05c-926e7e410048",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5397a582-2692-4443-9501-f07babcd08b5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0f881a-9a29-4a4e-8061-5dffd9d35087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52d45e5-ae21-42d0-bd3e-3a4a486faa30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e064cba9-4cac-4afb-91ec-f2855e5af61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6b9d50-c4c7-4d06-a164-7b4d170cc5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc73d1d-4529-4ef0-bfef-e9f6479c2cc3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68450ea-e1c7-4b14-98af-dc7cbed680b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cf2feb-ef5b-4412-85e4-3e80749ae9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7199c0df-0b36-4404-95a8-ee02ccfbcc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4bcf135-f806-4a88-9c63-490c2b623328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ceef20-361c-440b-8a40-146ca2073525",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9dc2ec-f6f0-406d-8c53-a12b42da4aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad54f7e-73e6-4e0a-a208-7c0ad4caae41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6426eb-dadd-4bf9-a850-a43cb57eb032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a606367-d5ee-46cc-b046-65404909a4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e397ba-e637-4ae9-b4e7-dc3c45dd7e25",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4865802d-e502-4ab1-a87c-31d782c1989c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2447b1-c390-4ff7-923b-2da66d1c0f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e657c096-6461-435c-a694-365b8179b960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66110e4b-4037-41e9-8f8c-1626110f898e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caeccecd-1f19-454a-a6f3-c3cdc3e54d53",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d77f984-6acb-428f-aaf2-7693124361ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5c24eb-62cc-4acf-84d5-39c8eb199036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb00e03-6ab6-4869-81b4-3cf3eef5eca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b95ab128-0d38-45d3-93b6-21e2c3bf497f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6c3f9c-1eb2-432f-a8b3-d9aa7f9552c2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594eec0e-589a-4a80-83aa-5044cffe9b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b60a92-be43-4fc4-9533-77d0c4f9b4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bbd0b0-aefd-4c40-9447-7ead5777be6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0deb4750-a4c2-4938-acbf-3439dbd3bad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6efae6-7ca3-4dc7-8464-155791f561ef",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d44d2d1-cf0c-47b6-9199-8c2b4652ce87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aafa4681-85da-411d-a19a-3144be4b6c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ea3ecb-95e4-43f8-a0b4-7bd90bc0d4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "837f5d64-acb0-441c-8288-8b4a371a314d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529371dc-49e6-4497-b404-a346f6b7f926",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b022cfcf-bd29-4f7e-8536-874a0b4d19ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b37a0e-d6e4-47f1-9244-d88a14dc7244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46a107d-5a18-412e-a89a-c0692b0f77bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6705bca-19fe-49b5-bff5-b5ec5dc77231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9703c26-c37f-4267-b60d-8526f0bcc9c7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee34003f-1250-4d8d-a671-8109a471b841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b3ad28-04ba-409b-9968-672d6ec989b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1de3a0-0aa3-4626-9fae-74adac9dd677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e1d54c-b1fd-4754-84ea-458ec5fb47a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d104ed55-7e8d-4678-98b7-cdf2d77ac9f0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f4a160-8fa2-4779-9905-e1c1270d381e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12a0b85-2688-486f-bb9a-ed10a064dbdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233975aa-a7d3-480b-8cc7-55f4c2f3b811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e099c882-0bba-4ae3-848a-841ae3562a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c345a7e5-63a2-4d21-8643-c3425b25de10",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c108d7f7-8f82-43c8-b63c-4e9ff1e2431b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543cc6ff-424c-49fd-a8f6-9b80fe054d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34076159-cf9e-4939-89ef-910160aad096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "987d2828-23c8-495a-a528-d696fec513a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7360e8d-308b-4e31-92b5-8fc0d6593d87",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ef4280-7c1b-45c8-8845-5e05e253d980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6a5fc0-5dfe-4dba-807b-ea2ae2d80ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f28b358-62e1-4efd-97ce-d184d918c378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "175e857d-44fb-4149-b83c-764879e2828b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4882b06b-843e-4736-bf14-edd478f21230",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79feca12-3e10-4e8a-8caa-8bd581c4e520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c300ba63-9561-40bd-ae78-dba99ed7784d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e46ae2-3992-40c7-a302-2ddc4a83910d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "12b8fd17-69db-4959-9e8f-b802fc8213ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0aed11a-10ca-47e9-9254-3468ef52b42c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adc765c-4c08-4d8a-a758-342c8bee6c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da12623-abe8-4b9c-855c-407d5956e4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f293aa-55b8-41df-b330-8440904bfa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "56a34234-2da3-446c-888e-d49db53ba30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a70510-6833-48b0-b5fe-dee5e7d9238a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4546dc-57f8-4a8d-b06b-0d106b034c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca734f0-13a3-410e-97cf-9d9f9c6dcd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1d0c67-f253-4ccf-be02-7a01c69e5205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4954d4be-f18c-43c1-800e-b0ab35d3ddd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97dc37f-747c-4be1-9678-261795203fc3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba04653-afc6-44a7-b446-598d8da299cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0266cb-4303-474e-a152-3871a85fa77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410efafa-276a-4cd3-aed8-e653363f9e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "456e890e-471f-48b2-b36b-c855ef7309be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70f3c36-18de-4103-a976-2ad7b44b8279",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda83474-afe7-4670-840a-0d44b833c57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6868e7c-5858-427c-bcaa-b587fe4107bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4437f13e-812d-4135-9ea8-44683594e3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "331f6e81-dd78-4adb-ba26-292526365bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7372a9d-0438-4bf1-8853-9cccc9da5093",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6901d0-7832-4ec5-b8be-596e57b88663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a01729-87e2-4c56-8043-ee215ac60752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f867e439-f6be-4cf6-89bf-0227a7463036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1be7b7b-9d50-4d0d-87cc-a9cedf196cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745d7e45-64e9-4c65-a78c-8410c766a2e6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850bd9be-4468-4e43-995d-c67c22a98a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b83de3-da89-4d54-8194-b752ba292ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27dd8b01-c569-480d-9bf1-5ad350ecf183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88f7682d-521d-4eec-a1d6-ff4475157e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcdfbd3-2983-4eba-b38f-8b098bdec0fd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5307c3be-6eae-405f-aadf-158d88698118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b128d9-895a-4005-9277-e2a78ebb4fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3965709-3504-42d7-9927-0d3e7b89ec82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc45c9b5-34cc-4bbf-8eb5-86e12ef00000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e946ee2-0d62-4e57-9a33-69688f2da05e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd891c39-6c50-4f7a-a50a-65649d9c7299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2f34dd-acdf-4763-b74d-55fd3e2a9cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba87153-eb85-4fc5-b13e-c0791173d57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6028e08d-b6e8-4a67-b3ce-50eb0adba3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ad856d-ef88-4b86-926a-9067966e0d45",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454c81ea-8c10-4e4c-8cdf-a649dc484266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7307dcb4-6fd1-489d-8e39-2f5df1d665d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46dd1e4-d5b3-4c83-9a7b-aeb96a6eb57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d12612e0-ceb0-4e47-9218-22d224201542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b7624d-ad81-45e6-85b8-153dcc2465f9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2e3713-d941-4d3c-9846-52d320dd490a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9133d07-ab36-4697-9cca-a53025edfc99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc115d4-1529-4843-8288-bcb1876fa629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cee0efe-bb44-4537-b749-177990b1e093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1455c10-80b6-4754-8c00-100f656baf1f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe923321-ac9f-401f-aeb2-456c704ff41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690869c1-5206-4c92-b8cb-676d45d6921a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe30ab63-9942-4d82-8be8-9cddb9857672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "238fdb84-7ffb-4f9f-bab1-bbc12f179dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f8ba2a-08ec-488a-bf6f-fc860fc6f1c7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0d6194-174f-423d-81ac-d0dbc2014e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7b346b-34bd-4713-bf9c-423dc1fd70c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f24a52-ae4c-4fc8-a4a8-df0a5ab623da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "331f0be2-f915-4c79-8845-cb760df6b24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5b286a-9ae9-4f47-979a-e7931e486db6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6692bead-7b04-428f-94f3-d9b71b00bd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bbb735-7d12-4dab-82a0-30c498583da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f54494d-5005-43d8-b22d-6b0cb2c8f1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b557ae9f-efbf-421b-8467-7097f85b0c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a039396-f01b-4165-a223-feb0fd21e1ee",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8d0c40-b4aa-4311-8c01-ee532d744508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa864de-ca56-4cfe-b1f4-de51abde5c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db474b83-7271-4cd9-aeb7-29ff875f0a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b2aa3c-7d25-4ea7-a896-1b8dbcbb004b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2adf39-b92a-430e-bda2-5a8f9689bcbc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9528fb-b735-4cd5-a895-cb05b00ebf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13d0824-0882-42a5-9859-500f2e8f7606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d3f9ee-4832-4628-b9e2-cbb0f4ef380a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "656383a6-a066-4010-b917-d206c579dd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7d8f03-00c3-4285-aec6-a5793b3b8009",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145c5c53-97f3-4f16-8973-cd99e30e6225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348cee3c-2cad-4255-b5bb-9943294f95a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c67792d-28fe-4d9b-818f-e8304101ea89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e744db-30c3-498e-a38e-be02683425bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67aeaeb8-40e4-4161-b257-e7676abcb1de",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faa8006-962d-4a24-bb29-9ffe31043e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef473a97-a0b1-4f11-b542-ac5035676835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8de587e-7ca9-4274-b1b4-15a84c5541c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "affa93c5-f357-4ca1-b094-2089ac338f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c97777e-82aa-45e4-bfed-94b870b95352",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c1c178-26d3-44a4-a414-f6020b6f29a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ad85dc-5b97-48b8-925a-d519e7a3c7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04279168-8888-4d06-ae3a-b045533532c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea80571-96b9-44d9-9c2d-9f906e4f542b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c253cc82-8d4c-4239-99b7-1011ac99e424",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f4785f-8b84-462c-b047-c6b62bb46f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51eec78-71f7-4af8-a454-057eee0b9448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25642cdf-e36a-4077-b9a0-b9cfb4652e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d192ce20-3c68-4375-971a-231e780374b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bcec47-d8f3-4b44-9cc4-7b085352b01f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1bb1fc-23b4-40b6-8aa3-cc274357a10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291252ec-3ed8-4f3b-9cbc-ef983d90fc65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20899315-faa4-4f18-8793-5884f03e56d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9956f077-9974-4df3-b77f-8fdf424145cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954c5d11-d847-4215-9128-05379537ff90",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c63b4a-01a4-4423-8579-dbc28b8ed570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d93192-6b72-4eec-abc4-edb9ab2bb160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597c9586-2b16-4177-a4e8-2e7697a638eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6c9a58-261f-45bb-aeac-2b81033270b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ae2d18-499c-4910-8a83-95538de2abed",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71772ef9-e1b3-4380-b74f-4d6af73480cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a17e329-7063-43d2-b2c1-11c2c3277588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b40f38-319d-410c-b830-6f3c8e51b8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4571ee8d-b17f-4d84-b9f4-b97ebfc3c584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63c30b0-6f74-410b-8375-4edd33599246",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f54590-2301-4b17-bc8b-f796ad98fedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54dcfdf3-8afb-4988-bb76-ce8e44bc40f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5485338b-8590-4bad-9b1b-a0db387cf31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "647d9611-b7c3-427d-8eb2-baa8ed5c328f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b15c76a-9757-43b7-8e3e-996629e8d001",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4821254b-b835-41a3-b776-a6bfd148cc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a589bbc5-18ec-4d78-8b80-0e349ffb9647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fc51e1-a5f1-4165-a6a4-3b99f266f44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6baa3936-5ae1-42f6-b7ae-a5ea356cb27e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7ff3e9ea-2f9d-47e9-a383-c99211c645f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7151f0d-ef32-4656-9a20-ef9f53d7d560",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a230ffe-d4ad-49b5-93ff-ae16eee18c6b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3edb56ba-214b-4b93-8888-86fa2d2a841e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6191782-0354-404c-8b16-3f26c45b9f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "550c13e6-3fa8-46ce-86bb-0c8b4405b201"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b255fed0-9128-40d0-ad4c-2d24314feeac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79b94b39-cf29-4b2f-a191-ca366b85e258"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "192ef214-d791-465c-b519-9d8a36a160e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f47d1986-0155-405b-bd96-df1f0818b1e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "388538ba-ba07-443f-ba7a-788c3a3ba14d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "115c2edf-bf9a-419e-a842-7182fa4796d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3040312-1c92-41cf-8190-71aaeb7e0e2a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7252e6f-94de-4e8f-95bf-835d0cf13e80"
            }
          }
        ]
      },
      {
        "id": "898b1286-2006-44b4-945f-5c3f2310d2d7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "52ef2c38-ede9-4f25-b347-06a5ed5bc315",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db2252bc-882f-4ccb-91dd-3f6c9a88f539",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "43ffd846-f5fc-4da2-ba05-4186acf8feaf",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bce039-77ec-4059-938e-d4e3db0ae084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed7e18e-5fa2-4ddc-aab4-ef3d2def41e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e34cd7-b0b0-4833-8e9b-e1419ce02d76",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee1efcb-e280-462d-9237-b18c6265a042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4bfc037-b085-41cf-a4c4-9a44888effac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ae9d3c-37db-44e5-8655-7890153ceb2d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbac2564-e328-4f45-ab1c-7ac8ebfd5dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8404859-dd73-484b-a8aa-ce465adddf33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fff6dc5-1b6c-47ae-9307-e23e84fb440d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f93720-5a16-4c06-860d-fc3cfebcd1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9252658-cfbe-4f13-8050-90bfc2218571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9772b1a1-58a2-4189-a46a-079c9b694c2c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e074ecfe-eece-4052-bf7b-e0003388a1f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901a6247-6a6a-495d-b00d-d3cedff47a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ec447d-09b9-49df-a017-ddc7be561e8d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3186c7-0031-4b14-a7cb-bf1615cd4e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da923b9-c3de-4b05-9329-ae5519563471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4e19b4-c68b-4ba9-b2b6-f7d44bf49751",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4740dcc3-df12-44c1-9af1-3f81c75aab6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd8e67e-401b-4029-a7b5-572ceb24bc7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5382257-39df-4b1d-9466-61a0688e6fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc31bd9-bd5a-4073-860e-09ea7b0ad08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab22d6c-354b-47ea-af09-87f8fa055313",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576f0cfd-0fef-4b3d-90fa-da8b4e836940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4be37ec-7e2d-4604-9a21-f31f3513dd41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "face69c1-c571-46f2-9569-5897f54ef4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a596f79-0786-404d-8ced-0ab985b2784b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579f8de5-5d8b-4df6-9643-4fff285c72d1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f19f779-cf96-41db-90bd-8d05883913f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d3b7dcb-b89d-484b-a35d-91a9d84e0a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c83376-819b-42c3-af79-f725a1fabdfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3fbc16-d515-48c5-983e-18151fc66127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ce8f24-26e6-4fab-b338-7f81440a7a86",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12c34ed-5049-4bad-ac61-201c7a9474a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40aea1f8-3d46-4e68-bdc3-355079ae0d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "720bc540-ab9c-40ed-8fd8-f7b012708e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de263924-6122-42db-b5a2-fca04df1d9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533052a5-986e-4e4e-a913-c65db2dd7645",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f9e44a-c1e3-4bfb-abc9-1d2026f40b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f24e134-3f5b-49a6-866c-4a12b817b797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c524f829-720f-49f5-9d2e-a782f7267f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06f4607-396a-4f0c-8bd2-2b322c08a376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8155ab-d6f1-447d-a4b9-b65c2747c1bd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f52cb2-9a31-45fa-b009-dce00007b5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb5d895-1a6f-4402-b1d3-322f0f460fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf02c74-50cf-4d4a-aa41-813ca35bb320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55302ae4-0030-4e62-bb23-1ae8eeec4247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d970317-94ee-4db4-8a9f-9178230300bb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0650db98-13e5-4300-8290-8b54264cea93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7099c74c-5040-4674-ad14-8063d59d6981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9ed12d-4c83-4605-a351-6976e2c95f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ae95ac-af7a-4246-b7fe-b4b6d3199b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94e0cd2-a195-420f-bbb3-8c1753b3f5fe",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8796dfee-5f22-46ca-b15a-9f7b1bdf3e7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e56f1ed7-6f95-47fb-b8f9-2ecc47056ae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97322b2e-f660-4624-872b-edc0030c6dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6571b55a-984e-49d3-8cfb-135b294b6331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16495f95-75d5-4abe-a54b-49230eeef4ca",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c950292-2dc5-4f28-8621-dc2ac687e446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e39b7df7-8911-464f-9af4-79be8e00dfe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e5552d-4297-44c5-b767-0cfd16a32325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73d571a-7524-408d-91bc-fd07fdd5d3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bdc29e-3379-444d-bea3-ba1991f99d3c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db25769-1477-4f19-82b5-262591dc93f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f7c50bb-7234-4df8-8df2-f97857fb1a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ae8b2b-e42b-4cec-a021-2c6ada45ccfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7312ac06-b79a-479a-8221-4a1513529f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2482549f-f118-47ff-99a2-c7c1051e4468",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b53206-790f-4274-a76b-457c85d9f07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca6e18e-d5dc-4ee0-9ce6-a5beb3300c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87d8b3c-f576-494f-b872-c2dc8fbfa863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c5766c-3d42-4a5c-9916-5a85b5cdd304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10763465-60e2-425f-9f69-0dd80c784a13",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fa537d-4223-4aaf-bfc8-dea5a5c9d304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d80a14-ea16-4708-8289-2511ed2f8690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78f9330-43ea-4115-a9f6-7547436277e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9610d264-9c9c-4901-9e6f-47f31a9b7385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3c80b4-c08f-4dcc-b0b5-2522901a1a62",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1caa84-4cad-43b7-8e24-d6f2d02203be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efdd401-e320-4a34-94e1-1e6285e37172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ec427f-fb0c-4285-9465-08d450accc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6eda00-1565-47bf-af90-d373a08da153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edad0242-b62d-42a2-b8f2-1864e9339dc5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f120e56-b224-44f2-8aee-34788a7bb179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80562dc5-08cb-4695-bf04-a398de683f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d84157-a06e-48aa-9ecf-1fea7e19ce38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b559d13d-6543-480a-a0d6-4019eced1f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f163a2a6-9721-4303-aaae-00c8061a8f3a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d99e5e5-7e56-4d3e-8a55-8f035af28359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d822a6-f8a1-4cf1-b37f-f590dbb3ac37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e632967f-ee11-4cd6-a297-0d0949664baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fbbce4a-d640-473a-9b0d-8a2958b5550a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c46349-0fe2-496e-a9b3-ccd0e587bd62",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4482a775-1993-4912-a0a1-2681e701516b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac886d9-9ce1-4801-a314-3659116a085e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5518dcd1-dc25-4b33-a659-64be44c52ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17fddb3-5c34-478a-88f7-0b2a0f09b165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b801abba-bee4-4a08-b6f2-96b2ed51e825",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae412c55-a6ea-4527-899a-cc24fe1b8866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2756cfad-f7a6-47e8-801f-a9e37b74fdd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75adbb62-e95e-41b9-8cfa-26468578aa14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6030f01c-ac34-4f02-b9a2-4eb3f3c3cb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0842534b-72a4-4f01-9bc4-11ed2ddd89c0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0afe7e-d016-4724-9841-3ce09169a18f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5be6a42d-79f7-4ce4-a6d0-1dd551c46ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd9a26e-126c-4990-a90d-93ed25ddfd25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5f1a86-57a4-4411-9fc8-ddecefa05d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060922e3-4184-4998-9c49-ecdea66315b4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb3d936-99bc-4e42-b670-ba09f3847e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d54292a9-e8d2-471f-aff8-7ecb80876c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e40643-8ad4-40f3-aebb-e4443621ef07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d30d337-cc22-4122-a124-09f0d8739c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1b51ed-1222-43e9-8765-933fe237f766",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8623bf3-fe82-4fdd-addc-dcfa452e4ac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe62684-e1d2-4971-98c9-ea9be52a6e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a19b549-8200-4466-97e2-ef0a03df3278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d38ed55-70c1-462f-b2da-2a19dfb97612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887d3111-afe1-4503-b516-0850ba9476bd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc635317-73db-4375-8078-46f3e5833cbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ca4e3dd-9376-4e04-8e6e-c47d303ad542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94728074-d035-4d87-9257-d8714547e222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "186724bd-48b0-44db-8447-0e2bd64a7af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea6b57b-4de3-45d6-8b76-b091cf9fdebb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b811035-93e2-4fee-bfea-320159eac05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08005011-2312-4a24-8cd1-54637bad19b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c733f4e-fb7f-4933-bfdd-7dde18771e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6196c837-bd3d-4c3c-8c33-670c0126f982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc19213e-6163-46d7-a0e7-636cc6422e7e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8a4591-1dd5-40b0-bf64-07962df2857a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8b32300-35ae-477b-a7e6-b04726993126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4570283b-6642-4fe3-abaf-568e363e7b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c752f9-6c90-4e03-bc67-61a4205efaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbe3520-071b-4946-8811-538ce3b4ae2e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8b60fb-b7e8-4473-b8f5-a4c137f4edcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495f15a3-a82d-42b7-aa4e-434f384671b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1580cf7e-1bf1-4784-911b-de38462436f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf271e07-793c-45c4-95ce-c6276be27ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afc7a0c-8ed0-4a6c-8619-541d8eb6e767",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8eef9f-fbc8-486f-a65f-8d75ae040537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62f188b0-5ba0-43e3-bc26-c446625f22b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c7e768-9daa-4dea-9745-f3108e5ced98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eade33b0-61c6-4403-84bc-c0bcad96f973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ade95b-3010-41da-9b50-aa461185387b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba95b7ca-a870-47dc-b807-f80da87f862f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa4bea08-a6c1-4ba4-8d84-273f6bd1cff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4464ed30-1a4d-444a-853e-80d491d72fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c693f904-4eaf-4dba-98a0-52a185bcb5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83499a9e-3258-463e-aa8a-fc3e2403397c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20b99c0-0895-4c1b-ac47-511e29f27f92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3747a875-0276-40a0-b930-f94da54540a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9814e8-a4f1-4418-82b6-3454dc32f906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ddd719-f28d-4737-9658-58fb66eae4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5297b1-0f11-48ac-8bdc-04a65bc72177",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31639302-e503-4ea9-830a-c07aa1bde094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8fc9acb-9733-4817-8105-4f315728ac3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0290a7-5525-4ccf-9a95-484b0512b130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a54c30-bab8-4066-b40a-7e269b67b3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4fbe37-57a0-41eb-8768-1fb5f1b06a2d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b5491a-36d9-40fa-bcdd-72b5c971566f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f761670-7517-460a-9299-d0ddfa7bb21b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0205e8b-5d10-489c-97e2-3c187df14fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6d4554-5c91-4062-8049-0465bb73c68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95db5789-07e9-4a74-94dd-a37def6450f4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1563b425-d7e1-420b-94e1-e98a883f714e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abcab100-c064-4cf4-90bc-833d84a49ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf1f30a-f0ad-4856-842f-3621721cab21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206e9dc5-9ffc-4992-a7fc-1e44264ff0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109bad86-7c5a-4761-8618-c066131a7dbd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9de1d99-f9ea-40f1-aec0-9879a2dc48d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d282a89b-1fae-4471-b15c-34f0de68039e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9048eb0-0d1c-42a5-b2f4-dd3bff5a5d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b8b3e2-e2eb-4520-8045-1bffc8474d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44116a91-68e1-4e62-b47b-c4193815ca22",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05da7af1-55af-4e0b-8813-b84f6e6d4e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f6dce5-ce30-469a-81f2-e2e2fb72eb2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2e9459-3397-4ac1-a959-c251fa6dae08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356084a7-f306-4a30-94ae-e25a10517c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c484e55-0a39-4aa3-9c69-92360522dc60",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9acf909b-98cb-4400-8f01-a3bb83dc5f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d678629-4335-47aa-9046-0636d51d1e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c2f8f5-9fe3-4542-aa52-24d9666d8d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f93c599-6932-48d8-8c78-bb80f8a12ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1220c444-1448-4c0c-a90f-03668f761e42",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7555b785-685f-4357-9e3e-3014e730d8d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae35aabd-78e4-4ab8-b729-40733313e615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d4dd56-c624-4809-b159-227f5f94998a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f204fb0-963d-4151-9233-1c0b8375979c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d124ae0e-d381-4985-83ed-9de710220170",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9851cc50-33a7-42fe-9093-73be9f8ae5ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc29361-649c-432d-94d7-d6fec7e6f200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "570fb0a9-1b63-4d15-82f6-1e68d40825f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f806b90-8e1b-4b01-b6db-f28838725cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98ba725-fbf3-42f8-8687-9a89066a569b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1188cfc-da19-4b18-a4d2-87cc491285e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e77e088-2c20-4fa8-a308-2f7b6cd16d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2062214b-db98-4a70-9e7f-5d493c1f8be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19c1fec-27d5-4a0c-9a47-0ef2f1f93ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c931df-379d-43a5-a23f-623612d098ff",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30484a3-c0fb-4e8b-a19e-a73ac2e9df03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468a3161-031b-48c4-9d37-d40112d1755d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca89f56-520c-4cf7-8132-e8a2e123aa3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3625b4f-4785-41ac-bd4d-3aa6ea5faa66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a21c49-6470-4b27-96bb-f4d0519b0016",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3beb47-7a43-4230-85bc-93edaa468e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279a5df6-6215-4eee-a23e-858c2bdbbb02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7df8079-fe66-4659-ae79-112eb891ef99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c660b883-d29b-46df-b11e-b75fc2d2ebbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967a5775-d8b4-4f7e-b78f-2d5b7e8e2b71",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06fe40f-b24c-431a-8794-868b99870749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2c39b6-5f55-4499-b7b5-74a0a62922d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adb44e9-26f4-4e16-852a-160d2975c2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee5dde9-3ab6-4ff4-aaa2-a463a46777c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30ec9b7-5e61-40ab-afd3-b5851058e16d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385af575-cbf8-4bf7-a5ba-da55fe38a512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96541a20-1401-4f40-9d1f-f6aa66a1c962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c87fd32-629c-4724-a4d7-e92167402822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0032fb-9b09-4996-a8a3-2391a284bccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a535f5-619e-4abf-96b5-641ecb2141db",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cb6517-b686-4ec3-9236-41f536490e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8c46f3-4217-4068-8daf-ae13530a632b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa7655c-d1e2-44a3-a003-685edfaa09e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07dcf445-26d7-41e1-8f35-fbf93a36f126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e8271c-fc60-4725-89ee-f7837742a3d5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cd4d89-494b-45b0-9b16-2d30bb6da792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0932996c-59d5-48a1-95e9-ad6cbb677166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262e32e1-5c35-450a-9ea8-387ffdcab061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954df16d-cea8-4102-b621-49933d014c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d92b25-a49b-430d-96c2-3df0f5438c60",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75606f0a-3c47-4039-97c5-b3c87358b9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f857ac3-5812-498f-86f9-fd433e899640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "989a17b4-cdfe-4654-9b0e-d0622f4befde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5242d8c0-0afe-442e-b548-c6f4f032d19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59048fd8-c743-4d02-8871-0e4fe114e6b0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21cb7d7a-c13f-4d55-833e-0f829caadfe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f95da04-cfad-4423-8958-e4d5ff9c0567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44259c34-0157-43de-bdc1-0272ed60362a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34019ddb-01b3-4f1a-af11-82a9e6426b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fef23aa-8ea0-408d-b4ab-d1968c6a9345",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d622cb7-943b-4ed4-9d45-fd9ceb1ac97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39cf15b-62c0-492e-8397-71a80319bcdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4f013f-bd0f-4bc3-8ee5-f46b3212808a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fae86e-ed5a-4d9f-8305-b1ea16bbd739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d3772f-11b8-4337-b73e-0dc430e363dc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7244145-04a4-4053-81b6-ad9e7eed0b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f411a4ae-16e9-49cc-a0ea-391150c53a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f94c16-2dac-487b-93e8-9b6f2c0db353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df994c20-d188-4eeb-b3a6-feb897788fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14ba466-744c-4209-bf40-a71d67789a90",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6fb087-5568-4265-a71c-81af22cdf5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f3fd9d-d1fa-4cd1-9e0b-9bb705848930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17d97bf-3488-45fb-8f57-2ea1c70a723b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b67cf14-09e8-4729-aaa4-acf3580b4f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23e0606-7d2b-4626-aadb-634855e910b4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad136de5-6d72-4462-a348-5006114d135c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb06faee-8756-417c-baca-e1dde9bc1512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8dbaa3-b661-4faa-a8d7-666e48f66e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b243d66e-3dba-4bb7-84b9-f3b720884a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225026a3-e23f-434c-b6aa-04bd04d25158",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46272e55-7145-4906-8230-543a472602ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9cf3a2-986d-47ed-a618-c1e266effa47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33aad428-11da-48f1-a4df-68467d61b4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf454eb-3dbe-4038-81ac-035be83bd189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d8358e-8d0f-4c35-92c1-e181a8bcb176",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ed38be-f182-4934-a9f6-bb962d09651c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85d076f-2d32-4779-856a-9e59a524db10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d10fb9-3191-4dd6-b7a6-c540fe7b2338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62df402e-b3ca-4da4-b168-41ecfa1e13f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf56b548-00d8-4a08-897c-64b03c8fb856",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2e21cf-a343-4ee1-9eec-9ee89d9012e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7857497-48fc-4e8c-bee0-e9d126c338c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b23635-ed3b-4eb0-a8ae-3faecb9abbc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a83cacd-e010-4b81-81c2-89c7935e96a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37e8d99-52d8-4567-9536-7a7d58816441",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec15c43-e112-49d9-8daf-c774212a28bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e182ec1-208a-4b7b-9de7-9f571d588eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c642b1a-f848-4954-8eb9-fc9a58b2b142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323e9d63-ad8d-42bd-bfaf-c6fdd9bb3c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7820755-3140-4056-8e2b-dce3042012ab",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e3d415-70ca-40b7-8c05-35f1a1f151de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911f8bf8-218d-4a4c-9205-2059a527c1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bb761a-adb7-4b43-8c42-78091bd2a076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d7b695-1eb8-4fce-9beb-f7c484586ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ff242a-f0f7-432e-a608-951d004ebbe1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4e44db-9c93-49da-8db6-747b5732ac31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720c30fa-dbad-443b-9be4-38ee9c8bb8f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932ec941-ce76-479d-b116-51138bc8a610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d57aedb-3e03-4bef-9a39-12880ebf9986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6455e9-f80c-4890-a37c-fa9d4628cddf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ff5584-b636-4e7a-9f5c-95beec1466f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbbbf15-25e9-4c21-bf5b-18a629c6adca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ae5bba-b93c-45ac-b6ee-9ff8e0fe4241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45dcbc6-5849-44f2-ae77-235606623cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea57c8f-6dfc-4b52-9f73-a176407abd19",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff27ec7-a568-4916-bac1-b0febcef6198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb53e2b-61ab-496b-8841-3ae1b0b1409c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35153d09-d4ab-4d7f-a1db-50bcac388f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ecf6e01-02fa-4ea4-a87a-9073039374a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b980cfb-8e97-4529-aa36-569fdf618a64",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90005ec-f3c1-4697-a0d4-87893afaee5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9d0cd5-1378-4297-9c9a-b79ab8735794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd71bf6d-e318-4370-827b-fe66779c5294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56791952-3d15-4fb9-af96-e9af3374830f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04842710-ae6c-48bf-9bae-cccbfc94beb1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fec8700-4adf-478f-a201-5c231c43a7b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6bf995f-7e00-4bcf-a5f2-80f0985e72ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d66b7b1-cfb1-4028-8e9e-7b952b3b02a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18c0b3b-77c2-4b82-9869-581884da8029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a8697e-4254-4e53-9c5d-16ef63354783",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca541d5-780f-414e-b810-16ffcef6d0e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35bc2a22-cece-452b-b530-65d1b8d3905c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd64d75-0c9f-4257-83a9-2e9b0a4013e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64590cab-cee0-4ee7-82bf-a104b7eea6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf2e5ce-8d25-4cba-8831-af8b47a484e5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53df4113-0b9b-4b6c-9a3d-92a66df435ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ef4122-d036-430a-aa40-77dc75050af0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99b1720-bb45-444f-9355-58c049309dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6414fc-1c2d-4ee6-9ca1-29050a5c85c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7112099-eaad-4de8-b70f-58540ff6e576",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47719a54-45de-4185-85fb-c810c3e3f15e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01745617-6f32-462f-8d32-8b4d089644c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b565136-ee6e-484d-8caf-45e247f90682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f8382e-866e-4361-9c74-8a0151705c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f958c71-a315-4319-b64c-8d5b8c41ab44",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4e173a-60a3-491d-859d-6aa40ebf0aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0bc7b8b-db11-4120-afc0-a7d1ebf616f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "100740a8-b176-4386-88fd-9eaa394709d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded97b49-51af-4cc5-a239-1a262551d020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4eecbf5-c4e4-442b-b575-cd0935efd1d1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388a6138-48b8-48d8-9c10-e29433d27de6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fce2f5b2-3c96-4d4c-81ca-c488cd417871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68f0312-5c66-4146-a834-7323124442bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ab3257-f751-4a83-afc7-9e85427d7773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363720e9-c072-46d6-beed-23ab66709cfd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1d0e4d-5b44-481a-9316-7933a79d9886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d31c0100-a192-4b01-b724-16712e3ca3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4dc4fe2-963a-446c-8e28-813bc987db5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a5c429-a4f3-4768-9627-0678f077e048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b7ec84-7097-421e-84a9-04898f6d244f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930a0e17-55b7-400c-94a4-cb54c15a2b4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c2605a3-5eb2-45cd-a9a0-a258ac593e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06df61de-ff3c-49aa-9445-346e6ba617c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f700d8-29e0-4452-9109-2cbeedd084b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3af2731-5061-4367-804d-4f71751e658e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe6063d-d6df-460c-9c06-1fc3e0e50e24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25158272-e7ab-4cd4-bfbf-d424f032eb96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09b45ae-8409-4fb6-bf89-94bf7e0afc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33bc565b-c49b-44d4-a6f8-51f9f5b38b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670fa27a-fc5f-410a-a89e-a04f5e62e0bd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb08d45d-5067-4910-8197-72e2f1c294d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2fb86f6-5412-41aa-bf95-ff6b9944d218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71ca06f-0498-4c05-9ed6-e93caf56f64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4bf6137-8492-4dee-9625-3397bfb1c0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36138bc-c822-46f6-b775-0c5e5e998525",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7bf4d0-5f64-4ef7-8394-600a9ed4520f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e22615c-f30f-4be4-b82c-167a502ab727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9249e7-5b29-4805-b23a-81fb47a36a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1c3735-7db0-4ecf-ac2d-a9ec302cf6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ce1bf0-a7a7-4d80-9232-dc3ddfcdce05",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed637a04-22e1-413a-b5e8-8982778d7664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e481525-0cbd-42eb-87b8-bf6420e6c86d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be93aa2-e885-4594-bab6-e4953ac5aa20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11dcbc23-b048-459c-b1c3-6c9c4d7fc5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef61afb-5534-467b-87fc-a641069bd670",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd17ce8c-3e64-4287-80ed-f4a2ab9f0112",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd111899-e8f3-442e-823e-565e2a2184c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaa47ad-0762-42f9-946d-bf326537efb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e89d746-ec57-453a-95e1-77ffe796cb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e8d37a-e922-4ffa-845a-2b2f71005655",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9600a5-b20b-40da-ac30-8cf2f8330973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "892ac814-caa5-4a0a-9f7f-14861d05ad14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f053cb47-2520-4104-8c98-1b17afdc7265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd87960-dc7f-4597-919f-bf4ae42bf9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f87e19-df49-411f-9079-98ae9dc2c59c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f62a4e-6a47-407d-a020-839b43ff8635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3363794-058c-427d-b689-1959d5bd732c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb95ec9c-e420-4402-8023-97cd3d8e0821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271f79be-43b5-4df0-acb1-dde7f779996e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232f3e13-d894-4a1c-be48-a880bd50c9ab",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9652fcf-9a56-40d8-8aab-0bf4189cebbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09d54a75-e58a-45ff-b049-994a11f21bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b5d429-e53f-46ca-98e4-e6aef6c82282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a6e04b-7580-4315-8f27-56f742236b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44ee964-f685-4ce2-866c-12f25d63e9e4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb84ccaf-876b-4e0b-bb88-9c3cc718bf23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04064dd7-8713-469b-8dc5-0c4efa9d0519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88caad6-077d-4658-85c8-e15711c1f276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b80ffd0-2743-4990-aba0-f03e451c5ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7615fd-631b-4373-b4b6-15970b9ce630",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd27167-5966-4451-af9a-e30ae25094be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9c987c1-5d00-4050-b5ec-5889f0183ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8861d9-5d66-40cf-aded-163f8a5192fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcea8ac6-4d6f-4370-8a55-bffe063f62de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4eca9ee-9fbe-4ff2-8e1a-2bff1bd3a8cb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6358d8ae-4cad-4bca-9741-6d5660b6e2d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8679005-3cf4-40a7-a5f4-4ddb1d6f386d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc577f2b-4110-46ca-b0b2-4dd140788c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c9773a-75d4-42a6-8b8c-3d011fdc334d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e67c65-ff98-484c-b8fc-d5483ee66cf1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d0c6af-b28c-4bb8-93c3-172c62007736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecde3367-a71c-4208-88dc-f708b51b4124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df05c10b-78cf-41be-b477-2411c92787bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545704a3-a292-4469-9185-d91c7858de7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812ceaee-6067-47fc-b73e-d74a1efe1ae3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d27cb7-e08b-4b64-a337-6a13881ea60a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82229a35-aba0-4389-ad66-1df99aca7c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4c67c0-a462-4dee-b724-f36d74c2c04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7799f3b6-909d-41aa-8538-42cf511ae727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659042ed-77d2-44fe-a772-cf29d0435712",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d99d03-a930-458a-9bdc-a80f3989b426",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5525aada-c435-4658-9757-cfefcee6f37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fccab36-da89-48cf-9435-a9187c7069e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f00919c-eedb-4d70-a6bb-267465a70fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1121ab66-a16b-47ff-92d9-592779b24a6b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6dbe92-078b-4a1d-a8af-e55070046f62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a3cdd08-a9ae-40d9-b46d-85b09ba35bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c55f4f5-ab27-4522-958e-688e7414c7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712ba827-9911-48e2-a172-c4be0c4d4e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d9f4e0-f18d-40e9-8c39-e73040fc7db3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb144346-ee52-4c12-b20a-d1e3607d3976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33784369-d8b7-4465-87bf-1b61992051bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aca0461-afd3-445a-8561-61d9ce18485d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487e4d8f-2cd8-4875-be4b-f01472b02556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8433ec7f-7139-433b-9158-4c159c142c7f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76af8cec-00cc-4f4d-a11e-58786927e81e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af09f20f-b807-4157-b294-66c622a85d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d409fe5b-7b41-44fc-beca-b6f4c95606ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7823268-f7d3-4c95-a9ab-d2af147c79aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483bedf8-bb4b-46e9-8786-ed95c0515874",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5377802-07bd-44a4-9bec-59c31e4f46b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88ef0bef-b8e4-473f-b208-f649884120f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0e2bc5-765e-4da9-96f2-b6de30ce932b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e767d1-b63b-4b0e-8101-f28cda1be0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bf2aac-8f1b-4163-be52-c57c8fffa7e7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ceda76-c32e-4b8e-863b-8fe4f6d85005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1b32edd-242e-4e04-b613-9b4ac189235f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd76bd6c-15bd-4c85-8c5e-7eeae316762e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8094647-6707-4ec6-abb7-a94645c48f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cb5689-7b10-4a4f-aa1d-7f4083f3260b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2d7822-146a-4f9b-9c6c-ee7286530954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f1cf8c2-794c-4264-9725-722638eda7ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa71dbf-d3ff-468b-8fb5-752d62382a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3bc81bd-a8db-4603-afbe-5236b7d26d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4444a96-6f68-4040-9157-92059cf892cc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a082b326-dc17-458e-8918-545d9559b611",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b825a2c-79ce-47c9-99b9-719b2aa4f31b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6beb57-b222-4a4d-a281-fa73113b557c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd8fa3f-e0ff-46a6-86db-6e81fd6b4c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f920e7e6-e901-4e53-a7bd-cf994acca9f2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1149373-d0ad-499d-b1a2-602f998fffdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "210da5f4-adc1-44ca-9cd0-9368965855f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7095a040-fb87-49e0-b764-5f7ff1682798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d818bc-fbe5-4a8f-91d3-7cdf4ed42d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fac929f-831e-4f2c-b57f-26496dceeb80",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dfe988-805c-47d7-9ba4-bca7b1d01693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42b22083-fa2d-4889-83be-129b486eeb93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d06f922-c7d4-404f-8d01-bfde2301779a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457ee57a-92e1-42d0-bf27-c1995322e17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba1371c-81a4-46c1-8dae-273790c2fe59",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee638e9-5914-44b4-9edc-cc7708bac1d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7905f12-9e69-483d-9c71-09db58bd0363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8b103e-89b5-4af2-9d6e-0672bd2217a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e563392-7719-40b5-8e3a-6e6ef4dffeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65702160-4a80-49ee-9ee3-46aa1f0be5b8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230d7d1c-f33a-40b5-88f4-b95a12f2c98f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42b2a0f8-c9ab-4b1d-b929-34deaf167064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68dbcd4-c41a-4acd-9165-1116091697fa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8557e57f-6a53-4c1d-859c-ee4dab95311f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a90473-685a-4b5c-967b-a640e7da6a69",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b369151d-46d6-40bb-87fd-86a7d087ff4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2cfcbc6-686d-49d3-83eb-9101b6f8f9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1200b627-9f3a-4105-a22b-c3310b42cbb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5357cc5-25d4-4c28-adfa-64112d8f46ac"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdca1c16-6391-4704-b806-4196f6768f2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fb976af-bc84-476b-a778-39129790d581"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44c65ef4-ffbe-4c63-99fa-34091dcd51c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bcc2f7c2-a49b-4fe6-a21c-cc569729d87f"
                    }
                  }
                ]
              },
              {
                "id": "4ecbe2a9-9284-4934-9687-6a1ae8b09d51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3dc219e6-17f5-44b9-ab4c-31bfe88c15ca",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0205cfc5-bea0-48de-9d37-c3e6ab973b5d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8e80ab19-1cb8-40b8-9389-7ec892d92f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bb4a14-82a4-458c-a127-c35ce295fbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09de44dc-c4b3-482c-a3e8-44dad7b37275"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17bc6d01-9e01-4246-9d0c-0477f9ef4e68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c124e911-bd98-4d2c-be1b-6f84e7fd2acc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7a44c64-9813-4e64-91d7-362db7d73b09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96e02a3e-30c0-4161-be54-b1b4051cd1ef"
                    }
                  }
                ]
              },
              {
                "id": "bbc78a77-66c2-487d-bbbf-445cc75b9097",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "121dd68a-8c6c-4b23-9fe6-c9a18e67b197",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f458710-e20f-4bc7-a162-451d77c771e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ee7e1915-dd37-452c-8fa3-c2be477708ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5e91e2-adfa-4323-b753-c949a349d26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0eafb4-c334-4dab-bd45-ad37b6e28d63"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c0ebecee-489f-4e10-97f5-cfdfb3dcbe20",
            "name": "Positive Testing",
            "item": [
              {
                "id": "893281e8-59ca-4242-8197-38b5002d2da1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f06bcf17-9c2e-4181-9782-9611c9d5843b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "de3a8ddf-dbbb-445c-b6ef-39225a41801f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "146adbf9-5efc-4ff7-8040-d4b560a76cf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97217dc3-6e4a-46cd-a373-8a2a09be31a7"
                    }
                  }
                ]
              },
              {
                "id": "4c87ecbb-5a53-4e0d-a3e1-23cd3d18204c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d818c19c-a824-40da-82fd-1d42942ad7ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fd28149b-d897-43c1-971e-8acf1cd162fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61f0887f-8047-4f9c-90cf-d8b45097472b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b8c35ac-4ae3-402f-82a3-4172afc21335"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4bcd25a1-5a9d-4371-ae93-9e7e5df85d8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d4e0cfb9-1c36-44b4-99ff-082944923aeb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b44c24f-3d82-422e-9c64-8d35af48ebd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4b0df3f-a7a3-4978-ac92-c28dc58a4b42"
            }
          }
        ]
      },
      {
        "id": "56bfa78b-8741-4c03-9ac0-86a63bb383d0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f99087f4-6eb9-4ff9-b2d9-b294b77dd291",
            "name": "Negative Testing",
            "item": [
              {
                "id": "415aca8a-5fff-4c94-8b1c-70d5a1c5a7fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dcb3e181-2fc4-460c-a802-2d52ff5fa4ec",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08eb90b-d434-4b4d-9ec6-f2381f344cf3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "47d414e0-cacf-4dbb-9949-055e9f3c9770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1c7784-1aab-4889-8b6c-0c86367b38df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06b2895d-5293-4afe-88ef-e6b065d2fc0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98b85fb1-0728-4f9b-99cf-f2ff0911ac27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf3d5ac5-c421-4117-b70a-7f3608523721"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d35e81bd-37ee-48a8-bc57-8116476ec51e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "deb9d95e-1964-41ab-921b-b43ceb9bb7a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8656a41-9027-4285-a3b9-3960e3b59554",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "53cb30dd-95ac-44ce-8292-3068cc4e1aab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58ae3df5-2bf6-4824-925b-dd5fd7bdf766",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc12c41f-6997-4312-8bf1-a2201aa4401c"
            }
          }
        ]
      },
      {
        "id": "81e34883-8374-4ae6-a19e-34515215f11e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6b4adb94-2821-4b89-971f-9ab8b9a09ed5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e03070e-f6ef-43ad-b32e-33222242b16a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "247f9278-506b-4054-90d6-ad4474ed8521",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8761f897-a460-474a-a36d-ca6b6756d4e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b35a2511-3d92-4509-9e96-0e2c1220cb8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5c3e7b-a51a-4bbe-b67c-59a93eb68e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6639561-7703-41e1-8141-058154fc098c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8df1dd2e-87a4-45e6-a3ca-1e90e262c5d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "985a84c3-064e-4982-be8a-9e68e706e1b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e8d3245-c502-4894-9720-ebc12702ca92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a73646b-ce47-46a6-8628-b892aa167ac2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a408ed5-5810-4015-98b4-52bce637bbf4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5cff7f39-efb5-4b4e-87ca-9a016ad0577c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89fbda25-914c-429b-8b7f-cb738c7c4605",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa884d3b-073d-4fcc-a433-c57e1c10315d"
            }
          }
        ]
      },
      {
        "id": "881d63c8-1d47-4386-baa0-da916a19fee6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a8e8192c-5bf0-4f07-be09-53489ba7e568",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ce9b0fd-3621-4a57-a7ce-52457cd57fb8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "731cb648-b5d6-474e-9c41-fec5de2f86a9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1cae4d-9993-450d-a761-e2cf2ae6e43c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f3c06ad-0b9e-47e1-9f0b-06860a2f798b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6764de98-7544-4a36-b4f1-90641d4ac4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb997837-2bef-40b7-a1b6-df154f4423f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8143891-df6b-422d-b8b6-a9963f607f98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87e8d24b-ea45-4f71-823f-74075d31f9ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a0b04e0-530a-4a4e-9dae-52d98db73c5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c87748af-fccb-49b8-b22e-0c7c72e460d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d40bf80-1c27-4b39-8552-2ab03ffa4590",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b6fb78f2-7e28-41ee-bdd3-8573f618b196"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "579daa7d-4e0a-44a5-90d4-7664188b2992",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f84a09aa-28c1-4ed4-a489-ea737e55a712"
            }
          }
        ]
      },
      {
        "id": "225459e7-d3f7-4363-a213-181364753d79",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "585f509e-8906-4cd7-a0fc-c081f9383e08",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51a5e199-87e0-48a3-b0b0-0e2f799ddd68",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a2db826d-5ebb-4960-94bb-2bf44359aa2b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dde8a8e6-2e12-4e2e-96fd-bb267f278bda",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "029664f2-babf-4444-87f1-c1a1c2a70ccb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 52.55789473684211,
      "responseMin": 20,
      "responseMax": 290,
      "responseSd": 21.541009011930626,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703637261125,
      "completed": 1703637285188
    },
    "executions": [
      {
        "id": "8d540659-a6c4-4990-b50e-5991520b80a2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a6486283-b913-42f5-83ee-ae2b65b68996",
          "httpRequestId": "5ab12bcf-f0d6-4d23-a704-95d124d862d9"
        },
        "item": {
          "id": "8d540659-a6c4-4990-b50e-5991520b80a2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f74e7d4c-013c-4e04-b741-16e97b351edc",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 0
        }
      },
      {
        "id": "e5461519-1075-4c66-81e8-d611800ef9c6",
        "cursor": {
          "ref": "b0ceb4cf-1117-4088-9f6e-9be40868ee8b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4c29a3a5-2ba4-4371-95ae-0e4e67627258"
        },
        "item": {
          "id": "e5461519-1075-4c66-81e8-d611800ef9c6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5a1aa4d9-0f1f-494b-9c86-2ecdca2b4237",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "4ae01bef-b5ec-420c-be98-59557ac2d947",
        "cursor": {
          "ref": "389f76ef-b848-4153-a62f-cb8a3280fdbc",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6009cba4-d6fd-43d7-a3e3-01652d1299fe"
        },
        "item": {
          "id": "4ae01bef-b5ec-420c-be98-59557ac2d947",
          "name": "did_json"
        },
        "response": {
          "id": "44caabb8-5773-48d3-8a93-9670c0952c19",
          "status": "OK",
          "code": 200,
          "responseTime": 290,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10edb96f-a972-4d58-a7ae-001563fd9862",
        "cursor": {
          "ref": "0e86041a-9e64-446f-aade-fbc055caf726",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0f13b2f0-c7e7-401b-a743-fba89787038f"
        },
        "item": {
          "id": "10edb96f-a972-4d58-a7ae-001563fd9862",
          "name": "did:invalid"
        },
        "response": {
          "id": "42349ce6-61e0-499c-826d-6cbef657d232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10edb96f-a972-4d58-a7ae-001563fd9862",
        "cursor": {
          "ref": "0e86041a-9e64-446f-aade-fbc055caf726",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0f13b2f0-c7e7-401b-a743-fba89787038f"
        },
        "item": {
          "id": "10edb96f-a972-4d58-a7ae-001563fd9862",
          "name": "did:invalid"
        },
        "response": {
          "id": "42349ce6-61e0-499c-826d-6cbef657d232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8404c83a-3977-4ecb-8763-278a6721e472",
        "cursor": {
          "ref": "27ae13a6-836e-4d50-b9f1-66cc2387507a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bee18ee7-124e-4b5c-bb63-0b928299b300"
        },
        "item": {
          "id": "8404c83a-3977-4ecb-8763-278a6721e472",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "67ac93de-bce9-4078-9758-0f46065c0c39",
          "status": "Not Found",
          "code": 404,
          "responseTime": 162,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac692a92-ace6-45d4-9df5-2fb1b46f6a37",
        "cursor": {
          "ref": "610af863-fef3-48fe-9df9-3ebf00f64b2e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4ab362f7-3b9c-4d7e-aad9-d42d60c8141e"
        },
        "item": {
          "id": "ac692a92-ace6-45d4-9df5-2fb1b46f6a37",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9dc1384d-5e60-447e-afd6-fe1be074b9a8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe436f1-a04e-466f-851a-a12980d0f903",
        "cursor": {
          "ref": "b760ec61-41af-46c0-8173-2d38320bb5e6",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4a5968a7-5cb6-426f-922a-6d81837c6047"
        },
        "item": {
          "id": "5fe436f1-a04e-466f-851a-a12980d0f903",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "874701bf-aca3-4da6-a735-e47c834d0648",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9c1f39-a2be-4d85-b9b4-021f38f62f2f",
        "cursor": {
          "ref": "10f6dbe3-ff71-4291-afd5-e6c653424bce",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "00558cd4-d21d-47aa-8d1a-3e8461189024"
        },
        "item": {
          "id": "2d9c1f39-a2be-4d85-b9b4-021f38f62f2f",
          "name": "identifiers"
        },
        "response": {
          "id": "d5b03f56-adcf-4a23-9a5c-00b4b10f6eda",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d9bb8b-ca1e-4580-a350-699055224b5c",
        "cursor": {
          "ref": "d08808e1-4a91-458d-999d-8c16a0cf6fa4",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c35bed9d-2652-4536-8fab-93d4d76577e7"
        },
        "item": {
          "id": "86d9bb8b-ca1e-4580-a350-699055224b5c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b37ed56e-b5a3-4adc-8057-e174ca444daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3660a648-5455-431e-9e3b-c7f9da52f26e",
        "cursor": {
          "ref": "ff704231-afa1-4ece-9cdf-de82973b4a7d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f35d18ae-7879-4840-b82a-cffefa6ebf0e"
        },
        "item": {
          "id": "3660a648-5455-431e-9e3b-c7f9da52f26e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e2f13241-4bce-4752-8600-41aa6a98e18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48207744-983c-4c2d-94f4-4c0e109c24eb",
        "cursor": {
          "ref": "3427a3e0-c354-479f-87a0-a52b55eb721a",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "10312b72-1164-45ea-bdd3-d95af75db2ba"
        },
        "item": {
          "id": "48207744-983c-4c2d-94f4-4c0e109c24eb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d732517a-7875-4865-b020-c912dcc5e42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0696f64f-20c4-470e-9ad5-77cf9fa7a76f",
        "cursor": {
          "ref": "284452d4-72c3-45c9-984f-de5405ae8d25",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "20b2500d-12dd-4df9-b240-f1a83ed0df84"
        },
        "item": {
          "id": "0696f64f-20c4-470e-9ad5-77cf9fa7a76f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c0850e72-eba9-453d-878d-8826d5201537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39bb402-ea28-4578-a761-d5065347c78c",
        "cursor": {
          "ref": "bbd2c438-8c7a-4f90-94c1-8de3da4e2ce9",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b542deef-a5dc-49ef-8091-b78149cd559b"
        },
        "item": {
          "id": "b39bb402-ea28-4578-a761-d5065347c78c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e3616178-dfd2-482b-b3d0-77eba5674be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe815d19-f516-425c-a6c6-be8dee31df7c",
        "cursor": {
          "ref": "3d7b6b7c-1221-436e-b95c-2811132d772b",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "657151c2-4175-4abe-881b-1e8834dd535e"
        },
        "item": {
          "id": "fe815d19-f516-425c-a6c6-be8dee31df7c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d9567083-5e9e-40bd-95c5-43184c0b1f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29cb1f6-7c32-4bef-a915-5336535a9e5f",
        "cursor": {
          "ref": "e367efdd-588e-46c2-b6fc-8c397f1bdd41",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5a7cfd6d-c00d-4ae6-acf0-8dce52d9815f"
        },
        "item": {
          "id": "e29cb1f6-7c32-4bef-a915-5336535a9e5f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "49190f45-5fcf-4cb5-95d7-c0e93fc35a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd54e02-de30-4f9a-949b-947b914e867e",
        "cursor": {
          "ref": "6c6438f9-89f9-4245-ab7c-e53cf2849703",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "63c25c88-c3b1-48e1-a264-0ccc94aa3db7"
        },
        "item": {
          "id": "cfd54e02-de30-4f9a-949b-947b914e867e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "33fdee86-a96a-401c-b281-de8329407d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbc1ae5-d128-4e59-a8e1-c9b3fdd7c021",
        "cursor": {
          "ref": "2a3acb59-615f-407d-8cbe-3f3fc1074f36",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5609f990-361f-4ec4-ba49-482a195b87f0"
        },
        "item": {
          "id": "2cbc1ae5-d128-4e59-a8e1-c9b3fdd7c021",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "46b4e37e-f2b0-402d-a5bc-24690927a6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e384676-dd93-43bd-8fbf-9ec1945a5aff",
        "cursor": {
          "ref": "aab8a3a4-6971-499b-ba57-0053501ef502",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "745efb62-6732-4122-8854-56c05587ab8b"
        },
        "item": {
          "id": "8e384676-dd93-43bd-8fbf-9ec1945a5aff",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "49263b3f-1896-4737-93e8-73f768db64f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823e8ab0-5cdb-4ab1-9833-01e39f27b96e",
        "cursor": {
          "ref": "5b212bc5-d608-4958-bc76-cf69e5781a6f",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bd15273e-9b6b-4af1-8479-cc9720c6a717"
        },
        "item": {
          "id": "823e8ab0-5cdb-4ab1-9833-01e39f27b96e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b7a27b5a-1522-4238-99f6-b747bf112aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b18a427-35a1-42d5-9450-fe29d0b64a89",
        "cursor": {
          "ref": "ee4b8149-a308-4731-92cd-66c1424fa313",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5c0fd03e-09f4-4580-a453-956aa375a9f9"
        },
        "item": {
          "id": "9b18a427-35a1-42d5-9450-fe29d0b64a89",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "144d6b1c-7c6b-4ce4-8ebf-896d68918314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd76112-ee8d-449d-826d-15787320526f",
        "cursor": {
          "ref": "637a21c0-1b7d-43d9-ac3b-42ccd9492303",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7033f976-c9e2-4c16-96ed-40562c5a66c2"
        },
        "item": {
          "id": "2fd76112-ee8d-449d-826d-15787320526f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "229ccaf1-86e2-40c8-9687-09cef7408535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e64426-715f-4276-858e-5d98969a0b9f",
        "cursor": {
          "ref": "1db08017-2c40-4fe4-b312-9a9e59b39b1a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7344d221-a99d-465c-855d-d9c1b14b3cb3"
        },
        "item": {
          "id": "e2e64426-715f-4276-858e-5d98969a0b9f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7ec17e41-8780-4bb1-81e8-3f62cad57331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef76dc7-c44b-4067-8e78-f8522a0ae4f9",
        "cursor": {
          "ref": "14c7f73e-8589-4184-bfe2-6f7c26f81a6a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6c70a22c-1e87-4af0-96e8-5340ae4b1ede"
        },
        "item": {
          "id": "bef76dc7-c44b-4067-8e78-f8522a0ae4f9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "24e18d46-9bbd-4aef-b9c2-24c75d4d0ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320fe36d-204b-4278-aae0-abdc99765591",
        "cursor": {
          "ref": "b04e69d0-a717-4d80-8d95-5b69ed20650f",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b72df254-0f44-408b-9bdc-d2d6b45a04b0"
        },
        "item": {
          "id": "320fe36d-204b-4278-aae0-abdc99765591",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "91c485c1-bb70-4d2e-bd53-08e553bd3348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eba828f-0a14-4bcd-a283-ba79878512f3",
        "cursor": {
          "ref": "19783c73-1ef4-41ef-80e8-47625c6aade1",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "26823c62-3176-403e-b610-aad6ef34e41b"
        },
        "item": {
          "id": "2eba828f-0a14-4bcd-a283-ba79878512f3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "523778f4-29fb-4d71-9ac1-05dcf4dfd126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77fa95c-5a1c-48b4-b457-d50d02df3087",
        "cursor": {
          "ref": "3f528e92-c256-4956-801c-3c60dd1a6889",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "45ac4e49-3d41-4bba-99dd-392915158c52"
        },
        "item": {
          "id": "d77fa95c-5a1c-48b4-b457-d50d02df3087",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bccd6938-a176-4294-a48b-f50704041ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d6af44-bee2-4c53-9fe2-7cdddf8c6d4c",
        "cursor": {
          "ref": "7a3a3471-7eba-4f6a-a3a0-33a58e5c64e2",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b887234a-bb2e-4f46-9c15-0dc8cf6803c0"
        },
        "item": {
          "id": "73d6af44-bee2-4c53-9fe2-7cdddf8c6d4c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "81cc8cc5-3506-45da-878f-70d61d4ff6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae893c2-33fa-4c30-8559-c13dd0aaff98",
        "cursor": {
          "ref": "a441384a-12e7-4546-afd2-aafcf43b80f5",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2a144924-8b33-42b1-ac1f-be7e0f48af96"
        },
        "item": {
          "id": "7ae893c2-33fa-4c30-8559-c13dd0aaff98",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ad40993c-aa98-4999-b73c-937dc6807f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2147be-4b2f-4a48-9690-f75801d98b28",
        "cursor": {
          "ref": "09671f8c-2766-43c1-9c58-007f5f2b6932",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "003fffa9-5313-415c-9b6d-512eb3f54a8d"
        },
        "item": {
          "id": "9f2147be-4b2f-4a48-9690-f75801d98b28",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8bd0b5a7-0671-43a3-8315-5e77751d63e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9caa816e-e5d1-4a8b-b5c8-d3c38cb5dc7c",
        "cursor": {
          "ref": "46d9eb91-a6fc-472d-bac7-76d013eec7dd",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "54f98b03-5da7-4d18-957c-1cf07aaf8b7f"
        },
        "item": {
          "id": "9caa816e-e5d1-4a8b-b5c8-d3c38cb5dc7c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9cdca85b-4262-43ec-a1e3-b4af9771e725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbaac38-f6f4-4e23-afee-a24fcf594959",
        "cursor": {
          "ref": "8f0fc53c-24ea-449f-8915-6eb506df9e63",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "58c87a01-17e6-4ad0-9a11-934d9620bbab"
        },
        "item": {
          "id": "cdbaac38-f6f4-4e23-afee-a24fcf594959",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2a2d7eb9-36e0-4ed6-b048-d5181a0e33bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f678bc71-9ac2-4ba0-bd41-4ef2beacdeab",
        "cursor": {
          "ref": "76f6fb28-d2fe-4c44-b450-e0fa116c781c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fc50f852-5be3-4438-b959-720cb0033e2b"
        },
        "item": {
          "id": "f678bc71-9ac2-4ba0-bd41-4ef2beacdeab",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "03185dca-b06d-4bbc-856f-1fb06ddec8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858969e9-0118-412e-a5cf-d412a152789a",
        "cursor": {
          "ref": "3d6e8d4c-6793-45a6-bb85-98858f837374",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4af44eab-e15d-4b55-8fda-d444460a6d6d"
        },
        "item": {
          "id": "858969e9-0118-412e-a5cf-d412a152789a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e08fea18-21c3-419a-89f1-a7f4f2384f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9051cf9-a5a8-4b90-9d2c-0e1a5cae5f66",
        "cursor": {
          "ref": "be30a5c6-5421-43c3-8a2a-f060ee1dd9e9",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2f10d581-2f09-47fd-b012-6eb021fa75d7"
        },
        "item": {
          "id": "d9051cf9-a5a8-4b90-9d2c-0e1a5cae5f66",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "80ba80e1-2695-4734-b5c5-655783b92560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b302ef72-b2e0-4c65-b386-70c8f7edc5d3",
        "cursor": {
          "ref": "1f114ef4-9d03-4fe7-9ce3-9666206ce2af",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4b472876-bcc6-408b-96fb-09d599453b16"
        },
        "item": {
          "id": "b302ef72-b2e0-4c65-b386-70c8f7edc5d3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2d3529c3-c8da-44c2-92c0-689a4a001168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac1ac03-63cc-4b1f-9c86-1454064c2fe4",
        "cursor": {
          "ref": "8e5bc8d1-e3aa-42c1-baa6-e26a9b6b6489",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "527a850b-b053-4dad-ab46-72e58575ce70"
        },
        "item": {
          "id": "5ac1ac03-63cc-4b1f-9c86-1454064c2fe4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dc43d5cf-2b82-4be7-928a-4cd67f58b508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13200377-025f-4381-93dd-0d9b0fe64ea5",
        "cursor": {
          "ref": "b1f7ce4e-5b69-4b31-8cb1-8790e7b0adde",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1fba9a10-8682-4418-8e8a-e24a63aa49b6"
        },
        "item": {
          "id": "13200377-025f-4381-93dd-0d9b0fe64ea5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d5a3a673-1653-4ddb-b294-8f5a65db5956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8046c5be-4051-4c0b-9212-b6f2039af314",
        "cursor": {
          "ref": "4fe0f999-eda8-4ee4-b70d-6d49d96897b0",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b388c79c-63b5-431c-9e8a-ae429f4b47f0"
        },
        "item": {
          "id": "8046c5be-4051-4c0b-9212-b6f2039af314",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fab6ad70-1cd8-410f-ab01-b13a08f4a8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a70828-b7b8-4dc6-af50-32260128ac44",
        "cursor": {
          "ref": "70b029b1-5087-406e-8849-2bb809dfbd9b",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "508a01b6-b88b-4652-85bd-d2e00c809636"
        },
        "item": {
          "id": "86a70828-b7b8-4dc6-af50-32260128ac44",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "683a4f1f-7496-443c-8231-ac90289e145c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4a04fb-ac57-4048-ae0d-ce4651560ce9",
        "cursor": {
          "ref": "71445bbe-9894-4c6b-9445-017002045d38",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fcb171a9-3b56-4669-8035-69eb9162fb33"
        },
        "item": {
          "id": "bd4a04fb-ac57-4048-ae0d-ce4651560ce9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "89438a06-1a59-4daa-8ff1-dea2d91d676e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb110910-10d2-4a86-93ad-85fb7736244d",
        "cursor": {
          "ref": "f3cdf953-c527-47cb-a354-93eb5e044fe0",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bc94be9d-db75-459a-958a-246dfe426297"
        },
        "item": {
          "id": "bb110910-10d2-4a86-93ad-85fb7736244d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1c2d3b7c-d0b9-4b4c-9f8e-ce7f305a5e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b742f561-2e3e-4002-8b4f-97dbd78de210",
        "cursor": {
          "ref": "6f9a8886-fa1a-48f0-9d8b-69ae78cb2f45",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "79293a15-1a69-44ed-b2c4-1b53d1b26f43"
        },
        "item": {
          "id": "b742f561-2e3e-4002-8b4f-97dbd78de210",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "62901523-9bea-4bff-8607-23a033c9bdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700b2f11-567e-4ade-8c14-55be3235925b",
        "cursor": {
          "ref": "6213864f-72ff-4ea2-9177-400e1f30560e",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "10e93bea-bce2-4b78-948c-e27559f44b5e"
        },
        "item": {
          "id": "700b2f11-567e-4ade-8c14-55be3235925b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ac01c0d2-f2a3-4a20-a313-050c3b0dbcd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1821cd8f-e886-4e0b-9ae0-6907b4f49e52",
        "cursor": {
          "ref": "d5abbf0a-af8c-493b-9362-0cf08bfe449b",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "612de676-165d-4ba9-82c2-4dd8a63b52aa"
        },
        "item": {
          "id": "1821cd8f-e886-4e0b-9ae0-6907b4f49e52",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "eb73c792-efa4-47f1-a7d0-2cb8324d7bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f8e687-a0dd-4da5-9ce7-725ad9141ebe",
        "cursor": {
          "ref": "226258df-4eea-433e-a5fb-157bf8b525b3",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "00b3a2ff-ad11-4d1e-8c02-b31041a7de29"
        },
        "item": {
          "id": "35f8e687-a0dd-4da5-9ce7-725ad9141ebe",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8f095fec-b260-424d-8529-2d2d8426b3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bd71f4-3945-4887-9da5-6f19a18de2dc",
        "cursor": {
          "ref": "d39ca144-c4dc-4b29-8423-58a5766bb291",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e3c7b566-ee6b-4b88-92e3-091a2eae4978"
        },
        "item": {
          "id": "00bd71f4-3945-4887-9da5-6f19a18de2dc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "97125512-1c6c-4a5e-8ad4-1043c3a2e166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5debdf9-4f03-48ae-b0bc-35d388ec5cff",
        "cursor": {
          "ref": "bcbb369b-61db-4ff2-82b7-c6d07b15b979",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "733167dd-fe55-4224-9388-ed4ecc4ecec1"
        },
        "item": {
          "id": "d5debdf9-4f03-48ae-b0bc-35d388ec5cff",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "08de8b26-3148-4ce9-bdbd-381884bd9b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1feedab8-077e-4b41-a86b-b6759c1a5090",
        "cursor": {
          "ref": "0d9545b9-3517-4b3e-a8aa-95e9bf1e249e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1047b8a6-19af-4020-8b2c-e72637e36aa2"
        },
        "item": {
          "id": "1feedab8-077e-4b41-a86b-b6759c1a5090",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f97f51d0-d7a0-4344-87f3-707bc470f79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91d02af-3f7c-49a1-b1b0-065dd4cee177",
        "cursor": {
          "ref": "2f552b72-8e31-4df5-9fff-03cd091c2ddc",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ede7e78b-7d4a-4733-b78f-267389de9d7b"
        },
        "item": {
          "id": "e91d02af-3f7c-49a1-b1b0-065dd4cee177",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f1ffe696-5144-4a37-8139-c670eb4822cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21251bef-a570-4449-8bbe-74ed10e3ff23",
        "cursor": {
          "ref": "b8be1416-e5f9-4ff9-bba2-fa725f96c4d7",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c0e2cd6d-5cb8-43c7-be7a-64ba6d498321"
        },
        "item": {
          "id": "21251bef-a570-4449-8bbe-74ed10e3ff23",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f0c74ee8-4bf0-46e6-8978-2c7e5879c445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ce869f-451e-4625-96d3-571374b82a70",
        "cursor": {
          "ref": "f05adfe9-f089-4feb-b713-03348ecbbf90",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5bc41986-8c08-4b14-8192-0043576eafac"
        },
        "item": {
          "id": "38ce869f-451e-4625-96d3-571374b82a70",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8413f3ea-dc81-49f0-9c52-a52dc5455f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23203756-b011-4e69-8634-be9042d3daf5",
        "cursor": {
          "ref": "72b7f436-dc5b-4386-81ae-feb2c198effa",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2820c950-b415-4957-958c-6ab757e686c6"
        },
        "item": {
          "id": "23203756-b011-4e69-8634-be9042d3daf5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c165769a-1777-4af1-820a-79d6b0052543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626536bd-9af5-4800-81b4-32cd0a5648a4",
        "cursor": {
          "ref": "1be3173f-7fe4-4fb0-9bcb-8e00bad1037f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ce30b444-07c9-4186-a187-5eb033f48a97"
        },
        "item": {
          "id": "626536bd-9af5-4800-81b4-32cd0a5648a4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fac1f0bc-9296-4e67-b3c7-bdf4c40ced52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c4fd35-1019-40d7-975d-0864dd4af1e8",
        "cursor": {
          "ref": "b4faee30-d6ea-48d7-be65-4d8a740c0ff3",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "647af1e4-c79c-439c-ad1a-bcad5ccb80cf"
        },
        "item": {
          "id": "82c4fd35-1019-40d7-975d-0864dd4af1e8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e98b47e4-ffd4-4171-ae6e-1a5853991180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c934e0d-87bd-46d3-aa5e-31feac8f3f09",
        "cursor": {
          "ref": "1c91e4cf-ddf4-4299-9138-e4425db14029",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6fac483c-b6dd-4d13-817e-78012f40b233"
        },
        "item": {
          "id": "3c934e0d-87bd-46d3-aa5e-31feac8f3f09",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "03f4efc2-3fea-43a3-a605-29032769fdba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4caca9-320f-4338-92f8-57047ddde5f5",
        "cursor": {
          "ref": "16c31f3f-17a3-4a50-a302-3f5c41771f6f",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "19d390a7-8b8d-490a-9a1f-0f73ebe21dcb"
        },
        "item": {
          "id": "dd4caca9-320f-4338-92f8-57047ddde5f5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dcbd9d55-66da-4ba2-8858-bc305697ee40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a54ff2-8f20-4d5b-8978-2e5d7e6e989b",
        "cursor": {
          "ref": "3c37dc8e-700e-4135-873f-2dc013c98d44",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "83b1f5c6-3304-43af-afdd-1bda56dc2b52"
        },
        "item": {
          "id": "a8a54ff2-8f20-4d5b-8978-2e5d7e6e989b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ef305972-856b-4085-ad7e-d1dc0636296c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d01ccf-a6e6-49f7-ba56-3537e6e15902",
        "cursor": {
          "ref": "b3a94717-abc3-4667-9c62-5f5814000b20",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "822ee385-df3a-43a6-8380-13b24aaa7d5d"
        },
        "item": {
          "id": "a4d01ccf-a6e6-49f7-ba56-3537e6e15902",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d16fcb47-2e25-479f-b42e-d05b11ef131b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161f9453-6de0-4e62-b82c-acc0d90b6c62",
        "cursor": {
          "ref": "db1a5da8-b45e-4c51-866a-879e4ab1a2b3",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2396e672-888b-4470-895c-1fe89f33d92f"
        },
        "item": {
          "id": "161f9453-6de0-4e62-b82c-acc0d90b6c62",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "34dbe740-a575-4668-8731-e5f64a6f6994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2a26b4-16c3-4d73-947f-6a3f0a2ad142",
        "cursor": {
          "ref": "664750f3-8741-4b61-9a5f-83d7074b650b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "dd670b31-0960-40ba-b3de-d59be2cb7926"
        },
        "item": {
          "id": "3a2a26b4-16c3-4d73-947f-6a3f0a2ad142",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "107724e1-2f66-4eb5-a4dd-2d15479c1a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1881d8-5280-4f68-b736-a794e8f9483e",
        "cursor": {
          "ref": "54b24368-dede-4cb0-b1a7-f8be5601a657",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "eee03a3f-5dc5-4282-adc9-0cc634793732"
        },
        "item": {
          "id": "2a1881d8-5280-4f68-b736-a794e8f9483e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3b9533b4-048e-4376-8230-3605a13b678f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b15e4a-3c4b-440d-b5e7-cb826aa240b7",
        "cursor": {
          "ref": "076f6c9e-0aef-47ff-b6e3-7cff0bfe0abc",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "32f132a3-953b-471b-9447-279c32855998"
        },
        "item": {
          "id": "82b15e4a-3c4b-440d-b5e7-cb826aa240b7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b29aaa4d-ffa4-4f9f-b413-62a53281414c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3cd4a7-48d3-421e-a904-14117b799430",
        "cursor": {
          "ref": "716642d7-5cb3-4075-97e7-db729eb1abdf",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "558cf575-42ac-4c7a-9d1b-b3c15573d26d"
        },
        "item": {
          "id": "ea3cd4a7-48d3-421e-a904-14117b799430",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "63bf18db-3366-4713-8105-bbc44a87df78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4956b7-c90c-4868-baa6-fdc7dae3ad01",
        "cursor": {
          "ref": "5a8b8981-df96-471b-af16-80c40fdd385b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "74dc05e3-2380-4720-b294-9854352954e1"
        },
        "item": {
          "id": "bd4956b7-c90c-4868-baa6-fdc7dae3ad01",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "674d3361-9c51-4f72-a060-daf6a3ebd4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23013f7e-32e2-497c-ba17-1b5a0cffb0ae",
        "cursor": {
          "ref": "8638b739-6fb1-47d8-8d19-a61f4cb11a2e",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "953ac3cc-2209-401f-ad48-37ad3931aaa0"
        },
        "item": {
          "id": "23013f7e-32e2-497c-ba17-1b5a0cffb0ae",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ac43353d-0316-4953-88b9-688864ee59f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bdcdb4-f82f-48c7-872a-82a56afe92fe",
        "cursor": {
          "ref": "c39c64dc-e4f4-47a1-837c-ab49d48015ff",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "160cf696-816c-4e7e-a7eb-eade47d879e2"
        },
        "item": {
          "id": "d3bdcdb4-f82f-48c7-872a-82a56afe92fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9e31a0ff-00b2-4636-a6d7-09678512dc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75c4cff-e119-40f9-8f42-d9d8c62471a5",
        "cursor": {
          "ref": "0f332f6b-bd53-460e-8517-5e42e1c8b28f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "575168bb-a5c1-4ad1-9d29-934c03db0c3e"
        },
        "item": {
          "id": "f75c4cff-e119-40f9-8f42-d9d8c62471a5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4f1bdbfe-cb69-472a-9dc3-7c527178eb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4527dab5-16e8-4128-b4c3-432b222c74b5",
        "cursor": {
          "ref": "f03c29a5-f26c-4cbf-add0-f2fa202d56cc",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f508ebf4-6022-4a99-907e-34af1172f447"
        },
        "item": {
          "id": "4527dab5-16e8-4128-b4c3-432b222c74b5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "68b95ed2-a4cc-4f24-985f-92a945098711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9548af11-4b50-4764-a253-a4158aece8a2",
        "cursor": {
          "ref": "217b5bfe-9ca0-4d70-9fe6-0a9bdc777cdb",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "40f1be0f-ebc4-4b24-8915-c94ce40ba697"
        },
        "item": {
          "id": "9548af11-4b50-4764-a253-a4158aece8a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4ebaba0f-14bd-4b55-a95e-543367751e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205134e9-03dd-4840-8fcb-da8d41207f74",
        "cursor": {
          "ref": "93023543-4e0d-43ef-b473-a23a99fef378",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ddbfd3a1-97e1-4b36-b63e-e320dee81797"
        },
        "item": {
          "id": "205134e9-03dd-4840-8fcb-da8d41207f74",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d1f03e4c-d40c-4c59-897b-7dec653be18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d62d836-7ae4-4c34-a80a-f21a010f6e31",
        "cursor": {
          "ref": "70b87f13-1d2f-4a04-b709-b7b8951b6443",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8e22cbd7-610c-47bf-9d7b-c369fd394188"
        },
        "item": {
          "id": "5d62d836-7ae4-4c34-a80a-f21a010f6e31",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7279d8e7-4fa6-4cf1-a1cb-82bda8c66240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030e1595-6402-4b6c-888f-08afd5a1a24e",
        "cursor": {
          "ref": "fbbd8462-06f5-460a-83a2-c336094254e4",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b8c12ceb-7857-4295-8d5f-bcbec1fb7f3d"
        },
        "item": {
          "id": "030e1595-6402-4b6c-888f-08afd5a1a24e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "47eeda10-38f5-4a83-a273-34d502afb1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ce876c-9671-4bd3-a46a-f4305d9b0a46",
        "cursor": {
          "ref": "5a292de3-c8d0-4b44-8564-690e8a656b2a",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "07c5c35a-da96-444e-be87-64c177d08338"
        },
        "item": {
          "id": "a6ce876c-9671-4bd3-a46a-f4305d9b0a46",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0db5cde5-1e02-4865-85c2-eed10cb16db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce363f52-9738-4bbe-82d1-1dce5286c351",
        "cursor": {
          "ref": "57cba12d-4e5d-4fda-835d-b9de24122c83",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "db9e422e-298d-4c94-bf49-fb62e2d17783"
        },
        "item": {
          "id": "ce363f52-9738-4bbe-82d1-1dce5286c351",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "81d713e9-5781-4527-8876-ad43f4ecc930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86a6f5a-b922-4c22-88bc-b83eb5f9ae9d",
        "cursor": {
          "ref": "496555d8-abff-47db-b9c1-626e80b499fb",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2b76f273-990e-48c9-9280-63a9b1b12313"
        },
        "item": {
          "id": "c86a6f5a-b922-4c22-88bc-b83eb5f9ae9d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ace1f414-435a-47d4-95b3-6cc79eab9b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a84f6d-87fd-4e0c-a555-6615c9e497f9",
        "cursor": {
          "ref": "34036d6a-c725-4aba-81fa-463e24cfccd3",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8009bf35-8635-4603-9ee8-f16e2846850f"
        },
        "item": {
          "id": "55a84f6d-87fd-4e0c-a555-6615c9e497f9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fa7cee93-b991-4eeb-840d-d1a7a85fc4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12958d5e-6643-4a2f-b3db-39601ebe2c2c",
        "cursor": {
          "ref": "41d76759-523c-4b42-b9b0-69261c5abd58",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b9feb2f1-2f1d-4b7f-a059-fb7d83b2b8b1"
        },
        "item": {
          "id": "12958d5e-6643-4a2f-b3db-39601ebe2c2c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8072bb0e-23bf-497f-86cb-9cfbeb1b9e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c5085b-923b-4e4d-90a7-cf21558e0be8",
        "cursor": {
          "ref": "60044431-cf35-4c56-b728-32e9e9665f5a",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "35bfefc1-b065-45b6-be4e-e1379456db37"
        },
        "item": {
          "id": "87c5085b-923b-4e4d-90a7-cf21558e0be8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "82a32dbb-6698-4b1c-8525-05a1901614f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2e437c-bf26-4338-9f17-b22ff2dc04a9",
        "cursor": {
          "ref": "527fabc9-df2b-4411-8a5b-6c396e1e536b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b17c9c0f-1b33-4032-a4c5-51c96b235d78"
        },
        "item": {
          "id": "5c2e437c-bf26-4338-9f17-b22ff2dc04a9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "45f9cdd9-c748-40c6-bd56-33021e6ee79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd948f3e-88f5-4063-b927-cbf56dbdd973",
        "cursor": {
          "ref": "c490eb5e-4ee6-43af-a01b-6339a661f48a",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "72b3dec1-0cc9-45fe-90b0-a4cb06729a32"
        },
        "item": {
          "id": "cd948f3e-88f5-4063-b927-cbf56dbdd973",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "363d62dd-a115-4095-b959-cf40374ee375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d881ee-3c23-46b9-8c34-f745a013cb7e",
        "cursor": {
          "ref": "93c5da10-cac3-4903-bb07-0887f10dee15",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b70fc66b-d1a7-46e0-a31d-caa5cff26f35"
        },
        "item": {
          "id": "99d881ee-3c23-46b9-8c34-f745a013cb7e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5466ac70-2af1-48b9-9cd7-1b96807a6990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cdfbde-0d6a-4204-8907-a59219c884d3",
        "cursor": {
          "ref": "21933f83-4de5-44e9-af79-a1235e9110f6",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6b0b87bc-f682-49b9-8b5a-b11947de72aa"
        },
        "item": {
          "id": "b4cdfbde-0d6a-4204-8907-a59219c884d3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c4582258-54f3-46fb-bb72-f617dcba010b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b295662-1c0e-426f-bdec-09280ceab10d",
        "cursor": {
          "ref": "8c0e64e3-6130-465b-bc4b-9d1e15a3b559",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "19f0db25-7a8b-4a0a-bc09-cfdb0dc246b6"
        },
        "item": {
          "id": "4b295662-1c0e-426f-bdec-09280ceab10d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fa12cc82-026b-43aa-83cf-089f59a3640c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994b93cd-ea78-49c9-a052-91ea1b93f191",
        "cursor": {
          "ref": "4dc7f576-c2f2-4ec7-a5a6-45948a4014fb",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5e401bb4-b958-4d4c-bec8-547ad4b83465"
        },
        "item": {
          "id": "994b93cd-ea78-49c9-a052-91ea1b93f191",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d97c8744-e713-45bc-99f2-2ef1126e77c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ceb90b-9f3e-4ea3-897e-556912425ec3",
        "cursor": {
          "ref": "f8c5a4a5-e6e0-4e48-8eec-164110b8ac44",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "08830e72-5ddc-4e64-bf40-c9db84efec94"
        },
        "item": {
          "id": "04ceb90b-9f3e-4ea3-897e-556912425ec3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a1a697f3-3429-4f3b-9969-4a231b9d6c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182d05bc-fa88-4196-b417-3af1259c6847",
        "cursor": {
          "ref": "1cd728a3-71c0-42ae-9b27-14973b6eefa0",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cb5c128f-ec24-4b0e-88b1-b62350bb219d"
        },
        "item": {
          "id": "182d05bc-fa88-4196-b417-3af1259c6847",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e518808a-918a-49ad-ba6f-e312696bc52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebeb08e-3efd-4e84-9e0d-dce5bdf65c2f",
        "cursor": {
          "ref": "537c0759-3b5b-4cc4-986c-d472fc0511f4",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4b1429e2-ccad-45f6-9b04-9cdbc807be58"
        },
        "item": {
          "id": "6ebeb08e-3efd-4e84-9e0d-dce5bdf65c2f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "02e76de8-a4bf-4434-a9b4-42537ed27343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e98f6a1-f47c-47a7-84fa-4e2fddffc3b2",
        "cursor": {
          "ref": "2f6ff7b4-c443-4af1-b949-069c3ffda8bc",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "00082ff6-2a28-48b2-b862-5e8c6d5a7b4c"
        },
        "item": {
          "id": "8e98f6a1-f47c-47a7-84fa-4e2fddffc3b2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8e46793b-0efe-4d42-bbe8-50dbb625fba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17350aa0-735e-421b-bfbc-919253d51212",
        "cursor": {
          "ref": "cd63518f-bb5c-4e08-b60d-c3c33c8b31e7",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fabcc99c-9e36-4a65-ad9d-26bd6688b991"
        },
        "item": {
          "id": "17350aa0-735e-421b-bfbc-919253d51212",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "74e361b0-7a90-44e0-8646-ce0607a315b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e532a45-f37b-42a7-8181-f54fa147a169",
        "cursor": {
          "ref": "83991b36-2472-4396-906f-6a5604d761f4",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "739b06ec-6e51-4ffe-bdd8-d40d302dda3a"
        },
        "item": {
          "id": "4e532a45-f37b-42a7-8181-f54fa147a169",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "643722d3-09ff-4bd7-a5b6-8e5c4979d89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9026a75-b38e-40b9-bd6b-97aa96852322",
        "cursor": {
          "ref": "84da278a-e7c4-42ac-b0b5-96288457ae2d",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0ecab5f3-0f4d-4242-86b6-ef6611ef75ff"
        },
        "item": {
          "id": "d9026a75-b38e-40b9-bd6b-97aa96852322",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1e383022-b1ba-4db1-8506-3d79085f7f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe663ce2-66f9-4ec9-a14f-a3781db83038",
        "cursor": {
          "ref": "026258f2-eb50-4fda-beba-b77cd38e04c9",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1552eedf-5cc7-4d67-a08a-fc1ccc8750e9"
        },
        "item": {
          "id": "fe663ce2-66f9-4ec9-a14f-a3781db83038",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1935e5dc-8d20-4618-8dad-a363ce033d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31bc50d-7cc4-45ad-a4a3-1f90a660dd9c",
        "cursor": {
          "ref": "6bbf8827-68ee-4cc4-83ce-1a7396888cdf",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a978643d-8d85-412d-809c-841090104735"
        },
        "item": {
          "id": "e31bc50d-7cc4-45ad-a4a3-1f90a660dd9c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3387c9bd-d71e-481c-a5cd-979ae55b4346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae665f0-9325-4318-b6cb-095e3bf98d6b",
        "cursor": {
          "ref": "3b2375f7-24db-4527-b4c0-37266629a8ca",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "880893e3-60dd-4892-8e31-d107f0655c90"
        },
        "item": {
          "id": "eae665f0-9325-4318-b6cb-095e3bf98d6b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d4271b31-8b92-4057-83b7-887739313449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311d73a7-24de-41fb-afdf-47aa6209e7c1",
        "cursor": {
          "ref": "66406d38-d8b1-49ba-bbdb-f721f1afabdc",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e4096910-e1e5-41ad-998e-337aa974dbd1"
        },
        "item": {
          "id": "311d73a7-24de-41fb-afdf-47aa6209e7c1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "42f2e22f-018a-48e2-a992-9ae302ba3f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0eac126-4c31-49e5-9d75-6ed3e2d8cdec",
        "cursor": {
          "ref": "5589614c-24d1-4f49-9f26-60736ec0fb68",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "41835ec2-f49c-4455-a5c0-5416fc02db4f"
        },
        "item": {
          "id": "b0eac126-4c31-49e5-9d75-6ed3e2d8cdec",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0643631f-ce68-4a26-9e05-2f4242569870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9baaa48b-86a1-4e52-b9d7-5afd33ce05fd",
        "cursor": {
          "ref": "cc672d55-e567-4086-8ce7-dc221781deb2",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ec1ccf25-498f-4479-bfee-9fd51adf5d92"
        },
        "item": {
          "id": "9baaa48b-86a1-4e52-b9d7-5afd33ce05fd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "460f221e-7622-4adb-b97d-14bbc141ac41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9429986-aebf-464a-9f4b-3eb35d972796",
        "cursor": {
          "ref": "3b3996c7-ebca-42f7-b689-a3714207f007",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "45b55b4b-62db-40ee-b179-21f0e830cc60"
        },
        "item": {
          "id": "e9429986-aebf-464a-9f4b-3eb35d972796",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "871987c1-32c3-43df-a5d9-399c934a22a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e96622-a3c7-4f30-93f6-bac9f854679a",
        "cursor": {
          "ref": "3e384505-99fe-4c83-b39b-4bfb19a177f0",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fe65dab6-d5b2-4571-aef8-225ce923343a"
        },
        "item": {
          "id": "c9e96622-a3c7-4f30-93f6-bac9f854679a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "57d8445e-4a81-44d0-a0de-b8a699866edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e73145-6675-439d-b6da-ecf690b0df51",
        "cursor": {
          "ref": "0bcee332-fd3d-4a2f-b210-23008aeac5e3",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "deb0f73f-117b-4082-bfae-b277928d8470"
        },
        "item": {
          "id": "c6e73145-6675-439d-b6da-ecf690b0df51",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fae0637a-662d-4ffa-bf73-0a04ac819944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fbcc60-a7d4-4093-be2c-1ae7e7856e6f",
        "cursor": {
          "ref": "07189d98-81a0-4d19-bdfe-e61a5c796a52",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a5d855e1-42f0-4e19-af22-fed36e1300a0"
        },
        "item": {
          "id": "90fbcc60-a7d4-4093-be2c-1ae7e7856e6f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "45249920-726b-4e75-bb9e-817571043da7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dee6ad2-b889-4a06-a183-fd143f55b586",
        "cursor": {
          "ref": "aed3f5e6-e2ad-49d3-9ebf-42b36c304b89",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d33f4087-252d-4514-a208-0896dee5ca83"
        },
        "item": {
          "id": "5dee6ad2-b889-4a06-a183-fd143f55b586",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1a3b7afc-77b3-430f-8a1d-df2da45d23ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9d002255-d414-4da3-9bc1-e21b7ed76ca5",
        "cursor": {
          "ref": "5dd9df18-0bdc-4d93-9a8e-06ca1a5dc72b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d7fda7b1-7910-4318-a1ab-db572cc537c4"
        },
        "item": {
          "id": "9d002255-d414-4da3-9bc1-e21b7ed76ca5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b7576a27-1ba8-4d93-94b4-f62206390e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "721e71d8-f379-4c9d-b559-eee67be6a07b",
        "cursor": {
          "ref": "09cfa21c-f753-4695-9a52-2d2c8f00173a",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "456d57e4-8563-4e38-b2e7-65bf18988584"
        },
        "item": {
          "id": "721e71d8-f379-4c9d-b559-eee67be6a07b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "88fc05bc-5d37-4211-b0ca-05e69f42437f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "821c6c14-cbeb-4949-88b2-982bf6484f90",
        "cursor": {
          "ref": "576187db-7d92-46f3-8459-43c723473a18",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b76b147c-fe01-453d-872e-d1ececa125c4"
        },
        "item": {
          "id": "821c6c14-cbeb-4949-88b2-982bf6484f90",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "139e2295-5f9e-404e-aa4e-a61639dee5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1897281d-ce86-4385-89d1-0530aba0e33c",
        "cursor": {
          "ref": "ffd1a14e-eb4c-43c9-b24a-fda35c57c28d",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c210a674-ffa0-473b-980f-82b4e06b725d"
        },
        "item": {
          "id": "1897281d-ce86-4385-89d1-0530aba0e33c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bf009270-c709-4b36-89ee-b2e02c2bafda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "17ff3d52-c4df-4b8e-a790-b3dabbe685a8",
        "cursor": {
          "ref": "fd498d5e-fede-4f89-98ec-360cc4754b82",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7d849e3b-8286-40a5-9c24-86a64492ab0f"
        },
        "item": {
          "id": "17ff3d52-c4df-4b8e-a790-b3dabbe685a8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "35adaade-7137-41df-a422-1b1677d12502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "17774508-c361-43f7-a469-1cca795d1cd7",
        "cursor": {
          "ref": "e02b4904-15f4-4405-8fca-5917187fd8d1",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "34f28188-43d2-4a67-bd6b-e067b731205e"
        },
        "item": {
          "id": "17774508-c361-43f7-a469-1cca795d1cd7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fe8d7be3-3041-4e95-bf19-2cc584dbcd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f61c528d-c2af-4388-8cdd-c4fd19c4fd12",
        "cursor": {
          "ref": "6bba6eb5-777c-423a-bc76-95a636dd0b5a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "18b73b3c-c7b3-4a7f-ac1b-74cc34b632aa"
        },
        "item": {
          "id": "f61c528d-c2af-4388-8cdd-c4fd19c4fd12",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c819e2d2-e1e8-460f-bb31-d9af73654338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c60d6a6-6839-46db-9842-403533ceb298",
        "cursor": {
          "ref": "1f57c5a0-3707-4a61-b635-12e370df9121",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0021ccf9-b635-45b9-abfc-99c25b8f7861"
        },
        "item": {
          "id": "0c60d6a6-6839-46db-9842-403533ceb298",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f051c510-2b60-44e7-bcfb-8911e038e9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72301261-2637-4a4e-a128-050c2432702d",
        "cursor": {
          "ref": "c4dd17db-7316-4008-b0b5-1ad7d54d336f",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ec031df1-98d0-4d39-8725-e39cae4a5cb4"
        },
        "item": {
          "id": "72301261-2637-4a4e-a128-050c2432702d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9021fd0b-09b6-4435-a29c-aa8b742085d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de35ef02-fc6a-46ba-bcd1-59cf75ea7c4f",
        "cursor": {
          "ref": "f1ba3f81-7638-41fd-830a-a74676faa24a",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c7010f85-13f0-4e36-9c84-41533fb425ee"
        },
        "item": {
          "id": "de35ef02-fc6a-46ba-bcd1-59cf75ea7c4f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "caab8e1d-9862-4362-8dd6-be5cd2e8d073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3e8189-21c9-439f-86b4-cfba6e7ac5df",
        "cursor": {
          "ref": "567dc070-4cc0-44a6-a800-9ec451971d8a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ebd93d3f-9f33-4037-ba9c-3a78a7ae292d"
        },
        "item": {
          "id": "9c3e8189-21c9-439f-86b4-cfba6e7ac5df",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "09f97358-cfa1-4a12-9124-0897e9bb39b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd5a62e-746f-45bc-8dd4-d039328711e8",
        "cursor": {
          "ref": "8c0c5a72-d5a2-4cbc-a7fe-0b102492f54d",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "adf48cf6-69a7-465f-b230-b0162f2a6a11"
        },
        "item": {
          "id": "ccd5a62e-746f-45bc-8dd4-d039328711e8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a8e0cf98-b56c-4e17-88c5-53424f7cae39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad39f587-fd50-4024-a44a-44bff0efecea",
        "cursor": {
          "ref": "9a8008de-29cf-48fa-bc03-77ab832231ee",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "20d1fed0-c54b-4803-844e-e7b134f399d4"
        },
        "item": {
          "id": "ad39f587-fd50-4024-a44a-44bff0efecea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "93824e3a-c71f-4935-8798-3ff68238d028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b9f712-16eb-4598-b855-31fa02ff39fd",
        "cursor": {
          "ref": "ecd0bfbe-1518-4be2-9963-4c0e18cf032c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f0888554-c9f6-4b16-b6d7-dddf25a8c3e1"
        },
        "item": {
          "id": "a2b9f712-16eb-4598-b855-31fa02ff39fd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fdba7bb0-7b2b-4c5f-9039-1b7b9fd5a8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9888de64-7897-4fc7-888d-9bc66a8ccf87",
        "cursor": {
          "ref": "8ef8ff63-c333-4845-99a7-95a4a87c791d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "34b10513-6e63-415e-85cd-61c1de11705b"
        },
        "item": {
          "id": "9888de64-7897-4fc7-888d-9bc66a8ccf87",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e0abcfce-1263-4f6d-88a0-009884fd93e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6ec397-c789-4e0b-bb0a-b20e00436214",
        "cursor": {
          "ref": "73dbc673-9c02-499f-ad4f-84b8527a644f",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f1885387-5f8b-4feb-9d5a-4ced00384414"
        },
        "item": {
          "id": "ce6ec397-c789-4e0b-bb0a-b20e00436214",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6239f349-e20a-42bf-b4a6-cd040c3bbe88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c0233c-6032-4d56-b744-8346aff578ca",
        "cursor": {
          "ref": "a84e869f-638b-4fde-90dd-a9f6c444fa25",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b1886781-7a64-4cf7-9597-53e1067d78f8"
        },
        "item": {
          "id": "f7c0233c-6032-4d56-b744-8346aff578ca",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "435ddd49-38f1-409e-9b96-aad15387f721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6910c3d1-1e76-4347-9427-c61e5906ffb5",
        "cursor": {
          "ref": "ee2ad7b7-1121-4fbe-8bf9-36b0ccd81414",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4bcd0d47-737b-41fe-9cc1-ceea73d0cfff"
        },
        "item": {
          "id": "6910c3d1-1e76-4347-9427-c61e5906ffb5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "73a9e316-cdec-4b0c-89f4-00f9539a556d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569d3f3a-879c-43f9-9c2f-90c83c327027",
        "cursor": {
          "ref": "8a73392a-bac3-42ba-b617-fe09a96b3bda",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ced05c78-b8e6-4750-957e-79254b8e0be9"
        },
        "item": {
          "id": "569d3f3a-879c-43f9-9c2f-90c83c327027",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "da20d28a-eb9e-492c-9e04-06940facef06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60832bc2-e0ce-4206-b796-7a1bb682bf94",
        "cursor": {
          "ref": "ede9c75f-8813-488d-bd80-68dd08423cc5",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7f9dceb6-01b9-4903-81f6-7f31cd3a6a9b"
        },
        "item": {
          "id": "60832bc2-e0ce-4206-b796-7a1bb682bf94",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "02896773-f409-4ad9-ac65-d99c63c1677b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e310560f-2d0c-4c2d-9df0-f04a9938497f",
        "cursor": {
          "ref": "d0f6dc84-70ac-449c-8294-9a8ddf3b814b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5fc66b7e-8f4b-4b08-a57c-96f209fde7c0"
        },
        "item": {
          "id": "e310560f-2d0c-4c2d-9df0-f04a9938497f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5124dcc1-efdf-4bca-af92-c4bc62aafc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f70bb4-dc1e-4891-9e07-bae43cd6862f",
        "cursor": {
          "ref": "29af7ebe-898a-4490-a6fb-09a4e693643c",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "96658680-aeb6-425f-9545-db346eedd120"
        },
        "item": {
          "id": "75f70bb4-dc1e-4891-9e07-bae43cd6862f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "65f160e6-a1dc-4b4b-9fc8-5d95cd81e016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da10188-88e2-4598-be05-4f72dfc9ac4a",
        "cursor": {
          "ref": "1699ba09-4f6b-43ce-b541-91619821d2b9",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8ed1a34a-9623-4cf8-8140-c7646edf77c7"
        },
        "item": {
          "id": "5da10188-88e2-4598-be05-4f72dfc9ac4a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8cb2b599-d402-4467-ab61-5f8cc1a58bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1847b32c-c6d5-42f7-a1a2-42a16b4aa6fe",
        "cursor": {
          "ref": "2b2baf2e-f082-49c0-ab22-201e54f597ab",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0368f3bb-ac7b-4b49-b9df-b07d3b532065"
        },
        "item": {
          "id": "1847b32c-c6d5-42f7-a1a2-42a16b4aa6fe",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a898fdd0-1ec0-4206-8efb-8a49f909de73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d810232-8a9b-4372-84d6-9334d2066925",
        "cursor": {
          "ref": "fe08ee9d-8b05-4fd2-b4c5-9dae77dfab1d",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2b545eeb-f0ee-4a61-bdae-c76bac31a185"
        },
        "item": {
          "id": "3d810232-8a9b-4372-84d6-9334d2066925",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c1bef182-a80d-4939-baed-6b83fc3e07e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a248408e-14d4-41a3-ad69-06484b1128e8",
        "cursor": {
          "ref": "a0aa98af-3d5f-4b4d-88d5-d079c7cc75ea",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ebfba366-fa10-4110-bb49-df68d2f598ee"
        },
        "item": {
          "id": "a248408e-14d4-41a3-ad69-06484b1128e8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aec6c7ec-1daa-4d4a-ae13-80df65c7413f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8545cf-de27-4f2f-87a5-b2966f8c368d",
        "cursor": {
          "ref": "4fa1536a-c7b8-4373-969b-aef1d526d856",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3f4b59b1-0633-437d-b04f-336220eaa4f3"
        },
        "item": {
          "id": "4a8545cf-de27-4f2f-87a5-b2966f8c368d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a09f7180-0df9-41b7-8d2f-5d98c5a1c337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b78072-c8f2-435d-9a04-ca8268846aac",
        "cursor": {
          "ref": "e84ae96a-5917-4dd0-9097-5c187790eee0",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "574c8620-1dde-44f1-987e-4ba7d58ec122"
        },
        "item": {
          "id": "47b78072-c8f2-435d-9a04-ca8268846aac",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "09313112-1301-4868-88d6-007970688420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd596031-5de6-474f-a26b-22ea94c99c56",
        "cursor": {
          "ref": "99fa8152-19fb-4dff-9e39-bb4969e8a71d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "543904d1-164d-4caa-bdd4-edf9c5983e01"
        },
        "item": {
          "id": "fd596031-5de6-474f-a26b-22ea94c99c56",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9d9c959e-d0dd-469b-8604-e37ccd5fd2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bff39b-7dbf-40c6-9f2c-d132ff1bae6d",
        "cursor": {
          "ref": "a527d587-e82a-4f8d-817b-694e470bf5bb",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c0294e49-85b0-4233-b1cf-1531bb1a9f00"
        },
        "item": {
          "id": "51bff39b-7dbf-40c6-9f2c-d132ff1bae6d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e04e7af2-2d7a-4b53-b7c1-2fa90cf44577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4511f557-19a5-4cfd-89ba-dc2177b1f680",
        "cursor": {
          "ref": "bbe0354f-aa9b-4e17-a0d4-438b24ccb225",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3653062e-de20-4f7f-9569-12a63452e863"
        },
        "item": {
          "id": "4511f557-19a5-4cfd-89ba-dc2177b1f680",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "016618d0-7a84-480b-9650-3a641e3961ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99c689d-8e6c-43c0-813d-242b2209b7a7",
        "cursor": {
          "ref": "e5897b91-b934-487f-b8a8-78f49493598b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5a963293-29e1-4110-9cf9-bc3019975011"
        },
        "item": {
          "id": "a99c689d-8e6c-43c0-813d-242b2209b7a7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f1061816-d3f0-49d3-b615-d1adf1bfbdbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a310c98-9546-48cf-9ec7-614192b81056",
        "cursor": {
          "ref": "b27b8ece-e189-4bc1-98ed-a1b72da66dcd",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "070856d9-21b1-44b2-b7a9-3a1c98ccecdf"
        },
        "item": {
          "id": "5a310c98-9546-48cf-9ec7-614192b81056",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "83cdf2e8-3ebe-4993-adbd-18275d0e9ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f61d54-f4d9-497f-ac3d-32fb5d665326",
        "cursor": {
          "ref": "134ecf96-f547-4b4a-99a3-8ff6079cb776",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "41147e0a-5527-4701-a891-2362e3587284"
        },
        "item": {
          "id": "95f61d54-f4d9-497f-ac3d-32fb5d665326",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b538d48b-2619-4e55-a79e-7ad6d98fdf62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7299ed08-d102-4990-8244-9aae709a6097",
        "cursor": {
          "ref": "934c68c6-b102-4b2a-b998-8b061ae97f51",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "409033c5-988f-40fc-ad9c-b545bbddc422"
        },
        "item": {
          "id": "7299ed08-d102-4990-8244-9aae709a6097",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c545bb0f-f3be-4705-b699-b9b8c44cc9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912e47e4-66ee-47ba-8966-0641c2c08239",
        "cursor": {
          "ref": "0c5615c1-cf51-4254-96e8-d65122365690",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0f988e04-ca40-494b-8779-a62d1273c5be"
        },
        "item": {
          "id": "912e47e4-66ee-47ba-8966-0641c2c08239",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0a4c3212-f77a-477c-bfb5-7955f8842b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ba11d0-8d4b-44c6-8b90-bb3821dc347f",
        "cursor": {
          "ref": "80796c4c-5933-42e8-8f39-d7ba5cbdaab8",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8a7700bf-ba60-4e2d-abe2-da1100ecebae"
        },
        "item": {
          "id": "f8ba11d0-8d4b-44c6-8b90-bb3821dc347f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bb576f88-280f-47cd-9aaa-d6d2b2518eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7139d37-435b-4c8f-998a-4e535f916d3d",
        "cursor": {
          "ref": "aded8b94-0c47-4ad2-8c3e-1f9e29b4a53b",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9b26cda6-60d9-42d2-8215-c3822bf59ad5"
        },
        "item": {
          "id": "f7139d37-435b-4c8f-998a-4e535f916d3d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c9ecc7a9-9f64-49ef-9db4-eaacb32cf3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a731a9f-bd84-42c3-ba77-6374ca4abad5",
        "cursor": {
          "ref": "bcb007e3-2dc8-4686-8653-03ca9da39235",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c2e9daa5-bf7d-44ad-ab11-108a0af611d5"
        },
        "item": {
          "id": "0a731a9f-bd84-42c3-ba77-6374ca4abad5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8a56a0fb-6afa-4f08-a2d9-9e50bb6c43ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5397a582-2692-4443-9501-f07babcd08b5",
        "cursor": {
          "ref": "e5f10a21-9bab-4671-be1e-5c7b942442b6",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d01d8e65-03c5-4947-8864-30e7e5f70523"
        },
        "item": {
          "id": "5397a582-2692-4443-9501-f07babcd08b5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "80363e69-1964-4573-80c9-5d1b018d9698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc73d1d-4529-4ef0-bfef-e9f6479c2cc3",
        "cursor": {
          "ref": "6c50b9f2-45cc-4e33-95d1-08c8b663f3ed",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b0ce9319-0cb4-46af-a1d8-c67113803dd5"
        },
        "item": {
          "id": "4cc73d1d-4529-4ef0-bfef-e9f6479c2cc3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0dcd9fc3-1285-4899-a6f8-cf0d59e4d360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ceef20-361c-440b-8a40-146ca2073525",
        "cursor": {
          "ref": "27adc7d4-9504-4158-b868-40249474259c",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "531be253-97d6-45ea-a560-7879d090bab4"
        },
        "item": {
          "id": "f9ceef20-361c-440b-8a40-146ca2073525",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "08b24a67-56e8-46f7-b92d-c2f60da16488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e397ba-e637-4ae9-b4e7-dc3c45dd7e25",
        "cursor": {
          "ref": "fd973d12-b0c0-4ce8-bd6c-028cc98b25bb",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0c9d0087-60fe-4a68-9e32-20744fc3ef35"
        },
        "item": {
          "id": "49e397ba-e637-4ae9-b4e7-dc3c45dd7e25",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "49102f95-5854-4325-b84d-5066e9e9d5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caeccecd-1f19-454a-a6f3-c3cdc3e54d53",
        "cursor": {
          "ref": "722b93e1-3e0b-4e7b-b8fb-6213705c7638",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4f420bd7-b31f-4e2b-ab4a-2337f4f2f23f"
        },
        "item": {
          "id": "caeccecd-1f19-454a-a6f3-c3cdc3e54d53",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1790001d-3177-48ff-a903-7df50728ae79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6c3f9c-1eb2-432f-a8b3-d9aa7f9552c2",
        "cursor": {
          "ref": "7f25631f-fd41-4f67-a6b7-30da6e5f216b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "78172fb2-1204-4c43-999a-8d9b87243874"
        },
        "item": {
          "id": "ab6c3f9c-1eb2-432f-a8b3-d9aa7f9552c2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "66b99190-1368-40b3-974f-399c1873ca1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6efae6-7ca3-4dc7-8464-155791f561ef",
        "cursor": {
          "ref": "94937d38-fa0f-40b4-895c-34e4b5d2742b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b844a661-3f7b-4568-84b2-873f72d547f6"
        },
        "item": {
          "id": "bb6efae6-7ca3-4dc7-8464-155791f561ef",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fa6e85a3-8a85-4ba7-8887-aaacb4e975c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529371dc-49e6-4497-b404-a346f6b7f926",
        "cursor": {
          "ref": "66357341-2c89-4745-bd8f-571e17de74cc",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "12f25e59-20b6-4ad8-82e6-63b98ac15224"
        },
        "item": {
          "id": "529371dc-49e6-4497-b404-a346f6b7f926",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "617ad4f0-50d0-4636-8501-3313fb77890d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9703c26-c37f-4267-b60d-8526f0bcc9c7",
        "cursor": {
          "ref": "219e3874-50d4-4a4a-a63e-f1e61ba0bee8",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bdedf8a9-7a35-46c2-a027-d28a8934293f"
        },
        "item": {
          "id": "b9703c26-c37f-4267-b60d-8526f0bcc9c7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "825663b0-8f8b-4a6f-990c-1b4ff1c21855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d104ed55-7e8d-4678-98b7-cdf2d77ac9f0",
        "cursor": {
          "ref": "b1410713-bfa5-40ad-bf05-c86ab59ad102",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "86eecd05-f5fd-4324-83b5-49e37411a16f"
        },
        "item": {
          "id": "d104ed55-7e8d-4678-98b7-cdf2d77ac9f0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "19cce3a5-8b95-48bb-8af7-1dcede907d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c345a7e5-63a2-4d21-8643-c3425b25de10",
        "cursor": {
          "ref": "b6a86eb0-f8ba-4f3b-beb2-16ec9b6c6b17",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "021f5fa2-32e6-4202-83a2-3466165fec10"
        },
        "item": {
          "id": "c345a7e5-63a2-4d21-8643-c3425b25de10",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6bdbb9d7-741d-474c-9066-ec12c0c48f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7360e8d-308b-4e31-92b5-8fc0d6593d87",
        "cursor": {
          "ref": "f62e4bd1-8e82-4c05-8656-25832979bb13",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "59467245-d68e-40e8-8b34-c16be04c71f7"
        },
        "item": {
          "id": "f7360e8d-308b-4e31-92b5-8fc0d6593d87",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "13871069-3f6c-4cbb-8b8c-4880e6564127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4882b06b-843e-4736-bf14-edd478f21230",
        "cursor": {
          "ref": "1e2dff92-f967-4c19-8992-2fba4af5c419",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a19b225c-ec4f-4764-a7c6-fed101ca3dd4"
        },
        "item": {
          "id": "4882b06b-843e-4736-bf14-edd478f21230",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6160d1f4-9506-4366-9546-f4bad838e56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0aed11a-10ca-47e9-9254-3468ef52b42c",
        "cursor": {
          "ref": "f234e4cf-8864-48a4-955d-813b95c4bf4b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "85c35cdc-c3c2-41fe-a311-d7d5c67c1d19"
        },
        "item": {
          "id": "f0aed11a-10ca-47e9-9254-3468ef52b42c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "54d78266-839f-47d1-b807-b0f2deb873d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a70510-6833-48b0-b5fe-dee5e7d9238a",
        "cursor": {
          "ref": "bb926589-c68b-4d0e-9485-d287cab3e164",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "628cf7f6-8d09-4704-a5cf-95166c41fec7"
        },
        "item": {
          "id": "42a70510-6833-48b0-b5fe-dee5e7d9238a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7a803aaa-2a31-421b-a588-a281ac7bebbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97dc37f-747c-4be1-9678-261795203fc3",
        "cursor": {
          "ref": "46aa6cfc-f8c8-4ac9-b839-327f59c53a74",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0194cb83-4956-408c-9651-058695a91881"
        },
        "item": {
          "id": "c97dc37f-747c-4be1-9678-261795203fc3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fc120737-208a-46ab-8f65-14f4b64c5dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70f3c36-18de-4103-a976-2ad7b44b8279",
        "cursor": {
          "ref": "c6e1b640-5b85-45c2-803d-c1cfa0ce8d19",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "44622ed2-3e7c-493b-90c6-b40b04f4d4d4"
        },
        "item": {
          "id": "c70f3c36-18de-4103-a976-2ad7b44b8279",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3a2399f9-d8b6-4fd2-9eac-fd23e4d8e276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7372a9d-0438-4bf1-8853-9cccc9da5093",
        "cursor": {
          "ref": "8bede59b-0ab2-4fc6-99bb-6dd6c579e360",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ea803f23-6e57-4dbc-b0b1-ec4a2709f075"
        },
        "item": {
          "id": "d7372a9d-0438-4bf1-8853-9cccc9da5093",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8b947236-298b-4086-97b5-4a8da147dfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745d7e45-64e9-4c65-a78c-8410c766a2e6",
        "cursor": {
          "ref": "323c44ca-c533-4067-86a4-1a343ccde75a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d3711313-34a4-4e5a-8a5e-6dad4e1ad083"
        },
        "item": {
          "id": "745d7e45-64e9-4c65-a78c-8410c766a2e6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fc980359-06d6-431a-ae5a-ec9fb8654b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcdfbd3-2983-4eba-b38f-8b098bdec0fd",
        "cursor": {
          "ref": "d5405ccf-baa5-4d8c-aebd-d6834d09c8f5",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2119e023-dab5-4b54-a0aa-e223658a6a89"
        },
        "item": {
          "id": "3dcdfbd3-2983-4eba-b38f-8b098bdec0fd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "78df1559-2e28-4478-9311-3a35dcd21da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e946ee2-0d62-4e57-9a33-69688f2da05e",
        "cursor": {
          "ref": "631c3993-8244-43d5-bbaa-103530a76ac2",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e53f79d0-14ac-4e8e-b754-770d1eaf4673"
        },
        "item": {
          "id": "3e946ee2-0d62-4e57-9a33-69688f2da05e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "94fc12b6-c2f6-4b8b-b365-1572ef750379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ad856d-ef88-4b86-926a-9067966e0d45",
        "cursor": {
          "ref": "07cbb29c-74db-43c8-9be0-cf02f350a89f",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "501e9edd-1b4e-43f4-82e4-da0412a66d63"
        },
        "item": {
          "id": "91ad856d-ef88-4b86-926a-9067966e0d45",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "614127f7-a23b-4aaf-b518-9ada860e6d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b7624d-ad81-45e6-85b8-153dcc2465f9",
        "cursor": {
          "ref": "c0e40795-25a4-4085-9bdf-13231cdd21f1",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "61d5b123-f304-4bf1-b554-51bf63d3017f"
        },
        "item": {
          "id": "36b7624d-ad81-45e6-85b8-153dcc2465f9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6245bcea-06ce-4b19-b9ec-f003522edf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1455c10-80b6-4754-8c00-100f656baf1f",
        "cursor": {
          "ref": "2be7e730-4123-42e2-87fb-01db26e21095",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5d5811ee-3865-4f21-b82a-a7db5d276504"
        },
        "item": {
          "id": "c1455c10-80b6-4754-8c00-100f656baf1f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e00d3211-79ad-4ba9-af78-2d2e888af968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f8ba2a-08ec-488a-bf6f-fc860fc6f1c7",
        "cursor": {
          "ref": "242f7d7a-d69b-4569-a896-8724d661ec25",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2975c112-a1fd-46cf-bf46-0c4d605d4b50"
        },
        "item": {
          "id": "f6f8ba2a-08ec-488a-bf6f-fc860fc6f1c7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9d8bb265-c20b-4bce-b57e-6f2b65f4eeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5b286a-9ae9-4f47-979a-e7931e486db6",
        "cursor": {
          "ref": "01d8df83-0412-44e9-b529-62cd5ca470ea",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "29687ed6-1904-4d88-82ce-0afaa3e1726d"
        },
        "item": {
          "id": "7b5b286a-9ae9-4f47-979a-e7931e486db6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d7570487-661c-4f7a-b279-79bb2fef4085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a039396-f01b-4165-a223-feb0fd21e1ee",
        "cursor": {
          "ref": "f0fc62d6-fcdc-47f7-89d7-7fe77aeac5a1",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3cd92353-a2ad-4fe6-99a3-743c07ff293d"
        },
        "item": {
          "id": "7a039396-f01b-4165-a223-feb0fd21e1ee",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6fc9f980-91d5-4ea3-bb72-32d15884e694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2adf39-b92a-430e-bda2-5a8f9689bcbc",
        "cursor": {
          "ref": "86716d1a-6e5e-485e-9aae-573fd6bfbbed",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "67e4e54d-d638-431b-8b19-ba7c2f0dd2b0"
        },
        "item": {
          "id": "3a2adf39-b92a-430e-bda2-5a8f9689bcbc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "315c5f5f-9cb9-42ac-bc0d-683198b94afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7d8f03-00c3-4285-aec6-a5793b3b8009",
        "cursor": {
          "ref": "03dbdb65-e8c0-4c5d-8ed4-2d02dd35030e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "47696355-586c-4f16-868c-630618b2af78"
        },
        "item": {
          "id": "0b7d8f03-00c3-4285-aec6-a5793b3b8009",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "02d1b0b9-bf61-4663-8dfd-44a8e0a273e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67aeaeb8-40e4-4161-b257-e7676abcb1de",
        "cursor": {
          "ref": "aa93d64d-318f-44a2-8cc8-606cf2c48118",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b0f7af98-bd13-48c7-a076-8eea06db34c8"
        },
        "item": {
          "id": "67aeaeb8-40e4-4161-b257-e7676abcb1de",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "48069654-78b5-4312-bba8-3fa95513387f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c97777e-82aa-45e4-bfed-94b870b95352",
        "cursor": {
          "ref": "5d1265dc-238f-4a77-b1ff-e21a64313a98",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4bd7cf17-1a30-4142-8efd-e34f96a073cc"
        },
        "item": {
          "id": "9c97777e-82aa-45e4-bfed-94b870b95352",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ca9518ab-7c04-4370-ae4f-ea7dbda3d3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c253cc82-8d4c-4239-99b7-1011ac99e424",
        "cursor": {
          "ref": "c097756d-a38f-4133-8599-e9fd9fe7117f",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cf1797df-c2e2-4490-9cea-f6ed7eb92e2a"
        },
        "item": {
          "id": "c253cc82-8d4c-4239-99b7-1011ac99e424",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "716f9b08-bcad-4f8f-95f9-1a5f87dd582a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bcec47-d8f3-4b44-9cc4-7b085352b01f",
        "cursor": {
          "ref": "03e6f99e-0338-4d35-a8a8-278c8954eebf",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "46cfc0cf-c6c9-4a57-9c32-cabbdd486127"
        },
        "item": {
          "id": "84bcec47-d8f3-4b44-9cc4-7b085352b01f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6651398a-12cd-42dd-bd7e-51f090395284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954c5d11-d847-4215-9128-05379537ff90",
        "cursor": {
          "ref": "4b89a078-2a0b-492d-94f8-3fc73bc329ae",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "45bb9464-d49d-4de5-b830-077e1cfcfbe8"
        },
        "item": {
          "id": "954c5d11-d847-4215-9128-05379537ff90",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c5841d92-0893-411d-a9a0-a011c0655d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ae2d18-499c-4910-8a83-95538de2abed",
        "cursor": {
          "ref": "c2759f95-0111-4cc9-83af-c05c4491f5dd",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f343b348-b01d-418a-be61-da639fa4c8ff"
        },
        "item": {
          "id": "f8ae2d18-499c-4910-8a83-95538de2abed",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "16bcf1b0-235e-4914-bc3f-21bb19839bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63c30b0-6f74-410b-8375-4edd33599246",
        "cursor": {
          "ref": "d18b57bc-3b5e-446c-b8b5-ed4494d2803c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b74d8df8-e29e-4f58-84a6-fcd6338dfec0"
        },
        "item": {
          "id": "a63c30b0-6f74-410b-8375-4edd33599246",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "580e1525-5951-4ed8-8c9c-dde0bbd2cce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b15c76a-9757-43b7-8e3e-996629e8d001",
        "cursor": {
          "ref": "756a7b16-f34e-400a-a20e-3c600befb482",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c4ac1dcc-948f-42df-8def-e4dab777481b"
        },
        "item": {
          "id": "4b15c76a-9757-43b7-8e3e-996629e8d001",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "060e5335-b567-4beb-bf3c-add4a923b706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7151f0d-ef32-4656-9a20-ef9f53d7d560",
        "cursor": {
          "ref": "2fa098aa-554a-41e3-bf4d-1920e6aaeae1",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "646caa36-28ab-46ba-95c3-6b6f3090de74"
        },
        "item": {
          "id": "d7151f0d-ef32-4656-9a20-ef9f53d7d560",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7b158ac8-a2d8-4dcb-af0e-997a276bf193",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ffd846-f5fc-4da2-ba05-4186acf8feaf",
        "cursor": {
          "ref": "069b377e-e6e2-44cc-8994-5c1d4a3939c8",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "720f5051-54af-4da0-aac0-acf51c8442fc"
        },
        "item": {
          "id": "43ffd846-f5fc-4da2-ba05-4186acf8feaf",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1fc1617e-b845-41c2-95e2-e61965d5a8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e34cd7-b0b0-4833-8e9b-e1419ce02d76",
        "cursor": {
          "ref": "62da30f4-61e8-4e81-b03d-8266a7f1a0bb",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "36eaaf49-fef7-4d01-94db-0bc8230fa09a"
        },
        "item": {
          "id": "f4e34cd7-b0b0-4833-8e9b-e1419ce02d76",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "769c0945-c632-4787-94b6-91c088479612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ae9d3c-37db-44e5-8655-7890153ceb2d",
        "cursor": {
          "ref": "a756fed9-db17-41e0-8b8e-8803c372801a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b1414782-9df8-4255-89f1-90cfed7cc6d3"
        },
        "item": {
          "id": "35ae9d3c-37db-44e5-8655-7890153ceb2d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "aeb254c6-ffea-4884-a7b1-30627326d7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fff6dc5-1b6c-47ae-9307-e23e84fb440d",
        "cursor": {
          "ref": "ccac4d2e-8e9d-4ee4-8baa-53bdb5acabea",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0613b554-ca4e-4d04-a8ff-8a978b067813"
        },
        "item": {
          "id": "3fff6dc5-1b6c-47ae-9307-e23e84fb440d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "01547312-88c1-49e5-af03-3314c6842969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9772b1a1-58a2-4189-a46a-079c9b694c2c",
        "cursor": {
          "ref": "03a4c586-9299-4d04-9271-f4668554ec73",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "da3eaa5a-6928-47b2-b846-ffea89153bb8"
        },
        "item": {
          "id": "9772b1a1-58a2-4189-a46a-079c9b694c2c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a86e5aed-ce5a-4865-b5e3-88ec71430681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ec447d-09b9-49df-a017-ddc7be561e8d",
        "cursor": {
          "ref": "1c6379f5-be66-484a-ab77-307325f6096d",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ac6a5913-8706-4809-8263-dca2c79fc7dc"
        },
        "item": {
          "id": "a0ec447d-09b9-49df-a017-ddc7be561e8d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "099caea2-a2f8-46e5-bc6c-ea152fcbdd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4e19b4-c68b-4ba9-b2b6-f7d44bf49751",
        "cursor": {
          "ref": "3675ada1-ca54-4c9e-886e-3925edb3e686",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ddb607ba-6813-4a6d-8044-58db113c40c6"
        },
        "item": {
          "id": "7b4e19b4-c68b-4ba9-b2b6-f7d44bf49751",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d0387fc7-ef4a-4656-b6a4-f5306fc5b417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab22d6c-354b-47ea-af09-87f8fa055313",
        "cursor": {
          "ref": "f193e104-9b53-4b91-964a-f68a2a2c230a",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "85309a11-16c5-4cfa-8959-f88e5994945a"
        },
        "item": {
          "id": "bab22d6c-354b-47ea-af09-87f8fa055313",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9d01dd54-a43f-4363-8d2a-216b7a290d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579f8de5-5d8b-4df6-9643-4fff285c72d1",
        "cursor": {
          "ref": "8940ce2f-1808-4964-b995-d81f4386cbde",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "298e5d84-50ec-4747-8cbc-002b9f87a7cd"
        },
        "item": {
          "id": "579f8de5-5d8b-4df6-9643-4fff285c72d1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1ce5c83e-5718-4911-bb54-00ff34839989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ce8f24-26e6-4fab-b338-7f81440a7a86",
        "cursor": {
          "ref": "d003079f-d8aa-457a-9da2-7d6d6d2d6b70",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6deeed6e-1670-4f3a-b782-6c0f72ed354f"
        },
        "item": {
          "id": "82ce8f24-26e6-4fab-b338-7f81440a7a86",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b1cfcd80-51ee-4820-8a94-e567234f40e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533052a5-986e-4e4e-a913-c65db2dd7645",
        "cursor": {
          "ref": "de92c11f-d932-424d-bca8-f4e73b585011",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9cfca678-55fe-49a8-9db4-a634f0501b4b"
        },
        "item": {
          "id": "533052a5-986e-4e4e-a913-c65db2dd7645",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9f3d6823-d13f-4667-a204-e2b0df4639e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8155ab-d6f1-447d-a4b9-b65c2747c1bd",
        "cursor": {
          "ref": "286f61d3-01a6-4451-81a8-8a699baba35e",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1d5e5d8d-9252-4745-9915-12c10e1af0b1"
        },
        "item": {
          "id": "3f8155ab-d6f1-447d-a4b9-b65c2747c1bd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9203a4b1-7b23-4e0c-bbf1-b8599d5d715f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d970317-94ee-4db4-8a9f-9178230300bb",
        "cursor": {
          "ref": "54577448-a588-4463-bbb5-d58839843637",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "611b78b3-2677-4f94-a59d-be7196889352"
        },
        "item": {
          "id": "0d970317-94ee-4db4-8a9f-9178230300bb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5facaaf1-8b04-4f6b-ace0-c11bbf331ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94e0cd2-a195-420f-bbb3-8c1753b3f5fe",
        "cursor": {
          "ref": "d9856756-1c77-4a00-a56e-3eacaa19a165",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5a8c6372-a8ab-4e22-9ddc-4acdd45f5408"
        },
        "item": {
          "id": "e94e0cd2-a195-420f-bbb3-8c1753b3f5fe",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6b11f774-6009-45ca-872f-5719aa1ec62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16495f95-75d5-4abe-a54b-49230eeef4ca",
        "cursor": {
          "ref": "6213d24b-4c9d-4d3e-8671-75aee54a465e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0fdc8bbd-0e23-4412-abda-17bf59cb80a3"
        },
        "item": {
          "id": "16495f95-75d5-4abe-a54b-49230eeef4ca",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "42d6ed78-af1b-4bf0-a440-2805da2cc05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bdc29e-3379-444d-bea3-ba1991f99d3c",
        "cursor": {
          "ref": "f6a7d09d-144d-4518-a5f1-bc35a41e6106",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "53bd2e61-2d2e-4b12-bdb0-ab6e96bd9afa"
        },
        "item": {
          "id": "b2bdc29e-3379-444d-bea3-ba1991f99d3c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "12cda6ae-97c9-42d7-bcb3-f434180b3f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2482549f-f118-47ff-99a2-c7c1051e4468",
        "cursor": {
          "ref": "a1002bdb-c071-4a84-be0d-641d11ebdf7d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c880adc0-be67-45ad-941b-2a11a95fd58a"
        },
        "item": {
          "id": "2482549f-f118-47ff-99a2-c7c1051e4468",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "aea96c05-a698-4bee-a404-39a55518b163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10763465-60e2-425f-9f69-0dd80c784a13",
        "cursor": {
          "ref": "9c88e87c-0ecb-48d3-9331-7dc50a843841",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "76c853bf-2eef-4a46-8224-8078354048c4"
        },
        "item": {
          "id": "10763465-60e2-425f-9f69-0dd80c784a13",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "27872270-2370-43bc-8374-9ef709f67844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3c80b4-c08f-4dcc-b0b5-2522901a1a62",
        "cursor": {
          "ref": "8f7b7bb0-3a64-47da-89ef-717ad2faca9c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1d2a2488-315e-444a-bac7-2f4626df477e"
        },
        "item": {
          "id": "7a3c80b4-c08f-4dcc-b0b5-2522901a1a62",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "44ac5517-99d7-43e5-9d22-f1e1448c2a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edad0242-b62d-42a2-b8f2-1864e9339dc5",
        "cursor": {
          "ref": "82bffe77-f7d5-4ea7-930a-a06c97e2b010",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1dc43f13-f2b3-46cc-84d1-e13eca1ef188"
        },
        "item": {
          "id": "edad0242-b62d-42a2-b8f2-1864e9339dc5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "112bc4c8-d44c-4a4e-b2c2-fe8c25047f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f163a2a6-9721-4303-aaae-00c8061a8f3a",
        "cursor": {
          "ref": "eb352e4f-2457-4653-ac79-2d52d21e754e",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e065d0e8-d8b6-4909-b598-94eaf978e41f"
        },
        "item": {
          "id": "f163a2a6-9721-4303-aaae-00c8061a8f3a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3a971e5c-7672-400e-8730-6be57eea994c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c46349-0fe2-496e-a9b3-ccd0e587bd62",
        "cursor": {
          "ref": "6e59b6cf-7d08-4ece-b6a8-a2ea5e4c2b1f",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c935cbfa-1318-4ccb-a889-68b72295f813"
        },
        "item": {
          "id": "e2c46349-0fe2-496e-a9b3-ccd0e587bd62",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dc92f761-d64d-470f-a029-5e316eaf1804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b801abba-bee4-4a08-b6f2-96b2ed51e825",
        "cursor": {
          "ref": "535ea9d2-fc98-414b-ba30-94388570b96d",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7e15d012-5e7a-4e71-b178-d008380c5343"
        },
        "item": {
          "id": "b801abba-bee4-4a08-b6f2-96b2ed51e825",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a3447e3e-e6de-4f83-8a93-81c7e972d323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0842534b-72a4-4f01-9bc4-11ed2ddd89c0",
        "cursor": {
          "ref": "eb1a7e22-d508-463a-9ce9-96de3d595e8f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e4fb31cf-eafa-4013-815a-610713a25367"
        },
        "item": {
          "id": "0842534b-72a4-4f01-9bc4-11ed2ddd89c0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "688d66d3-825e-4996-9e4f-e4e72f217d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060922e3-4184-4998-9c49-ecdea66315b4",
        "cursor": {
          "ref": "8967a7de-ab27-4aad-b5a7-c1e6a302d57b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a0e2835e-a715-46c3-8b54-7d4459b28717"
        },
        "item": {
          "id": "060922e3-4184-4998-9c49-ecdea66315b4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ed7a07a9-010a-4930-bef1-2bbc5e18eece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1b51ed-1222-43e9-8765-933fe237f766",
        "cursor": {
          "ref": "2385366b-c789-4b9e-ba80-3aebf1ebc11c",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b49faf53-657a-4f90-8708-3bc8068a86ae"
        },
        "item": {
          "id": "ca1b51ed-1222-43e9-8765-933fe237f766",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d7981641-3618-4c6d-b25a-764a16a31b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887d3111-afe1-4503-b516-0850ba9476bd",
        "cursor": {
          "ref": "da020925-ecf7-45a3-ba13-5a61f4e4915e",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e22e9906-881f-4f3b-8ddb-0b27834355a6"
        },
        "item": {
          "id": "887d3111-afe1-4503-b516-0850ba9476bd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c3c8c598-b1da-4ad5-97dd-a5861d00b374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea6b57b-4de3-45d6-8b76-b091cf9fdebb",
        "cursor": {
          "ref": "76a9856c-8443-4e3e-a92f-2fec4cc89082",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c4295d9b-add4-450e-9518-79be3a34050e"
        },
        "item": {
          "id": "5ea6b57b-4de3-45d6-8b76-b091cf9fdebb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "82ca8fa7-d8be-4616-943f-2110bfa56852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc19213e-6163-46d7-a0e7-636cc6422e7e",
        "cursor": {
          "ref": "1172c64a-b498-4418-a04e-b772d5ebe750",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b389d57c-ffe5-47b4-a450-606ca9b833a9"
        },
        "item": {
          "id": "cc19213e-6163-46d7-a0e7-636cc6422e7e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1d0befeb-8c46-43a9-8a19-af8b23c9a540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbe3520-071b-4946-8811-538ce3b4ae2e",
        "cursor": {
          "ref": "2f279f58-a22a-4ba1-a8b6-d01b381979eb",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "69b48b8d-46bc-4b08-9847-762b24ea0290"
        },
        "item": {
          "id": "4cbe3520-071b-4946-8811-538ce3b4ae2e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bd653f7b-ad75-4599-a51d-363f8bf31ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afc7a0c-8ed0-4a6c-8619-541d8eb6e767",
        "cursor": {
          "ref": "a0457041-dcb2-4cb2-9701-75ff60af143e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9598d9d5-f6fd-4fd2-9166-253db0663f5e"
        },
        "item": {
          "id": "9afc7a0c-8ed0-4a6c-8619-541d8eb6e767",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "86b3e409-512f-42b4-a355-02a124dc30af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ade95b-3010-41da-9b50-aa461185387b",
        "cursor": {
          "ref": "23d322f8-6061-4cc2-8225-cb3c11f6e8a4",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "11716cac-d136-4427-ba72-8c559bd42a95"
        },
        "item": {
          "id": "56ade95b-3010-41da-9b50-aa461185387b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9636c6a5-5ebb-47c5-bb48-7bbc8a8c0611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83499a9e-3258-463e-aa8a-fc3e2403397c",
        "cursor": {
          "ref": "f121a18f-1140-461b-84a7-c2c1927474d1",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5e9297da-ff88-451c-84a8-daa637714996"
        },
        "item": {
          "id": "83499a9e-3258-463e-aa8a-fc3e2403397c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1e086576-8191-4364-b562-b5a7b3d25acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5297b1-0f11-48ac-8bdc-04a65bc72177",
        "cursor": {
          "ref": "b4e5aa61-6066-4831-9fa9-fa2d5afd8d31",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8008b311-7508-480d-b0e8-6343aa21b33d"
        },
        "item": {
          "id": "3b5297b1-0f11-48ac-8bdc-04a65bc72177",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7315697b-841f-4f4f-b6e4-116ac25ce4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4fbe37-57a0-41eb-8768-1fb5f1b06a2d",
        "cursor": {
          "ref": "d009747d-463f-4dfe-9d3b-7f800686936f",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6222bcc9-2de1-45ca-9d83-a82298504d26"
        },
        "item": {
          "id": "5a4fbe37-57a0-41eb-8768-1fb5f1b06a2d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "661b2226-623d-4027-b7e8-7aa483ea54b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95db5789-07e9-4a74-94dd-a37def6450f4",
        "cursor": {
          "ref": "63ce51fb-1f18-4bd8-bf99-e4246fe402e4",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "28a8bdb1-6e0f-4250-923b-206a4978d0ea"
        },
        "item": {
          "id": "95db5789-07e9-4a74-94dd-a37def6450f4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "67851572-2889-418d-8dcc-38879e6caff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109bad86-7c5a-4761-8618-c066131a7dbd",
        "cursor": {
          "ref": "f4e79bfc-5871-43a1-b0ad-a1e8465a9bfb",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a0c05ae0-8eab-4e92-9517-1fe818d3a4f2"
        },
        "item": {
          "id": "109bad86-7c5a-4761-8618-c066131a7dbd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "aa8b38a9-6f4d-4683-8924-c5bf0ea27025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44116a91-68e1-4e62-b47b-c4193815ca22",
        "cursor": {
          "ref": "3eecf0fe-fd1b-4d86-89aa-fea1e2bf574d",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6190de61-34ef-48b4-b8d5-24217e1bbaf3"
        },
        "item": {
          "id": "44116a91-68e1-4e62-b47b-c4193815ca22",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "09ca7c79-f6ad-45d4-a13c-809ed61b2991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c484e55-0a39-4aa3-9c69-92360522dc60",
        "cursor": {
          "ref": "2ad7af1c-3af0-4c06-9f00-b9e7a83d8df9",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "81ab556a-d929-44ac-a58d-7d4125a0ba38"
        },
        "item": {
          "id": "0c484e55-0a39-4aa3-9c69-92360522dc60",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bc0936e7-8c92-4036-b917-8b71b6538130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1220c444-1448-4c0c-a90f-03668f761e42",
        "cursor": {
          "ref": "2faaa582-530f-4d7a-afe8-34604c1717bb",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c5ec61eb-c707-4031-80f9-d4149bdd5f79"
        },
        "item": {
          "id": "1220c444-1448-4c0c-a90f-03668f761e42",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9e801c9f-cbae-4511-a7b2-59a60bd93e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d124ae0e-d381-4985-83ed-9de710220170",
        "cursor": {
          "ref": "eec6df30-acac-40ee-bc15-2d562f827747",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7a6e4960-3382-4ab6-a059-db7f45ae8d41"
        },
        "item": {
          "id": "d124ae0e-d381-4985-83ed-9de710220170",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "584a75cb-1a4b-44b9-bcd4-0da783d940aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98ba725-fbf3-42f8-8687-9a89066a569b",
        "cursor": {
          "ref": "ed08e75c-7426-4a4c-93c0-a02eb0b5e4c9",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6d9ec77b-f994-49d4-b882-185cc6dd6714"
        },
        "item": {
          "id": "b98ba725-fbf3-42f8-8687-9a89066a569b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fe66235d-8d42-4499-b1b7-519c162f57ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c931df-379d-43a5-a23f-623612d098ff",
        "cursor": {
          "ref": "7b02e785-0b17-40a5-ad2f-afe076949507",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fd922055-c3eb-45d0-9184-aa21b4dcb403"
        },
        "item": {
          "id": "67c931df-379d-43a5-a23f-623612d098ff",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "40b47451-0ac7-4be9-8d7c-c7c8ffcc10e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a21c49-6470-4b27-96bb-f4d0519b0016",
        "cursor": {
          "ref": "a3d647d6-2978-4653-ac81-7c05a937ce5c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cac86454-55a7-46cd-ae2a-c025d748734d"
        },
        "item": {
          "id": "e2a21c49-6470-4b27-96bb-f4d0519b0016",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c6270e60-f727-4555-99d7-338dd057ea12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967a5775-d8b4-4f7e-b78f-2d5b7e8e2b71",
        "cursor": {
          "ref": "f8affece-464f-4b05-b95f-3a4a539c161f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7dc33b60-f542-4f0c-9c10-ce6869b7690c"
        },
        "item": {
          "id": "967a5775-d8b4-4f7e-b78f-2d5b7e8e2b71",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f5d347e4-9373-49cb-8a04-43c2fd09f7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30ec9b7-5e61-40ab-afd3-b5851058e16d",
        "cursor": {
          "ref": "b54fc077-4af2-426d-8515-57c73d5e2fdb",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e2b15946-de14-4a78-a04e-74a2ff166848"
        },
        "item": {
          "id": "e30ec9b7-5e61-40ab-afd3-b5851058e16d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9201cb97-d2f6-49ce-a2f4-1dbb67d7a439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a535f5-619e-4abf-96b5-641ecb2141db",
        "cursor": {
          "ref": "468ca06b-b248-48a3-90a8-bbc0bf1b061a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8c76fcb7-4551-4677-ba36-fa967b42b288"
        },
        "item": {
          "id": "23a535f5-619e-4abf-96b5-641ecb2141db",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7f522886-cf62-4e6a-af36-ddcfa2b56f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e8271c-fc60-4725-89ee-f7837742a3d5",
        "cursor": {
          "ref": "f8b69693-a4b7-44d7-a4fb-826bfaf3f758",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ed66f3fc-949c-4e4d-bb2a-669920969232"
        },
        "item": {
          "id": "b9e8271c-fc60-4725-89ee-f7837742a3d5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8a637a98-1a05-4677-9887-68d8d960bcd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d92b25-a49b-430d-96c2-3df0f5438c60",
        "cursor": {
          "ref": "15eefd16-ccd2-4c4a-8905-a1174e060e16",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "38220070-f41b-4bc0-902c-8b27af3cc912"
        },
        "item": {
          "id": "89d92b25-a49b-430d-96c2-3df0f5438c60",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "976e660b-c88c-4cf8-8487-2cb784f1f23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59048fd8-c743-4d02-8871-0e4fe114e6b0",
        "cursor": {
          "ref": "ff3543f0-2fe6-46ee-90ae-0878c16cbce2",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "acea42eb-4f74-4c31-b5ac-31257db95892"
        },
        "item": {
          "id": "59048fd8-c743-4d02-8871-0e4fe114e6b0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e4a206ad-84cd-4618-915b-c7c46ff9614b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fef23aa-8ea0-408d-b4ab-d1968c6a9345",
        "cursor": {
          "ref": "eb1c1f10-bb51-45c0-9dc5-dffa8db0d150",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c5b42c7f-800f-49bc-81c2-e45e5dac01aa"
        },
        "item": {
          "id": "7fef23aa-8ea0-408d-b4ab-d1968c6a9345",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f04860e7-1039-4839-ac62-77c2e908f393",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "73d3772f-11b8-4337-b73e-0dc430e363dc",
        "cursor": {
          "ref": "7d40efe1-aeaf-4034-a617-0c94a60ed493",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ef0f788a-c616-40bf-8064-917da53a6197"
        },
        "item": {
          "id": "73d3772f-11b8-4337-b73e-0dc430e363dc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0ce4f1fa-c7c4-4ce5-a7b1-ead0714d54e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14ba466-744c-4209-bf40-a71d67789a90",
        "cursor": {
          "ref": "b3c5832b-73dd-4cee-bd65-60ffd200add8",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "aa42ad86-85fe-4179-b624-f77db3fb67a5"
        },
        "item": {
          "id": "c14ba466-744c-4209-bf40-a71d67789a90",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0e3a8d3d-d90e-4477-ac96-bae56508876b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23e0606-7d2b-4626-aadb-634855e910b4",
        "cursor": {
          "ref": "0e9ed406-4eaa-4b6b-89c3-8fc799b128d7",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "58a9434b-1f36-42b8-801f-9f3b2e9570be"
        },
        "item": {
          "id": "d23e0606-7d2b-4626-aadb-634855e910b4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2290f7e4-09a9-4d87-b20f-3656ba62e52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225026a3-e23f-434c-b6aa-04bd04d25158",
        "cursor": {
          "ref": "99feecdb-1a44-4cea-bda4-0d8daee8b447",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fcf3d411-52e8-4e2a-8ce5-3cff63562cdd"
        },
        "item": {
          "id": "225026a3-e23f-434c-b6aa-04bd04d25158",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "50f5a60d-e92c-4e49-af41-b9e92b59ef5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d8358e-8d0f-4c35-92c1-e181a8bcb176",
        "cursor": {
          "ref": "bb6d41c7-0e4f-42ac-82c4-cb1cdede35b3",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "16441a26-39f1-49f9-96c2-d4eb46c84456"
        },
        "item": {
          "id": "08d8358e-8d0f-4c35-92c1-e181a8bcb176",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e9eafce0-22e5-4f5b-a9e3-8d33c278c23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf56b548-00d8-4a08-897c-64b03c8fb856",
        "cursor": {
          "ref": "0880660d-e664-4f7f-a1a4-f5de4e45646f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cd36ed4b-8ce9-43d1-bbcd-26f0d3a5e882"
        },
        "item": {
          "id": "bf56b548-00d8-4a08-897c-64b03c8fb856",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "157a0689-0565-43a4-82f2-a12c77423c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37e8d99-52d8-4567-9536-7a7d58816441",
        "cursor": {
          "ref": "cecf9fee-7d65-4220-b901-23a9347bd296",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "dfc0b359-9a29-4f5a-99ef-15b00d38b935"
        },
        "item": {
          "id": "c37e8d99-52d8-4567-9536-7a7d58816441",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bb6b2d63-2ce2-415d-bbbc-a57c1eb8afcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7820755-3140-4056-8e2b-dce3042012ab",
        "cursor": {
          "ref": "62cc8953-70b7-4d77-870d-a611029a2ddc",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "961d08d0-d054-46c3-986f-7e1868df122f"
        },
        "item": {
          "id": "f7820755-3140-4056-8e2b-dce3042012ab",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "434fd073-5522-43ca-9236-d70e9cfd5c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ff242a-f0f7-432e-a608-951d004ebbe1",
        "cursor": {
          "ref": "f211ed42-8f29-4217-9809-fc9144ee5901",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b5838857-f15a-4a89-8e2b-efee2ab9f1f5"
        },
        "item": {
          "id": "d2ff242a-f0f7-432e-a608-951d004ebbe1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0269a7e3-beb9-4ff7-9eec-3f60f0946375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6455e9-f80c-4890-a37c-fa9d4628cddf",
        "cursor": {
          "ref": "aea894d0-cc62-41f7-be3a-51bac8571061",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e49d852e-3898-44ce-a946-9a1fce4cd789"
        },
        "item": {
          "id": "da6455e9-f80c-4890-a37c-fa9d4628cddf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1008c232-5299-4a9d-8678-3b3693ead966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea57c8f-6dfc-4b52-9f73-a176407abd19",
        "cursor": {
          "ref": "2d7d6629-9030-4cb1-a7ff-954e92d41f99",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "34a6dae7-7747-4a9f-89ca-e85692fb3257"
        },
        "item": {
          "id": "cea57c8f-6dfc-4b52-9f73-a176407abd19",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "daee52e4-891f-4432-b054-2a6f74f3e655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b980cfb-8e97-4529-aa36-569fdf618a64",
        "cursor": {
          "ref": "2e8b83e5-1540-4209-8116-abea2079848a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "100ef2d2-365a-4dee-810b-887c96ba74f2"
        },
        "item": {
          "id": "2b980cfb-8e97-4529-aa36-569fdf618a64",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "aed35d0a-a83a-455b-bb37-2c6247d96eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04842710-ae6c-48bf-9bae-cccbfc94beb1",
        "cursor": {
          "ref": "d05f943f-86d9-4e90-889f-f0966e689cce",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4e487a71-5255-4349-b6ff-9de088d678af"
        },
        "item": {
          "id": "04842710-ae6c-48bf-9bae-cccbfc94beb1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d3eac23e-8b1e-464b-a3ef-9d8cb3b405cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a8697e-4254-4e53-9c5d-16ef63354783",
        "cursor": {
          "ref": "6f0a2535-dfcf-4cf7-86c5-18ecf1bd83bf",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "43e65b26-5501-44ac-9b6c-988ade79dcf7"
        },
        "item": {
          "id": "e2a8697e-4254-4e53-9c5d-16ef63354783",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "aa97ac58-e150-407e-af98-42de830c3bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf2e5ce-8d25-4cba-8831-af8b47a484e5",
        "cursor": {
          "ref": "943af475-5a9e-4251-aeb6-597361cde6d8",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "46cc29b4-71c0-4c61-8611-81ecbbe7411c"
        },
        "item": {
          "id": "cdf2e5ce-8d25-4cba-8831-af8b47a484e5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "55948c62-1a7a-4747-9a4c-f8d0c54e0a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7112099-eaad-4de8-b70f-58540ff6e576",
        "cursor": {
          "ref": "2b71a895-483a-4e74-9823-24b808a3f8b5",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "14eb360a-15e9-48bb-919b-0c1b56c4e108"
        },
        "item": {
          "id": "a7112099-eaad-4de8-b70f-58540ff6e576",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "763d5e60-c2b1-42a7-96e4-ee67c4c58481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f958c71-a315-4319-b64c-8d5b8c41ab44",
        "cursor": {
          "ref": "caaa77bf-60b6-4296-811c-357205c1d50f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "de1f6566-abdc-4801-a6ad-c6a49f2a5ee2"
        },
        "item": {
          "id": "4f958c71-a315-4319-b64c-8d5b8c41ab44",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6c8fc7ec-9814-49de-9c74-f8a30d9ba255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4eecbf5-c4e4-442b-b575-cd0935efd1d1",
        "cursor": {
          "ref": "3cd038ac-3793-451f-89c9-ada9c3ca7302",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c8cfcb9f-1e4b-4eb3-bd82-040eb133ff9e"
        },
        "item": {
          "id": "f4eecbf5-c4e4-442b-b575-cd0935efd1d1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "75f8c88b-8f6c-4d0e-8700-0a06bae29f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363720e9-c072-46d6-beed-23ab66709cfd",
        "cursor": {
          "ref": "465c4378-356e-4015-b17b-c5d04bcb7009",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a8aade30-cb51-4161-bee9-8f010e0efaaf"
        },
        "item": {
          "id": "363720e9-c072-46d6-beed-23ab66709cfd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c0bed9c6-85eb-4945-8bb1-9e03f735cbb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b7ec84-7097-421e-84a9-04898f6d244f",
        "cursor": {
          "ref": "81fa25fa-bc13-4402-8590-4237a5780592",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "09f9817d-8d9c-4f12-95cc-f8f8e1ea1b84"
        },
        "item": {
          "id": "33b7ec84-7097-421e-84a9-04898f6d244f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d5682437-b302-4ed9-9140-8c5c2ad50fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3af2731-5061-4367-804d-4f71751e658e",
        "cursor": {
          "ref": "fa4c031f-b713-4673-8be6-49a7f601eac5",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "138099cb-e8a3-4612-b854-692f478e605e"
        },
        "item": {
          "id": "f3af2731-5061-4367-804d-4f71751e658e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a972c8ee-a652-4876-8bee-f6dc367e93e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670fa27a-fc5f-410a-a89e-a04f5e62e0bd",
        "cursor": {
          "ref": "9afabe6f-8c02-4c43-a243-a25ac9748176",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ed509650-f9de-4f24-be5d-0d3e88986276"
        },
        "item": {
          "id": "670fa27a-fc5f-410a-a89e-a04f5e62e0bd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e09872cc-04f4-4b2a-ada9-1970f0f9934d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36138bc-c822-46f6-b775-0c5e5e998525",
        "cursor": {
          "ref": "bbed69f7-80e8-4a27-90b5-7dbef8709f99",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5b9aaf72-5ddc-40a7-b232-c943def094a2"
        },
        "item": {
          "id": "d36138bc-c822-46f6-b775-0c5e5e998525",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ca88a8d1-0ae3-4c1d-a0b9-4090860cef6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ce1bf0-a7a7-4d80-9232-dc3ddfcdce05",
        "cursor": {
          "ref": "b5434e28-861c-4293-a64c-38d92d4f2439",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e0c2805d-ce08-4a8e-9903-b852d5520a0a"
        },
        "item": {
          "id": "59ce1bf0-a7a7-4d80-9232-dc3ddfcdce05",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "33618d89-961c-4fcc-8e36-fe5177e659a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef61afb-5534-467b-87fc-a641069bd670",
        "cursor": {
          "ref": "0175dd5b-b09f-4499-8049-450ed60fa5a5",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5f8e99ca-dfba-44b1-bc13-aab2df1fe7ff"
        },
        "item": {
          "id": "cef61afb-5534-467b-87fc-a641069bd670",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2fe9ef6c-44e5-4c75-b85c-823cd2d97152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e8d37a-e922-4ffa-845a-2b2f71005655",
        "cursor": {
          "ref": "fe649163-3c32-4cba-8ffa-0d4fedd6d5ee",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "60b8028c-408b-43f0-88a1-1e58636509e3"
        },
        "item": {
          "id": "d4e8d37a-e922-4ffa-845a-2b2f71005655",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "dec5c412-978b-45df-9c80-dcfe80027760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f87e19-df49-411f-9079-98ae9dc2c59c",
        "cursor": {
          "ref": "f743ddf4-7476-4131-bcfb-3c4ed5b2daf9",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "98306976-d7ee-47c3-b4a6-40d42608191e"
        },
        "item": {
          "id": "07f87e19-df49-411f-9079-98ae9dc2c59c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "426ef27e-683f-4082-a174-79eef1b3d156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232f3e13-d894-4a1c-be48-a880bd50c9ab",
        "cursor": {
          "ref": "0a8fb41a-2fd5-490a-8492-c8b016e2ff86",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "cd9bd52d-038c-4e53-90a3-d4a228ffeebb"
        },
        "item": {
          "id": "232f3e13-d894-4a1c-be48-a880bd50c9ab",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "40eb67a7-9fee-4db6-a760-b1f322d4730f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44ee964-f685-4ce2-866c-12f25d63e9e4",
        "cursor": {
          "ref": "2a9e71a9-c3f3-44d6-8ca4-d93ed6d29f05",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b75ea6ed-cee7-4813-9f4e-0067702c1a89"
        },
        "item": {
          "id": "e44ee964-f685-4ce2-866c-12f25d63e9e4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "469cc90e-a054-4f49-b6b7-b889039253ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7615fd-631b-4373-b4b6-15970b9ce630",
        "cursor": {
          "ref": "8f798d4d-0223-436c-94ff-ea62b04e014c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1111bdfb-a3a2-41ab-9e05-c2b434943bed"
        },
        "item": {
          "id": "9d7615fd-631b-4373-b4b6-15970b9ce630",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5d2c856c-a8c5-4b69-a1f8-fe5524a3de3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4eca9ee-9fbe-4ff2-8e1a-2bff1bd3a8cb",
        "cursor": {
          "ref": "fd6084d8-6bb4-4616-a077-0e2ccb32e2cb",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ed98d21e-f36b-40f9-9e49-6c6af3a01aab"
        },
        "item": {
          "id": "c4eca9ee-9fbe-4ff2-8e1a-2bff1bd3a8cb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2b9a8f3c-e08f-40eb-a7a0-3b1e29ae29e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e67c65-ff98-484c-b8fc-d5483ee66cf1",
        "cursor": {
          "ref": "48afad70-b5cd-434f-a6f7-a5d710ec133e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "985f3cf7-61b5-4f88-9705-499224766f0a"
        },
        "item": {
          "id": "b1e67c65-ff98-484c-b8fc-d5483ee66cf1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "32cebbe1-93bf-418b-b215-3cec67c74038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812ceaee-6067-47fc-b73e-d74a1efe1ae3",
        "cursor": {
          "ref": "c9e0d665-ca4c-4a6e-836d-fb5bd4856f3d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "32070c17-5544-4723-8ed0-1217e0d0acd6"
        },
        "item": {
          "id": "812ceaee-6067-47fc-b73e-d74a1efe1ae3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7635902d-3dd1-4cc4-8b27-944e0733997c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659042ed-77d2-44fe-a772-cf29d0435712",
        "cursor": {
          "ref": "f87f8432-1c54-43a6-89cf-5ee36168549f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "18009868-27fc-427f-9f6b-87c4b64aaeeb"
        },
        "item": {
          "id": "659042ed-77d2-44fe-a772-cf29d0435712",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "819fcbba-2b07-47bb-9e8c-344817111c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1121ab66-a16b-47ff-92d9-592779b24a6b",
        "cursor": {
          "ref": "905d9ec7-cc1a-4f40-bc9e-1914c5d725c3",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a54c8728-7f82-4f37-b480-0e71628084ca"
        },
        "item": {
          "id": "1121ab66-a16b-47ff-92d9-592779b24a6b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3198860c-249f-4eb1-a3a9-79a58078a2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d9f4e0-f18d-40e9-8c39-e73040fc7db3",
        "cursor": {
          "ref": "54b7c07f-3408-4505-bd26-96f6001d0958",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8d53998d-b312-40f7-bc33-617637c3d62a"
        },
        "item": {
          "id": "c4d9f4e0-f18d-40e9-8c39-e73040fc7db3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "34f8efb3-317c-4bc9-9336-77bd95274e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8433ec7f-7139-433b-9158-4c159c142c7f",
        "cursor": {
          "ref": "6d46b01f-53d5-41b0-9909-dc6e601fd5fa",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "47d681ea-0a8b-4107-a497-f06421d21f4d"
        },
        "item": {
          "id": "8433ec7f-7139-433b-9158-4c159c142c7f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "03fa3953-59fa-49fb-a855-22bccd6681c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483bedf8-bb4b-46e9-8786-ed95c0515874",
        "cursor": {
          "ref": "c70bcc5e-4ab1-4e03-9bb9-f6549ffd2c84",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ef6da6fb-aac0-4bc1-a8bc-e24da4362aac"
        },
        "item": {
          "id": "483bedf8-bb4b-46e9-8786-ed95c0515874",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6a34ebe2-1371-474e-8af4-90145f51a84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bf2aac-8f1b-4163-be52-c57c8fffa7e7",
        "cursor": {
          "ref": "4003a2cf-268c-4d78-82f2-003e749fd544",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0a1c9829-ee18-477c-b3c5-080c54277835"
        },
        "item": {
          "id": "56bf2aac-8f1b-4163-be52-c57c8fffa7e7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cae8e70b-190d-4dcf-8b91-1a61f0d8091a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cb5689-7b10-4a4f-aa1d-7f4083f3260b",
        "cursor": {
          "ref": "918da7c4-df54-4471-80c4-3ce5f628ec1d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "75c33196-2ebd-4c2a-87a4-614c67128932"
        },
        "item": {
          "id": "d9cb5689-7b10-4a4f-aa1d-7f4083f3260b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ab90ce5b-a572-42e9-a5d1-c5d1dc04eab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4444a96-6f68-4040-9157-92059cf892cc",
        "cursor": {
          "ref": "ce3549a2-bea2-4dcf-bda5-db618a00069f",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d06d5e53-2a99-4603-b85a-31079213514f"
        },
        "item": {
          "id": "d4444a96-6f68-4040-9157-92059cf892cc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "591ebeaf-6c9c-4ef0-a09f-b40cc756dc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f920e7e6-e901-4e53-a7bd-cf994acca9f2",
        "cursor": {
          "ref": "7a99a11a-b47c-450c-8b84-53a96e416f02",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "3c061a69-e420-43b2-b7f4-7548de0502b1"
        },
        "item": {
          "id": "f920e7e6-e901-4e53-a7bd-cf994acca9f2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "96d4edd1-1193-4d48-bc24-48535d6badcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fac929f-831e-4f2c-b57f-26496dceeb80",
        "cursor": {
          "ref": "6654b960-1406-4aeb-b4f3-c4257e76f09c",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7bd28310-fecb-4db1-9d16-348e6ab17672"
        },
        "item": {
          "id": "6fac929f-831e-4f2c-b57f-26496dceeb80",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "46519a49-26bb-4266-a54a-5a487e0a8423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba1371c-81a4-46c1-8dae-273790c2fe59",
        "cursor": {
          "ref": "a47f5f1f-a1d7-40d6-96b6-4974d11e5f65",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3ca1aa77-3e53-4474-898a-56fd4a8af044"
        },
        "item": {
          "id": "1ba1371c-81a4-46c1-8dae-273790c2fe59",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2175c83f-27e0-48ff-ada9-166a68f8e51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65702160-4a80-49ee-9ee3-46aa1f0be5b8",
        "cursor": {
          "ref": "18adb133-7eb0-4bb8-9a32-e84d78bcd4c7",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "34974122-3f7a-4bf6-b9e5-5e09c767497a"
        },
        "item": {
          "id": "65702160-4a80-49ee-9ee3-46aa1f0be5b8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fe569613-60ed-4872-9c42-3328136f3b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a90473-685a-4b5c-967b-a640e7da6a69",
        "cursor": {
          "ref": "9ffcb08e-fc56-4e49-80d0-7542b13892e9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5a8b3937-c1ed-407a-b48d-ae489d5e6bfb"
        },
        "item": {
          "id": "82a90473-685a-4b5c-967b-a640e7da6a69",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "696414ad-c719-448f-8d4c-ba153d794fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc219e6-17f5-44b9-ab4c-31bfe88c15ca",
        "cursor": {
          "ref": "a957e588-2ef9-4ce0-8678-adf97b38d8dc",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d96ab058-5a5a-4bcc-a37a-988d9d7c0666"
        },
        "item": {
          "id": "3dc219e6-17f5-44b9-ab4c-31bfe88c15ca",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0864df3c-adec-4a9d-8c54-b6e10cd8c5c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121dd68a-8c6c-4b23-9fe6-c9a18e67b197",
        "cursor": {
          "ref": "168d2692-2df0-4af6-bb14-8142f1194423",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d39a2dc3-30d0-4e23-af40-bc85b065df43"
        },
        "item": {
          "id": "121dd68a-8c6c-4b23-9fe6-c9a18e67b197",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "70b60127-156a-406e-8a68-4a40ef61e8a4",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "893281e8-59ca-4242-8197-38b5002d2da1",
        "cursor": {
          "ref": "354087e7-f417-4edb-a7eb-26b540c01bfd",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7668a90f-41dc-4ee1-a3bb-5d2677d9dc67"
        },
        "item": {
          "id": "893281e8-59ca-4242-8197-38b5002d2da1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9cb079b7-0c50-4070-a150-6ad2c3e9fb18",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c87ecbb-5a53-4e0d-a3e1-23cd3d18204c",
        "cursor": {
          "ref": "923767bd-9cc4-454c-b836-5b37b5d5cecf",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f6b7cd27-e47e-4cc7-8cde-db137de5aa52"
        },
        "item": {
          "id": "4c87ecbb-5a53-4e0d-a3e1-23cd3d18204c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "19a8a498-626b-4490-8b81-f838a94af2e6",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb3e181-2fc4-460c-a802-2d52ff5fa4ec",
        "cursor": {
          "ref": "3a4f534a-4d19-4289-a6eb-9cf6934129dc",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2b9c7b1e-2f3b-402e-a6a4-2ff62642bdea"
        },
        "item": {
          "id": "dcb3e181-2fc4-460c-a802-2d52ff5fa4ec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dd9ed6e1-f6ae-4bed-8948-36e27242b398",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb3e181-2fc4-460c-a802-2d52ff5fa4ec",
        "cursor": {
          "ref": "3a4f534a-4d19-4289-a6eb-9cf6934129dc",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2b9c7b1e-2f3b-402e-a6a4-2ff62642bdea"
        },
        "item": {
          "id": "dcb3e181-2fc4-460c-a802-2d52ff5fa4ec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dd9ed6e1-f6ae-4bed-8948-36e27242b398",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247f9278-506b-4054-90d6-ad4474ed8521",
        "cursor": {
          "ref": "a321577a-4bd0-44a3-8dc7-ff9ffabcec19",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "579d01eb-ff6f-4f61-b70b-4bff0e913f9b"
        },
        "item": {
          "id": "247f9278-506b-4054-90d6-ad4474ed8521",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d27244cb-c143-40ea-ac16-e14bbc6ca793",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731cb648-b5d6-474e-9c41-fec5de2f86a9",
        "cursor": {
          "ref": "449b19eb-4272-44ea-8136-8545384c89ff",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "4b842929-d3c7-486b-baae-7ae0d0d4d663"
        },
        "item": {
          "id": "731cb648-b5d6-474e-9c41-fec5de2f86a9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bb115ba3-ce40-4948-8c48-bbdf0eb707a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}