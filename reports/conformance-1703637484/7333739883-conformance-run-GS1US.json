{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6484a666-867b-4e13-afae-e01b3f648a3e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9139e3ef-2621-4143-9991-dd13e3e61ef4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "581975a4-3387-46cb-9109-9ef966d8384b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e192cb67-7ace-47ee-ac9a-6a763c3af6fc"
                }
              }
            ]
          },
          {
            "id": "89080416-232f-482f-a27b-57b60ad1049a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "22dc6ef3-c905-43aa-800b-eb3e869528cb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "19697197-caf9-4f5c-b274-3277ea3bda80"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a1077964-83b6-40a4-972c-3b1e0ce67f3b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d3d53c68-ad95-43e0-b30b-c207a137ea90",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6242c2fd-edb5-411e-8ae2-c0da8b302283",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d52294e3-ef40-4b67-a23a-262506bea9e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "542b166e-8636-454b-ba26-96f4d39afca1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c12746d5-585d-4bd1-b041-e92ff581b605",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5bdeaa4-0dab-4b45-b657-375d846ec873"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e6ed314-7fcb-4bee-82e0-b51268fb50a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72a64c0c-f3bd-4516-9f77-83cb03d9becc"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79e8d677-b42b-4c02-b8b1-405f5ff92063",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "eaf6a721-dbf0-4b69-bf49-02e8eee96528"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79f13b9c-fbd2-485a-aaad-df0bf69c3116",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1502f1fe-7673-4c6e-bc63-a1180a49e1df"
            }
          }
        ]
      },
      {
        "id": "4b81c517-8d6d-4f07-a71f-82fcbd0c9312",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5778ffff-3346-4def-84d1-09d9a2e0c83d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7dafb3cd-208e-4c41-8509-9fc8262f0bbe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bd888de1-56e6-4321-bf6b-c62e83e9cfb8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd20ac7-9385-4d99-9703-cfd943a0c4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8c38c48-7555-44c1-839d-c22fbad33bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b66cd4-801c-4b9a-8157-bc88d9d35836",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab4072d-dfe3-4477-bb8d-597ed3c53d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e44293d-b469-473d-be92-c69cc2b4c342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc255bc-f439-4751-9716-2ae54dff4bf2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa8024d-dc22-411b-8527-978537e28711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1336b61-e60c-4de5-9528-beb6fe796ee7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3edc9a16-2020-4bcc-ba12-2e94ee99deeb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b80ce52e-9d97-40ec-8d3f-1a677f9b15ee",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffd97d0-7349-4391-ba0b-f7fbff2a64b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9aece05-2ac3-4755-a5fc-e093f9d065e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a6233c-f35a-453a-ba3f-ebcf01a86e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0047f7c-fc44-406e-99a2-210fcafe6f80"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cdee5839-f928-44d2-98f9-77a79eb45e57",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aaddac7a-af0a-4b44-b9e0-640439a17019",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fab7c5a3-c2ed-4b2a-8734-e257310e695b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d9d11458-f741-4235-bcc5-193f8c06e6de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ba31b8a-ff7a-4db2-a024-99a8ba7229ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ec6382c0-d4b8-44de-bed1-2d56f3e4293f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a972ffba-126b-47a0-8321-4f902a98bc85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "184655e9-6eaf-4f8c-af89-0ad2498ea6ef"
            }
          }
        ]
      },
      {
        "id": "977d4405-23b0-4231-a7ba-fd099222cd54",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "72b72675-08d9-40be-92c1-dfaa218df7e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f537eae5-908e-47c1-9e28-15aee7b9b18d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "694d9860-e188-4891-b4bf-4e71ac5a6f37",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6b1d5d-82c5-46b7-b5b5-4bdfb4897c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7883b83e-8f48-450b-bbf6-40cc6a370b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abdd953-3576-47f8-aa47-38c42ace4335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f36f8cba-21b6-42f3-8086-52bdaea38cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bbb132-f9b2-4169-9439-5cdbe3f0c8f7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ce9a88-4b83-4ff9-bcb9-f06209247aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6308746-074b-4cc4-964c-cad41b15afe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389d65a8-a2e0-4028-bddb-2573bd72d4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbe81c87-e125-46b2-a284-adb331fda562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6bae59-7aec-4f07-90d8-d292d79f18fa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba14689-13f6-4afc-afd8-babf8b24f1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771cd86f-2822-4fd2-9f3f-c9fea9f61912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a1a4ee-3a49-4251-a7b1-5a95a34a51e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d466982a-f4a4-4491-a095-520bbef373be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d844ef-83db-4ad0-93ff-e7b7e1ccb5b4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40aeeb4e-2d7a-4f4a-b274-6c7ecce5a91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295def6e-33e5-41cf-bb5a-8de08d6f74d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843e48ca-85ad-40c4-bf72-23ae446ac11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3593421-2589-4ea1-ad5f-c255dfecd4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec169c5-f79e-4bfc-94bc-95fd30e12f88",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13e9d9f-cfe3-47ba-a099-382da97543e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37db2723-6a2a-46b5-b50e-ddc78fd4c901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c2ebf9-4156-4dc5-9cec-4441a84dec1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b14d5c77-e4ac-4e9f-a046-880658b1f772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f5e810-f096-45dc-9e81-4b23d167e51a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2bc626-8bd1-409b-ba52-deeaf8ba3836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42bdd559-d912-4c1a-8605-7de087a72f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4434a7-195f-4c67-a1f1-f9fe838e02ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92658e6b-ba86-4a3d-bc63-e0e95edb3b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb27bf6a-b942-4d85-a655-96e98ce18e15",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39de215a-24d9-44c5-a296-bd8cfa8e6658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570a9996-f03d-46db-a6dd-abcdeec3ee44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d113a32-aa1d-4e79-8326-af8975f9116b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d2ff79b-e5ca-4ef1-a1fb-7f6deaf112b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41687339-0e24-4c27-ae62-59ee385684b1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a5db4d-5a40-4e66-a60e-739a4540379a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7040599-bbef-4428-95c6-064779c1a7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb50eab-db66-4150-8ea3-fa4f75d9bb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc674932-8966-4987-bf10-f25db87bbce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f33ba07-028f-4ee5-b135-aa4c0d434f4e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342054f2-c50a-4740-8236-1fb648a86713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3abac01-2529-43e3-9616-95ee19b16c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fa1093-38d6-48ea-a8eb-5ad6fcfb2504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "addef360-670d-4b39-b3c8-f90680f13413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3903d277-ea7e-4427-94bc-1ca78ef8705d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93562b90-ed3b-4af8-99dd-5552b8892ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e03c47-4dfd-4797-be09-5b3960628310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26096d4e-4fb2-46fb-b420-277eee059bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44eb7290-b297-411f-9355-9b478ad49442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995bb4d6-89fb-4918-82b3-2ef1afcb2039",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96cefc7-d008-416e-92d2-67dbded8a0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2259fdfa-afa0-4dc8-b35b-6e4290cc65d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41a4aa7-23e3-4318-a501-50f187921d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbb93925-0aae-4e80-913b-4584a243ff73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8c6de6-75c2-4158-ad56-b0d81767b8eb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc02d3f2-0aac-4ede-b26d-417f11181df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5d2608-7815-42a1-999f-fb02a2b6cc3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ec75ad-d0c7-43bd-ad27-df241742831a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1c23c46-da5c-4590-95ee-c23a271e688a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b80106-2123-4c92-8fad-bacbc60280c6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734e3b5f-542c-4251-a88d-3ce2574cf8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64eb312-da15-4685-bd8b-016dc38620f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c86cde-b5ce-4ab7-ae55-3f911efe65e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b148e219-1135-4d42-8ca8-30e725ac684c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b81b12-7702-47c6-ad2b-a4a48b9e4ce0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a3e0e3-d9a8-454f-912b-801268bbaa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92bab747-c162-40df-9dae-21049b6229a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1ed9f4-2453-42a4-a942-e5e003e3ee16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7a38598-3da0-4c60-bec9-88df0f02c083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4f27ad-85f7-4229-be50-473842aef161",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fe8128-af49-451f-a0c6-1c490c6be6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f893939-34b2-4243-9713-aee221b80a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb715b3-3d42-49f5-8851-489935411568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b05fed1-c4e8-4adb-a377-378bd0db927b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5160c322-fb50-4087-97ff-f9c155d208bb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c766866e-1fa6-404d-8748-44b9c2226abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94b6fe2-3220-4d46-ad0f-3cf121decbc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c7d8b5-d191-4927-952e-b2586fced4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d6e6cab-9735-4ee8-8f6a-52b18df5ef4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5627c269-8187-4c74-ab2a-c2891e9ee924",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a55464-7895-4ca3-87ac-662c8b39ff28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e34c48-3574-4c87-a508-35f3e3df9ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90d5dd1-7c71-4d44-8340-68e0c1ed3aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91c8e478-dcf2-43eb-9f84-eb1891141240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e697b907-6363-4f2b-aa5e-dd3aabec769a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57bfa76-c3eb-4b53-9099-ed780f140917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc74689a-0328-405b-ad8e-ab2d629a2944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946da033-92e2-4391-8724-39a0e97b3005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa68a2b-1543-4457-b4bc-8e39eabd2073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3c97a8-900c-4b96-af51-60e36e5c5274",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66575d50-7722-470f-ae5d-6e5b5c5d87c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb7ae85-2ef3-4a89-80c1-783dc8a87de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6d9b2b-556b-4edf-80e3-d52dede9f6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93884604-58ad-4fa2-bd1b-66fd23a807fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dea7ec-300a-4fac-9134-be8e7815839e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ede03f-66c9-4ae1-8be2-22dee2ca9068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3243053f-e06b-41e7-9054-c66ca01490d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e082dab0-5891-4d56-9d59-9046d0b34441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a193202-cbeb-44b4-97b2-a09b2c519a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362e0575-2623-498d-8320-faf23eb21f4a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb86931c-980a-4503-8f25-4a4007b19fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30117673-bd56-4ba6-9d8a-7796a8cff659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15e379a-36ca-49ff-a162-ef6927173cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4046334c-7511-483f-ade4-4788291c9770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd0db87-b235-42c6-8fcc-af57d9defc59",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014759cb-45bd-4a72-8dc6-aa5a24af03f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234f75ee-ef21-4547-bd12-1e57eb7f1b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221df791-30fe-4c62-bc75-eb291d066951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89bfd5a5-e503-4edb-819e-b1c14b9a9019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62cd44d-e48c-44a6-9525-25c21cc0bd10",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca48ca5-88d7-4d94-85c3-6a1a863ae453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d1a5df-6179-4100-96e2-4d376da4c50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117be880-8fab-4680-83fe-bfaebdd43779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f132afc-2aa1-4a27-897c-60fccc36d10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d10a6eb-eebe-410c-a26d-233dc8a15ff6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4090420-c3af-4f09-adcd-f4adb3ee640d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b13f3ae-519f-426d-b5eb-3047728a3378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d869e77-024b-445c-902f-d65bf169c5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a318b746-f380-4cd9-8834-0a4276159145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b91dae-f4cb-4f42-981a-6467cd83e9f7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a567920-28f4-4ba9-91c0-c74ac99f7e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36efb2f6-9bb6-4a20-ad7f-40dacdac979a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334e2585-7faa-4429-8090-1b1cd9861bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cde654c0-1b4e-4654-9b3d-cdcc7e84e85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7482cf3d-d2e3-4739-ba1a-5af3cd26ddc1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6462b1-ee6f-4f85-bbe6-b699afe9bf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497c05e0-eab4-4588-85a3-9d50aadf08a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a809529-251d-4c6a-b55d-761893993b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be75fca1-7d34-4c04-bd63-fcd9a96324d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e610cab-feb1-4329-a8a9-5b8b4168ca26",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bf16c6-8fda-4768-a38c-a5b80e3df79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36ba535-f10a-404b-8167-c3502a0895b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7adb717-e98d-4758-9a12-cef5a7d48bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5741a2b8-f855-428f-b937-a579bc93bb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4449ac53-4efa-451d-8d95-b665e9dc098c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b496f631-89fe-4ca7-bfe6-93614b12f80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ca0f8d-0658-486a-8c84-2e0716aa8bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2868285c-e1b7-4705-9b90-5ec8dade214f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3143de7-b412-4441-a837-b75f532f05db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1444f9bc-074f-4ac8-9875-fed6a61d57b9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aee3cb2-af5c-46a0-891f-72cb43ebf81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "818f7ab1-050b-4821-a3d6-6f2435e972a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4914cfb-b901-48d3-ae9a-846b3e0d3875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "289e9997-de54-4fc1-9da8-cd5e17c05dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fe38ab-d23a-41a7-b982-074561ef3663",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa96e4f-2d81-4a52-83e3-3dc16475cc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ffcaa68-bcbc-47b3-84ae-3ead4cb08a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368f23a7-0f2d-49c5-b885-ba1934890c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2201639-3e6e-4526-a4e6-1fcb3d147d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7342dcaf-a6c9-4a7d-96e3-5267f5cbc307",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c51215b-e4bd-4918-99d5-5fc4a7a4513c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d707ae-aabb-4e90-b08e-3238e659a07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a58079d-a49f-4db3-a613-1522e280ebe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7a205b-68cd-47b0-8a73-0ded17442d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257b161d-53d3-4c23-9322-ab2e3d0cd4c4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdbdc78-a532-421b-9549-9940584dbc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2324bb-027a-4aed-88cf-72b0e90bce47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d765c8a-0db5-4653-a19a-4e53e2668fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "905d9864-1ea3-4617-b44f-80ea46abc349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51fdb71-ad6b-4719-b41d-3ed3dcfeac98",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4177b95b-fe87-412e-97ae-be68ce477351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69ae622-b6c6-4182-842a-4768a516070e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48510dbc-4077-46e8-be0e-b5ef735465d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "177b1bce-ae78-4326-9a44-7fd0a77146e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b096c1b0-5b5b-45cd-a87e-cad60252ecd0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0f6bf0-eea2-4a6f-9e03-fa0a3215f9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca68ad83-bde0-4f23-95cc-ab0d154972e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558f9e6f-2d18-4581-b74f-8239f442b467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6ad53f-8338-4f84-84eb-64d66df0d171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8706810d-aa79-4d1c-8d94-72274848685a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebce0aa6-cca0-4e2a-9484-2b82802ce34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b959455f-91b8-43cd-a3c3-346df1c8bfde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eabf17d-cb9b-4a61-a7be-ff450a26f480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e7c2fa-d69c-4aee-a1b3-19259e67062d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd748a4-b15f-4033-8905-f885caf9871f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1444ba28-417f-4363-9500-1c593751c3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00694125-5ae4-488a-860d-a51e8e076e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fddfdb2-92df-4519-b43c-a2eb537e29a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0cfeb770-9ef0-4c31-969c-a08c88dea0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52508b5c-e1e3-4773-afc3-326dd20d0fb6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab416176-5ac3-4f29-88cf-867d203197bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c1d5e7-92bc-4a93-bce7-a878f551f428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0789ed0e-acb2-46cb-b88c-fb542fe7664b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d496d701-d0b6-46a8-aa6d-8c20e6360340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e0c597-a48b-438c-9d4b-141070ec52f8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7eab3ca-4c10-4aa3-bbe3-5b8592a67498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ebb626c-8d22-4ec8-a12f-7b6ba2b6c0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907bbf5c-bdd3-494d-b8ac-1e419fbcf36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9815532c-f5e1-422c-96a3-753383470f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b91e15-429c-43c7-8782-d88b8717e855",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18f4b96-1a73-49fa-b456-4bd18abbc695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef001f9-c13e-4e31-add0-09a8b0a55621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1506056b-6c7a-4cfe-85d0-5bbc0dcaa4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c51c1e9-6fa3-4d5f-8a5b-4b04fd128c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a13996-092a-4031-93fb-858ab5e7791c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541ccd66-2e10-4bd2-89a4-9a1152b0cedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6743e9-20ff-435f-bd36-96ad3d140395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d235d3-2ec1-4312-87ba-0115d8bf8602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5eba4263-775d-4b06-b270-9ea496f7b1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe41038-9811-4b8d-9477-52ddf24903a7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0ff6cd-d041-4d55-9dc5-5be5a079e023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e76765a-503d-4914-9ed4-5e3c1fbb792a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571d2d22-7537-448a-a873-b71b2eb9eaa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "27fc3192-77cd-4b08-a51d-4d199337259e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d5c334-b0b5-404d-b153-7ba3cf55012e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcee504-fe1c-4f80-b22d-ed4a86e0bc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0dfc9fd-5b9e-43c2-a643-2f1b2890d9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0b4103-7987-4937-b94e-c8f40dc95c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1343af19-2916-4f34-8eff-a7b41a177c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4f2185-0b27-497f-9992-8317aaa16b81",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6deadc84-4588-4c3c-88bb-1412675bf583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42573790-af7d-4ba8-bbcb-24a7650b1398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8dff73-4153-4836-8d81-95bf7e98253b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ea8072-6119-4c91-adf9-b7e9d564397c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5761db7b-62d5-43e1-a5f3-84e1e8741b92",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d5c9c6-6adf-4cc3-a8b6-34383d703672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495fa6cf-cea0-43d8-b799-33ec5d09f0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b037906-fc99-4d72-8519-c7ff95edc954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ccabd68-0aae-4f1f-9a0f-8df877a01494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab41a26-4874-47f7-871d-ef1af3ddcdc4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa3367f-d866-4d7d-9b0f-003db1d0708d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40340941-b598-44e4-8cf7-2e9f2d9c56d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50c1d05-f955-4252-aaad-213b32d820db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc1751a-725c-4cf5-b927-27be1c0c6eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cd305d-dc99-4499-a681-0ba9ab54edbf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf7a71b-958d-48c6-82bb-1c1f2d8905eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603e5261-a013-4cdf-950b-f6084b891af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b01e5a-88ea-40f7-9905-7e309dd1325d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db7c843c-c598-4c32-a92d-2011177dd0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80cd94b-102a-45f0-a145-04ee575ed12e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8880330c-1f14-400d-afbe-db648f7412e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57e02f3-c703-43b1-9094-e61c48d84f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b807df-e728-4d38-8039-88da2bb6d4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ee00df-76d9-4a1e-8b06-2cc8a49c9050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf6b52a-62a8-4763-be63-3644d833ee96",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059261aa-aef0-4883-841e-564c3647620c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "462ba121-6720-48f8-9e31-2864e79a3e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c472d35e-74d1-4648-9b6b-49d4b61ac785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "150541c7-fd66-439d-aae0-92a9b464c998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77da3e1-8d5e-4084-94ff-300c42983f44",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3198b4-1f0a-416b-bd4c-062ed4502a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697391ac-dcb7-45ae-bbd9-60d26ec556ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c589e2-92a2-45be-9712-274c004d0dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b986a7b9-4f8b-4510-9830-b577b236e518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac21c7ee-9bd0-4a25-9aa1-2a22c1edd98b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2381778b-9182-4c42-9fbc-7a68373c81e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12678449-4447-4351-bb70-bb9b401ec683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f7e92d-d394-4855-b312-aa85dcee6ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e21bbb6f-1ace-4b9c-9f11-9a3edb0d98db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6eb34d1-e7c2-4fdb-a481-3fcd92260b8d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8161b2-6a80-4f03-8b99-e25f08454dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b39c3c6-33eb-48fc-b4dd-a4ee48059cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e249750-ad6a-4e76-83c8-9a13f3c51093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "020ed5ad-5a20-4a91-a29e-d8c24c61e292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f95cbcd-34f6-467d-bc86-b942c46da14a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795d5951-cec4-47df-bf8e-a941c3e60c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9754a19a-7d1e-4daa-8e76-b4a91abb80d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390e64fb-ff62-4b6b-af88-8f2bafc42280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c960e904-af26-4aa5-9d92-d596b297746b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a021ab5d-0b8a-4c26-bf44-ec6e4c04db74",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7eb5b0-d075-4a08-b467-bcb352425b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ccf026-b7b5-48da-a3e5-27ae3126647d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c795256d-baf7-4432-a778-ff614826a625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c596c10-1b7c-436f-914b-b18976459593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95e1eec-b912-4b8d-b3ab-279a9df5a998",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf3b6ca-fdf0-43a6-8d6e-2c465eadfb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cecb562-b636-4ad2-b6bc-2bb534d16dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82838341-38ff-47ad-9384-0754ec4b3a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7384c9cd-3378-419b-a6e1-587f26496c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835025cc-c9a4-477a-b7fc-3882d296326c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5ba6bb-ad41-488b-888f-c13ce19797e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ab58b2-bbee-47de-9493-8760fae1366e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480896e5-ce2e-47fc-ae11-77b766325e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef272327-cecd-40b8-b6bd-684c0c40f09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca47e06-b822-4d75-a553-bb356b3f60a6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8302f3af-9d24-4fab-a9db-e3bf63f23208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4354b4-28eb-422c-82f8-ca6249f0410e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d234ec-46a2-4fba-b574-78fba570ac47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ad25c96b-12bd-451a-a319-5db52b2c912e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c351bb0f-be40-4d9a-8549-b4d3449bff71",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dace6f42-78bc-4e5f-833f-58af18a0f59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c574a2-bea6-469b-89c7-c049c09f0c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22453d81-970e-4590-a976-c1134103abb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b37aa5-6b81-403f-a4e0-b9ba132e2ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713be609-6e15-486c-89e0-4482dedc209c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae0c4e7-0bf4-4b71-8ab1-644bffb4ff88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68eca4f5-d4e0-4d82-a720-ef8cb2122c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add34d1c-ec21-4197-9723-c2787a4ee1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0ad43b-1ed0-412a-83f6-97e37f84a14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d091c4-b79e-4795-b85f-e130f3d2ce39",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4364e586-dff3-48ef-9cae-660fcfde9bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47037d18-8c22-4a64-95fa-bf8e0598bd37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c14408-59a6-4215-915f-1c0dbc5a2c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f845b396-0736-401c-bf65-aef79977fbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7360399f-4cb0-46af-b53f-39bd1d808dad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0484f2-592f-4591-a313-c58ba2de5aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0905e19a-1de1-4825-bdb7-c373ff492131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1de5f7-480c-4699-9a67-1c2a4e3c334f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd766a4b-c7df-4f02-986c-10874cc3fae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09bd8a2-98ed-4980-b7a5-b616752915cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dce9f75-e286-4e63-bda6-bcbfc65dc4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ad87fc-49d0-4da2-9a41-0cea829d091e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cf41fd-bc07-415b-b3e1-07a54adcc2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb499fe7-da44-4312-ba6f-82a1fbcd8fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8659b7e-a7cb-4894-9af0-f457148ade93",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d7981a-ecb7-4370-9afd-808e00af3418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f074a7-700e-40c5-afd2-3f0ea43ba833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf98805-7f77-4885-a95c-bf6ec93c107e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "940a46b5-31a2-4781-946a-d97c9e9ee0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d8cd6d-c20c-4d45-ac55-a3abb1e4a3c7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cb8860-cecb-4162-98b6-0894e4188973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d48a78-1a0a-4c0d-a495-6369455679b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762a21de-e10d-44ab-bc74-73da735d3438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "841b1c61-fbd8-46cd-8ed6-43ebfdd1a7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0962bc0-f5c4-480a-84c1-9974fab8dbc3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e31c9a-e91a-47bf-8ba2-b88898f32d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5acb51-0baa-4907-86d6-7e0fcd978b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a9112e-9a8e-4596-a6d4-3ab64f1fe73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9100b145-782b-459e-b1b4-ac0181ae5854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b15548-4c0f-4a6a-b0b9-c449e698a421",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d4933d-6221-4e93-b5f7-a157b01f2720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a842946b-c2f1-4973-8d7b-4ac4b973c580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d839c52c-c7e1-49e6-8217-f3633c9e2c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e43479e-9c39-42da-a5f3-0a0ac9b59e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167b9c03-33c8-4d7d-b713-b5afce7e7128",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac35ce6-c2e8-40b4-8d98-84112304a077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62421f5-8907-4a50-b8f7-63e55ff08744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3ec6f4-2d05-40dd-9a66-d1b6299cd088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "355d6e68-08cb-4785-8093-5fdbe69393df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fce4cd-b7e5-4fe1-abef-859b6ac342c1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa941a0e-ee67-4298-9c2e-95ea68871ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbd1f7f-c2cf-4493-907a-318475e1b692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd620d6-a3f8-4959-9290-00351cc544bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40d9382f-3ece-439e-911d-d27d5eb1b7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86270d9-6603-46d6-8cc0-ff840e6a1547",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b459e8-d900-4fd8-8149-cbb5e4daf739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7c9c48-8bb1-43e6-9da8-be5ec43a3972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7704ae99-bde3-4d54-b2d5-26b641bf2848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7053392d-0594-4ee6-ac97-25d5cb111167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fe3d92-9d40-4073-bdc3-569f54d214d1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b75bf3-0eb6-4ea3-9dfb-f79cbc2c7c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9907a2d0-8dff-4da1-abee-2a7a703029d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfcd91c-6645-4df5-b1dd-246d0e14e299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccc887d-715a-444f-b7f2-4f48fe132b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5ac3c5-5cb8-4a17-ae2b-2e9528f461fd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2ff97e-ccae-4757-a13f-880dd3f617f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174824e2-6371-422d-b120-f1fb2be794da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d2dafa-99fb-41c1-9739-828b005d88dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02e5d438-01fa-4b54-abb1-cd9f751beb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c95153-bb9d-4d71-a23d-7c5037a1d4f8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3119df07-181e-4121-baa5-9fb756bb687c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9914929d-81a2-4a0c-acc2-58beb9c43e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a15e392-fc3c-45fc-a09e-615482e0b267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd97645-ba61-489e-a81e-8b8fa87dbc6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dddd987-f719-45e8-9496-7a6afbe3ddc0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee996bfc-bbe4-40b6-b5b2-e9fc4a0339b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372dfa40-aec9-4225-8af1-a5ae66c972a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6be671-76da-44a6-b054-2617cf96e386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae60efdd-781b-425d-9576-d120febbc397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc09518-cf22-4e97-83b2-e6efc0c1c28f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a8bc96-61dc-46c7-94ae-39c3f547526e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4371006f-09ab-4f4e-bb70-3d678f5efee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d876dbc-af98-44e2-b39e-6fa2bcdd8d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73ee6b4c-f9e3-4dc4-9968-10d9a54da32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f413feaf-e650-4763-9998-bc4b9ea2fdfb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0720ad-0921-42fe-960f-9a1453999966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1bff6d-d5a6-470a-a9e7-92b8e5a70745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55985f84-46a5-401d-a166-fb741a512310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "944392bb-0271-4f26-9a82-c7562a550419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91a7d09-a700-4777-8ad2-701cd25e5648",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81deece-d1e8-4c3d-afa2-c525a19b89fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d350dfa9-9987-4ea3-8f17-f7c558aa31a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c54448-2303-4b89-b9d1-3c7e18686fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1d3bdd-7b98-4b97-83d0-4bac38c8c73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8d5bc4-1b3b-4e51-87b2-b56e730aa143",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16fa3b6-3346-4e17-82c7-44406766153f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae6efd2-2919-4c8b-8c93-97e21091a9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5c5796-4e6a-481b-8aa5-73784e81ab03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a77e78d2-aa0e-4c94-b399-2ea858cf2d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13586f3-7376-4a60-87e2-ea08bef23b3b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a98ea6-cb89-4bd1-a4d3-ec91076da4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97700f42-04c6-466d-932d-b11013e88fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be8fec2-c5a8-49cf-92dc-e682902f135d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db5cd7d9-b309-4d40-aa02-43d5ace4b926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695697f4-21fa-4f49-8e3a-4bc233520fa1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9bbdc1-baac-4ce9-8c49-19245e1bbe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74df8671-b72e-43bc-bd54-06093667f3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f00a7b-db11-4ebe-af86-09c29a635fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa7b4d5-c9fa-49ca-b584-6b1ee4f91535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e8f6d1-24a2-4fd4-bc1d-03c2c5f5a089",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4d2924-c7cf-44ab-ae1c-3c7245a3b8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529f3ce6-2212-496d-8e7d-bc6554958d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a0b579-370e-402b-af51-649b52d42e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4891769-8fd9-4483-89f2-c7c85d534c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b3bc58-aaf5-4c5b-b79c-818e3e94ecde",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac32c28e-0936-40f6-8bc8-766c488b118b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9dc6f53-8667-414a-b30f-40088136ea2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4153daa-f98d-4fe8-8ec7-b6df8532db22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e652a46f-b4b4-4a99-848e-b6aaec3bd80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a7b5de-7790-4ed3-a5ec-02a97d5b335f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30e4459-8ab8-41de-a325-88d7bbdd14f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eecc021-0c77-4811-8389-9dd216a6930f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e05b2e-2391-4361-8815-44a6c1327655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "925e49ad-8143-496f-87aa-645dd2f6a285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31cadfe-104e-48d1-9c68-7b0e1b8a0b25",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d858d54-591a-493e-bc9f-d95481a7b36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6274e2db-3663-4e4e-8b91-cd0deba824de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2115e81f-1d2a-453c-8174-a049884bfae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22ba398f-7a9e-4d58-bf3c-9ba19c63d434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e734020a-d510-44cf-a9db-a490612885a2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdf8c57-8aed-4fd7-bceb-44e6162041f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0a1594-18c9-41fe-8c68-3336c6730375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518df765-6b46-43ef-9451-03a79e3a6fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdeb3b90-bdd9-46a2-a056-3c5fa83bcf7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993f07a1-7934-4dab-999c-f3f6f5259452",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323929a0-b429-47c8-9586-8f73e566a41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af18b0c1-fc06-4798-b4f5-5602c434af90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4956d76e-b71d-41be-ae44-ea54783af45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2681c0-4dff-4c6b-88f3-26379af38156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fa8b0e-ce55-44a8-b583-2ed07fb0f1f6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2cec44-405d-4540-b158-60cfdc02dc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2530073-d92f-4a1f-8abc-7c7c02730e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bce278-8379-4ed8-915d-092c26984060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7ef81e-7cf0-48a4-b628-759b8b8857ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23397f7a-4c7c-4197-8e25-7df05db126ab",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1762bfb4-4c79-401d-a775-142de9d1f510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d3155e-1ee5-424f-b73c-12f85bd6ea89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f317660a-7ce8-4b01-97ed-4b628281fa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b23feea-68c8-48a0-8898-a56b71eeba6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d5eb16-dca2-4d2a-be97-de5fa8fcf4f2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedc5675-e7be-4085-be16-fbe089a00123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab451cb-ff0e-4c4f-b225-730a1e9ffb07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d84c93-2789-454e-9ad7-41369ff30afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4a7a06-693b-4826-9fe4-3b986c6c9292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd1a2c0-48fe-428f-8a6f-1b25a981d84c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e665703d-954b-4eec-a289-a81e8b49b888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da91e992-2f4f-4013-b58c-f7a148a02167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ea3a48-77aa-488f-93b7-1f9d78e1eb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec029e1-d040-4859-bac7-5647b161d2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c61fd3f-9218-4a92-a368-1990efb1debf",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304265b7-e850-477c-8cb0-06d51cfba08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e69421-21bd-439f-8209-de5e83ecaa25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1a65e7-36b5-43ab-bbf4-dfea2729a60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "78af3de8-a8b6-4dbb-ada8-8b79cd0739b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd54bdba-02d2-4f26-a4d0-ba87567fbff4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c906f9b9-89bf-4fa2-967e-fd754697c4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e09c5b-919e-4fc6-ab45-90bfd98ce8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbecd59d-82d9-417f-8ca8-8489fcfb2fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0861a9-00fc-40bb-bb9f-5a1d543e5d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91bc4de-8887-44d8-b20d-793fe21a167f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6305e0-8cae-496d-b1bb-fbf24a86aa10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05724f15-5a3a-40a9-aefb-f7c9e0f0c3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90dcef04-c1f8-450c-a85b-74dfd4014b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c6233b-043d-4bb7-9fd9-9a0676d77db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43dfdb5-6e8c-4128-9254-550bede62966",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2455557-c0c8-49bf-abe5-6c980bb7a538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c52bdfcb-e112-4d8d-836a-03381a7fc394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251bf1be-85d9-4533-a457-5e3a3b9e0bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "01e467a8-60fd-4781-9d5c-7da93752ce3d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "09a9b00d-2de4-4187-a507-3ca3d26fc6cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd1157c6-9680-4536-8098-5ffd2e0b82c8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a02aea-34de-4e40-bb99-cb7b0d264189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af143ccd-d701-4541-b57d-1851f26ee1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adc94da-fb47-4006-a27a-87bf9bfc0264",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb935346-a38c-4219-b76f-da1be4fc0ed7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c708eb70-f52e-4a08-8636-7d7aef60c30d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a45c0542-5df9-4954-9804-b7e8fc45b1a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "574fdc75-15d3-48e9-91fb-614e24268e8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d5cadab-b23d-4e61-8629-978d1937d090"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3be585e4-372b-4fd5-9a54-5a4739905919",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "99ef72e1-1990-4cb9-af0b-a3477f7d66be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2590d1e9-ee4a-4654-93eb-8d95f644191a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ea8bd00-1df8-4a8e-bfe0-1cabea745cd8"
                }
              }
            ]
          },
          {
            "id": "6eb49cf5-1371-4fb4-9196-7164b84a9cc0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "124bd49e-c503-4b0e-8f28-badef3e9203b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "23ab30f3-3aa4-4dd0-bd34-1c528d48ada6",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c162ed5-8650-47fe-9176-9d8893f40403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3a8bd5ca-11b3-4bb4-9aeb-074a6a036c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a820809-f967-473b-b8fb-f9b0c8c4efc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a1ceaa-2137-4290-b672-8ca7173b8de5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "43382755-ab84-47b5-accd-7c29c94348c5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40c23525-3716-487e-b7e3-c245524a76e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8c5570d-9bea-4cae-8cce-da990adf1ad2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3765132-e265-4286-97bf-19cdb6dfd2f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1b3364d7-0cb6-4bd1-a958-e4cce6f8e000"
                    }
                  }
                ]
              },
              {
                "id": "ccd402f2-73c4-496d-bf2e-50f3b1ce5177",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fc1b12b-f486-4717-8db7-a1bf8c0754e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b2f7b1b-40dd-499c-bcb0-d58a13492c93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9713acf2-e111-4060-9f1f-f6e9cc5c91a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "10cac1f8-31ae-4550-8e3d-21d45175497a"
                    }
                  }
                ]
              },
              {
                "id": "56e5d9e4-31b4-4a82-9d7a-5583b673dc12",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8aaf8af3-cf51-493d-a8e8-b6963153e6b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fdf7c0da-595b-486c-bd12-f7e9b2958cb7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "576f2d8e-db62-42fa-b254-99a467a096d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "16bc4fc9-2871-4aa6-89db-acc930978ed8"
                    }
                  }
                ]
              },
              {
                "id": "98581a90-ad82-4b25-8904-d09b1503e1d9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a2dc349-a38f-45cf-9204-8ed2441ec65c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c7b4404-b54c-4981-ab0a-56b8412ce41e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7020564c-175c-48d0-b164-4c97c7d8ef05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7728c3ee-980c-43b3-85d2-6e3202e77dfc"
                    }
                  }
                ]
              },
              {
                "id": "62bed7d6-8329-4f1d-89eb-089464c96af2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8b9169d-3b48-4efd-b536-85061ddd1870",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3beb687e-e54e-4268-8504-ce8428783fef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cfd5e17-3766-4f77-a907-cbca0ef23c82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b03cc584-3e03-4bc6-861e-9cdaa81c9e79"
                    }
                  }
                ]
              },
              {
                "id": "7bc2cbf0-01f6-42ce-b45d-e116e906c753",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d774e6dc-172e-4641-808b-dce08669b30a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e161e60b-e4bc-4bbe-895c-7e0d17adcce7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "511ff9f2-e80f-40e2-8063-2d8c36e995db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fbd1ac24-c3f3-4c7d-a106-aad42a9fa863"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "93267c1b-d5e1-47b3-a7f8-4bb0d316c05d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af6396d6-129e-423a-9b1a-fa3b856e9f8f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3e5104cb-3356-4851-9949-99e0584cad84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "27b6ad53-9c30-47e2-a60a-0985e1c7b81b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "339a9e77-48aa-45a3-b3b5-c275a102d4eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b32610ae-211b-460e-a754-0172538a5234"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88ee8d10-3011-48d1-b29a-793a670d95cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06f06eb8-dcfb-4807-9bb7-0c06664da34a"
            }
          }
        ]
      },
      {
        "id": "2f4b6e79-442a-4c80-8892-8a291940efb8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "77553940-407e-4ff5-a35e-259946a59a08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5c4308f-66d2-4734-ba5f-879fce86a4cc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9039c77c-3725-4fd4-8044-92b75d72b27a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eadb093-775a-4e05-a35c-e1a130f39a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8057d29-4f7b-411b-bf15-a87ad7680494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe42a6b-7eae-4143-afbb-aed366c5cb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c14fc944-c5da-4f68-b891-60c85c22db31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50b11b9-0b31-4308-b735-829bb48dccca",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31017b68-75de-4ada-b7bf-395b8c074cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e5143d-d89f-46a7-885a-c69d9d476326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a34b98-aea5-4ffe-8650-ef31a97154fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f34ec345-7d7f-4ba7-925d-a59b7ac27142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20cdeafc-9aff-4ebf-ba18-85e68ea1966b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfb89cd-84f8-4a9f-8c01-b14d737ea03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0e9745-ccfb-4601-b924-62bdbf54b2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b609d2-a166-498f-ba71-71ef4cbf3a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7df4301-56ac-4241-8aa2-089d67ee2010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba297f85-4c93-42cf-9d88-b40d904b7ae7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b19fac6-d62e-434b-b9fa-e726ab0a0a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e3d646-b0d0-49fe-968f-8f5680ec56b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b92101-5eee-4616-9827-181fa18afe9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b63b5c71-92ea-4402-b088-ae4dc3e497e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0442aa-0d8c-419d-b192-a8740c7697be",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f74591-ba49-419d-8033-355f87f1b8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933dd743-b807-48e6-a08e-fb7cfaefa50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2338ca-6f08-4b05-87ca-8fdecaac23cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "226bdb05-ce4b-4ecb-b5f8-6bb833a7521f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e434ea2-4606-47b3-b312-11d77ecb1272",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9488d094-91fd-48e0-9995-80d2aab2b978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22165ca9-a48c-4e69-a7f8-d9e5e7035238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182715ef-87b0-4ff7-940f-cee313042912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad546a9-a343-4f24-982f-f988de1a5fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e4fbfc-5627-44fd-83ce-ef1bff568a66",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afe6b42-d487-45ed-b144-7e2ff1c6e488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3e07b3-21ed-42ca-a004-a88a524de6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c4b3c4-73ee-4766-af54-f0e374aea0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f373021a-1efc-4d60-984f-140dc21bf004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbdb004-5669-4991-b1b5-14a1e7599c12",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970c2d21-1488-43dc-ab09-06652158c061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b95439-9389-40e1-b911-9b5723ff1d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012ecd56-1008-4384-923f-9e0c6e2c08d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1554c5d8-6cb2-4dce-a867-138a8a938c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9366a205-2706-4cef-9ce9-027036c6359f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99448f84-2bc2-4930-975b-f8d5add8bd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23357acf-5dfd-4574-b344-949737a09b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d93544d-83bc-4d34-8483-00cec41f7260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e786f6-debe-4724-8b1e-c6e6afb603e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6959506-19b3-4d07-93c1-215091c7e547",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8bebba-85c2-4add-81ce-11d8c8a9623c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95586dd3-1199-4736-84a7-04b8656caf13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86e6e65-53ec-45f0-8750-9b0c9df3f3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3022ab6-0b09-46cd-9e87-87dd82d113d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cbdc94-b3db-4f01-a08f-0ebc4d18f796",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822642a4-7bdb-4617-96f4-9db9fb25aced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e94f35-0e41-47ac-bca9-edf2acc7fdfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253bfdd7-c7f3-41a5-8299-3e4a1a907f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4a49930e-911f-4b88-bcc6-524d4e789330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b13b4c1-bd38-43ba-867f-815b0fdf50de",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d5c1d9-02b4-4729-a177-2e9f88242be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67beb736-dc61-4620-9d1a-271c668fb7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cfa574-fe86-4bb9-91d4-911ed68d9247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0968724-cf5e-46d1-81d0-de5a3bc33a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb86f0dd-7ad9-419c-96e5-2d79b469f7b0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da124ff4-b882-49bb-9d38-fd47a007dbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd65c3f-fb08-4f6a-8734-6bfc129fb7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ec9a98-045a-45d6-8640-59f717cc9334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "484fdbd1-b877-48d0-acc5-dafbdd26d0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f827bad8-01d9-4c5a-b2ad-dfcd47a27b6e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a81dff-c4c6-4a5e-b363-e7d41b102b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904a82ec-6119-433e-bbb0-0437e7f94c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8afc3e-838e-48c7-b082-426366849b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "211b5928-a12f-4b9e-8656-0bb440048f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd3be0d-5805-4993-9c93-8388341986ff",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39642d66-f08f-47e4-a319-4850b9f9f352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8381809-3f2d-41ac-8fe7-407cf9417fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e85a79-1031-4c7d-97cc-e0b03fe5ab75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b269fc-2fe6-44ad-a2e6-ac1946cfde05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04293348-4d7d-4e04-a673-d25a3af1bbce",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83efa8f-af6e-4bd6-b700-32be366aad84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49810783-36b8-4b19-b4ab-7d2172faee30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2f85f1-8d33-4ede-b3a7-36f81a70b311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8876cc-8682-49ee-a760-e469e4c21aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cfca5c-4c34-4002-afee-e862f4736baa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911e63e4-6b71-487f-b917-d6da413dbcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef4861d-d58a-4212-ab59-6a32592a7f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df1f197-b445-4bb3-bc6d-43c584f254f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f039a259-a3e7-406a-9971-e0f0e07e03ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b192d78-0f60-45bd-a1e9-c653746fc073",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf73a6af-0579-4360-8da6-4452a322983f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82a722f-b183-4b0d-90ca-12321c3de7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e4b7b4-4ad8-4840-9160-659355a9742d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "68c4350c-f2b9-465d-8f08-93eaa7342edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd513f78-1bfd-4d0d-bc64-14decf6a0a68",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377ffac3-2fd2-408b-ba4f-8609be5893d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4946713a-5c2b-4b2e-8534-71619fc9bf57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cb870b-6a7f-476b-81ff-eb6c3a7ba71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12558224-88a7-45ae-8c6b-513b01b0f218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be65051d-759a-4661-ace5-718bb5f2c7f0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d17e377-d647-42f2-ba63-8b95e2c0aa25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7843b87-ede1-443f-aa90-b4c3e6560427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ffab83-78b3-4fdb-a457-415657ebd187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3241c9c-3fd6-425e-b492-c41a6cfba5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c1d36f-6c67-4865-95de-b65177c90265",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbd606e-feb0-4340-afd6-b97352a8d3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756b0179-11cd-44e3-959d-7a96dffd40fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05e3938-6530-4250-917d-7664d5f9f742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2efa61ea-db54-474a-b3b4-35192288c401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3f1e1f-52da-4520-913d-a62913e17aba",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df32cac-521c-403b-a2fd-0d20d2d9ecb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5820e1-a301-4ca4-819b-5625355b232a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8607788e-87bb-4670-8e41-8bf73c46ee32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "615c9268-c106-4dcf-8167-880cd5c06420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9366326e-7427-45a2-8685-cb5bc6574e58",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6faadf-ac71-4658-94fd-d20a8b78c3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c6d9cc-093d-492d-9896-0c5abaf1cfc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2839238e-fda3-4b91-ab29-52d18b90caca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca502d1f-dbcc-4b5c-8351-c50bbf448715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539616f0-2b95-47e1-b0f7-5e316c4ed4ca",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a948cd-b584-4b47-8f70-58446be2cd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2e9bed-74a3-44a3-a25a-3adc336e89ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e990479-e534-475f-a1b0-8ebe291afc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f90a3b-9831-49cb-8280-e94c0f0e07a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8bab7f-19bb-44ff-9275-9aed0c320ef8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70f95cd-aff4-407a-8268-abbcfd171600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8863aa8-1f9f-40f5-beda-5cd43db1b2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c1d5f5-272b-4c1d-abb8-96db7bc83020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81d2436c-fc43-48d4-9dbb-ad1b14e76d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f740fbdd-2e24-4c71-bcb2-713541b27a6f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e393c577-7d6b-418e-94a2-0d7ddedc7db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43555a2-4673-48aa-8e41-946d4c9b747b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a086e685-9f05-4376-a5cd-5d457987235e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc88333-08e8-4dab-a46c-7e59fb3d3204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247a613a-9813-4b79-afb5-06d67bb35de9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9540f8b-6613-440b-bf00-4f09a56c881b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d95cb4-fafb-43da-930f-0ac311c74805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f98f3c-88f3-4135-8e4d-f247d7269b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7bc469-aa9d-45f8-abf0-cb3ea5c2ebd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae89f45-4155-43f8-a913-cf2795291876",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8e3514-8702-47b3-8ea5-a5f1da9264f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba4ed08-8692-467b-95cb-0492a00880b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c90f334-0b93-4d81-a49c-2fc6ece13955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8265dc6c-5f87-461e-8053-b9fae54238d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baeab268-3d7f-4fbd-8597-fd57bd3ee2a5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f57802-d831-4deb-8b13-53ee9578b8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec528f13-bd51-43f3-96d5-b746c2e94151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7c3b6f-f472-439b-8978-80471192c824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f621c5-221b-40d4-9c72-87d4b70d9f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4de428-123b-48a4-b206-dc72def564a7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe03f48-e4de-40cc-a61e-b4e9b582034b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfe9d16-438d-4918-a7b6-ce88e5a0dedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ea5ad0-1b98-4ab3-81bb-74bd5fd8a07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c74f8b6c-606d-4d2a-a62f-a8b97dd37a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a759cee9-a2c3-4783-ab54-93930a6c37e0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fc1afc-a900-4eca-8980-bd6186fa0cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11d22e5-8141-494a-8e4e-4e2d5da236c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fd7647-1520-4a91-9d19-72f8ed7509a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b3eb8b-13a8-4f39-8cd4-f7d14ba277b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75383377-bd88-484e-b556-2361bdc4e5fb",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ba0b4e-aae7-48a2-8924-9164bb95031a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6cdd8d-3a67-4b77-a0bf-4f2d1e6f4ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cf48d5-25c4-48c7-8d7a-e95892d6606f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6caa6f00-f08b-4e0f-bf46-9ff86c5baa23"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "692735c1-2d81-4903-a51f-878d759134bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f6d6087-32e0-47ab-aa23-32c06fce7327",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3647c602-3b9c-4c1f-8617-732f4a56a4b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c0155241-d737-4270-9f70-37ced55a812e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "138de20b-c269-4699-b9f0-966895f9e54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2aac9deb-02c1-43ab-bf47-641df6a6f860"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54ea399a-11c9-4877-bf4b-64814171c193",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65af9b92-815e-4a10-90dd-2797e7ef2a07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "193a0211-7e0f-490a-9cce-fa251f760668",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f4b4606-d5a9-4c8e-8c06-31338671cf49"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d817afc-aefe-4665-bfce-568ffe6ff7f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8983e507-9f0e-4d49-86ef-2173f95b32bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bf40017-3d97-43c7-a0e2-8880472fb0e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57d57b71-3cc3-458f-8107-1e91b5b09a82"
            }
          }
        ]
      },
      {
        "id": "23ea580d-d76f-41bf-aca3-fba136196064",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "84162fe4-13b0-4a95-94ca-a30ba885b1a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9cb5acfd-9fde-4757-aeb6-8392a9205c5b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1388517-9f38-4c65-9809-ed89bfe77f20",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404c6349-461a-48a3-8786-01f53ec782b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157474ee-f7fc-4f26-9329-dc3d004866b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac69df10-6237-45d0-9c59-30e5a023f3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "37f7baeb-7780-4958-842b-2c3ffbea9d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2b9f93-3857-477e-b0ce-71cf30123cb8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1deb7ca-1ea3-4818-84f7-5d2f38720b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403c1951-80fc-4825-9c32-2851601f8d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f93ebe2-72bb-4b8c-a542-6d523da610a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9001c156-a3ad-4636-ac20-1810c8767681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5b5ca3-e318-4165-9fdb-296d8ff9cf36",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb5a084-e906-437c-bed6-85305c3b92d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f27eb26-6c83-4294-b706-5a498d50b610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c79f5ff-6bf8-46ea-b398-c06539d59b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d113927-f85d-4089-b697-b7abc9dcf65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d296b64-74a2-466b-8989-802f1a84b34f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a381ba-90ca-421f-8f95-f1f8f42d8823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbee770-8e0d-41f0-b239-2e0fb2c565c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8b1f8d-75fe-489a-9941-19e7bc97f4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3598b5-aedf-4e14-83b8-3e88738c64f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107b2683-0e28-4142-bf84-26c6b16c2da0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f1d196-92f8-41ef-b231-e30736ce146a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e965a932-475f-495d-8377-6721330c9b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec755ae9-635c-48c3-ac69-76f9bfaada35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82f3d52e-e66c-469f-8a82-bba1fdcf9995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc72a708-5b55-4b39-acd2-b943f19ce286",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f06aaf6-b365-402b-bcb9-55e99272bbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54e659b-38d7-4d02-895b-af76eaab206f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0aa0ac-25fc-4517-bdd6-672601d30778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "247c44c7-1213-4cd6-8a55-3f295d1a9b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f13fd1e-c418-4a4d-865b-65f77cfe786b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8ebd55-f5be-4e54-b1ad-1faefd26d73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0def9d7b-e54f-408d-9384-1f1f4dda1e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972e0ee8-72a7-4ef7-9572-c41a9c90fa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3cb514f-131a-42a6-9db3-20060d17f039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6ed356-27aa-4e3b-8491-45931f4ab03c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81c0807-ea85-4daf-b63b-aaa481fe35ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7a7657-6c35-4128-a887-fd943789456f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b975b822-3c53-42ec-924a-381555b0fdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "959b1c8f-b119-4624-b839-3fb5af29b050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a33670-3681-4bd6-8125-bd231e8ea5a8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3b3d8e-4960-4e87-a73a-cd734c5581a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29310bda-49d5-49a9-b56a-b77de84f0499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7fe3c0-5fff-4f0c-8294-69ca73941cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a078b86-b4c2-482f-8411-1724ca2fb86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73201212-dcb7-4756-8a6d-65eaae1d316c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa17e3c-5769-49a6-beb3-a980bc43c21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28a8a82-73a7-4927-8cce-af555ae37a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f582896-76a9-4b2d-905f-766cd166a9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "730ba68e-9b10-4df9-b7e1-6970aac69afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acbee2b-c19a-4d98-92f4-de76c817036e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4b2d8f-e2d5-459c-8b90-d7a447f37146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc040fef-1451-406d-85c1-43218009a9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e870caf-a0e8-42b6-be01-1ed47effa743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d8fb1b6e-4fd8-4acb-b441-4c8245365628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea24df29-4577-4740-914d-fc90d860c64c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87c061f-5113-42a1-8e7f-bbab738988a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba2b5dc-cccc-4a0e-9d25-85a93226cac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12749c4-baab-4ec8-920e-d33e0c580eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f53ee233-9412-4b50-aa36-9d3701c73237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da636bcf-7271-48ff-9971-74ccf71c8fc8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f76576-2839-4728-b694-a8ac179120ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51be23c-38c2-4b5d-b578-8b00dd099769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f4f1c2-097b-4160-a4bf-9a77be79cf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2451e38-818f-4f3c-b353-23a0b9cf7b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c26d53-8c72-4e85-96b6-99f39f0ba0fc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fe9765-a0f3-4e2c-8b63-dc3463c0d672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3bfd500-35c9-4254-a4e2-fbb25c3e219f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677321d8-18e4-4d4b-9af2-b762d36bb1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e127d5a-cd78-485c-86f6-cf3ef3bdd6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35c1b5b-e5e8-4976-b9d3-0e37c85eef78",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9376d363-4e29-4898-a21f-a9536c10d330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478595ee-7cdf-4850-ac71-8d24c6729c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956c510b-d676-4be0-ad25-9a1925ec2fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "88795963-3d1a-4732-a867-2f94b51ec627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922a7b8f-9753-4cf5-87c1-57758c6281a1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5a0ae2-e419-4f5c-946d-68d11ad4bc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481cd829-5ae8-4e6d-96c4-255e9e3cd475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5380fb6-71af-47be-83f6-b493b63aebe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c62e80bb-866c-4970-875e-d8fb75d46a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670252ef-ba30-4423-9b58-ba44c30ea0c0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f28e7a3-7a20-4eff-852f-c5c1f214b4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc6fde8-83c6-4605-9105-0e5dbd48cdd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883f2cf6-1980-4374-918e-5045a7df4807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f95fe67-8cb3-461b-96d2-6101c27da5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ad9262-c08e-4a74-a134-bdef21c223ff",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9885d8ba-0825-44f5-9da4-b18278a95042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9698115-cbc7-42bd-8537-7938e6adb905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e8691e-49fd-49af-b2d9-16ce2630ef83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2733701-ee3c-45d7-a7da-b34221d6500c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4e2ce6-6c64-43ab-95ef-80df57c4da11",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c567b3e-164b-48d1-b0d9-23ae40a5c9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a84f972-4ed8-4e83-8b6a-a0d831a16e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375d9817-e9c3-46f5-ac2d-5bfae3514c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3703148-1e5b-4518-b96d-50a182243435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68fa9f9-f793-4980-a97d-ef2f408ade93",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4662991e-f247-4860-8199-7794b7d477d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7851db-3aad-4e18-9f4f-0abf441a3f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9844c318-019d-4a8d-96b0-3e8295e76056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8b1313-11d2-4253-9705-aa9c46f5f8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac496cf-93d5-4d96-85b2-bd07fd42b105",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4453d0cd-6a00-4fec-a6a2-eac9cd45e9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca591641-b770-4046-ac63-645281724bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee67e98d-13d4-4327-b2a0-b480bd4bcdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0bb920-cdc5-43d4-bc27-fb872eefbbf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebf0cb5-d63d-4b77-bbf4-5e74a9dd90de",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6986839f-5ff3-4f0e-bf93-cdf5fa5345c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a71824a-d4e9-4adb-8407-f502795cd2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775843b6-a421-4fe5-adcb-8c7aca54a563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a75bf6f-2756-466a-a422-e6edec3155cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218b4947-9468-49da-babe-d6117bbd855b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875ad4c7-b689-4359-bdf2-997296f1a030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d15a26f-6181-4b16-aaa4-f81cc3ed6653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4277536d-9965-4ba2-91e0-e8a7ac142467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6801f0-e654-432d-97bc-5949fecb533d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666515cc-d061-4b83-bcbb-2560030993c1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402f9e78-3369-4dde-843c-cfbec8fcaa81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6358855d-b097-4ac6-bad4-8a89d0086a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf4f244-3a87-433d-8a13-655b39dd70d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c96e8cd-4c33-447a-9845-0852a375ea51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d47d2c2-150d-4bad-9826-244649663607",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2cedbe-5275-4110-98c8-010efbd57d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb9f041-5878-4cfe-99e7-16edb8443281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b7a4b1-30f3-4b22-921f-7f46b5e8b0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "946aab19-2906-48c0-a34d-6098153b10d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6eb47c-f504-42da-9311-1279328520eb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f181b255-6c33-4273-936f-23a60b73ebfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49384f08-8048-41a3-995a-8a7fccaa8c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6018296-15b0-4aaf-9667-68eecb38e6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbbce4ee-9a02-4fdc-a077-4ecf35ef844e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab8feed-f8c1-4435-82da-19644d6af2af",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f86c823-d27c-4b1a-a237-3ebc549df497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b896398d-36de-4de0-a22f-809831a1df96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e7c860-f78d-4c0c-ab03-2aebde6a16ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d38ae60-d057-42f0-9933-8de8bcdd08af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d4cc81-ff14-42a4-91c8-991c3ba1a6c9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28d9f70-2a07-4a61-8fe5-f51d1df193c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700945ff-c3fe-4204-a25c-87f56cf31727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe4fc3a-09ea-4dc8-9ab5-c5056a74d847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d14a41d1-1374-4f24-9609-5f5e44f98ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e694be2-11bd-438e-b6e2-ba8625458c62",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b53378-c992-43ef-8d3b-a625c7a81ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d64da3b-3f4e-485d-97d1-6b1f198cc656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c73ef8d-f409-4e3f-87a5-2a7e86113c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "555ca8ff-122c-473a-830c-1ee25ffd6e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e03f81-056a-4701-ba12-7b7ba487c3cf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cc5664-e3dc-415a-9dc2-4a0a03dcbe2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5014388f-56a8-4315-9c81-6bf57f397880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1791d339-578e-40a8-89a0-36d8bd3ad97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08ca4f17-1dc5-4caf-a192-0c90e5d20cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf4dd63-fdcf-4703-bf1b-b3720551e098",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cec30c-774a-4b88-9762-e81261a41fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41eab929-8389-45de-9ed4-dcbfd91de562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db7af9d-fa76-44f9-a657-685631bbba77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a293c717-81f5-4c07-8a11-f90018a330da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5522d1c9-fdd7-4404-b9b5-e894f4e0febe",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de482a00-77f4-43a2-9e1c-a1c66cbcb1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27048de2-3b91-44b1-8088-f549e902496b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317a2e19-9db6-4547-9d6a-2fbc9943c387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b22827f-ad9a-442c-a6a7-4bc4e6d9d037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2de009-5d58-4117-bfda-5ad2611e2dda",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48c2124-da2c-47c7-97e6-1257915e11a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a584532-25da-4e22-8b82-a4bd6f36651e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a97ebf-4384-4250-9006-e8b1e1ecfc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03c916d4-8559-458c-b525-8d557d8f897a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af16f573-7b36-4365-ae2e-9464c54ac255",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265ce1bb-cea9-489f-8b18-458f617be231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8994b885-7145-4fe0-b01c-c536c2a7d3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37817276-787f-4c6e-b0e0-20530fe70e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6516b9df-a4de-4e8a-b96a-6c9877663475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a66e6b-53ec-4205-8b9c-7e5db38e8ed5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6adc585-4976-4a25-9867-fe457e30ef64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e57827-0ae7-411f-8068-e820011bbdb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e57388d-4750-404a-8b2a-4a207948fa09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b23071-a0bd-40b2-901f-8ad52203e4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239eb56d-bba2-4b19-892e-159055c4d63f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6171f6f6-c09a-4043-b330-4d217296042b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6230fa90-2995-4c01-b10c-1f3a6d714935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44090469-990f-435a-99c6-6cb40c5f04c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4e475d-4f0b-446f-9842-15b661199eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5062b3cf-d8e9-46e9-a98c-3ecbd80bf433",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e102f61d-6d03-43b2-8dc4-ce78af463c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c994b5-6c91-4954-9c7a-59d623e298ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff1cc57-0f56-42a1-8b2e-4979d7284228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9817042-1f16-4714-aa48-4a2685feb7c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "64fbce81-0e80-48ef-bbc8-d36301a9f267",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db69a023-3c3c-46d1-8a26-cd605b11223b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4e3dc4-f6b2-4174-8aa4-4a4b7849b40d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbde5e6-3e7b-4ea8-85d4-1974d78c7c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f306bf-caad-4260-a994-7abc315b96c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f96de5f8-25e8-47b6-8ad7-dd36a7be2ebb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c4f524f-440d-421b-8cba-9352e213a067",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1561888c-7b9e-4a9c-a449-14e10b0c3e32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f843a1b0-677d-43f9-9a72-c2d015ca1a59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f897c0dd-cd2e-4d2e-a8e9-2788561f1deb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fa8ca8c-e03b-4ea1-a0b6-5c4b347826d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ad6f251c-1b59-40ca-a3e8-d0c69ecdde88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a379db7-4b42-481e-afa2-32f3cd05fcfc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15c1ca32-1f40-48e5-97fc-0eecd3252a6d"
            }
          }
        ]
      },
      {
        "id": "f5ae96df-2c9f-4441-aa32-855b7e9de325",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a6ddac47-ed03-4a04-9a76-2c06151e7ec3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea371272-bb34-40d1-95d8-6cd93cbc4744",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "139b9d0e-5f1e-438f-8a02-c510e0c3c218",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89c7d51-719c-46fc-b617-ce88886f4d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5269cd-adaf-49d2-b4c2-b4ae2458465a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61428cf0-85d8-4ca2-ab49-0cd02b97fb6a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212420c5-e555-4ab0-8138-4e7e020b1278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e25523-7099-4003-bda5-25a3a2fbd948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499a6cbf-6181-4386-9f9b-dc7ef4ed7c57",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995fac39-b83d-473f-ac72-5029f003edc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5b277d-3542-4f96-a71a-bdf46f444af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c362df29-064b-4272-81f3-9a126c73eca0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194f8e23-cdf8-4998-afbc-eb01bb20abbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c289defd-d532-470e-8649-e18503961eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995944d8-03b7-48ae-93a0-5ba93eff9a84",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8480114c-3ab5-4a1a-bc1f-ead2043a9189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638f480c-f3cb-469e-bc89-411b995af0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdb15ba-13e1-4e97-9448-39ccd70efcf1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b243ed-89a3-492a-9e09-e4a43454e742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994f3a07-ebe1-40a8-b5d7-5dc52de5d801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32d3971-658e-45aa-8d2e-2e29cfcbdc9c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a57a2cb-44a5-4c03-9dfd-85da5593cc0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08f1854-01bb-4db8-9a48-b7ba74b5f225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1babcfa8-71cc-4f45-927a-31b0d5564e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dee9b49-b920-4fef-87ab-ba43fad66ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674d2a83-46b8-40e8-8cec-ba289f9b09ae",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6c9b42-b13f-42dc-98ba-71ba2b5d41fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d77ac816-9ca3-4ed7-83d2-84fced9368e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfc6178-8e70-4aef-816a-f284ea1dadd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8090e9c1-47cd-4c60-996e-26e865a0f6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbe2196-8431-40d6-b4df-1076a74b8c45",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d54b585-f611-4542-8441-09ab0a116916",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44384dad-295e-471c-b9cb-b88f9802ccbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c6097c-b49c-4783-b13b-7f1b1f520b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff390ae-6deb-4d38-b27e-d0ec14985ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cadedbd-7d2e-49a3-8cfe-e6ccdb67a614",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2489344a-2e48-42ea-acef-5ec6258b7351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b251b6b-f8cc-42ca-8adf-2495a3c2e12d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c2095d-1ec8-4f63-99cf-bc72101d34d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1694030-b832-4c6b-a90d-13d7e9a03827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d823d49-e922-4497-b90b-f728e39c501a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770f33e5-e725-4852-903f-936fe5b1bbbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce5ba4e-f410-4c41-8026-985e346bcbd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abde843a-68d6-4d2b-a6c6-b109781fb171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174c3c42-065c-4b92-9678-0cf87c5dd423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac33c89-8187-4354-b99a-7fe1a609eb65",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60d93b7-9f4f-4acb-9b44-2aed9357bd65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805cf33b-65cd-4978-aad4-eb607e168e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82ff99a-5b64-445d-9b76-6eb2c32b659f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb7ada1-a6eb-48be-b3d4-904a3e9878db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f50245b-f6ca-4366-bd80-afbdb5abab06",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7f6b87-61e0-46c8-9422-3043653f5b44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8cad993-d6ca-486c-9f5e-7a93a0eb2c47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284c9166-b798-4375-b313-f77b2a948f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3171ed80-2995-418f-ad5c-5378863d4459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6243fc64-9054-4ac1-a15c-f45ab139223b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247e3028-9240-48c6-850b-886a2de2df17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "961be96b-2029-4ed0-85e6-48a079434c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd2435a-05ca-4eb0-8eb7-c2c63cb6f355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1dba6d4-98d5-45c3-9f44-240d07852f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba647b1-69a6-496b-a9f9-ed44e070551f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c1da5f-1c43-4309-8da5-6df5c3c0374a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84c12a37-4081-491f-9fdf-9aec0a3a4bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d77872-3b18-4324-b243-5827c4dca372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd45481-9420-414e-b1c4-a9a086498820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd955a4e-7072-4611-b1ee-8fefff5629a5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a70b5f-6cdf-4d0f-a15b-928d4276369e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fc3ec36-ceed-40b2-a1a6-f173fb2a92d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275bcfbf-39d0-4826-ad9c-e7934bb546a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e712311-159a-4067-ac85-f01563d6e5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb233336-e6a9-4115-85ec-30b47a012bfd",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b99b60-5749-41f5-be30-e1060c47aca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d0fcbf-51ea-41e7-a676-29737f4bff3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d03317-2230-4673-bf92-4a50fb492d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c022543-3102-495f-a592-1ae9f5d3ff98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5d8d05-c7d2-47cf-aa81-98c5c8b324f3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1485577b-84c2-4299-a121-ac6fd896e6ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c9aca1-9630-400d-a7d1-14e18e95a4d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46a063b-e206-46e4-8107-ebcc34816429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416c1ad6-dabc-4e11-989b-983ab710aa47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9e7db1-87e1-418e-9fe2-0ba3103ec6ee",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86bfc1d-4304-4704-b7e1-b9baeb827fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77fd9488-5973-431c-a9d9-5f2b7a46af91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e612c994-f9ff-49f2-900a-a72379479d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ecb6f5e-ed61-4727-b7a1-93105706e5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176c43df-8d55-4b42-9d20-a32274750db2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ada0b6b-43a0-402e-9acd-01bba7ebc409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77fcfc20-f963-4ed2-aa50-c41214c8c516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8791b79c-5ae2-4010-ab36-0e6fcdd1694a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1160acbb-ae0f-42b7-aa90-94fa546df01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d04753-b46e-4954-8d98-a3bde5bec607",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b742ec-6fb9-4a89-bcae-f68093bb8ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ed4c23-7398-4a82-ba84-a4cb6320a832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802880da-124e-4bcd-adeb-d8036f35fa86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83c34b8-93d4-45dd-b0e5-1ef4c800bde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ada1b0a-84fc-403d-b45c-eec4444dc047",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f10ff7-7324-4002-a927-48e659f2d09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2223aec8-1abd-46b9-a961-48e2a2df3825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d5776b-5cdb-44d4-a84e-774f9ddc722d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7db00c-1a0e-46e3-9b25-3bc91161a2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d982331f-82ae-4067-8a23-202d6408f763",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803199bd-3ec7-4329-9596-cf1062098df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cafb4a4-1674-4816-9d32-5a3bb31bb9c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df774cc6-e7ad-4617-a49a-55d15192719f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c36ac4d-af74-4fb3-8a01-ea0f8d156690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023f7214-8a15-4f92-a4ef-06f1776702f1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58765f7-fb19-49aa-ab02-0275b030e8d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3d6fc5b-f204-4772-8eb9-ff2f0b2d91ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f3ebbe-e2b6-4f0d-aec8-b19099660131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88760ae7-7649-4cbc-a224-e4e0b6ee8d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c70ddf-0356-4215-b80d-6135ff445cda",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72293297-338a-4dee-ae22-e3673108dcad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd10465-cb30-4b87-b9c7-478077e4f6a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd13e54-b6be-4994-b600-17f509e11af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a46454-3736-4e1f-bd03-7947dadaeb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973864d2-64fe-4154-92ca-e7836cfdfc0d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0656bddd-8184-41b3-ba1e-218e017c178f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbbf8732-02b2-4e35-ab15-d82b0aaa769d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dea54e7-cc24-4cc2-87d0-7cabd45cda14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c18fa08-4361-4452-a490-6bd10bc82dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dee4f4a-0f42-404a-8764-8d6bc4faddfa",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea81c8fc-74bb-4dd7-8273-beb41574f542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbeaa704-36b3-4ea1-b200-4952db94ee58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc856aff-b76f-4a84-a31b-9092e6bef96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cec314-e959-4da1-980d-c15a3935db63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a69cd22-1a97-4442-bf35-98a21333d561",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3768754-284d-4ef7-994a-432291a5a0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86cd69bc-5586-4c38-a405-cf6dbb8a2e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12acdef3-9c96-42c7-84f6-7edf7502b32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eced2fc-9edb-40e5-a970-62aac4310bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04631ca-eb0d-4089-973f-ced6556cfbdd",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f8733c-265d-49d6-8c7b-bdc38252af12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39933dab-7b9b-483c-9f34-4e44543406e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d30f62d-4f31-4359-aa65-95deba876947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b04fad-9399-4c1a-aaa5-f173ca2ed7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ff6ddd-c375-4189-95d2-d6529d4d0b30",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68affe21-623d-409b-9107-7b3cbcdd7f95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dd820b7-8651-45ab-bcaf-793ccafc66ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d493ff2b-f3a1-4b9d-83cb-ee6b75363ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916f3e81-0abf-4972-85ab-7e4257c651d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d902af15-7471-4d36-b7df-3ac26b62dd79",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde3f64e-312c-46cf-b19e-3dab52ac35c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cec53faa-55a5-4576-8d94-0711d3688bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad05de46-89ef-422f-9b1d-52c78b6e97b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b8dd98-26b0-4be5-a9c8-c378856ecd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06a16b9-4b35-4f4c-bf28-ce29b530ed46",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a20926e-c550-4225-b9ec-2ca79e8e6119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "939f0e6b-fb36-4d4c-8496-a1977bd0edf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4d6fda-3d46-41d5-a88e-0ac330c34110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8185aa13-68cf-4272-9eb9-ab36687031ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfa8e53-28dd-437a-ac0b-d17974f307de",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d1abea-ddf1-462f-82cc-ff4b6dec959b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75c2c164-1e3e-41dd-a6e7-db9396bd3939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8daf7b84-9dc0-4e67-83e4-3f0f1ff3aeed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e42016a-137e-4b14-a565-321212a69d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3aaf51-0d1d-4c77-8774-ddd4e84ff12c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f75849d-19c3-4fc3-8374-7a4cfb16559c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50fa6a59-8bd1-43f4-bb4c-0e1665dddd81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b465247-97c3-4cfd-a4c5-fce74361c720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13aad3c-77f0-4013-ab8d-857ffc2bad39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a2b808-006f-4985-8634-4063492e0eda",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5a03fa-f6b3-4461-af2c-67dd9b28e13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2316e8-6ae9-4bbe-a86f-a79aeecf7246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45fa590-6776-4167-b8a7-eb55cd999c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e91fc71-6a80-4e05-b209-70703782d27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65c22d3-8f7e-44a1-bcc8-5b121f6abac4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b2fb72-66b2-4cd7-9b0c-3aa5668aa289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5802e4-c536-402f-acbe-9ceb8fbe469a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af998f7-9795-4d66-87a8-441ca641fad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff4a7ee-7e78-4307-8dcb-d07b0b436be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2c8ff5-dcb7-499d-85c9-6d4e1d6b3b6b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d240f3ac-6f15-493a-951d-359c819ec3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40405915-b61e-4576-8f0f-d95e0b3b460d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b510e48-2c49-400e-a380-169bbc447a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11edb568-d087-46ea-bbd6-fe2acb5ec531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655d8923-5109-4d68-9b02-a8b1c6f6d81e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cfda4e-0156-4ba4-a492-0dc3db7c8a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb4feb7-aba8-47b3-b700-366ed624e242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274e3bb9-10ec-4fd1-9f9a-78e4967e22d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75afe46f-9330-434b-9731-3c73cbd70a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f1645f-32b6-4a24-8f14-9d620e78c7f9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615f0e3a-7146-4313-930e-1ef3358eacba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa06425-2c64-419d-bb0b-0e0ffe6acba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db53bc4a-37cd-42d8-81fd-c36d0b206863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9739e0-7591-46a9-bddf-d7824398e9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f26834-bc46-40bb-9789-24812ed93cf6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8608213d-e36b-411c-9d99-eca3befe6a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1759245c-0eba-4807-a4e1-be1806c8a474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fc8bba-0307-4f9b-89e7-a4a0ed17c6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e8215a-93d5-4b8f-81e6-78a8fa16dc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8b56e0-214a-4c37-9e86-91414c1a611a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2449fb3c-9d10-4f3b-881c-2240574d2e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94371746-41f1-4379-9f2b-ff393a0a90d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cb3056-56ed-4d95-a392-5204c540a28e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b0863d-b0cd-471b-a4a3-e735165f329b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8678c2-3141-44d4-9822-2266d1b92d32",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a287378-c67a-4643-bf1c-356060a016f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8926f684-e675-4c02-b8c5-056ac95065de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bcb4e3-40bd-493b-8bb6-ea86ee31d7e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fdf7a38-4e78-4e33-b3d8-913a6c3a81af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d3ff14-15de-44ac-9846-42d192c7df8b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedaae89-97d2-46ef-85b8-ae1b7678389e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a577babd-c468-4815-b3ad-04603b0c2123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913dac9a-4bbe-474c-a87f-89fdf4baf351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb982064-38dd-4b9b-93ce-a184a0612f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f3ea22-7cee-4b24-97e7-e2d25c498ad7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dbf7b6-9def-442a-a391-e3a3460e1e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2635ac7b-089e-4684-a0db-3f29cd7ab428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3e65a2-7ff3-453b-b786-6927ced82448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0102515e-1593-44a6-accd-48344dd8e977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6a3d08-c123-4133-aaaf-50ccbf49afe0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe33055a-9705-4183-b017-aa0cdd97a7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86367403-d881-4518-99ca-0fcd487af9c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004fe882-86c7-4e4e-8acf-b2c13fe007c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d2f388-c3b6-434e-bb1d-1d4d5cc9d84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3c1060-d2db-485f-8bd6-7f3ce9f4a753",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af283a3-f851-424c-a6a7-2a64b5bcd876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec5f1ea-1d76-413e-990b-9df747f94f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "628d7189-9dd7-4131-b985-3d95a8e46594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20d737c-f154-4b34-ab8d-6c2440f61b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5144cd56-83f4-48fb-b4d5-05e27ed939c9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9af2c9-ae16-42f7-b3c7-3bd6aeaf610f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72badb18-c843-4ad0-8004-15b672f0df3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c909410b-cb6f-46a0-b07a-cf2674198097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3970eba4-060b-414a-a185-1fecf2f1cfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c9a944-7ad4-4266-8bcf-0b1bf5c34962",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f5fa72-efcd-4e13-abec-a5d316df7442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2745e7dc-fe3a-411f-91b7-c06fa00cae59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b40cb3-0da8-4eb0-905d-b869ec35e114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3a0f2d-a414-41f9-aff0-3f64efac7adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49dee7b-2564-499a-8c82-49a3380be6ca",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e46d4d-57d1-4116-87a3-c8589d7adb65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ae4714-1a44-401e-8093-2d451e7699cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8557a41e-5c5b-4540-a111-4259246556e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196969c2-e8c5-4c7e-94fe-fe696c2ae4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be649d4-157d-4efa-9103-55154ca2fcaa",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b958733-558f-4d90-9b73-51652c9f203c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963b4e50-6c5f-402e-9bd4-f928c71b3878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bce8ed-43dd-4688-90ee-af87b262d86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5efde5-2169-408a-b199-308ea3b6b7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffafbdcd-b61f-4f2b-b93b-7f36df63ffca",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86a62b7-96cb-4189-a778-90ff28a7ed26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1525ac0f-9197-4716-8a99-4c8d9dfb0d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce032862-e416-4145-b311-cf4c4223cf64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbc7980-a482-486a-9117-b1026c5ba5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0936dc-b313-4d7a-b1c5-0f8735c81ee8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c330a78-02d1-46da-9418-dd0be1c68352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952d09a7-6133-4673-8db2-39d202101392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ff1424-81e3-4a21-8b65-7666ff731309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0df684d-4f5b-485c-8bb9-9996ce0cda1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2a2c18-9df6-4cda-ba1b-28541c5272a6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f0cd12-34f1-4791-a6a8-4c009790944e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12aed807-55d6-401c-a637-2917b405a647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257566fd-412c-43c8-8ebb-c08f83f4d35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e4761d-a518-4461-a0ee-a2b8262423de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c643720d-ba07-456e-896a-627a0a5b0689",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29a7358-19e1-48e5-a30e-91b12e354bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36a9b2a-3823-429d-8b1e-a4f125e4f959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85af2183-0b00-410d-b9a0-98a3316cca0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9a5c59-9edd-4c69-be11-00d173029f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ec9b89-4cf7-4bee-95a4-3baa5721eb0d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ab16fd-36e6-430a-bc06-b71f344a518e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6aee29-6264-4c84-b720-cf4db292fcec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c584099-6767-46a6-8ffe-671112336eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9f4250-0d30-4ba3-9bb8-acf6ec2cda45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285fbf55-383b-4c32-a16f-304df6a810b8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd6ba33-0a0a-4f5c-a8c6-f86ac4ed106a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f99110-19ba-45a3-8f89-68f34a94e278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1701c2b4-2d1c-458c-a3f2-baa136af049a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd37d15d-95f7-40d7-8169-02182f8c4829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b57806f-646e-42f3-9a9b-2680148f8561",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76cb94c-1f9b-4996-ad2a-45f37a6bb9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011e9107-f4ae-4cad-bd06-539e7c141b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f9d992-fa96-4b74-879d-601136eae64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffc2fba-4f63-411f-b260-0caa8c8637d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7a99c1-36b0-4513-85f0-4e903aeccf44",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3336cf1-d006-4770-a360-60f57eaf1305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6e9274-f5df-49e9-aa88-de17abf518e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "633a1fbd-86ed-4c47-b6dd-0440db5b2a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e10f8e2-53c3-4f46-8a5d-7924c9aef3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dec0e41-2f76-482a-a395-e4605e3df686",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f048cc77-91eb-4b23-bc4f-eb49ac250eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773e4104-3d5c-4513-9953-0f85ac2c37ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ef6291-1c48-41ac-9984-0333ea86f5a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9446e019-cdb7-414c-8336-a7350b769e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95dc7aa7-fd1f-415f-aa4f-7f123ff8f693",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8aa4520-6d5e-424c-9f7a-dd751a5ec139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4eb4eaf-6cbb-4684-84c2-c5554cc0ec7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a395e810-c960-423a-9a9c-f4a5c6b04c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbe31f4-43a3-4e54-a88e-cd862fcdb333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5b0a20-33d3-4730-be30-85326249110b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8083fd9c-7bf6-4c11-b004-a92971027160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72824282-9867-459c-ab30-968a3c17c68d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6023605d-0686-44a3-b8ed-933a02eb1cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1751aac-aa44-4260-abf1-a323d9fd8587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb74cdc6-27ea-4d79-adcb-23a13e10824d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6495010e-1cd6-40a5-aafd-3a03418a4aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a357ecdf-66a7-474c-9e04-c0feb1ccbf5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb5b6e7-fb4a-4c30-868f-647cb75878bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970b7c4e-9929-4a30-90ac-cab432306c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f0e180-108d-4ed7-b8e8-d17fc6430dd5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523d63ed-68a6-4b98-81d2-d259962b4e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e69882-bb86-418c-8325-6235753a580f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8959d38b-5535-4af9-b211-bdf1422127eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a9bbcf-7584-4fb8-a0a9-0bc14c0c743b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1e62ff-1a6a-4516-9c51-f1375ad22c68",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831d44cf-466b-46a6-a5aa-18aa0d3d5329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ffae763-7adc-48f5-8f02-f5a194245ea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc5edff-8dfc-4e1e-942c-6caeeb454e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59efcddf-9af5-4a12-a91d-050a64d1793c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ceaee4-70fd-4fbc-93f7-6c4663fe1e3f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fbce5a-14b1-4fe0-992e-437249061d0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fe77188-fde5-4e7b-be9d-e2869b1d0e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d71ad87-0ad7-4c14-9afa-eb386d6839e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ec13a0-a2c5-4491-9c22-313334ae9c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5bcafb-b587-4f71-bc6f-d5683a1c2a98",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07807e4e-63f1-4888-93cd-fcf781703177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91a4f286-bb9a-436b-8304-b9b8f22c56d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fb1790-1d8f-4bd0-971e-24ad187975d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96c3d6f-8684-4f7b-99f0-a0d6925288ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aded2d3-b140-4785-9612-ec57cc076bef",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134e34fe-8591-4ade-8ab4-ab22d2539fc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09ca15b3-475b-4e0e-bd83-29d44348f9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37787fbc-daad-4d23-965a-59c1d15d1527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5f288c-91d8-40fe-96a6-360b69813611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adb1970-088d-4795-9d92-315ba111e5c2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc77404-f846-4c11-b4d2-1c38e457820e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5128c471-147b-4f8e-827c-096b3cefb7ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a7a8d7-4bef-40bb-8086-be68c953b631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596d3924-45b5-4b95-9ac8-1e7ac45de2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a32c34a-3dae-4d9e-9a13-cf2913296d65",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888d234c-9176-4bf8-92ab-fee02b56c68c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ef25d12-9558-49ab-964a-49816526642c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b0fceb-d033-470f-af29-479a0f2ff1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0a6326-bcf8-47ba-9b28-82391e43fcb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63be3e8-da52-41ff-8588-a0c9a6044a8a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2b8e47-8e7f-4b23-8477-66a7b4d995ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b91989af-79cd-480b-9101-2c6fa136a819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be25206-2fd4-4a10-a24f-1adeb011ca15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7868b682-8feb-410e-a136-c3f039ab496a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146e0cce-e8ca-408b-a034-bac7c9c3b712",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816b59e7-e11c-49a9-8482-2193a2434ca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88af78d5-fb9c-4e6b-aaf7-33d7bad0d00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a35054-b372-4d41-a74f-f36b22eb79bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db55731b-334f-43ee-b54e-03b12d7d8d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934fb2cc-2a4c-470d-8f32-7e24bbe7141a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d14f7f6-c282-4997-a172-f3249127c3a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79f6e8f3-9a07-40d7-bf46-9dcba6212efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa505db-f57c-47e2-900a-6dab1548aa3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff770e8a-eb84-407b-a992-db86d3b76e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c1b1b0-1671-40d0-80b0-0017167fdec6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d525d7f-ad17-4065-a7de-3899d37b636e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b93c2ba5-2fb9-469c-89cd-b2e38f8439d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29f61f3-a5b6-4c7b-a51b-a93861d5bae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc27cef-9962-4a7e-af51-459a26b73682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185e4da8-650d-4485-b9dc-2b5b0203c682",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1e3ac8-c4ec-4df7-b0bf-12063631993e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e8687b0-c27a-487f-821d-c5a5fdada552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844cc8d7-18b2-49f7-8852-262e2f5d4c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c35da85-f4ec-4f4a-abd4-4513c18dae64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5384ae-e7af-4e70-ba9b-36c28e20a9d2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23997ba-43a6-4892-b949-21a515fb65bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0a5d6a3-b7a1-4bfb-9eac-6ef11df39936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed68129-e986-41ab-a032-827312b10270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24e4d7b-9aa5-4bd2-8938-ce1fe12197c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0b662d-e524-4ba3-9bc0-e78d4eef291f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fea4ed8-a915-4660-8479-78640c5609a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d1f703a-71b5-4a3f-b084-c09410edbc56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798a940e-4570-4161-89ad-59e286b59c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026bc42f-e9c4-4f1d-a915-feebce44afdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f18f63-d70a-42c8-8e41-92e92ce3e251",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82020b25-c066-4562-bb16-69fb7c882410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ef54d8a-4474-40d9-8664-ddfe4fff5787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c3e388-df15-4dbd-82c7-966b6161b6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99bb3283-c90d-4500-abcd-22a8c00bfb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7def1c-93c3-42af-b770-72f479449e69",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885c0133-baf1-41cf-a75c-8fbfa067f5d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea062b66-37ef-4481-b24e-b41930047b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e959287c-a812-40e9-a33c-c3838ae4d93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a37abd-e387-4662-8b09-bb3f775dc3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbf2102-d489-4299-8055-7c67c61b0a44",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4bf7b0-81fe-42f7-95c7-fcb69ccf9bc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c639926-c5a8-4def-872c-7a19c98d525d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f014f88b-93d0-40bd-bc86-2f9cf782a004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27141cb2-f81f-4ce3-b239-b985697deb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1757a3c9-82ff-4f94-a39e-130d619c3b94",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e11f34-b2ab-48a9-828e-cdf1ee28f415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d2a435d-6eb1-478c-88ee-bd203482303b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ef794c-da63-4264-900c-9708be7d3ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f4ee74-8001-4399-a308-daa1619e923e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ac893e-b862-4610-bc78-99fdadf71f48",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3abc5ac-6e79-4916-aac8-0324e69c008b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e391354-4230-48cd-ba9b-a6fd72120b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1520bf-5c53-496d-97c2-79c4b6d20c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd1d956-1fd7-46b4-9f49-ab8944439e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01687ccd-decf-48e5-8c52-910a5563a3c1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a627982-b53f-4c50-ae9c-97be3abeff31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "226c17fa-9539-4ed3-90f1-c955d7407eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f212d6-1014-4494-b95d-a49d45fbde84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d02d814-6043-4738-8290-fe15f8a858a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd730971-3358-48bc-947d-6511b36b97fe",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f73150-4c65-47e4-9ac1-1ddc2f781991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ef654b9-8cd6-4565-aee9-46c4f9149546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c1ac12-5dea-4bcf-b73a-039b8f3532f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4ffd48-a88e-4bb7-a501-98f1f756d146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e1d3a3-f461-487f-9e49-9539166d6ab2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250ee27c-f7ee-4857-920a-9e56b29de103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e68da08c-3382-4491-bdd5-2de370193215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70fe796-411a-4713-8b9e-5c2428bffa37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64da25a6-5b94-4428-b6d6-c22e401c5cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171902ef-b2de-4898-b28e-8b6946e482b8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f34f3d-1553-4aac-907a-fcca5d929799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63b3513e-d972-46e6-867a-1ff7dcd7fab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2682877e-382f-4d48-ae15-f97a77874381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d537925e-e129-4676-92f1-fadf10dfe6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d24fc2-70ab-40ef-8b0d-805fd05f170b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1909e9-f470-472f-8063-1f8c1aded73d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82688f02-7b3f-4bd4-b9fc-22b05c8e3dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca05da6-3dc1-4d6b-ab29-66c23c0bdf17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44621a6-c29f-4996-9d8f-2fcf6d188630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcd3413-5c8e-4561-ae01-6bc57ca03542",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff34eac-6077-43e3-a7eb-87c90890c642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2261e578-44e0-4458-8d99-4526bd27b659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1730a80a-8c80-435e-93de-5da96018df86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32296e80-e2bc-438f-a4b6-5a93f2b4b5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98cd75d-d156-47b3-b38c-382db6e87158",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b1acd9-44c5-47a6-8f18-a6b3bbce235b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6e1632f-67c9-4dab-8c6f-e9ff21a73518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b49b962-452d-4f7b-af26-52aca29548eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986a5df7-5fee-4219-86dc-893fa922a28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17ab61c-6187-41a9-a802-8d9596c2dade",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab90f1e8-e6fa-4123-ab7b-119ffbf17acf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0db79ef-d8b7-4b1c-8547-3d7d9c2e074d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59474050-9b9e-4fb2-88b6-e691c780cd99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29517b39-eac1-4d82-8f03-8258d231fd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74e4cc8-ac5f-4238-9e2c-e4700dab7511",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e64c6f-80d6-410e-a778-f9ee2a7ba879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b30dbd80-7972-4ffe-b564-525481bc0471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941ca6d0-4aa7-4d91-bed6-ff682fa3ca2c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0963e292-ac85-4627-b5e8-48600506cdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd39832-4bbc-4f26-ae9b-7625b20a883f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63eeb893-ad7e-44fb-a5a7-80d9498fb6e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "316d2a11-94c3-4fa0-b343-f2354da45e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75de3b6c-b520-453b-b10f-4d06f2c550e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8afe5257-d4ee-4925-9ddd-7acf64e4d411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402b4a35-188b-42df-8225-678898ea0197",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a3d9f4-d274-4f3f-bbc5-24038fc05703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14d59260-5a14-4530-ac79-46dff5b6cf77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f804dba1-c96d-47f9-a77a-232bc9d46d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5239a901-ddf1-4c42-911c-70f2f6eef980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71cdf9d-281c-47de-a7e0-567416c0bb22",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b76b95-4d4c-41e8-b4b6-6c451240d7da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d7c222-61fa-40f4-889d-d7a826e4898f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cb6ac0-7895-411e-ad01-ae4de141d85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b027ba69-780a-48df-b17a-13ebeaab63a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd3c41f-6616-4aea-8823-f8639b1e16b2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c3ba8d-cb6f-45ee-a1be-3847cfc75518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71c8eab6-1898-4dda-8811-323315c0495a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4094a169-ae12-4291-97a5-8aaa6c2422bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0084055-8772-4bee-a224-7731646179f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6dcd94-e0ef-4ee2-be0c-fee882fcdf3f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5216f744-bc90-462e-bb37-7a2b7e1d814d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "902469ba-b398-481b-ae1a-3c75aae20a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "784a5d2a-e433-4e6a-9f2a-dfaf84f408f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5d164e-2e0d-418b-9afc-0843267090f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0297f8-04ca-409b-b6cf-de2ce83c532a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba68b4f3-e29d-40eb-8d27-c272368fc133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddc877ec-7f74-4dba-9e72-6040f51e7980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a18fcd-66cc-47f2-a647-4b8ce401c06b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e646b6c-1b9f-494b-bec3-301022d03098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4756ae35-98d9-42c4-8c73-d7105f81f758",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7655d561-e615-4ec9-8540-085eca51e612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60aaeae2-20bd-4b28-808d-5daa7fd19d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "667608b4-ee63-4ea1-92a9-c2c5bee09514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2745c28-2d81-4492-a72a-893223a0e3f6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80a7a396-f524-41bd-acc2-3eb5b6aad591",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14d3243a-90e2-473f-b78a-41c86e2f3462"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17b99622-ae4f-496e-8b68-900e7e76cdfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b30cf712-ac71-460b-92eb-9777741512af"
                    }
                  }
                ]
              },
              {
                "id": "ab4575a2-04b8-448e-819a-fa9c4770ca08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f4732e6-c020-4470-a26e-d0465a112ad0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc00c1d5-e8d2-4d82-8323-39c507f49671",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "96eb7098-03ea-4815-bca0-b910ca07db3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c222d454-eb33-4587-b37f-fc2fb8fee362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "360c3e36-62d0-4c11-8e6e-75899d912076"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a05338c-4b32-47b5-87e1-2e11116b014c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b4d8b41-06bc-4c2d-a903-03c9effed925"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40f24cde-4648-4c1e-b7e2-44c869e4c8f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db20fffd-570c-4d2f-b454-1f366e54ac54"
                    }
                  }
                ]
              },
              {
                "id": "8d3f33db-8452-4bc3-8be3-e917e97093e9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "63d04dfc-770b-4147-8163-62245f8f2881",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceea49b4-c656-42d5-834c-4ad022916de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "855c4de5-8f1b-4e3c-8a17-4537be3873db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac5571d-2b12-4a87-a54c-5cb0e0ac7f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1b549c-96ee-40f4-ac9a-44c766f9e99e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bee70d78-bb4c-4117-aaf5-162f8d95c31c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51b181d9-1d9b-4444-8738-f895f2bd05af",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37940462-03a3-409e-a5d2-766b4b3ee4bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1e6ba4f8-6a29-4d5b-b8eb-a2e323ab203e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e95abb5c-15c8-48a3-b3d5-6a4024918d4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "951ea004-add8-41c7-8a98-2115d48cb71e"
                    }
                  }
                ]
              },
              {
                "id": "ee5396ee-473f-4bb2-901a-8c4d883c4a5a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f37449ed-4da5-469b-b3f6-0b2d9ba545c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "adbd7e14-0d13-45a2-a552-436bc8e2f24d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f2b1f3d-9af6-4444-a993-07be2e396169",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ffd5ca8-bd73-4450-84e0-d6350df501cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e195acb2-663d-4f9a-ae0c-036e1af98465",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "28d947f8-00a9-41fe-9611-dc9847184216"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b5f19cf-a799-4f55-bd68-7a5e25fbadb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60a2793e-7703-45ab-897a-8e6758b2468d"
            }
          }
        ]
      },
      {
        "id": "fe3ec606-69d3-4d52-9ea3-8fd319bf2708",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "993f6478-7d68-4c4a-a730-13ad709b6a9b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59bb947c-1963-4f39-bd5e-0aa82e69f4ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bdea72d4-347e-4885-812d-caaaca4f24d4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2856908f-0b5d-41ab-bca0-bc6d22093992",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2bd35a21-b9ed-4fc5-ae61-74ec10ade09d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b3053e-019f-44c6-9653-f3fb4827619c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f4ea32c-f8fb-48d5-98db-df5e128af7c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2333a85b-5bc8-406e-8372-5181071bc564",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5db78cd3-8059-47e3-b944-555d6c610902"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93480717-ba75-4b2a-a920-73d76a70528a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43230af0-5f42-433e-913b-835fded44e69"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3b289e8-642c-41dc-8d47-edc34a64bb9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "feaf6e6f-7e2b-4c9b-af43-701231280ed5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8ecbc03-c5ed-4bbf-b274-f5b7a4b19ab6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c43e942e-138b-4264-80ae-89f43f17cc56"
            }
          }
        ]
      },
      {
        "id": "73308067-a836-4e27-b4b3-d79f14bd273c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "854d8acb-583c-4352-a090-a7886880fb54",
            "name": "Negative Testing",
            "item": [
              {
                "id": "511c7a6d-0f7e-44e1-95b4-d6877628fabe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35942494-6af1-40f9-81d2-b227916ad966",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bdf022-2b9f-4405-8f33-2e0e3acd78c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa0703be-9774-4026-9ccf-8d1c80fea19c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a40676-9478-403b-a49c-34152df09ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b610c4c7-211d-4d8e-be08-c808c3924a2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a606481-0073-40a2-b181-48e8089b0b73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61ed628a-e8b8-4f4e-b754-ba9e1e1a5fa0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83205523-4161-44d8-b403-45f94ddc8608",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01719b58-55e2-46f1-997d-1696eed2a41d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4dfdd00-0840-4efe-ad46-0ca518159a37",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "31759b8a-938b-49db-b337-28dc42243eeb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9358c8f5-8164-47b4-a0bb-0c9aa9795315",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9fe40298-c57c-467f-aa5f-afd2520cf379"
            }
          }
        ]
      },
      {
        "id": "40543cac-c9af-46bd-a2a2-bca6af780e21",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8fa2dbbe-84d8-48fa-b7a0-07600bb41c2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fa776b1-d543-4891-a3f7-1db779773a35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ce950b7-5aed-49de-b1b7-4c515dc5013e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d7f95e-0675-4d8f-8c2c-11fd9061e16d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f324d781-f17c-41e3-b5dd-a1892848c358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded7832f-0a53-4baa-8de0-9344b415e44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfab0e6b-d0d8-43d3-ae1e-56c8875f0660"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8803f3bd-602a-4a87-8c3a-34abcddb85d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f1964f9-f501-4b5f-8239-a47fc5d7cfe7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56e4e9ee-cc52-4f8d-8fbe-6b1c0122db0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be6c7f87-21f4-4cba-bfae-7e965adca82d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df2bef6e-6ca4-44c0-b42e-490340b9684d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4d1f54f6-a9f5-49ba-9601-0d9e4789e8ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b24eed2d-2b8f-45c3-b89b-f4e6f3ca9f79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67f2a41d-1ace-4e20-ae32-261d6de35893"
            }
          }
        ]
      },
      {
        "id": "18646093-9377-4c7b-b39a-af4c43313e34",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d59fce3-022b-49a9-9bb5-86c074d6e2eb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4578969-b872-443e-a5e2-8762a967504f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e4803f3d-0123-4474-bb00-b41e5bba9d05",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67aa61f3-94c4-4dcd-b614-63c06a49c3f2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfbaceb5-4572-41fc-b8bf-c1d34746db97",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 93.71929824561401,
      "responseMin": 5,
      "responseMax": 7454,
      "responseSd": 494.43483080005547,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703637258917,
      "completed": 1703637294680
    },
    "executions": [
      {
        "id": "9139e3ef-2621-4143-9991-dd13e3e61ef4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "38ea798f-130a-4cf3-96c6-23f2116a7642",
          "httpRequestId": "c1d8d3bf-1200-43c2-be6b-cab90e39230b"
        },
        "item": {
          "id": "9139e3ef-2621-4143-9991-dd13e3e61ef4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "077d0720-5707-4b2c-a014-087e6a9ca45c",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "89080416-232f-482f-a27b-57b60ad1049a",
        "cursor": {
          "ref": "cfc4b3a0-ac27-430f-9af1-96f699e59460",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "63bf72ca-a526-48f5-bab6-49fdfdd4cec2"
        },
        "item": {
          "id": "89080416-232f-482f-a27b-57b60ad1049a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e7baa907-6109-4f33-9de7-98687a22f36c",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "6242c2fd-edb5-411e-8ae2-c0da8b302283",
        "cursor": {
          "ref": "55c79e58-d8ac-466a-8dee-fb8750b0767b",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a565448d-f376-48a0-b8d1-f109f0532858"
        },
        "item": {
          "id": "6242c2fd-edb5-411e-8ae2-c0da8b302283",
          "name": "did_json"
        },
        "response": {
          "id": "a5b878d7-5332-4cf2-b6a8-5d138676502b",
          "status": "OK",
          "code": 200,
          "responseTime": 312,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd888de1-56e6-4321-bf6b-c62e83e9cfb8",
        "cursor": {
          "ref": "7d5ef932-b2ff-4273-9a20-9a8cc2ce1c49",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "87e22b20-9e2a-4e56-aced-fbd06ac3803f"
        },
        "item": {
          "id": "bd888de1-56e6-4321-bf6b-c62e83e9cfb8",
          "name": "did:invalid"
        },
        "response": {
          "id": "8851520a-ab25-4dc2-b71c-5cbb9026b8d3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 601,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd888de1-56e6-4321-bf6b-c62e83e9cfb8",
        "cursor": {
          "ref": "7d5ef932-b2ff-4273-9a20-9a8cc2ce1c49",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "87e22b20-9e2a-4e56-aced-fbd06ac3803f"
        },
        "item": {
          "id": "bd888de1-56e6-4321-bf6b-c62e83e9cfb8",
          "name": "did:invalid"
        },
        "response": {
          "id": "8851520a-ab25-4dc2-b71c-5cbb9026b8d3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 601,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b66cd4-801c-4b9a-8157-bc88d9d35836",
        "cursor": {
          "ref": "42e31879-5277-4593-a5ed-dbea6bc5b2e1",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e764a121-c6cc-48b3-b759-8db906f132e1"
        },
        "item": {
          "id": "09b66cd4-801c-4b9a-8157-bc88d9d35836",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5d2aa073-4253-4fb4-b77c-2cd35e1b8934",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc255bc-f439-4751-9716-2ae54dff4bf2",
        "cursor": {
          "ref": "809988e4-fe42-46ed-9041-54cbc6df6b89",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "395357fe-7e07-4ae1-9fef-c2f6a09fddcd"
        },
        "item": {
          "id": "1cc255bc-f439-4751-9716-2ae54dff4bf2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b0cf978a-8abd-4499-af97-9e92d552892b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80ce52e-9d97-40ec-8d3f-1a677f9b15ee",
        "cursor": {
          "ref": "01390c26-b922-4154-b621-f9170caf5a29",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c425eec4-52b2-473c-9650-20993f9706e6"
        },
        "item": {
          "id": "b80ce52e-9d97-40ec-8d3f-1a677f9b15ee",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ada16462-5b5b-4b60-9f80-c506d705da1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaddac7a-af0a-4b44-b9e0-640439a17019",
        "cursor": {
          "ref": "dfc240d7-9502-4d8c-a6aa-0b8682184c2d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "47f63b8d-114a-495f-9a84-8b26c3759ddd"
        },
        "item": {
          "id": "aaddac7a-af0a-4b44-b9e0-640439a17019",
          "name": "identifiers"
        },
        "response": {
          "id": "79dc78b0-49aa-4a68-ae58-526b8085cfc1",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694d9860-e188-4891-b4bf-4e71ac5a6f37",
        "cursor": {
          "ref": "66a97dc9-8632-40d6-bb7c-31e847e9638e",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fb59a174-daac-46f7-b825-baceaa13f209"
        },
        "item": {
          "id": "694d9860-e188-4891-b4bf-4e71ac5a6f37",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "edfcb5c7-c4ab-4c19-aa8c-30fa3825f162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bbb132-f9b2-4169-9439-5cdbe3f0c8f7",
        "cursor": {
          "ref": "fc49a94d-f25b-459f-8522-1e2e50deaa23",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4dd9dd79-614b-41ba-a146-0b6cebb59f48"
        },
        "item": {
          "id": "71bbb132-f9b2-4169-9439-5cdbe3f0c8f7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "96e59473-6ecf-493a-8d35-f9e686c6a9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6bae59-7aec-4f07-90d8-d292d79f18fa",
        "cursor": {
          "ref": "57df719b-efc1-4739-a2fe-90fb41f75ca9",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "20e9180b-6ad9-4055-aa1f-f56c693c83d7"
        },
        "item": {
          "id": "5d6bae59-7aec-4f07-90d8-d292d79f18fa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "90122d1b-ce8d-4d1d-aae6-8bed9bf487a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d844ef-83db-4ad0-93ff-e7b7e1ccb5b4",
        "cursor": {
          "ref": "e2e557f9-868e-4a2d-ae96-d7dc41f97489",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e5e39b29-ac59-406c-8ad5-17af98808c4e"
        },
        "item": {
          "id": "f4d844ef-83db-4ad0-93ff-e7b7e1ccb5b4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "20585be9-6bd8-4aee-b534-c957083f6505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec169c5-f79e-4bfc-94bc-95fd30e12f88",
        "cursor": {
          "ref": "ea8cf82a-65bf-477d-9912-463a59a37616",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fb7ddc14-d869-4fa6-8b4e-f532e4ae906c"
        },
        "item": {
          "id": "0ec169c5-f79e-4bfc-94bc-95fd30e12f88",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a09bb60b-b589-4ea6-9627-a20da2f05579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f5e810-f096-45dc-9e81-4b23d167e51a",
        "cursor": {
          "ref": "301320bc-3f56-471b-910d-d85f5b3092d5",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1b12b067-e819-4730-bd0e-6a7e198f2285"
        },
        "item": {
          "id": "55f5e810-f096-45dc-9e81-4b23d167e51a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cf4f5fb3-8189-4794-abd3-baa3664cae32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb27bf6a-b942-4d85-a655-96e98ce18e15",
        "cursor": {
          "ref": "bd89d382-2d08-47f2-95e0-d085336eb8a1",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "59707cce-dbc3-40c5-82e0-581572979c53"
        },
        "item": {
          "id": "eb27bf6a-b942-4d85-a655-96e98ce18e15",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ba916123-7bc5-4332-adde-6fa367c840c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41687339-0e24-4c27-ae62-59ee385684b1",
        "cursor": {
          "ref": "f5cc4b13-07f8-4383-800e-fc772203dbe9",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "47309b17-12a5-4537-9ea2-1f4013da4695"
        },
        "item": {
          "id": "41687339-0e24-4c27-ae62-59ee385684b1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a3935935-9e83-4181-ad10-1dce75bef695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f33ba07-028f-4ee5-b135-aa4c0d434f4e",
        "cursor": {
          "ref": "97a9195d-7991-49fe-9641-3e40605af95b",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "19f0f9ef-6100-48ff-bdc7-18cfa7736619"
        },
        "item": {
          "id": "6f33ba07-028f-4ee5-b135-aa4c0d434f4e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cc613cd1-3513-42b3-bcda-6c0eb5ef0af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3903d277-ea7e-4427-94bc-1ca78ef8705d",
        "cursor": {
          "ref": "3ddd9f44-e275-4338-bd90-d50ced925acc",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d544e9cc-ecdc-4b6c-ad1a-1e51bb6a8f55"
        },
        "item": {
          "id": "3903d277-ea7e-4427-94bc-1ca78ef8705d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e1f59334-1857-4dde-bd34-499f31f8a367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995bb4d6-89fb-4918-82b3-2ef1afcb2039",
        "cursor": {
          "ref": "510ea773-db19-48f6-b070-16ff3637af41",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "27ea8956-b192-4a59-887b-5e137d0023d1"
        },
        "item": {
          "id": "995bb4d6-89fb-4918-82b3-2ef1afcb2039",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d6bc3712-0c9b-44fc-a175-80cf6310c7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8c6de6-75c2-4158-ad56-b0d81767b8eb",
        "cursor": {
          "ref": "f2637cd4-d2d2-421a-91aa-d3b164d91ae8",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ece49ceb-9496-4ce4-8479-59ea707a55e2"
        },
        "item": {
          "id": "2d8c6de6-75c2-4158-ad56-b0d81767b8eb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9fc07198-1684-4670-a66a-664ee45be921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b80106-2123-4c92-8fad-bacbc60280c6",
        "cursor": {
          "ref": "94f44772-ae69-4f3c-920f-fb51d3211221",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3d755a4d-af6f-4e48-ad6a-723467b9915f"
        },
        "item": {
          "id": "c7b80106-2123-4c92-8fad-bacbc60280c6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "25ef6f72-a086-4f16-a04a-f474bf0ebce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b81b12-7702-47c6-ad2b-a4a48b9e4ce0",
        "cursor": {
          "ref": "ab0d57a4-7fc1-4ec0-9786-30e80f1a882f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b3f6a6fd-0b03-4617-940a-9f51fbd0ae59"
        },
        "item": {
          "id": "b3b81b12-7702-47c6-ad2b-a4a48b9e4ce0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "93187547-39da-4697-9993-dcf272562e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4f27ad-85f7-4229-be50-473842aef161",
        "cursor": {
          "ref": "f82ff7e5-e397-4289-8fc9-f43593ac1228",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ce628414-e274-4f99-a552-3cdbd1aada0a"
        },
        "item": {
          "id": "ca4f27ad-85f7-4229-be50-473842aef161",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b33b99ea-2425-47f0-8519-1508424b4997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5160c322-fb50-4087-97ff-f9c155d208bb",
        "cursor": {
          "ref": "981dc929-7e22-44a6-a5f2-8a15c5055487",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9de8a9c4-8ac3-4035-9618-30a665c7d909"
        },
        "item": {
          "id": "5160c322-fb50-4087-97ff-f9c155d208bb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5791c8a8-7991-4c8b-903c-039e4b14d97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5627c269-8187-4c74-ab2a-c2891e9ee924",
        "cursor": {
          "ref": "f1979b45-95d6-4196-a959-9dae52f9871b",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "68c6e3fa-6f0d-4f0c-9a0a-1c1be1c0e564"
        },
        "item": {
          "id": "5627c269-8187-4c74-ab2a-c2891e9ee924",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3bb2bae6-ec9d-49bb-94f6-663f6ca6c72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e697b907-6363-4f2b-aa5e-dd3aabec769a",
        "cursor": {
          "ref": "66b6372d-f471-4354-8fc0-efa6a7e4108e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bbe131b6-477a-457f-aa99-420b40f5cb78"
        },
        "item": {
          "id": "e697b907-6363-4f2b-aa5e-dd3aabec769a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "76f538d0-f426-48cc-bd0d-383a4ad4e628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3c97a8-900c-4b96-af51-60e36e5c5274",
        "cursor": {
          "ref": "a0e0547f-b888-48c2-80cf-ae83cbe25126",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "07b64746-c43d-4543-aaae-9a027aca3921"
        },
        "item": {
          "id": "1f3c97a8-900c-4b96-af51-60e36e5c5274",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e6e68ca4-1435-45fa-888b-0327fc63fd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dea7ec-300a-4fac-9134-be8e7815839e",
        "cursor": {
          "ref": "278c054d-f5e7-4770-aea1-7d8430c8ddcf",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "77c53a48-4f57-4423-b4b7-f9103410c9bb"
        },
        "item": {
          "id": "31dea7ec-300a-4fac-9134-be8e7815839e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9c6b512e-0bde-48c4-8c63-5303dd3aa478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362e0575-2623-498d-8320-faf23eb21f4a",
        "cursor": {
          "ref": "37ddebe9-151a-4014-ba2d-1e0a5ae833fd",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b46552e2-569a-4a67-bc97-b52eddf2a739"
        },
        "item": {
          "id": "362e0575-2623-498d-8320-faf23eb21f4a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "273a6cd7-486e-4d7e-af21-9b786ff64a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd0db87-b235-42c6-8fcc-af57d9defc59",
        "cursor": {
          "ref": "331e537a-4024-49ad-a651-709beb803c96",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "49b33ca4-cf39-482a-822b-4022c51baeec"
        },
        "item": {
          "id": "9dd0db87-b235-42c6-8fcc-af57d9defc59",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2d0691e8-a865-4a9a-ae3e-e2bcfca45396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62cd44d-e48c-44a6-9525-25c21cc0bd10",
        "cursor": {
          "ref": "8902337b-c564-4577-81a6-4b8298f7b10f",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4e0f5c2f-f008-482a-89d7-bc5bd273361b"
        },
        "item": {
          "id": "a62cd44d-e48c-44a6-9525-25c21cc0bd10",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3932a6d8-1995-435e-975d-6d0fb052f5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d10a6eb-eebe-410c-a26d-233dc8a15ff6",
        "cursor": {
          "ref": "9eea6b9d-d109-4a68-a7e7-9c95e6b397bc",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d22abda9-f59c-48ee-b060-d3c731d2bc65"
        },
        "item": {
          "id": "3d10a6eb-eebe-410c-a26d-233dc8a15ff6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4667daa6-8cc3-41d8-94b5-74737820463a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b91dae-f4cb-4f42-981a-6467cd83e9f7",
        "cursor": {
          "ref": "7a12f17d-ecaf-497e-8171-e6ae5c95ee04",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "da76bb6c-1937-458c-8460-24ec578f3e0d"
        },
        "item": {
          "id": "62b91dae-f4cb-4f42-981a-6467cd83e9f7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "158bb485-3084-4cd2-8ebd-d449f673884d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7482cf3d-d2e3-4739-ba1a-5af3cd26ddc1",
        "cursor": {
          "ref": "5b54f42e-4240-4f43-8ef1-a1f03564e8c6",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ba62e87f-2425-42e6-96df-cbb28092e763"
        },
        "item": {
          "id": "7482cf3d-d2e3-4739-ba1a-5af3cd26ddc1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0139d171-7172-4b57-84b3-e456ab8d9c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e610cab-feb1-4329-a8a9-5b8b4168ca26",
        "cursor": {
          "ref": "88f54638-795d-4972-af26-da8d76e2587e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1025b1be-064c-4465-9b88-521f83243b32"
        },
        "item": {
          "id": "3e610cab-feb1-4329-a8a9-5b8b4168ca26",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5bc06db5-0adb-4430-8597-3fe31324261e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4449ac53-4efa-451d-8d95-b665e9dc098c",
        "cursor": {
          "ref": "82f5e944-2f3d-41c6-9fa5-ff985ecd4331",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "023678a4-1eb9-46f3-8546-adc468ecddd7"
        },
        "item": {
          "id": "4449ac53-4efa-451d-8d95-b665e9dc098c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d12d7d3a-645a-42e6-a264-56dae6a9924f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1444f9bc-074f-4ac8-9875-fed6a61d57b9",
        "cursor": {
          "ref": "ea38ba4a-5cd4-4171-a1bf-100ba78b030f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "35cceed7-9251-440a-b25c-0a7ef54770b5"
        },
        "item": {
          "id": "1444f9bc-074f-4ac8-9875-fed6a61d57b9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d3397ddb-526f-4b3b-8dcd-afb657f8f31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fe38ab-d23a-41a7-b982-074561ef3663",
        "cursor": {
          "ref": "6226dadc-c491-4911-9bd9-c560ea29c964",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ec5a2822-4833-4514-9f9c-f055fdc88df1"
        },
        "item": {
          "id": "77fe38ab-d23a-41a7-b982-074561ef3663",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fb219ea4-c42f-4479-8261-d84356e4a44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7342dcaf-a6c9-4a7d-96e3-5267f5cbc307",
        "cursor": {
          "ref": "20a2f152-23b2-4ea5-8d94-dd187ea0c197",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "54acff6d-e38a-4abb-a07c-06e29fcfa18e"
        },
        "item": {
          "id": "7342dcaf-a6c9-4a7d-96e3-5267f5cbc307",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5af430d1-7059-47ea-be28-1adcaf00f30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257b161d-53d3-4c23-9322-ab2e3d0cd4c4",
        "cursor": {
          "ref": "51e283fd-8984-43a4-87f7-c61af4598ec0",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "53386f6f-e599-4bd3-a3fb-3e1529909086"
        },
        "item": {
          "id": "257b161d-53d3-4c23-9322-ab2e3d0cd4c4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e254a45c-a315-4b6f-95c2-d5c78a811979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51fdb71-ad6b-4719-b41d-3ed3dcfeac98",
        "cursor": {
          "ref": "bcdb47c1-36ac-4421-8cea-f0a7a0f1c40c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9b656dc9-7d47-4488-89d9-63251812ec62"
        },
        "item": {
          "id": "b51fdb71-ad6b-4719-b41d-3ed3dcfeac98",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a372d5ad-917d-4323-a210-9c89adc7abe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b096c1b0-5b5b-45cd-a87e-cad60252ecd0",
        "cursor": {
          "ref": "80c90372-0606-44ca-9caf-68306091d9cb",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b633d216-ebd6-482d-93f6-8b360d7463e3"
        },
        "item": {
          "id": "b096c1b0-5b5b-45cd-a87e-cad60252ecd0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0b14e8bf-0bee-46eb-b0aa-443ebf6b11fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8706810d-aa79-4d1c-8d94-72274848685a",
        "cursor": {
          "ref": "5a56647d-37b0-45a6-a36b-141247848d45",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "85f71601-78ab-4996-8444-0c4f69c1d1de"
        },
        "item": {
          "id": "8706810d-aa79-4d1c-8d94-72274848685a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9a31169c-93c7-4a41-92b9-a2f24f803fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd748a4-b15f-4033-8905-f885caf9871f",
        "cursor": {
          "ref": "7a7b35a9-3465-461f-b949-e8fc094a04f9",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e5129e2f-a14c-4d16-bb4e-db7b42d991dc"
        },
        "item": {
          "id": "1dd748a4-b15f-4033-8905-f885caf9871f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "30e90676-bb86-45ef-a27e-74d0703abf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52508b5c-e1e3-4773-afc3-326dd20d0fb6",
        "cursor": {
          "ref": "274da7b2-9baa-4b68-81e7-08e986af4a96",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e1164d5d-ca92-4fe8-b77e-19ff53225bfb"
        },
        "item": {
          "id": "52508b5c-e1e3-4773-afc3-326dd20d0fb6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9543d4f3-5abd-40a4-9b66-c6957af3622e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e0c597-a48b-438c-9d4b-141070ec52f8",
        "cursor": {
          "ref": "b8f023e0-41ce-4bb3-b099-59f85096f1ad",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5cb2754e-136a-4ace-811e-209806a0708d"
        },
        "item": {
          "id": "55e0c597-a48b-438c-9d4b-141070ec52f8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e5fac397-5b90-4068-bb27-29ea70036de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b91e15-429c-43c7-8782-d88b8717e855",
        "cursor": {
          "ref": "d401806c-d4f9-493e-89aa-54bb0ae5beba",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b81c663a-f43f-4c9f-800c-a8867d0e0394"
        },
        "item": {
          "id": "46b91e15-429c-43c7-8782-d88b8717e855",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e3fb2e9d-6f2c-456f-8d34-f894ea7af31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a13996-092a-4031-93fb-858ab5e7791c",
        "cursor": {
          "ref": "237f554a-83eb-45e6-9f3f-a088dab7b6db",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "dc18e761-29fd-40dd-b5ee-528c77066e4c"
        },
        "item": {
          "id": "20a13996-092a-4031-93fb-858ab5e7791c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1f9ff34d-ce25-4a33-8e2e-caf36a0938ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe41038-9811-4b8d-9477-52ddf24903a7",
        "cursor": {
          "ref": "559ef7eb-d19b-4474-8bee-9831ec897797",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "706661c8-1ca7-4844-8e1b-5368f808d3b1"
        },
        "item": {
          "id": "5fe41038-9811-4b8d-9477-52ddf24903a7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "453918bf-ba03-4cf7-adba-76b7ae1ce183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d5c334-b0b5-404d-b153-7ba3cf55012e",
        "cursor": {
          "ref": "ec007953-b8e0-4904-a75c-b6fbc2c0150a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "03d77a4c-40f0-4f42-a695-8fb807ec8875"
        },
        "item": {
          "id": "c7d5c334-b0b5-404d-b153-7ba3cf55012e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7c2f05b3-3a66-4170-81f9-6e1b158512be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4f2185-0b27-497f-9992-8317aaa16b81",
        "cursor": {
          "ref": "abf07e54-704a-431e-9fe3-597d3100eb5f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6acbda63-d037-498a-ae13-57e3666f11a3"
        },
        "item": {
          "id": "eb4f2185-0b27-497f-9992-8317aaa16b81",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0a5f1d5a-6613-46a9-bc59-f33d945bee61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5761db7b-62d5-43e1-a5f3-84e1e8741b92",
        "cursor": {
          "ref": "23ad9dfc-dfee-4fd4-9319-c8c89332081b",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3e741e88-d076-4fa3-8dfc-4c94ba89b94b"
        },
        "item": {
          "id": "5761db7b-62d5-43e1-a5f3-84e1e8741b92",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b5e5bf68-1aa1-40d4-af4f-a27a624507a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab41a26-4874-47f7-871d-ef1af3ddcdc4",
        "cursor": {
          "ref": "44c398b2-b667-4a11-8e23-5c90c41909fe",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ec36899b-ee18-4117-a598-76b859aa6cfa"
        },
        "item": {
          "id": "1ab41a26-4874-47f7-871d-ef1af3ddcdc4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "336695db-9a36-46b9-8bdf-4e285e139764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cd305d-dc99-4499-a681-0ba9ab54edbf",
        "cursor": {
          "ref": "f71d4be2-5b0d-4450-bed6-2743caf33bb9",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ef9a6ffe-c661-4c29-a9c7-c59be68f72cb"
        },
        "item": {
          "id": "03cd305d-dc99-4499-a681-0ba9ab54edbf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a5080814-01f9-44ae-b880-2dab4e7ec3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80cd94b-102a-45f0-a145-04ee575ed12e",
        "cursor": {
          "ref": "13927c83-1b30-4295-994f-cfcd0234cc16",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0c87fcc8-54a4-42b2-a586-10141f98018e"
        },
        "item": {
          "id": "c80cd94b-102a-45f0-a145-04ee575ed12e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "22af90a9-60c6-42a7-bf86-76dbacf967e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf6b52a-62a8-4763-be63-3644d833ee96",
        "cursor": {
          "ref": "4b02a92d-20c0-4692-9951-f9fda132c9b3",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c56cceeb-e74e-4cae-8dc8-a5094a8cff0e"
        },
        "item": {
          "id": "adf6b52a-62a8-4763-be63-3644d833ee96",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ed52db4c-b6e2-4d8f-8db0-019734b66ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77da3e1-8d5e-4084-94ff-300c42983f44",
        "cursor": {
          "ref": "fc3cd3bc-fb52-4cf0-a5fd-7ca2aee02806",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "11708150-0b50-4f4b-a85d-8e9afb0a9437"
        },
        "item": {
          "id": "e77da3e1-8d5e-4084-94ff-300c42983f44",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7309a5ca-a44a-4691-80ec-46b13497cbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac21c7ee-9bd0-4a25-9aa1-2a22c1edd98b",
        "cursor": {
          "ref": "9797ac13-ed65-49b2-afd5-efb42275a460",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5f8e52f2-7157-4462-b110-d79cd94d6d85"
        },
        "item": {
          "id": "ac21c7ee-9bd0-4a25-9aa1-2a22c1edd98b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "309a5ee5-64f5-4a6c-bfa5-60adbe3576cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6eb34d1-e7c2-4fdb-a481-3fcd92260b8d",
        "cursor": {
          "ref": "099b87d1-9ad2-4fcc-aad8-00e859e00b3a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5b5d8d94-e322-4c8f-aadb-b92101dbcccc"
        },
        "item": {
          "id": "c6eb34d1-e7c2-4fdb-a481-3fcd92260b8d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "84a608fb-b9d5-42e0-a465-8a229d5e4b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f95cbcd-34f6-467d-bc86-b942c46da14a",
        "cursor": {
          "ref": "e3572057-69ab-421a-a572-0d05f67489cd",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "91c0cf1d-b5c6-4787-a06c-d35fe8be6722"
        },
        "item": {
          "id": "3f95cbcd-34f6-467d-bc86-b942c46da14a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "765db41b-d4ca-40c7-8ebe-0fe43cb33dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a021ab5d-0b8a-4c26-bf44-ec6e4c04db74",
        "cursor": {
          "ref": "20d56904-f1da-4c38-a2e2-98f703605bbf",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "67325a84-f499-4183-8407-135c5c646af1"
        },
        "item": {
          "id": "a021ab5d-0b8a-4c26-bf44-ec6e4c04db74",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0a3ec607-5b18-460b-a63a-c9b40f8e8e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95e1eec-b912-4b8d-b3ab-279a9df5a998",
        "cursor": {
          "ref": "49c05071-dc98-4e20-960a-d14cf47342bb",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1774d476-0e55-4117-86f9-68afd2a7e49c"
        },
        "item": {
          "id": "a95e1eec-b912-4b8d-b3ab-279a9df5a998",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2fc780db-33de-416a-8465-cdad3cbfccab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835025cc-c9a4-477a-b7fc-3882d296326c",
        "cursor": {
          "ref": "adf51f34-89f6-43a4-acb4-0431bdfec102",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "dfc717f5-e399-41e4-a136-0b1384bd3a7d"
        },
        "item": {
          "id": "835025cc-c9a4-477a-b7fc-3882d296326c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c2528300-29d7-437f-b6ea-44d4bcb4ef02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca47e06-b822-4d75-a553-bb356b3f60a6",
        "cursor": {
          "ref": "c4da2ec7-4860-46e7-8a0d-588be55b9076",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f69f0979-dee2-4564-a297-308132365b46"
        },
        "item": {
          "id": "9ca47e06-b822-4d75-a553-bb356b3f60a6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6d6e68ac-909e-411d-944c-7deee8157fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c351bb0f-be40-4d9a-8549-b4d3449bff71",
        "cursor": {
          "ref": "0e5bac6c-efac-4811-a9bf-05d6585a536c",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "24fcd4ca-7288-41c4-946a-de520d6ac9ad"
        },
        "item": {
          "id": "c351bb0f-be40-4d9a-8549-b4d3449bff71",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3a9f93fb-1670-4231-819e-5603bc596314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713be609-6e15-486c-89e0-4482dedc209c",
        "cursor": {
          "ref": "7dc9278b-6431-45eb-b12e-b36cf41d6c31",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "94f57f8e-1595-4a3f-9f17-f1590acf472b"
        },
        "item": {
          "id": "713be609-6e15-486c-89e0-4482dedc209c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e1e7e8b1-2c95-4358-9759-d3bd8b2ee4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d091c4-b79e-4795-b85f-e130f3d2ce39",
        "cursor": {
          "ref": "7fa34290-9904-4881-9244-93d3a52bd09d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1a3c76a1-c4be-4d52-a593-c6af7a4bc0d1"
        },
        "item": {
          "id": "b0d091c4-b79e-4795-b85f-e130f3d2ce39",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "aabe55a7-a56a-4ca2-bc85-bb89f3e36ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7360399f-4cb0-46af-b53f-39bd1d808dad",
        "cursor": {
          "ref": "8aadbcf2-1fbf-4795-8620-7ff971f0600d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8829662b-0ef0-416e-85a0-b1c040068bed"
        },
        "item": {
          "id": "7360399f-4cb0-46af-b53f-39bd1d808dad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8e07a3bb-5551-4005-9e70-f4eb8a8df66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09bd8a2-98ed-4980-b7a5-b616752915cd",
        "cursor": {
          "ref": "d48dcb69-878d-4e9e-af9c-1cfdd2cb0c5d",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "de39028d-d28e-4aa0-a751-0f4537f5fe2d"
        },
        "item": {
          "id": "f09bd8a2-98ed-4980-b7a5-b616752915cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "46097591-5a79-445a-8e5a-b3edaf5db802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8659b7e-a7cb-4894-9af0-f457148ade93",
        "cursor": {
          "ref": "f704970d-f198-4218-bd27-dffd5672d2c1",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d48c5bef-6b06-4aab-a0ff-ddd7d7b93dbc"
        },
        "item": {
          "id": "f8659b7e-a7cb-4894-9af0-f457148ade93",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7f81d04a-e0a0-4c74-b791-94df786584ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d8cd6d-c20c-4d45-ac55-a3abb1e4a3c7",
        "cursor": {
          "ref": "2b218e33-af79-4241-afdb-d87d326f0de7",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "50b49031-93bf-4aa2-b12c-ccaab0b77778"
        },
        "item": {
          "id": "43d8cd6d-c20c-4d45-ac55-a3abb1e4a3c7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "204527c7-0f82-4af0-b7ac-4a52315002ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0962bc0-f5c4-480a-84c1-9974fab8dbc3",
        "cursor": {
          "ref": "9ab9b79c-678d-4140-a09b-2d45a5ea0643",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "43f3d7da-9226-4dc0-bef5-735e4b24aa4e"
        },
        "item": {
          "id": "f0962bc0-f5c4-480a-84c1-9974fab8dbc3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fcc71603-fd03-4a4f-89d1-87b9b75af01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b15548-4c0f-4a6a-b0b9-c449e698a421",
        "cursor": {
          "ref": "263bd1a8-3eaf-4dbc-8deb-7a725c050f1a",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7e29a817-8cc5-4529-bb38-957a75cc36a9"
        },
        "item": {
          "id": "33b15548-4c0f-4a6a-b0b9-c449e698a421",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3f4ae9a9-be6d-4bd4-87af-8512c8aaf7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167b9c03-33c8-4d7d-b713-b5afce7e7128",
        "cursor": {
          "ref": "fc4d6e6c-1179-4be8-91bf-d6c03e2d1518",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e6414b43-124e-48af-9d55-a1fe40e0e139"
        },
        "item": {
          "id": "167b9c03-33c8-4d7d-b713-b5afce7e7128",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "177c6912-4eae-4b1b-ab77-250558e85928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fce4cd-b7e5-4fe1-abef-859b6ac342c1",
        "cursor": {
          "ref": "45f6f01a-7cd7-434b-a4e7-9e72a98b596b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0e9409be-3d31-4022-98d9-5f8bbd02a489"
        },
        "item": {
          "id": "a5fce4cd-b7e5-4fe1-abef-859b6ac342c1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bdddffe5-58e3-4a06-8bcf-dd652f8ef03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86270d9-6603-46d6-8cc0-ff840e6a1547",
        "cursor": {
          "ref": "ef574524-608b-4246-9cc3-4c9a5b91c767",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e5215dc5-5879-47c0-a7a1-2490188b66bd"
        },
        "item": {
          "id": "f86270d9-6603-46d6-8cc0-ff840e6a1547",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7e7c5239-09ba-4d25-af36-b6d11d64c404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fe3d92-9d40-4073-bdc3-569f54d214d1",
        "cursor": {
          "ref": "a0ca7952-ec25-4fb4-9b47-2ce56cba4731",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a2b436e1-0036-415f-a2bd-b1d0e5079ac3"
        },
        "item": {
          "id": "86fe3d92-9d40-4073-bdc3-569f54d214d1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f514338d-f547-4520-af6f-375b66f4dbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5ac3c5-5cb8-4a17-ae2b-2e9528f461fd",
        "cursor": {
          "ref": "be61a848-f1f2-47ec-a606-3c525e750550",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "43154020-13ea-4a5d-8ec3-9ef3d16bf356"
        },
        "item": {
          "id": "7c5ac3c5-5cb8-4a17-ae2b-2e9528f461fd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f33ce8d9-32c3-4d73-acca-217064ecf576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c95153-bb9d-4d71-a23d-7c5037a1d4f8",
        "cursor": {
          "ref": "8427c732-99fd-446e-86c3-2cf737dbc75e",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b6990861-5389-428b-9693-7d2d88e22f45"
        },
        "item": {
          "id": "a6c95153-bb9d-4d71-a23d-7c5037a1d4f8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "718bdb62-798c-4c9d-8744-486e6e851a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dddd987-f719-45e8-9496-7a6afbe3ddc0",
        "cursor": {
          "ref": "9959f9bf-2b2b-41c7-a312-af738f2d8cd0",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f0e5fa46-4909-4a18-8a8b-aa7a22f86682"
        },
        "item": {
          "id": "6dddd987-f719-45e8-9496-7a6afbe3ddc0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3087bcaa-dd68-4a2c-bf58-8c70e62bb331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc09518-cf22-4e97-83b2-e6efc0c1c28f",
        "cursor": {
          "ref": "a8fa6d1b-1312-4b6d-ba0c-fe400d47fc6d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3af13ea2-4c1d-4ba9-8de0-4ea41e2db6e8"
        },
        "item": {
          "id": "0dc09518-cf22-4e97-83b2-e6efc0c1c28f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7e2c0868-dfdf-412d-8d61-73208391d4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f413feaf-e650-4763-9998-bc4b9ea2fdfb",
        "cursor": {
          "ref": "a911f9c6-495b-462b-854c-d623693d1fcd",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2e1634b4-9c03-49d3-9e40-d2169dc27bb6"
        },
        "item": {
          "id": "f413feaf-e650-4763-9998-bc4b9ea2fdfb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e7db9366-7818-4a5d-bda7-132bfa5c10f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91a7d09-a700-4777-8ad2-701cd25e5648",
        "cursor": {
          "ref": "4b0be04e-093c-454f-8ef4-c98d3dd0ff6b",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c305808f-5bed-459a-9893-dbedcbf5adbe"
        },
        "item": {
          "id": "c91a7d09-a700-4777-8ad2-701cd25e5648",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "33889322-c709-4619-a6e0-41c31cb22e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8d5bc4-1b3b-4e51-87b2-b56e730aa143",
        "cursor": {
          "ref": "8dd7e4aa-4a34-4e1f-9631-4ad1d6e19430",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0e59c667-dc68-4d2d-83f8-a99504d67a87"
        },
        "item": {
          "id": "cc8d5bc4-1b3b-4e51-87b2-b56e730aa143",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6009c169-73cd-47cf-b728-939d7a48ac8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13586f3-7376-4a60-87e2-ea08bef23b3b",
        "cursor": {
          "ref": "36ca05c9-abcf-4d7b-ad8b-638fa2fb24dc",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d65db255-ed6e-4ddd-8abc-9523499ab113"
        },
        "item": {
          "id": "b13586f3-7376-4a60-87e2-ea08bef23b3b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "39ac597e-248a-40ea-98e4-5942fd7f34d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695697f4-21fa-4f49-8e3a-4bc233520fa1",
        "cursor": {
          "ref": "a98a3778-62f0-453e-8ad8-5d9c26e1899b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7644288e-b238-4f23-9998-750e21de2eb4"
        },
        "item": {
          "id": "695697f4-21fa-4f49-8e3a-4bc233520fa1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b8c96d67-31c4-43a7-83f6-cc9bb09452c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e8f6d1-24a2-4fd4-bc1d-03c2c5f5a089",
        "cursor": {
          "ref": "ca0a0ef2-cc4e-42cb-a107-88a1435e3aa6",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4b0af3a6-783a-45e1-b9cb-00f1e97b61e0"
        },
        "item": {
          "id": "59e8f6d1-24a2-4fd4-bc1d-03c2c5f5a089",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6ea97c7e-c78d-4a2f-b1ce-3655819aa672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b3bc58-aaf5-4c5b-b79c-818e3e94ecde",
        "cursor": {
          "ref": "ab55ddbc-9d64-42f2-a85d-81f4d8e8364a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8325d63d-b770-4e01-9d68-9db9a4fdf644"
        },
        "item": {
          "id": "b4b3bc58-aaf5-4c5b-b79c-818e3e94ecde",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b5e09c1c-cfa5-4a0d-8a6e-091966660313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a7b5de-7790-4ed3-a5ec-02a97d5b335f",
        "cursor": {
          "ref": "59a71858-cbfa-4ea6-9e71-1fef6c63f408",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c1a3042c-adb0-46e8-a739-f28c989d191c"
        },
        "item": {
          "id": "53a7b5de-7790-4ed3-a5ec-02a97d5b335f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7581605f-e9e0-4cf6-bbab-5d24f796c159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31cadfe-104e-48d1-9c68-7b0e1b8a0b25",
        "cursor": {
          "ref": "3389b2b6-ea2a-4cd0-a925-f0a29611da4a",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2658289d-2f2f-42e7-bc80-981168acde3e"
        },
        "item": {
          "id": "e31cadfe-104e-48d1-9c68-7b0e1b8a0b25",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "961b5299-0008-402b-bd5f-e25de646a4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e734020a-d510-44cf-a9db-a490612885a2",
        "cursor": {
          "ref": "a4a33626-c23e-4ac2-9be0-d0c568ad99e6",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5eb5e0aa-d99d-4666-8aab-f23a7ad1d3a5"
        },
        "item": {
          "id": "e734020a-d510-44cf-a9db-a490612885a2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1319f857-fc1f-406c-bad8-d05e98bdfb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993f07a1-7934-4dab-999c-f3f6f5259452",
        "cursor": {
          "ref": "29df32ce-b3d7-4c74-ae86-1bebbb878f77",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d38c8a47-073d-420f-a121-9a7637ad7927"
        },
        "item": {
          "id": "993f07a1-7934-4dab-999c-f3f6f5259452",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b0843589-cafc-4228-b19b-072729753b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fa8b0e-ce55-44a8-b583-2ed07fb0f1f6",
        "cursor": {
          "ref": "1e6e51ee-1c81-4dbd-b2c5-8a58784d489c",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0a27e25f-b9e0-4a62-9459-12bbae8e3bba"
        },
        "item": {
          "id": "d6fa8b0e-ce55-44a8-b583-2ed07fb0f1f6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3ee07821-9da3-4b42-ba23-7bf852328eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23397f7a-4c7c-4197-8e25-7df05db126ab",
        "cursor": {
          "ref": "a021b805-3934-48a6-a7d2-a038555e7519",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "13d4a3ad-ffb3-4bb4-90b9-e128d8fc64a0"
        },
        "item": {
          "id": "23397f7a-4c7c-4197-8e25-7df05db126ab",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "899528aa-2cc2-49bc-8ca2-761bb8ecce63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d5eb16-dca2-4d2a-be97-de5fa8fcf4f2",
        "cursor": {
          "ref": "feed0217-23cf-4502-a35c-806069bc0aaf",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "621b44d0-ce78-4c8a-8a2d-f4da9dd11024"
        },
        "item": {
          "id": "13d5eb16-dca2-4d2a-be97-de5fa8fcf4f2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "885d3f2d-fc34-4a66-8f0a-2c2cef85ee50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd1a2c0-48fe-428f-8a6f-1b25a981d84c",
        "cursor": {
          "ref": "8c0e9b62-eb22-4cbc-91b6-e22599df87e6",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "eb4cb481-dab5-4652-a217-8ffc3bbe156e"
        },
        "item": {
          "id": "bbd1a2c0-48fe-428f-8a6f-1b25a981d84c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e10e23d6-5095-4cca-9080-849268082b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c61fd3f-9218-4a92-a368-1990efb1debf",
        "cursor": {
          "ref": "703dc291-5b0b-432a-b6d5-2964beb16426",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8b2d5e4b-c683-4b1d-907a-dbebbcce3e5d"
        },
        "item": {
          "id": "0c61fd3f-9218-4a92-a368-1990efb1debf",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ed71b629-b8fc-435f-b838-fb83830b9043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd54bdba-02d2-4f26-a4d0-ba87567fbff4",
        "cursor": {
          "ref": "8f7b33ea-eb03-4238-8d90-00ef756146b8",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0172dad5-c64c-4505-bb23-8d5d7c284c14"
        },
        "item": {
          "id": "dd54bdba-02d2-4f26-a4d0-ba87567fbff4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "853dea9d-9779-437c-9699-49b166442065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91bc4de-8887-44d8-b20d-793fe21a167f",
        "cursor": {
          "ref": "11960af7-3bf5-4ec0-9bb1-0d9f91c5c8cc",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8cf69e4d-2630-4208-93e2-229ac1c58835"
        },
        "item": {
          "id": "a91bc4de-8887-44d8-b20d-793fe21a167f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b3d85d76-432e-4b2c-b89f-3e8418933713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43dfdb5-6e8c-4128-9254-550bede62966",
        "cursor": {
          "ref": "e0f19282-ebd4-4679-9b90-20058f1c7452",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "813b0cc4-9d74-4450-bcb4-f1b6dee046c3"
        },
        "item": {
          "id": "d43dfdb5-6e8c-4128-9254-550bede62966",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5b9cb543-6471-4584-90e9-4e42567b927a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1157c6-9680-4536-8098-5ffd2e0b82c8",
        "cursor": {
          "ref": "72ff4e4b-4c4f-46d7-acd6-1f408fe67f78",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a79e1364-ad30-4999-9bc4-67c0c6c4fbbd"
        },
        "item": {
          "id": "cd1157c6-9680-4536-8098-5ffd2e0b82c8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4145f56e-805d-44e2-822a-3eb919289a17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ab30f3-3aa4-4dd0-bd34-1c528d48ada6",
        "cursor": {
          "ref": "f8d8460c-7e3f-4cc2-b0c7-0bfe0ff60f9e",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8beaf2c4-d7a6-4ce1-9a79-257a25a07ea2"
        },
        "item": {
          "id": "23ab30f3-3aa4-4dd0-bd34-1c528d48ada6",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "dbf2bd2e-0c39-4664-985b-1737e47b7ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "43382755-ab84-47b5-accd-7c29c94348c5",
        "cursor": {
          "ref": "ad80d16e-83a1-4698-9d2e-7524d274c895",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "19e59f2a-58c1-4173-b45a-769068ebcab7"
        },
        "item": {
          "id": "43382755-ab84-47b5-accd-7c29c94348c5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8b1cc3b5-24ea-4ff6-8509-42c4090027f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ccd402f2-73c4-496d-bf2e-50f3b1ce5177",
        "cursor": {
          "ref": "3b29dbc6-ba8d-43d3-a6c7-32ffd67f0149",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2a71dcb2-aba7-4a63-acdf-6246ad13ab4a"
        },
        "item": {
          "id": "ccd402f2-73c4-496d-bf2e-50f3b1ce5177",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "01b1f9db-47fd-4cad-9d45-8e573e519112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "56e5d9e4-31b4-4a82-9d7a-5583b673dc12",
        "cursor": {
          "ref": "6d106cd3-86e9-4536-9068-e2eeae1fa600",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f9d18af9-5f7f-4397-ac70-0b9228f0c109"
        },
        "item": {
          "id": "56e5d9e4-31b4-4a82-9d7a-5583b673dc12",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4c95771e-2316-41cf-b483-e21928993b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "98581a90-ad82-4b25-8904-d09b1503e1d9",
        "cursor": {
          "ref": "7b6c3e53-9384-487a-9b0f-d1054e42267e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "13c07516-a542-417f-bc84-da55bde1c742"
        },
        "item": {
          "id": "98581a90-ad82-4b25-8904-d09b1503e1d9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "11219451-8fd5-4f9f-884b-0c2bdc9cbcb3",
          "status": "Created",
          "code": 201,
          "responseTime": 7454,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bed7d6-8329-4f1d-89eb-089464c96af2",
        "cursor": {
          "ref": "077acea6-c67b-49df-9463-133b167886de",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b48de6bd-e9c1-4511-97ad-552d3385d479"
        },
        "item": {
          "id": "62bed7d6-8329-4f1d-89eb-089464c96af2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dabb5f2a-87ad-49a9-aefb-990ea32c4bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7bc2cbf0-01f6-42ce-b45d-e116e906c753",
        "cursor": {
          "ref": "9f731fe2-fd78-4576-a372-f4d8b3608a4e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "14d56084-60ef-45c2-bc50-7602cdce5962"
        },
        "item": {
          "id": "7bc2cbf0-01f6-42ce-b45d-e116e906c753",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f433358b-470b-4082-a91d-76405781a156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9039c77c-3725-4fd4-8044-92b75d72b27a",
        "cursor": {
          "ref": "89688601-d41c-44f3-8099-16018a61bc96",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c9b6c2f1-e3e6-45bf-8214-e1d3c3dace05"
        },
        "item": {
          "id": "9039c77c-3725-4fd4-8044-92b75d72b27a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4fe69b87-c376-4e35-bac0-e9db6853bff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50b11b9-0b31-4308-b735-829bb48dccca",
        "cursor": {
          "ref": "760d7b18-eabf-49af-a177-34aa83d1dac8",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8c089182-9c67-44e7-a777-c82b8673e639"
        },
        "item": {
          "id": "c50b11b9-0b31-4308-b735-829bb48dccca",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7a4d8e38-d623-442e-8a72-32ca51dcbeb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cdeafc-9aff-4ebf-ba18-85e68ea1966b",
        "cursor": {
          "ref": "1bdaa54b-eed1-43a1-896b-a1dd96282ea5",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "59786c1d-0baa-445d-99f3-5e77d978dad7"
        },
        "item": {
          "id": "20cdeafc-9aff-4ebf-ba18-85e68ea1966b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "adc8826d-8f1d-4fd5-a8c5-42deaf82bc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba297f85-4c93-42cf-9d88-b40d904b7ae7",
        "cursor": {
          "ref": "61ba6693-f35e-4057-a465-94d1848e97e0",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f464c1b8-ac9f-4837-a494-6200aeaa8c31"
        },
        "item": {
          "id": "ba297f85-4c93-42cf-9d88-b40d904b7ae7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "69ea3cd2-99e6-4874-80cb-8411aa4f99ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0442aa-0d8c-419d-b192-a8740c7697be",
        "cursor": {
          "ref": "5aa94810-5e28-42e7-ab6f-ac3c7b0d0393",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7cc01201-6b03-477d-8213-7843b4473c6c"
        },
        "item": {
          "id": "ea0442aa-0d8c-419d-b192-a8740c7697be",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "17ebc658-a5db-4163-ae44-c021225d93a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e434ea2-4606-47b3-b312-11d77ecb1272",
        "cursor": {
          "ref": "fbbd9655-43e8-4d3f-adf6-ef4798d3f573",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ed213278-4d31-4285-b073-ba27419b97c0"
        },
        "item": {
          "id": "1e434ea2-4606-47b3-b312-11d77ecb1272",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ad944030-9793-4891-a94c-ffeec74606f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e4fbfc-5627-44fd-83ce-ef1bff568a66",
        "cursor": {
          "ref": "63c08dfb-8448-440a-aa79-acc6c88f64ba",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "43882780-a2b7-4af8-8304-630208d21d2b"
        },
        "item": {
          "id": "f5e4fbfc-5627-44fd-83ce-ef1bff568a66",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6161e04d-6ee5-487c-a200-2a0ec3414e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbdb004-5669-4991-b1b5-14a1e7599c12",
        "cursor": {
          "ref": "7582a644-1bdf-4420-80a1-bba8f45a7f6e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e5662475-1337-44da-9b1d-8b50dc7d796f"
        },
        "item": {
          "id": "8fbdb004-5669-4991-b1b5-14a1e7599c12",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e1e1e360-96e5-45a0-8116-e1f9bfa5354e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9366a205-2706-4cef-9ce9-027036c6359f",
        "cursor": {
          "ref": "be92f81c-04fc-466a-bfc3-20f8c9d9632d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e227a141-2d8b-4227-8715-e118c33c41fd"
        },
        "item": {
          "id": "9366a205-2706-4cef-9ce9-027036c6359f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8e659df5-baa0-4c32-b0ab-aafbc15ec0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6959506-19b3-4d07-93c1-215091c7e547",
        "cursor": {
          "ref": "59684157-a9cb-405c-ab57-f10e0c750570",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2e3a0a42-1caf-4ddf-bb7e-d8e7dbda6021"
        },
        "item": {
          "id": "f6959506-19b3-4d07-93c1-215091c7e547",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6be23a15-4333-421a-bce6-b06b649877fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cbdc94-b3db-4f01-a08f-0ebc4d18f796",
        "cursor": {
          "ref": "66ee374a-6eff-470d-8b3c-ac907504c964",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "951d8758-ef26-44db-960b-2f3f4f60b988"
        },
        "item": {
          "id": "05cbdc94-b3db-4f01-a08f-0ebc4d18f796",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "77af1a10-608c-44e9-8fb6-9511b5dd8d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b13b4c1-bd38-43ba-867f-815b0fdf50de",
        "cursor": {
          "ref": "c36686bc-f6f5-4c9b-bf1b-0094beda6449",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "952bfcd9-7666-44c9-a2ba-49b3a39dccba"
        },
        "item": {
          "id": "6b13b4c1-bd38-43ba-867f-815b0fdf50de",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8107afd7-35f0-48c0-b5ef-d8d5c25b8f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb86f0dd-7ad9-419c-96e5-2d79b469f7b0",
        "cursor": {
          "ref": "9f165696-e588-449e-93d3-7e3d375afe16",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "89806179-97c2-4f2a-b450-b1ac9997851d"
        },
        "item": {
          "id": "cb86f0dd-7ad9-419c-96e5-2d79b469f7b0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1e20a078-1828-4d33-8220-60f1f683ea32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f827bad8-01d9-4c5a-b2ad-dfcd47a27b6e",
        "cursor": {
          "ref": "b999757e-bed4-4579-98bc-339451926c08",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "38d9e9ba-3a2a-4ea3-88b2-6fcd5732ff71"
        },
        "item": {
          "id": "f827bad8-01d9-4c5a-b2ad-dfcd47a27b6e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "904706e7-16ec-4fe9-bd1f-d3dbd4e04c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd3be0d-5805-4993-9c93-8388341986ff",
        "cursor": {
          "ref": "b67a8643-c1f9-4774-865c-5602aa075509",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ae5a4a98-6308-459f-8ecd-1e60282f302b"
        },
        "item": {
          "id": "3dd3be0d-5805-4993-9c93-8388341986ff",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a771ce5c-2f45-44da-a6b6-edc2ec43042b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04293348-4d7d-4e04-a673-d25a3af1bbce",
        "cursor": {
          "ref": "6ed7fa69-870e-4995-918e-b46422f8e32e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "23cb3635-a5f2-4067-bbab-d749e5ef0386"
        },
        "item": {
          "id": "04293348-4d7d-4e04-a673-d25a3af1bbce",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e5a0a381-897e-42c7-9440-fc76fa743d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cfca5c-4c34-4002-afee-e862f4736baa",
        "cursor": {
          "ref": "8627f171-34ed-4f57-b5a6-442487c175de",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dccd1c5d-bfc0-4275-a0eb-818ffba4c767"
        },
        "item": {
          "id": "83cfca5c-4c34-4002-afee-e862f4736baa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6a6a8c73-8587-4dfd-976a-2e488c2e63a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b192d78-0f60-45bd-a1e9-c653746fc073",
        "cursor": {
          "ref": "a95e62b9-001e-482e-b3a1-9cf2b2bbc3b7",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2a2503fa-8dfd-4f15-86c0-9141041b87e5"
        },
        "item": {
          "id": "9b192d78-0f60-45bd-a1e9-c653746fc073",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4efd0807-ecc2-4ae1-b8e4-22a105f21df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd513f78-1bfd-4d0d-bc64-14decf6a0a68",
        "cursor": {
          "ref": "34c5459b-81af-4a4c-8ec0-7c3792e0f6ba",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4b9df7c3-4622-4cf5-8ca2-1385219baa94"
        },
        "item": {
          "id": "dd513f78-1bfd-4d0d-bc64-14decf6a0a68",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "abbc8bf3-860e-44f5-9981-ac3870b126b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be65051d-759a-4661-ace5-718bb5f2c7f0",
        "cursor": {
          "ref": "8e01f752-36bd-4a42-8dd2-477608aaf07f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a8c906a7-2dc1-4620-95c2-493a06cfbd16"
        },
        "item": {
          "id": "be65051d-759a-4661-ace5-718bb5f2c7f0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fefed1c9-1112-4720-b4b5-fa837001ca37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c1d36f-6c67-4865-95de-b65177c90265",
        "cursor": {
          "ref": "a28f6f0d-1cfd-4811-906b-6e67443bfecf",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "72368678-c7d4-4de3-84e9-fd5780c30f64"
        },
        "item": {
          "id": "20c1d36f-6c67-4865-95de-b65177c90265",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a9c9a9ed-4e32-43da-8ebd-e238d4c7cf2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3f1e1f-52da-4520-913d-a62913e17aba",
        "cursor": {
          "ref": "a2b3b476-e62c-4b87-acc6-65ff5bac40e2",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9a8ef92c-aef6-41eb-ae6e-94981c0b2a1e"
        },
        "item": {
          "id": "6c3f1e1f-52da-4520-913d-a62913e17aba",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1460ac99-39a9-416f-bcdc-cf35189a41cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9366326e-7427-45a2-8685-cb5bc6574e58",
        "cursor": {
          "ref": "0fdafb12-6877-4a66-83e6-a78fea8960bd",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ac2d6990-0f81-40a5-a1be-bf4d373b5e11"
        },
        "item": {
          "id": "9366326e-7427-45a2-8685-cb5bc6574e58",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1dd913d7-0cce-4d6e-a13f-42f4018b7409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539616f0-2b95-47e1-b0f7-5e316c4ed4ca",
        "cursor": {
          "ref": "65832191-a473-4892-b673-38e0c597a94f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "87b58383-7747-48e9-9efb-3b2031116591"
        },
        "item": {
          "id": "539616f0-2b95-47e1-b0f7-5e316c4ed4ca",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "32ddbc3e-903d-4d21-8dde-3806a1c73903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8bab7f-19bb-44ff-9275-9aed0c320ef8",
        "cursor": {
          "ref": "09d9d511-88ce-4a5c-adb9-facf859d1b71",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "55e2f5ba-e632-492d-bf13-ff4f669a248f"
        },
        "item": {
          "id": "0a8bab7f-19bb-44ff-9275-9aed0c320ef8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a267a19b-be3f-493e-a944-3518e21bdb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f740fbdd-2e24-4c71-bcb2-713541b27a6f",
        "cursor": {
          "ref": "2e2e51e2-b610-4cbc-ab6f-0767ebd5baf1",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9dedb1d7-c2b2-4ad0-aa91-48fce3930b19"
        },
        "item": {
          "id": "f740fbdd-2e24-4c71-bcb2-713541b27a6f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dfec71c6-3745-44e2-a0cd-271427368247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247a613a-9813-4b79-afb5-06d67bb35de9",
        "cursor": {
          "ref": "7237b700-243a-45fc-be55-bb4ce806c208",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a9764729-b61a-4d25-a113-831d68c2a1a7"
        },
        "item": {
          "id": "247a613a-9813-4b79-afb5-06d67bb35de9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a329acb8-c624-446c-ae05-ad7ac8d38a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae89f45-4155-43f8-a913-cf2795291876",
        "cursor": {
          "ref": "7c0ee697-0556-40e6-967b-ae89a493f913",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ff13b1a8-2e19-4be6-8069-2e8b48bbb9d2"
        },
        "item": {
          "id": "eae89f45-4155-43f8-a913-cf2795291876",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9a96ae20-d685-4676-984c-7ca11c5c33a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baeab268-3d7f-4fbd-8597-fd57bd3ee2a5",
        "cursor": {
          "ref": "9a3df780-a106-4831-8552-d9346b8a1caf",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e69d3eae-71e2-4968-a8fa-f56118f2c6eb"
        },
        "item": {
          "id": "baeab268-3d7f-4fbd-8597-fd57bd3ee2a5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7e521aed-9f23-43cb-95d3-ea8fea9ed152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4de428-123b-48a4-b206-dc72def564a7",
        "cursor": {
          "ref": "3c6b6492-827a-4759-8488-52670e776830",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "879703ef-34b2-467d-aff2-96f321de25b5"
        },
        "item": {
          "id": "2c4de428-123b-48a4-b206-dc72def564a7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e5e3de7b-98d6-443e-a328-12676b9d9302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a759cee9-a2c3-4783-ab54-93930a6c37e0",
        "cursor": {
          "ref": "7bfa0200-4375-493e-8426-87cc51c1a311",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e4f50b6b-c2c4-4f2a-a98c-26952c47860c"
        },
        "item": {
          "id": "a759cee9-a2c3-4783-ab54-93930a6c37e0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e1189075-b066-4e04-83a0-a8e068baa901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75383377-bd88-484e-b556-2361bdc4e5fb",
        "cursor": {
          "ref": "f8c5632b-64df-486a-960a-b1b841ba4d01",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c3389605-4ea8-460a-a026-baf1991df8a4"
        },
        "item": {
          "id": "75383377-bd88-484e-b556-2361bdc4e5fb",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "60e41f38-2ea4-4fd5-b283-cbb21bc4a31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6d6087-32e0-47ab-aa23-32c06fce7327",
        "cursor": {
          "ref": "6685019e-9163-44cf-80a6-65dac2da5de6",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e467e72d-a23b-4ba1-802a-edbf0e6d4a3c"
        },
        "item": {
          "id": "6f6d6087-32e0-47ab-aa23-32c06fce7327",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "09c1f202-71ef-4114-8f86-40e0d398c300",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1388517-9f38-4c65-9809-ed89bfe77f20",
        "cursor": {
          "ref": "11e4ba24-66c2-412a-9765-a252eecc0cb6",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fd8456f8-7f47-4e01-a52c-35302eeaf7a3"
        },
        "item": {
          "id": "d1388517-9f38-4c65-9809-ed89bfe77f20",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4b9d9814-5453-46aa-9fa8-d14ae7d5082f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2b9f93-3857-477e-b0ce-71cf30123cb8",
        "cursor": {
          "ref": "2870d364-dbb9-43cd-b6e0-c35024404ad9",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e7e08495-49a5-4bec-8844-9c0a7141c48d"
        },
        "item": {
          "id": "da2b9f93-3857-477e-b0ce-71cf30123cb8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "595beadf-7db6-45fa-bc28-6a941e0d8eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5b5ca3-e318-4165-9fdb-296d8ff9cf36",
        "cursor": {
          "ref": "5c0a93e7-1184-46ed-b507-16cde08c0291",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3ffbf75d-a46f-4e14-8d52-c8da8ead5955"
        },
        "item": {
          "id": "af5b5ca3-e318-4165-9fdb-296d8ff9cf36",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3f5ac418-4197-42c0-a129-a684436f5c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d296b64-74a2-466b-8989-802f1a84b34f",
        "cursor": {
          "ref": "217452d3-4e65-4f19-8b87-963ad9e83bfa",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "326ca859-e826-41ff-93f4-83980fbe199a"
        },
        "item": {
          "id": "1d296b64-74a2-466b-8989-802f1a84b34f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "784fc5eb-0051-416f-92c6-5f625bb1763e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107b2683-0e28-4142-bf84-26c6b16c2da0",
        "cursor": {
          "ref": "b87e9373-216a-40ea-92f7-2354f8c19d72",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fc496fd0-f837-4d66-930a-45199b8fb766"
        },
        "item": {
          "id": "107b2683-0e28-4142-bf84-26c6b16c2da0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f7332266-64ae-4fd2-bfb5-9b395a2d9aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc72a708-5b55-4b39-acd2-b943f19ce286",
        "cursor": {
          "ref": "03289b87-b322-4e24-95ba-91653708014c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cf67d49f-4960-4412-869b-03f591c439c1"
        },
        "item": {
          "id": "dc72a708-5b55-4b39-acd2-b943f19ce286",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d2739e73-54ad-4380-b723-6c8ee62b0670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f13fd1e-c418-4a4d-865b-65f77cfe786b",
        "cursor": {
          "ref": "21bb2b55-e834-4ca5-ab45-c70aaba457c2",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d2ef81e9-045f-4853-befd-b277a5a8a98a"
        },
        "item": {
          "id": "6f13fd1e-c418-4a4d-865b-65f77cfe786b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f5405435-3352-4cda-babf-ee188ab3aa90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6ed356-27aa-4e3b-8491-45931f4ab03c",
        "cursor": {
          "ref": "188a3456-4a5d-4c93-af9c-7952f1557d21",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f9d653c9-d060-4021-a4f7-ba5edc606792"
        },
        "item": {
          "id": "0d6ed356-27aa-4e3b-8491-45931f4ab03c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d6419095-b2fb-4b1f-8b3f-9d80fc05a834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a33670-3681-4bd6-8125-bd231e8ea5a8",
        "cursor": {
          "ref": "0d187e4c-b72f-47d3-a1d8-67462b90d14b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "26a61c08-0716-48f7-8b20-c57e9bd6ea8e"
        },
        "item": {
          "id": "28a33670-3681-4bd6-8125-bd231e8ea5a8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c92c99ba-7bc4-4f57-bbe0-400655f17712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73201212-dcb7-4756-8a6d-65eaae1d316c",
        "cursor": {
          "ref": "0cf99d3e-6f2d-4d58-8c7b-1e9f7210a8ee",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "941af3fd-ecab-432a-89d1-0bb7e501237a"
        },
        "item": {
          "id": "73201212-dcb7-4756-8a6d-65eaae1d316c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a8d6529b-320b-4a03-a797-4efd0ff9ba5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acbee2b-c19a-4d98-92f4-de76c817036e",
        "cursor": {
          "ref": "8cc5506d-ce47-4ab8-8538-9aa0318910c1",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "49682fb2-617c-4257-8770-96656870bc52"
        },
        "item": {
          "id": "2acbee2b-c19a-4d98-92f4-de76c817036e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "447727ad-fac7-4826-a482-91370ad19711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea24df29-4577-4740-914d-fc90d860c64c",
        "cursor": {
          "ref": "80cfd602-a3e4-46aa-aa4c-9d04c7b90b89",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ca649bbc-ab7c-45b1-9017-60fe5c897db1"
        },
        "item": {
          "id": "ea24df29-4577-4740-914d-fc90d860c64c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "67a295cc-ed53-4c9f-bd5b-e270210dc9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da636bcf-7271-48ff-9971-74ccf71c8fc8",
        "cursor": {
          "ref": "0e86f488-a5dc-4916-b72b-b971208ce071",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4629cfad-96ff-4614-9cb0-052c2c300f01"
        },
        "item": {
          "id": "da636bcf-7271-48ff-9971-74ccf71c8fc8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "14cd0e2d-9ef7-4898-8739-b7de52865bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c26d53-8c72-4e85-96b6-99f39f0ba0fc",
        "cursor": {
          "ref": "3073a8d7-0804-4fc1-a340-02f82c6ed5da",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2980a363-3119-42cf-a913-9157929900e8"
        },
        "item": {
          "id": "78c26d53-8c72-4e85-96b6-99f39f0ba0fc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "99ad5422-ae21-4878-8e6c-d61f38ecfa55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35c1b5b-e5e8-4976-b9d3-0e37c85eef78",
        "cursor": {
          "ref": "3c7aeec9-2ff4-4ddc-a73a-c42ea3a0ce29",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5c969f6f-bd14-42ec-b73e-8c925ad428da"
        },
        "item": {
          "id": "b35c1b5b-e5e8-4976-b9d3-0e37c85eef78",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e2a07086-cafd-49a5-b060-4d33bef8400f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922a7b8f-9753-4cf5-87c1-57758c6281a1",
        "cursor": {
          "ref": "758ab186-2bfd-4e29-a8d6-97dffbe8af5b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "70834520-e7ec-41c7-be9c-6789b4f72d15"
        },
        "item": {
          "id": "922a7b8f-9753-4cf5-87c1-57758c6281a1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b2f84d5a-4105-4ed7-9062-78fa4ca9a38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670252ef-ba30-4423-9b58-ba44c30ea0c0",
        "cursor": {
          "ref": "6ffe2bd8-48da-4825-9589-693f522ac3c1",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "06dbc8b7-cc12-44c7-9950-5310d75c340b"
        },
        "item": {
          "id": "670252ef-ba30-4423-9b58-ba44c30ea0c0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5c5cc14f-caec-4f2d-a2ef-382e3483148b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ad9262-c08e-4a74-a134-bdef21c223ff",
        "cursor": {
          "ref": "efb128d5-ebd0-497c-ac63-133d1a5f35c6",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b72921ec-8851-4a68-8ffb-d4a8d6613a4e"
        },
        "item": {
          "id": "d6ad9262-c08e-4a74-a134-bdef21c223ff",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "282fb517-bdae-461a-a575-dfd7d8189eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4e2ce6-6c64-43ab-95ef-80df57c4da11",
        "cursor": {
          "ref": "1314aa9c-7cbb-4b4f-bfe1-74e3c1e13cc0",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "daecdb46-dd4d-4979-b2fa-1c95cfaebab8"
        },
        "item": {
          "id": "8b4e2ce6-6c64-43ab-95ef-80df57c4da11",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0de70f3c-9236-4365-b233-f2e229b7fbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68fa9f9-f793-4980-a97d-ef2f408ade93",
        "cursor": {
          "ref": "a8da7cab-4313-4d68-ba77-e4a5f97eaf3b",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5c6452c7-45b0-429b-aec4-9864c459882a"
        },
        "item": {
          "id": "e68fa9f9-f793-4980-a97d-ef2f408ade93",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ece807e3-f3da-42c1-9eb1-f960daeb4c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac496cf-93d5-4d96-85b2-bd07fd42b105",
        "cursor": {
          "ref": "bb1b98ad-5dca-4ab3-85e8-dfd4e825a85e",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "100e7e6f-2d60-4a79-bccc-4720dd2e010f"
        },
        "item": {
          "id": "3ac496cf-93d5-4d96-85b2-bd07fd42b105",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b983696c-1610-4e55-b45f-ed2e88efadd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebf0cb5-d63d-4b77-bbf4-5e74a9dd90de",
        "cursor": {
          "ref": "1e7daf44-6634-416c-8825-7ec1f327106b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3885db02-92f7-4332-96f1-80d7edd335e4"
        },
        "item": {
          "id": "5ebf0cb5-d63d-4b77-bbf4-5e74a9dd90de",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "249b5074-5705-4389-85be-ae50cb62407b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218b4947-9468-49da-babe-d6117bbd855b",
        "cursor": {
          "ref": "4b44eee3-ab1b-40de-be16-f7c215979ec1",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a8b41ba7-535f-4151-aaec-6b9285ae1255"
        },
        "item": {
          "id": "218b4947-9468-49da-babe-d6117bbd855b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "be63ffba-1952-4674-8c76-e13699ecebd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666515cc-d061-4b83-bcbb-2560030993c1",
        "cursor": {
          "ref": "dda39aa0-fa1d-44b7-8a56-cd5bb2c4d931",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e19b022b-1a05-466e-8770-f7f6561ff822"
        },
        "item": {
          "id": "666515cc-d061-4b83-bcbb-2560030993c1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "57140b20-0251-4c52-acae-40afba8bf455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d47d2c2-150d-4bad-9826-244649663607",
        "cursor": {
          "ref": "ed3b3667-e99d-4ec2-92bc-663fb44d50b3",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "efec1de7-590e-49e5-9b49-bdc95166fad9"
        },
        "item": {
          "id": "6d47d2c2-150d-4bad-9826-244649663607",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7f56d05c-9b7a-41b1-a821-fef98fec10cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6eb47c-f504-42da-9311-1279328520eb",
        "cursor": {
          "ref": "0477aa3d-93ac-42a4-8d82-e800f64e5ba9",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "84668d17-f1e3-41b6-9b18-ce9477d128a3"
        },
        "item": {
          "id": "9f6eb47c-f504-42da-9311-1279328520eb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "30c62088-d331-49c4-b5c4-f0b18c694cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab8feed-f8c1-4435-82da-19644d6af2af",
        "cursor": {
          "ref": "bb4359ec-5a83-43ba-a9e7-788e7f9de235",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "af3ce108-b3db-44b1-9dae-4e76f87c00ca"
        },
        "item": {
          "id": "dab8feed-f8c1-4435-82da-19644d6af2af",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3eae5d71-4d8e-4a77-8416-ace7bcbe078b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d4cc81-ff14-42a4-91c8-991c3ba1a6c9",
        "cursor": {
          "ref": "dc5d9e6e-b483-4573-ba98-eb0118ff423f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5e1aaa98-c204-401b-afa7-29bcb7064abf"
        },
        "item": {
          "id": "d4d4cc81-ff14-42a4-91c8-991c3ba1a6c9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c3a68f4b-6d7c-4a57-b761-57dbf5371a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e694be2-11bd-438e-b6e2-ba8625458c62",
        "cursor": {
          "ref": "c35862ab-0bee-4cbf-8add-cb24b5d59534",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2de33460-a798-4c77-b542-83e7531a526c"
        },
        "item": {
          "id": "5e694be2-11bd-438e-b6e2-ba8625458c62",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "661aa4db-61e2-41b9-8570-66a5c7a6b299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e03f81-056a-4701-ba12-7b7ba487c3cf",
        "cursor": {
          "ref": "d27891cd-723f-496f-9f5f-9f2568e1dcb8",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "318a7284-8198-407c-8e8d-7b751033aef7"
        },
        "item": {
          "id": "09e03f81-056a-4701-ba12-7b7ba487c3cf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4bc42453-8863-46cb-88ae-88f45ec5c106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf4dd63-fdcf-4703-bf1b-b3720551e098",
        "cursor": {
          "ref": "57cf0520-56d0-49e3-9230-419551d1017a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "70b0255f-7f7d-4d60-95b2-a98dd175a125"
        },
        "item": {
          "id": "bcf4dd63-fdcf-4703-bf1b-b3720551e098",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c166093f-9641-443f-8494-ab94032b2b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5522d1c9-fdd7-4404-b9b5-e894f4e0febe",
        "cursor": {
          "ref": "a96b919c-66f6-44db-96f2-95a59f8fe18a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "dfc17656-d4bd-4ba1-bae6-868c0ec009a8"
        },
        "item": {
          "id": "5522d1c9-fdd7-4404-b9b5-e894f4e0febe",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "086bbef7-8eb1-46bb-8367-bc08e864a553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2de009-5d58-4117-bfda-5ad2611e2dda",
        "cursor": {
          "ref": "669d72a8-cf48-4fa9-a9ca-1e91097b8eda",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9e35c546-a7d1-4795-8d19-fd69c1b706c0"
        },
        "item": {
          "id": "9c2de009-5d58-4117-bfda-5ad2611e2dda",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "789a49d2-8a77-4bd1-9f0f-0b7619fe54d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af16f573-7b36-4365-ae2e-9464c54ac255",
        "cursor": {
          "ref": "bb551268-d595-4b4b-8f4f-a7b3bc9c7dcf",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4fef209b-408a-4aa4-a7a9-3a758adc8685"
        },
        "item": {
          "id": "af16f573-7b36-4365-ae2e-9464c54ac255",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bf3cea54-b96b-459e-a465-742e9859ab16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a66e6b-53ec-4205-8b9c-7e5db38e8ed5",
        "cursor": {
          "ref": "90d3fe0d-db13-4878-bade-5bec579e50e5",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7dbc25c4-4333-411a-9a37-930076e37670"
        },
        "item": {
          "id": "46a66e6b-53ec-4205-8b9c-7e5db38e8ed5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c8308c09-b0ae-47b3-b145-e2abda8ba25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239eb56d-bba2-4b19-892e-159055c4d63f",
        "cursor": {
          "ref": "5adf14d0-bec1-4f97-8b22-cd7bce8ca4b9",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "35734275-93eb-43fc-8d10-bd8f7268cde8"
        },
        "item": {
          "id": "239eb56d-bba2-4b19-892e-159055c4d63f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0ed767ab-eaaf-41d1-b159-9776d27e520e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5062b3cf-d8e9-46e9-a98c-3ecbd80bf433",
        "cursor": {
          "ref": "d9f5576d-c0a1-41d4-891d-997e680379db",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "22d29376-0bb3-439f-b1d5-12fc6288eb88"
        },
        "item": {
          "id": "5062b3cf-d8e9-46e9-a98c-3ecbd80bf433",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b9733fd2-3b14-4278-b8b2-7108feb6d48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db69a023-3c3c-46d1-8a26-cd605b11223b",
        "cursor": {
          "ref": "2550ed7b-19a3-4722-936a-dc9605f4fcce",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4d51f2a3-a5d0-4ccc-ae8b-6d24526e8745"
        },
        "item": {
          "id": "db69a023-3c3c-46d1-8a26-cd605b11223b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4b00afc9-02a9-48d8-be69-43fae57d0322",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139b9d0e-5f1e-438f-8a02-c510e0c3c218",
        "cursor": {
          "ref": "24078e14-7a5a-4c1d-ac2e-b60daeb758e7",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "56936887-20c7-4159-8ffd-0997224f9bd8"
        },
        "item": {
          "id": "139b9d0e-5f1e-438f-8a02-c510e0c3c218",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d531401e-799e-424d-b65d-83328dba0810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61428cf0-85d8-4ca2-ab49-0cd02b97fb6a",
        "cursor": {
          "ref": "668b851d-6e0d-4c50-890e-6852c80fb194",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4f7939aa-c277-43e0-a9f9-c95e35648ae0"
        },
        "item": {
          "id": "61428cf0-85d8-4ca2-ab49-0cd02b97fb6a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3240954e-1aa0-47dd-876b-21a156ea0e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499a6cbf-6181-4386-9f9b-dc7ef4ed7c57",
        "cursor": {
          "ref": "142164d4-a72e-4c7c-9a3c-9fac5910e9b1",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f0cb730b-8794-4f55-b8e8-0fbf13c2beb7"
        },
        "item": {
          "id": "499a6cbf-6181-4386-9f9b-dc7ef4ed7c57",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ea06e9db-c56f-4d8a-bf07-b529594bdfd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c362df29-064b-4272-81f3-9a126c73eca0",
        "cursor": {
          "ref": "2caab171-4faa-40a4-9c64-6e33e554354d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a88b542e-56ae-4a5b-a99c-4f1a5e9d9750"
        },
        "item": {
          "id": "c362df29-064b-4272-81f3-9a126c73eca0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "307ea319-7ae9-4cab-9237-18c65b19a759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995944d8-03b7-48ae-93a0-5ba93eff9a84",
        "cursor": {
          "ref": "183fc619-b4a4-4f14-a7a4-d6a163a76435",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "042f3e8f-5f9c-43ae-bf98-3d44df06ba0e"
        },
        "item": {
          "id": "995944d8-03b7-48ae-93a0-5ba93eff9a84",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "97aa4b36-6be6-406d-aa4c-d2f6fea726a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdb15ba-13e1-4e97-9448-39ccd70efcf1",
        "cursor": {
          "ref": "5fc1cabc-744f-4ab3-8fcb-b82829348052",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fdc26f17-5e3b-43c9-8be9-19b11295913c"
        },
        "item": {
          "id": "5fdb15ba-13e1-4e97-9448-39ccd70efcf1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d605bba8-0e6d-46fa-beec-92d86bdd9aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32d3971-658e-45aa-8d2e-2e29cfcbdc9c",
        "cursor": {
          "ref": "5e0b1446-38d4-403f-be02-a6faaf00cb58",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "14e8a00e-9518-43c4-9976-9043a592af63"
        },
        "item": {
          "id": "e32d3971-658e-45aa-8d2e-2e29cfcbdc9c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "57417af0-23b1-480d-b09a-bbccd450d2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674d2a83-46b8-40e8-8cec-ba289f9b09ae",
        "cursor": {
          "ref": "de8f18e3-e215-4296-9f14-728897f9c780",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3351b97f-c1a4-4250-9151-a6896522898d"
        },
        "item": {
          "id": "674d2a83-46b8-40e8-8cec-ba289f9b09ae",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0993a798-b9ba-427c-9e1d-f67155364150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbe2196-8431-40d6-b4df-1076a74b8c45",
        "cursor": {
          "ref": "a7dc0390-b134-4ac6-b422-169963b1d4d2",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7cd2bd0f-9301-43ce-84e2-13ec50112aff"
        },
        "item": {
          "id": "6cbe2196-8431-40d6-b4df-1076a74b8c45",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "929a513a-61ba-4cc2-a276-4402cae3a3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cadedbd-7d2e-49a3-8cfe-e6ccdb67a614",
        "cursor": {
          "ref": "9a2ebbac-bea1-4103-894a-d10c01e17a00",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "70aa272a-53ed-4810-a2a8-1185790b68dc"
        },
        "item": {
          "id": "8cadedbd-7d2e-49a3-8cfe-e6ccdb67a614",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "aed729e6-7364-473f-83fd-66823538bdf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d823d49-e922-4497-b90b-f728e39c501a",
        "cursor": {
          "ref": "2f1faa23-e4ae-4e5d-8875-e737a2d4a84d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e0cc261d-46b4-47da-9646-70b479ba6e1f"
        },
        "item": {
          "id": "0d823d49-e922-4497-b90b-f728e39c501a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8a9d9b66-349a-4b43-8f75-ab5d4d40d7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac33c89-8187-4354-b99a-7fe1a609eb65",
        "cursor": {
          "ref": "a09f4791-f812-4597-b5ff-cefed4c78723",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e947d33a-3f10-4d98-82c7-651fcedd1cc4"
        },
        "item": {
          "id": "bac33c89-8187-4354-b99a-7fe1a609eb65",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7b559937-d353-4706-8cfa-942ee89363ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f50245b-f6ca-4366-bd80-afbdb5abab06",
        "cursor": {
          "ref": "ac53ba4c-6269-4d7c-946e-82f0d5440948",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b61e87ad-4f17-4b92-a9dc-5d12ec15be6b"
        },
        "item": {
          "id": "5f50245b-f6ca-4366-bd80-afbdb5abab06",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f3b1a377-810a-4902-b8aa-641a439a0e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6243fc64-9054-4ac1-a15c-f45ab139223b",
        "cursor": {
          "ref": "d3c89c0d-61eb-4584-8dea-0fe635b7a144",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "15b1316e-40d6-4dc2-883e-33c918735981"
        },
        "item": {
          "id": "6243fc64-9054-4ac1-a15c-f45ab139223b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6c930c4e-c003-44b3-ad25-f21796c9ffb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba647b1-69a6-496b-a9f9-ed44e070551f",
        "cursor": {
          "ref": "93ef94a5-a25b-4bc8-a115-20eb6d7a42a6",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "85f9be78-d1fd-432e-9c1c-04f216e8ca22"
        },
        "item": {
          "id": "1ba647b1-69a6-496b-a9f9-ed44e070551f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "34cc54e7-1f81-4765-86c9-a0a136f66163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd955a4e-7072-4611-b1ee-8fefff5629a5",
        "cursor": {
          "ref": "ceec3088-8be8-49be-8fc5-48748ec25bf6",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d238cb41-934b-4224-a3ab-ecd1f124a622"
        },
        "item": {
          "id": "dd955a4e-7072-4611-b1ee-8fefff5629a5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c1d5e210-ee73-4c93-b3be-b2180c897fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb233336-e6a9-4115-85ec-30b47a012bfd",
        "cursor": {
          "ref": "367d956c-a48a-43a5-a331-776c6c5316ec",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cf9906f1-f019-429a-bc29-538b39956aca"
        },
        "item": {
          "id": "eb233336-e6a9-4115-85ec-30b47a012bfd",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "01987365-cc6d-4ede-9710-ffb76a51eb0d",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "2f5d8d05-c7d2-47cf-aa81-98c5c8b324f3",
        "cursor": {
          "ref": "bbb2a5c0-274c-4a2c-aeab-b4f4ba6efe71",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ec7a65bd-604e-46c4-836d-de9df924fe22"
        },
        "item": {
          "id": "2f5d8d05-c7d2-47cf-aa81-98c5c8b324f3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8df74874-07d5-42e8-8d8a-ad380207be64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9e7db1-87e1-418e-9fe2-0ba3103ec6ee",
        "cursor": {
          "ref": "a1053313-5913-4730-a873-5dcbf7afca98",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "aeeb98c1-5a1b-4c90-90b3-116eef4922b8"
        },
        "item": {
          "id": "3e9e7db1-87e1-418e-9fe2-0ba3103ec6ee",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6ec25cfc-5b11-415e-82a6-a3ec9d11ad76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176c43df-8d55-4b42-9d20-a32274750db2",
        "cursor": {
          "ref": "54bc7031-0499-4137-83a6-6d1011d391a3",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6257ed6c-7723-4d31-bdbd-6baaab1bd1eb"
        },
        "item": {
          "id": "176c43df-8d55-4b42-9d20-a32274750db2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "80f830fa-44fc-4356-a5ce-4a78b47f3b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d04753-b46e-4954-8d98-a3bde5bec607",
        "cursor": {
          "ref": "3e6d5831-05b1-438c-9c6c-cafcc7e78cc6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0e30fed8-f238-4b25-8fbb-67feb420e79a"
        },
        "item": {
          "id": "59d04753-b46e-4954-8d98-a3bde5bec607",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d8776667-c2c2-450f-9a98-c965ae2fa772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ada1b0a-84fc-403d-b45c-eec4444dc047",
        "cursor": {
          "ref": "d8bc30ed-dd4f-4ce7-99e4-2168feafc874",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a5b77399-222b-4361-a1af-6699dfc27550"
        },
        "item": {
          "id": "4ada1b0a-84fc-403d-b45c-eec4444dc047",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "008f2bf9-e670-4c58-ba06-ddc432d86dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d982331f-82ae-4067-8a23-202d6408f763",
        "cursor": {
          "ref": "284f5203-b80d-4bf2-9c3b-6be8c4209ee0",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "edac4eff-b105-4ba7-a23f-cb708d426616"
        },
        "item": {
          "id": "d982331f-82ae-4067-8a23-202d6408f763",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "95c5fda4-4d3e-48a5-9a61-2799346afe7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023f7214-8a15-4f92-a4ef-06f1776702f1",
        "cursor": {
          "ref": "71529a8e-d1d6-44d3-9952-accf05770d99",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b8d6c29a-a30b-4b9a-ad0a-f0502dff12bc"
        },
        "item": {
          "id": "023f7214-8a15-4f92-a4ef-06f1776702f1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "11744c4a-8938-440e-9a47-52bb0fef750a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c70ddf-0356-4215-b80d-6135ff445cda",
        "cursor": {
          "ref": "df7851c9-6a09-43b7-8642-ad6238d1d83e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "01bf1e35-9de1-48ca-9f71-16872443d87a"
        },
        "item": {
          "id": "06c70ddf-0356-4215-b80d-6135ff445cda",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6fbf915b-64b5-4e83-86b1-d8ea67761386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973864d2-64fe-4154-92ca-e7836cfdfc0d",
        "cursor": {
          "ref": "3bb7849f-1c3c-49de-bff9-f7ada20b4cea",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c6e4789a-3cc1-4522-8cf7-bc8e0b55c824"
        },
        "item": {
          "id": "973864d2-64fe-4154-92ca-e7836cfdfc0d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "05f1b1e0-209e-404e-91d0-e58eb26473a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dee4f4a-0f42-404a-8764-8d6bc4faddfa",
        "cursor": {
          "ref": "d8e0aa52-fdc9-4fba-a7fa-e2c1647ea49e",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "42e015d9-8e90-4fed-8da3-ef610b6f62e0"
        },
        "item": {
          "id": "5dee4f4a-0f42-404a-8764-8d6bc4faddfa",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "beb319ed-a0a3-4883-84fa-419e9879b4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a69cd22-1a97-4442-bf35-98a21333d561",
        "cursor": {
          "ref": "04565323-1886-46fb-855a-286954348b7c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "edba2123-c13a-4496-82aa-aa0e72f8f59b"
        },
        "item": {
          "id": "5a69cd22-1a97-4442-bf35-98a21333d561",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f9e0de27-0bae-47d1-b510-9b867a612b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04631ca-eb0d-4089-973f-ced6556cfbdd",
        "cursor": {
          "ref": "156e7d72-617a-4e51-bc1f-a2821739a7f2",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "07e3f52e-a08d-4433-9605-7ad96e1e19fb"
        },
        "item": {
          "id": "e04631ca-eb0d-4089-973f-ced6556cfbdd",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "90459eb6-37c2-4154-82d7-d7ab9e6322c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ff6ddd-c375-4189-95d2-d6529d4d0b30",
        "cursor": {
          "ref": "c8260195-8ed2-4412-93af-8f04f479e486",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "151f771a-dce5-4f17-af98-e16ce06719fc"
        },
        "item": {
          "id": "36ff6ddd-c375-4189-95d2-d6529d4d0b30",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "85df23de-fc82-48ec-8fa0-7f1d7cef8366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d902af15-7471-4d36-b7df-3ac26b62dd79",
        "cursor": {
          "ref": "2bd47e3b-6936-4ee8-908c-7b3f2e017eb9",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d3d016fb-bab2-4fa1-8df3-b2f1e5d3f7ca"
        },
        "item": {
          "id": "d902af15-7471-4d36-b7df-3ac26b62dd79",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "dd9f3285-dead-46d8-b3b8-7572510645c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06a16b9-4b35-4f4c-bf28-ce29b530ed46",
        "cursor": {
          "ref": "4c7284ed-55ad-4f4b-b7cc-24989deaa7d0",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2400e0fa-5577-452f-a8e7-effdad0330f9"
        },
        "item": {
          "id": "c06a16b9-4b35-4f4c-bf28-ce29b530ed46",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "edcb6f36-ab8c-4e7d-9e59-5f9424d798e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfa8e53-28dd-437a-ac0b-d17974f307de",
        "cursor": {
          "ref": "f1544022-2ca3-4fcd-853e-14f15f9ac59a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0f31ae51-d084-4976-9aec-00ae56cc469c"
        },
        "item": {
          "id": "1dfa8e53-28dd-437a-ac0b-d17974f307de",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "abd3399f-c531-44f8-a4fc-7895c8261c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3aaf51-0d1d-4c77-8774-ddd4e84ff12c",
        "cursor": {
          "ref": "9141841a-3b36-4aa2-aeb3-02bf580b5701",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "94e4d1f2-7cb3-466e-9ea8-4ac2c87f0c21"
        },
        "item": {
          "id": "ea3aaf51-0d1d-4c77-8774-ddd4e84ff12c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2b1bbe75-2a19-42bc-b2a7-d6988f8dfd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a2b808-006f-4985-8634-4063492e0eda",
        "cursor": {
          "ref": "cad2dc5e-48df-4a18-97de-4f9fcd0a02f9",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "640ca74a-500c-45d4-b696-9ca3dbfc9313"
        },
        "item": {
          "id": "95a2b808-006f-4985-8634-4063492e0eda",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2e2064cb-54e1-428c-926a-d5f31ff011a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65c22d3-8f7e-44a1-bcc8-5b121f6abac4",
        "cursor": {
          "ref": "f1d9b221-52ab-4c45-a596-103ac4a97455",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6f19f8ea-425e-42af-b13b-b7870cb160dd"
        },
        "item": {
          "id": "b65c22d3-8f7e-44a1-bcc8-5b121f6abac4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1981c42e-b5e1-4e66-ba0b-eafbe5252df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2c8ff5-dcb7-499d-85c9-6d4e1d6b3b6b",
        "cursor": {
          "ref": "76cc13b8-2d32-4cfc-b977-fb2dda419d40",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "517057a4-a52b-4096-b78b-f6809b9b9cc8"
        },
        "item": {
          "id": "ac2c8ff5-dcb7-499d-85c9-6d4e1d6b3b6b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e7f78121-38fe-4b7f-a4b4-c3fed9ce4b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655d8923-5109-4d68-9b02-a8b1c6f6d81e",
        "cursor": {
          "ref": "dd684d6d-f5df-4278-b820-279ef6504197",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6e59ab74-6755-421f-a231-d30328ce9511"
        },
        "item": {
          "id": "655d8923-5109-4d68-9b02-a8b1c6f6d81e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b1236a6e-f19f-4ecc-8243-5a2aa24a4017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f1645f-32b6-4a24-8f14-9d620e78c7f9",
        "cursor": {
          "ref": "e554e5d3-d32d-446d-ac37-3f25369f4eef",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ef1badb0-61e0-4174-8dbb-e3718b48a50f"
        },
        "item": {
          "id": "06f1645f-32b6-4a24-8f14-9d620e78c7f9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b1d3ae9d-8cd7-403d-ba1f-476e9277fe2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f26834-bc46-40bb-9789-24812ed93cf6",
        "cursor": {
          "ref": "0ad6f432-8ea3-445b-aecf-97b0765ee76f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4d8b3e0f-db20-4c73-9802-dc49eb0b3064"
        },
        "item": {
          "id": "51f26834-bc46-40bb-9789-24812ed93cf6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7e185de5-3da3-4275-b936-7d31299ef620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8b56e0-214a-4c37-9e86-91414c1a611a",
        "cursor": {
          "ref": "9720f4b0-c1d1-46f2-8944-f4b313f2bde0",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b419c5bb-d8c4-42d2-8c7a-57b5382e7a36"
        },
        "item": {
          "id": "5f8b56e0-214a-4c37-9e86-91414c1a611a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bcb7d4ee-9668-45cd-b089-8e5df1ec3ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8678c2-3141-44d4-9822-2266d1b92d32",
        "cursor": {
          "ref": "5afe5d02-57d6-4eaa-b757-d13e23af9757",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "55d8da56-22bc-4a1d-aa8b-c887aaeab235"
        },
        "item": {
          "id": "6d8678c2-3141-44d4-9822-2266d1b92d32",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0ce06313-a25b-456c-8f67-4c12556b3996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d3ff14-15de-44ac-9846-42d192c7df8b",
        "cursor": {
          "ref": "fa3cb332-0915-4859-844d-2dea637d6bd2",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cbc5babf-1ca7-410b-b73d-40b487bdb0a4"
        },
        "item": {
          "id": "94d3ff14-15de-44ac-9846-42d192c7df8b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "92348a5c-0148-4293-85fc-b0d977bd06ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f3ea22-7cee-4b24-97e7-e2d25c498ad7",
        "cursor": {
          "ref": "96c61a89-bd06-4ec9-b4c3-1036bba71938",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "59617f2a-16cc-4345-b9f6-ea87ff893d26"
        },
        "item": {
          "id": "a2f3ea22-7cee-4b24-97e7-e2d25c498ad7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f300c16c-d74a-4918-be25-9deff0fdd503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6a3d08-c123-4133-aaaf-50ccbf49afe0",
        "cursor": {
          "ref": "8a9b562e-82e2-4baf-a526-c63385c53a8f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e071a587-42c6-49be-b42d-7cbd275e582f"
        },
        "item": {
          "id": "1b6a3d08-c123-4133-aaaf-50ccbf49afe0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c5982ec9-288f-43f0-ab0c-e9aebb774de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3c1060-d2db-485f-8bd6-7f3ce9f4a753",
        "cursor": {
          "ref": "2fc758d5-aed3-4852-afc9-408e4e4ad0d6",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ae575fc7-3368-4bc0-9c15-fb7da6c743fb"
        },
        "item": {
          "id": "4b3c1060-d2db-485f-8bd6-7f3ce9f4a753",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6243bf56-0aa6-4c8a-b7c0-ea579b44a2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5144cd56-83f4-48fb-b4d5-05e27ed939c9",
        "cursor": {
          "ref": "e6232482-53a5-4485-8f62-a9f77526a57a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3917f55f-d896-4112-8201-131fbce68421"
        },
        "item": {
          "id": "5144cd56-83f4-48fb-b4d5-05e27ed939c9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2e4e2e23-f10f-4d5a-b401-de87030a8755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c9a944-7ad4-4266-8bcf-0b1bf5c34962",
        "cursor": {
          "ref": "55b33e95-45d3-4f73-ba66-2c542aaff2ee",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5ed1b65a-666a-4b7c-9040-40644a6d4a14"
        },
        "item": {
          "id": "f6c9a944-7ad4-4266-8bcf-0b1bf5c34962",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "db066b38-1e2b-4d75-bbdd-b7b90af49c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49dee7b-2564-499a-8c82-49a3380be6ca",
        "cursor": {
          "ref": "e320a448-8f46-480c-912b-e60b4345cdf7",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2fb24a27-9cd0-4bf9-9444-539b6afa0758"
        },
        "item": {
          "id": "d49dee7b-2564-499a-8c82-49a3380be6ca",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b0f8755f-5dfd-4364-8264-500322a6edee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be649d4-157d-4efa-9103-55154ca2fcaa",
        "cursor": {
          "ref": "062fc28e-a393-4f94-bb0f-e111c8a5bb0c",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "285dd51c-a003-41ba-8758-e82ec06c8987"
        },
        "item": {
          "id": "0be649d4-157d-4efa-9103-55154ca2fcaa",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "143165e7-cf8f-4288-859d-3ef930df001e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffafbdcd-b61f-4f2b-b93b-7f36df63ffca",
        "cursor": {
          "ref": "39b74e4f-719a-4c43-b98d-6a4d3558ba2a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2388d0be-9663-47db-b5eb-c05cd47a9e83"
        },
        "item": {
          "id": "ffafbdcd-b61f-4f2b-b93b-7f36df63ffca",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a6f3ce25-2978-46b5-853d-9049d84c91f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0936dc-b313-4d7a-b1c5-0f8735c81ee8",
        "cursor": {
          "ref": "bd703bb6-a4d7-4fc9-b37c-3305491eb17e",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bdfdd641-5959-48aa-8aad-43455c6f715c"
        },
        "item": {
          "id": "cd0936dc-b313-4d7a-b1c5-0f8735c81ee8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3bf43376-61a4-46d1-a2c7-ab090d6beed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2a2c18-9df6-4cda-ba1b-28541c5272a6",
        "cursor": {
          "ref": "fb4e6337-2e8f-42fc-a00c-6ad1c90458cc",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2e65a97e-8315-4fbb-923b-0b776cee1bb1"
        },
        "item": {
          "id": "ec2a2c18-9df6-4cda-ba1b-28541c5272a6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ce59e5d5-afbf-41ca-9614-c7d64bfb76ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c643720d-ba07-456e-896a-627a0a5b0689",
        "cursor": {
          "ref": "56bc6219-3fd5-4011-82cf-88ae30d1400e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d4dbc441-a261-4712-8bad-9549beb74f0c"
        },
        "item": {
          "id": "c643720d-ba07-456e-896a-627a0a5b0689",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "083c6b40-612d-4ddd-891c-eeb53bbdcd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ec9b89-4cf7-4bee-95a4-3baa5721eb0d",
        "cursor": {
          "ref": "39a2a997-8854-411c-bd33-e5b81955b8ca",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6ed30ca4-1bec-4a10-b3c3-8ec020e8ed69"
        },
        "item": {
          "id": "f5ec9b89-4cf7-4bee-95a4-3baa5721eb0d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "068cbf39-c35b-415d-86a7-1211930bcf6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285fbf55-383b-4c32-a16f-304df6a810b8",
        "cursor": {
          "ref": "19618a8f-1d1c-4e08-8659-7016c6fc33de",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6de82fe6-2c5c-45fd-a2cc-ba42cec830e9"
        },
        "item": {
          "id": "285fbf55-383b-4c32-a16f-304df6a810b8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5872b863-2dbc-4dfc-9724-b09d43b64d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b57806f-646e-42f3-9a9b-2680148f8561",
        "cursor": {
          "ref": "439e49ff-9e33-4295-ab75-0a1b6b8d765e",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9231dd75-5acd-440e-8075-002b3d129e95"
        },
        "item": {
          "id": "4b57806f-646e-42f3-9a9b-2680148f8561",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b448a78c-b1ee-4a4d-8c92-e0817d4a8ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7a99c1-36b0-4513-85f0-4e903aeccf44",
        "cursor": {
          "ref": "4ee59d10-945a-401d-b318-6d89a349c9c5",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e9395bcc-6668-4a95-8121-254942af8f8d"
        },
        "item": {
          "id": "6a7a99c1-36b0-4513-85f0-4e903aeccf44",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "aa608cb7-c48e-4090-9232-e6b91ee4c55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dec0e41-2f76-482a-a395-e4605e3df686",
        "cursor": {
          "ref": "be360b6c-3144-4a35-81c6-6d861d1c2881",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6e2aa883-21f1-4293-9ad6-b9a6dec5dd41"
        },
        "item": {
          "id": "3dec0e41-2f76-482a-a395-e4605e3df686",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "11fd4bcc-839b-426d-af9a-0bed8a5f63be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95dc7aa7-fd1f-415f-aa4f-7f123ff8f693",
        "cursor": {
          "ref": "1595fca1-91d0-436e-8305-b98253ff2be0",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ef14b669-f478-46c6-85d6-315186a3c94c"
        },
        "item": {
          "id": "95dc7aa7-fd1f-415f-aa4f-7f123ff8f693",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a76067c0-b575-43d7-a1b0-5bc98f6d48fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5b0a20-33d3-4730-be30-85326249110b",
        "cursor": {
          "ref": "b3859375-b473-4217-bdf5-e3e031b280ba",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e5a95539-5e9e-4610-9f36-7aec40760e00"
        },
        "item": {
          "id": "6c5b0a20-33d3-4730-be30-85326249110b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b36bdeeb-b116-4014-aac4-3c4ebd04dec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb74cdc6-27ea-4d79-adcb-23a13e10824d",
        "cursor": {
          "ref": "e2b6449f-afee-4c5f-a40f-8bf7e252e7c5",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "aa58b51c-63c7-4be1-82cf-c28b0749d22f"
        },
        "item": {
          "id": "cb74cdc6-27ea-4d79-adcb-23a13e10824d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3678df1e-ae23-4257-86a7-00bb7a1ba0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f0e180-108d-4ed7-b8e8-d17fc6430dd5",
        "cursor": {
          "ref": "c7e4b0a1-440f-49af-aa24-4a761ac3aa33",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "17052cb2-bde7-4966-841c-b7e646a7cc1f"
        },
        "item": {
          "id": "31f0e180-108d-4ed7-b8e8-d17fc6430dd5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "80fdb574-fbf1-4530-bfca-579794115f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1e62ff-1a6a-4516-9c51-f1375ad22c68",
        "cursor": {
          "ref": "aa2452c9-1177-4179-9726-d79342ac2cb9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d6bcb4a1-d08d-4ddd-8d6b-2ae9b825d81c"
        },
        "item": {
          "id": "5e1e62ff-1a6a-4516-9c51-f1375ad22c68",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c731e9c3-705e-4a77-a96c-851a24e316b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ceaee4-70fd-4fbc-93f7-6c4663fe1e3f",
        "cursor": {
          "ref": "d7d119ac-fffc-45d8-81df-41cd4a4e9380",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9cd6a7be-f893-4770-b254-af26562a7115"
        },
        "item": {
          "id": "c2ceaee4-70fd-4fbc-93f7-6c4663fe1e3f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ab9e460a-411f-4d83-a112-1bb49308d957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5bcafb-b587-4f71-bc6f-d5683a1c2a98",
        "cursor": {
          "ref": "5feaa8f0-5d0f-44bc-8a09-21e356849a48",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1eb4aeca-96a9-4501-aa54-84a0e908d450"
        },
        "item": {
          "id": "7e5bcafb-b587-4f71-bc6f-d5683a1c2a98",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e481c548-b1ae-45c7-b59e-e14e418f5381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aded2d3-b140-4785-9612-ec57cc076bef",
        "cursor": {
          "ref": "76ee6072-d411-4f97-b747-fd527ab2277a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c901b6fe-38f7-47b4-99ab-538e443f7b4e"
        },
        "item": {
          "id": "4aded2d3-b140-4785-9612-ec57cc076bef",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "32b7251a-aa8a-4658-852f-7d0ef7cf647b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adb1970-088d-4795-9d92-315ba111e5c2",
        "cursor": {
          "ref": "9f6f8086-4c9f-4395-92c2-f3be9d6e77a7",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a0cad971-8de9-4889-8667-3cee4312ab42"
        },
        "item": {
          "id": "6adb1970-088d-4795-9d92-315ba111e5c2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7edd7cf2-fbe3-4c20-a840-d09e83bbacf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a32c34a-3dae-4d9e-9a13-cf2913296d65",
        "cursor": {
          "ref": "260407ba-1837-4810-8205-48793945a821",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d108f4a8-2ee5-4b7c-b4f9-05340b12cf78"
        },
        "item": {
          "id": "7a32c34a-3dae-4d9e-9a13-cf2913296d65",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b1df1351-e3f6-484e-943b-c38dc7b33fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63be3e8-da52-41ff-8588-a0c9a6044a8a",
        "cursor": {
          "ref": "64af4ac3-5b74-4a6f-b38e-53c80d9a2716",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6cf87bc5-d50b-4368-8906-07f3c0b27826"
        },
        "item": {
          "id": "d63be3e8-da52-41ff-8588-a0c9a6044a8a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "680771bb-b943-4693-83ad-1acb14c88d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146e0cce-e8ca-408b-a034-bac7c9c3b712",
        "cursor": {
          "ref": "1327ae21-ba5d-43a8-922c-c517937b19d2",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3a4b6386-738f-4cf1-9e99-3188bfa7df17"
        },
        "item": {
          "id": "146e0cce-e8ca-408b-a034-bac7c9c3b712",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5332404e-c7e1-4aa0-a2d7-26076d08a73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934fb2cc-2a4c-470d-8f32-7e24bbe7141a",
        "cursor": {
          "ref": "771b8979-0927-4ec0-9fe3-6d8861aa7442",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2ab3f9be-d779-43af-a842-16c8edbe0ced"
        },
        "item": {
          "id": "934fb2cc-2a4c-470d-8f32-7e24bbe7141a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "dbc6a6e6-c7f6-4752-8e6e-6d52b2c9d005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c1b1b0-1671-40d0-80b0-0017167fdec6",
        "cursor": {
          "ref": "44122dff-637a-4a3b-a66e-219ebe9e3a0d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f65710c5-776d-448f-b935-563d8575e3d8"
        },
        "item": {
          "id": "73c1b1b0-1671-40d0-80b0-0017167fdec6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6b31a1c1-81ab-46c8-b798-fcc588ef7976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185e4da8-650d-4485-b9dc-2b5b0203c682",
        "cursor": {
          "ref": "3d0c6fd4-4faa-4a54-adae-047a2eb73510",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c93eadc0-e2a8-4063-8398-7021e69da486"
        },
        "item": {
          "id": "185e4da8-650d-4485-b9dc-2b5b0203c682",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "37f93c1d-37a5-424a-b438-0c7393e0856f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5384ae-e7af-4e70-ba9b-36c28e20a9d2",
        "cursor": {
          "ref": "2282a879-651e-4db4-8292-fe258336df26",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d5599861-c23e-4698-9874-1e9d496450c0"
        },
        "item": {
          "id": "7c5384ae-e7af-4e70-ba9b-36c28e20a9d2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0dacf175-2632-45dc-8320-6cd83f75d7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0b662d-e524-4ba3-9bc0-e78d4eef291f",
        "cursor": {
          "ref": "9ed5de20-a6ad-424a-a2e7-026385028792",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a190bd25-b53c-44ef-905a-ed538aafcfe9"
        },
        "item": {
          "id": "5d0b662d-e524-4ba3-9bc0-e78d4eef291f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "09d72ef6-f9ed-4ead-82db-46d35e2fa8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f18f63-d70a-42c8-8e41-92e92ce3e251",
        "cursor": {
          "ref": "94466eee-6d2d-4df9-902b-a617a9f34524",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "92cf07d4-e7a2-4e91-aaba-2cf6f0ab0748"
        },
        "item": {
          "id": "94f18f63-d70a-42c8-8e41-92e92ce3e251",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "64e40c2d-98e9-4223-9cbc-85954a7092ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7def1c-93c3-42af-b770-72f479449e69",
        "cursor": {
          "ref": "94ce345c-7693-4468-8e36-ffc794025bd3",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b0ca093f-dd8d-4621-b344-7f55d311177c"
        },
        "item": {
          "id": "2e7def1c-93c3-42af-b770-72f479449e69",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0ab29954-1356-4bc7-924d-00435f5a86b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbf2102-d489-4299-8055-7c67c61b0a44",
        "cursor": {
          "ref": "c719fde5-4e72-4452-b745-5b670f5d9be7",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d4b9e08a-9d4c-4958-87f5-fd3d53f70ddb"
        },
        "item": {
          "id": "7dbf2102-d489-4299-8055-7c67c61b0a44",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "93764233-36f7-469c-96eb-8b11b9a9be63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1757a3c9-82ff-4f94-a39e-130d619c3b94",
        "cursor": {
          "ref": "e69e6f1b-6f84-4561-a000-5718cbebaf41",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "506d1353-2651-49c1-9576-fcaa8a2c7f1b"
        },
        "item": {
          "id": "1757a3c9-82ff-4f94-a39e-130d619c3b94",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9c902a3a-f3c5-44d4-9a02-096b71541c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ac893e-b862-4610-bc78-99fdadf71f48",
        "cursor": {
          "ref": "cc2fccc2-76ee-4daa-8ce7-4a05d97ecf32",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4c5a2491-20fd-4960-9133-38cecfe0b4fe"
        },
        "item": {
          "id": "d6ac893e-b862-4610-bc78-99fdadf71f48",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "63d302f4-530a-4fc5-9f53-32b1b94f8ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01687ccd-decf-48e5-8c52-910a5563a3c1",
        "cursor": {
          "ref": "49da9f73-0690-4746-be43-ff2ccfbc5a43",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2a4f5c7b-7c84-458e-997d-67db04648b79"
        },
        "item": {
          "id": "01687ccd-decf-48e5-8c52-910a5563a3c1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "40e679dd-ab2a-4f00-835d-3b609d887237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd730971-3358-48bc-947d-6511b36b97fe",
        "cursor": {
          "ref": "4464bd5c-e60a-478f-b167-49567ecd653c",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a59d5e9f-4cd0-4786-893d-ea1eff3f8559"
        },
        "item": {
          "id": "dd730971-3358-48bc-947d-6511b36b97fe",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c0250867-40d9-4a31-9a62-0edf108ceb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e1d3a3-f461-487f-9e49-9539166d6ab2",
        "cursor": {
          "ref": "9edf79ee-714e-4993-a4c6-6eee17cc3b5d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b3d6cab0-ad9a-4af6-96e9-51ffc7fd96ec"
        },
        "item": {
          "id": "f3e1d3a3-f461-487f-9e49-9539166d6ab2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3c660c16-dade-4073-88b4-917f9372771f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171902ef-b2de-4898-b28e-8b6946e482b8",
        "cursor": {
          "ref": "41382929-51a3-46b2-8692-37120352a1a9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "afbd1169-eb5b-4bc7-880c-f5daedb8f83f"
        },
        "item": {
          "id": "171902ef-b2de-4898-b28e-8b6946e482b8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9b07da0b-4c4e-489b-a966-ab39b64efa50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d24fc2-70ab-40ef-8b0d-805fd05f170b",
        "cursor": {
          "ref": "e64c4ecd-2460-42bc-aec3-16f8f652fcba",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "21e254cc-6c91-468e-a27f-28fcc76313dd"
        },
        "item": {
          "id": "98d24fc2-70ab-40ef-8b0d-805fd05f170b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "65122fd9-21b4-40ee-a565-c0ea38c51923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcd3413-5c8e-4561-ae01-6bc57ca03542",
        "cursor": {
          "ref": "d9eae8ec-c9ff-4edb-8309-f11b17f3e437",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a3353d4e-0cc0-4b55-91c1-1b0dd1b4c12f"
        },
        "item": {
          "id": "0bcd3413-5c8e-4561-ae01-6bc57ca03542",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "10004644-b431-400c-bb2e-e64ffda58f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98cd75d-d156-47b3-b38c-382db6e87158",
        "cursor": {
          "ref": "284f5aaa-db4b-40b9-aa53-a14dc984d3e4",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "aacc711e-dada-4b24-9281-94c1d0c0e7f1"
        },
        "item": {
          "id": "e98cd75d-d156-47b3-b38c-382db6e87158",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a94d4c46-999e-4696-b08e-a0e65fe39599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17ab61c-6187-41a9-a802-8d9596c2dade",
        "cursor": {
          "ref": "f353d907-90c4-4899-b6ea-d5a1c71bd607",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "336769a5-71fe-4762-8ade-44c927457257"
        },
        "item": {
          "id": "e17ab61c-6187-41a9-a802-8d9596c2dade",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "04715ac5-18d7-44bc-b656-2ffa3be7b197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74e4cc8-ac5f-4238-9e2c-e4700dab7511",
        "cursor": {
          "ref": "1254bca0-bf38-4c40-ba4b-4830137524c1",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f3f4388e-e99b-4cb9-9ced-84b1f7b844da"
        },
        "item": {
          "id": "a74e4cc8-ac5f-4238-9e2c-e4700dab7511",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3629531a-1009-488e-bf81-530461417e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd39832-4bbc-4f26-ae9b-7625b20a883f",
        "cursor": {
          "ref": "d1d0e99f-1895-45d3-9caa-5fc76b91f9d8",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "578ad58b-3e94-4a8c-934b-0efb9463a38d"
        },
        "item": {
          "id": "7dd39832-4bbc-4f26-ae9b-7625b20a883f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "38ca5bbc-1fdd-45cc-8eda-9448b0301776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402b4a35-188b-42df-8225-678898ea0197",
        "cursor": {
          "ref": "f221c902-b1e6-4126-8588-057af1d40f13",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "376a4aee-c682-4e92-914f-e55d2f96e396"
        },
        "item": {
          "id": "402b4a35-188b-42df-8225-678898ea0197",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "53526a7b-745d-4d5f-b73e-001e7abfc5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71cdf9d-281c-47de-a7e0-567416c0bb22",
        "cursor": {
          "ref": "41883933-d818-443d-939d-c717f065b17f",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ff24f6f0-b2eb-49ed-8f9a-36a7e69ccf91"
        },
        "item": {
          "id": "d71cdf9d-281c-47de-a7e0-567416c0bb22",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e94f4efa-e838-4656-aadb-f80af18ccee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd3c41f-6616-4aea-8823-f8639b1e16b2",
        "cursor": {
          "ref": "28fc982d-a3fb-4919-9f12-9ba2eb1e7591",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4533de78-6016-414c-a944-855086a87fed"
        },
        "item": {
          "id": "4dd3c41f-6616-4aea-8823-f8639b1e16b2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bbe51c8d-90f6-48ef-858f-0b2534d7d1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6dcd94-e0ef-4ee2-be0c-fee882fcdf3f",
        "cursor": {
          "ref": "06eb5969-60cf-43f3-b191-e54be62ddcc9",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "27feee88-091c-4117-a4f9-4fcbbff3c358"
        },
        "item": {
          "id": "0d6dcd94-e0ef-4ee2-be0c-fee882fcdf3f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "995e7b1a-d43e-4ca3-ad9b-4c69f494b0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0297f8-04ca-409b-b6cf-de2ce83c532a",
        "cursor": {
          "ref": "3ed7005d-d09b-4bc0-b113-2f1ffe5fe834",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d4da88be-5f9e-4e28-ab63-9da20d9b37bf"
        },
        "item": {
          "id": "cd0297f8-04ca-409b-b6cf-de2ce83c532a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8728952c-49bf-4f32-9b60-fb8717431a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4756ae35-98d9-42c4-8c73-d7105f81f758",
        "cursor": {
          "ref": "30d7fbe7-452e-4d64-8996-9d5e6715cff9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c6321657-b54c-4afc-b4c3-fdcb08ebed44"
        },
        "item": {
          "id": "4756ae35-98d9-42c4-8c73-d7105f81f758",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "077db28c-97e4-40c5-a39b-02d3ce2442a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4732e6-c020-4470-a26e-d0465a112ad0",
        "cursor": {
          "ref": "fbc0eba4-58d2-47f9-abc3-67fca7db0507",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "42633ff9-1d3c-46b1-8bcf-76cb2b494287"
        },
        "item": {
          "id": "4f4732e6-c020-4470-a26e-d0465a112ad0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "37acf205-4909-48cf-bec5-ec6913241552",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d04dfc-770b-4147-8163-62245f8f2881",
        "cursor": {
          "ref": "049ab1d2-4d0b-4a88-9ff4-f90ea0fe04a7",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b6298bc3-923c-4986-81ab-d6245e0f611d"
        },
        "item": {
          "id": "63d04dfc-770b-4147-8163-62245f8f2881",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0268d480-2978-48a7-a9c1-93d5229039e7",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b181d9-1d9b-4444-8738-f895f2bd05af",
        "cursor": {
          "ref": "1e80b96d-90ae-4561-ae00-9acf161f67e1",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5a928b81-8bdb-438f-b438-058a74a2fb1d"
        },
        "item": {
          "id": "51b181d9-1d9b-4444-8738-f895f2bd05af",
          "name": "credentials_verify"
        },
        "response": {
          "id": "27aa802b-3631-4566-83c6-a8d392ec340a",
          "status": "OK",
          "code": 200,
          "responseTime": 2908,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5396ee-473f-4bb2-901a-8c4d883c4a5a",
        "cursor": {
          "ref": "32247966-45ed-435a-8e97-3f7a0294fe81",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0d60a588-912b-4155-899d-a4bc176d36c7"
        },
        "item": {
          "id": "ee5396ee-473f-4bb2-901a-8c4d883c4a5a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "38b38da7-be1a-4b7e-aa94-a896e13fdb09",
          "status": "OK",
          "code": 200,
          "responseTime": 2377,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdea72d4-347e-4885-812d-caaaca4f24d4",
        "cursor": {
          "ref": "5e9756b0-21a0-4a01-8f0e-393d6f1460e3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b7c8c834-3e0d-4a50-ac8f-8128dbadff0b"
        },
        "item": {
          "id": "bdea72d4-347e-4885-812d-caaaca4f24d4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "40d13198-5049-451c-afb2-bf45500c6194",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdea72d4-347e-4885-812d-caaaca4f24d4",
        "cursor": {
          "ref": "5e9756b0-21a0-4a01-8f0e-393d6f1460e3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b7c8c834-3e0d-4a50-ac8f-8128dbadff0b"
        },
        "item": {
          "id": "bdea72d4-347e-4885-812d-caaaca4f24d4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "40d13198-5049-451c-afb2-bf45500c6194",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35942494-6af1-40f9-81d2-b227916ad966",
        "cursor": {
          "ref": "27266f0e-5fd9-470f-8273-1961169dc6c3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4106e85e-fd16-4961-94c4-d145e26f2122"
        },
        "item": {
          "id": "35942494-6af1-40f9-81d2-b227916ad966",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3eda4f41-b828-44a0-9893-82aef33862ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce950b7-5aed-49de-b1b7-4c515dc5013e",
        "cursor": {
          "ref": "100662c1-09c4-4c5a-be93-b116c53e8373",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "5093e205-3069-43b4-942e-2d8a9449e1e4"
        },
        "item": {
          "id": "6ce950b7-5aed-49de-b1b7-4c515dc5013e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e1ed26e2-59f4-43b1-8562-77f6bbdf928a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}