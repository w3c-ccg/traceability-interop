{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "af669ecd-a948-4974-83c5-b0b25501761e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7d55b290-3f53-4bb3-9709-25a125568b45",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18d4308a-8b80-4d3e-af4b-fbbbfae3e3d9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "004b626d-761a-4155-b7e5-46118a86a6f4"
                }
              }
            ]
          },
          {
            "id": "ec805acf-ea9f-427f-ab4f-eec1b25f4e63",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d59e926-d083-4b49-868a-bf0cae169467",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7999b6c1-1956-423a-9dbc-af409024fb7e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ab8989c1-9a1d-4113-b20e-2cc21fa0fdaf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a746d4f3-6e30-4c5f-bbce-cf7a9d5625f3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "59b48f84-6236-4a9a-9681-1b13604bcf9b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b180f512-3240-4e43-9d07-695e86253740",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35336270-2b43-4049-917e-058beaa93431"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55dc8597-bcbd-4841-9832-0835580a90b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca10cd3b-4b29-427a-9260-c6784a40d5cf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c7c34de0-7e99-44ae-a4c5-cb4b8cbd7d74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3fb568b-c7f8-4d27-a21e-0864a74bfe8a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d472193f-3348-4bc1-abff-83038e1f6d01",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7fd2c1a2-2086-4499-95a2-671893a78227"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4cea4530-bd8f-4344-a7b2-02c30bc96b6d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f47efb2-2254-475a-b7da-8a3b96be51ae"
            }
          }
        ]
      },
      {
        "id": "fba486cc-1582-437c-9ff4-a85f676293ff",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "00bfd7f0-6455-419a-91b6-588f23100971",
            "name": "Negative Testing",
            "item": [
              {
                "id": "382fb609-844e-4ef9-b53b-6ee014f14612",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0882e69f-a915-44de-b209-8d2ec28d2fc9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f6e5f3-fd42-4fa8-b5df-f05c53f69aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cc9d20d-9dc0-4cc1-9ae0-95da4e0c29ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a12cb5f-28ef-4a47-a3c3-cd7f957a9b3f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb8f1dd-e7ea-4edb-8ef6-8f00f137ecda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7699e06-94a1-4629-bcb7-767bb43fddbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5046bb40-c8e3-4ea7-8e8d-f6156a76a9e2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b98de35-7fb3-48f6-a85f-66e25e7ecd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a3b0a4a-da55-4dfc-b579-a5eab607ddaf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f3ca1543-660a-4e6c-b1d9-8da7014e5c1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fbb98da3-13df-4648-b451-c91abbf85edb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cc2405-44ae-44a2-827d-7aeedae5eaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91cce95f-cd8e-42af-bd21-cb6eef6ad798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256f319a-6b3c-407a-b249-63e10fa9eb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5234e0e-2936-4e25-b9fa-2f324dc1152a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f75395e-0b8c-4fed-afdd-d8fffa1372ce",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee5494b-5fc0-4af4-bb1d-7c2c07b4d640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23a3d0a9-be97-4a26-a1d1-fefa1fa8ed2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1892f779-3d96-4aa2-9088-d38f08375586",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "b90a87da-91ce-433e-9736-770aea6975af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "578b915f-612a-428b-a740-1965b83ce7ce",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8c22e2ba-9dcf-4406-abb5-7d1ccddf268b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fbf678c-e051-44a5-b8c8-68262cbd2a20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ea4aac69-d80c-49f9-b187-4fa6ffd01d24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4773c988-7577-463b-b316-27ba3b7a9b3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "eab6f95f-3d4f-43a7-ac45-2e4870eab3f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e2622d6-e265-4656-af3d-62b7e88e68a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fd73262-77c5-4930-ab2f-f97c37f00037"
            }
          }
        ]
      },
      {
        "id": "6b391227-3a35-49d5-8ffb-94c2ade15570",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4794bfe0-e509-4b18-a1c2-e6130c3504e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80f0d3f7-7a0d-4918-9d7e-624814b0fdd9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "74d8b404-01c7-4035-a3b3-ab85525332a6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a034b680-625b-4d1e-b000-92fb5dcce7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54147fc-6b81-4fe4-8e59-7d5126a2e549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fce69b-3fa9-4344-9770-f8aa3cd3a2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ea6b5d5-84dc-4c1c-9d55-f81d6ce3dd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee81316-37e4-4972-abf4-9334b407a46e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46079d74-2657-4a32-ae9f-2f569e9c0e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf76dca-fcab-4d2b-bbb7-af74990844b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fd86e2-2be6-412e-b9b5-6c1e9e08df09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3949afb8-841a-4be5-bcbf-ab597c0fc6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc5ebd0-434b-49b3-b831-74346f7a9e76",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461ee7d6-f1d8-4b58-b1f5-81b1d50f2d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b7d9ec-cdbe-40d1-9e60-04bd2812d37f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfbb04a-f465-4dd6-a973-f97321a85bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12d51f2f-97bd-464c-a610-05dfb10e39a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c84b207-0a41-4f91-a641-276204d8b006",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ee21b1-dbd2-4240-a795-714b35024fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074aa272-ace0-449b-9dbb-599aa2ac9060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af157617-4873-4c51-abc5-6f13f09a8415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "471e8e79-4747-4d7a-b291-7b2648b23c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f04c9a5-67e5-4114-a2f3-694a405f4825",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c120aede-6ce4-4c21-ac83-7ca2f58c69b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bbca1c-9346-49d1-adc8-d00e1bca5366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799d4970-7cd3-4381-b251-21822932a5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80cabef9-aa83-42fc-ab12-775a48f21cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b27a99-3c70-4686-b78b-7d1d4f554c44",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6430a6-d37f-468b-a49e-e4e7e06ad628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29dbbf9-77d8-458e-96e9-80305093da31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47853cff-acbd-4363-9216-12ba7e59693b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3738f46f-b949-4de0-878d-dfe1bbfcfe35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af4bf8f-798a-4eda-abf3-0df54d421646",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64ff9b0-d5c3-4340-a5e8-3e4c67d5b786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122561fb-1f97-4d56-be7f-e2ec468ce2ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca68934-4609-4dd2-b137-f016279a16b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f02729a2-fb5d-41ac-9a62-2533df35071d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7549ff-efa7-4dfa-a125-6493c80ac9c0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004a3fd5-4c4b-41fe-8fa7-8381dd074c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27af1ad-8076-4a28-ba56-39094d651784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af730e27-08e7-4898-8308-3580862a67f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54c95cb4-5f06-4f7d-a04d-888463fe3295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecce9303-05d8-47b6-9eb2-8d492d190c62",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56af8c10-5649-411f-a296-18eab04cd711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7ae5e4-1fcb-4725-9597-fb34ca70adb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba7ae66-39ea-44a7-b0ac-d0f3c4efe442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1180424d-3580-4d62-8811-d38dd00fe0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3986d3d-6781-4c9a-b9d3-75a4e8fa2c38",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232abcd8-9d50-480d-8524-14e476cb81bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5149e011-cd91-4c73-a412-a0968bfbec41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c74462b-9d66-4e4f-b7ec-73e4ac2a9382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b54e726-6630-4cfc-b880-1644a656786d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b309bf22-121f-410c-a295-bb3de09ff07f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8bf0dc-7a06-455b-b5ce-35bd3fbc6abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07587d1d-c34a-4ae7-8231-135a3d78b98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9f7cb2-42ca-45e0-b6fd-ab89ca88173d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c7f793f-5d40-4501-973a-5fc7c94fc5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e87ae56-5539-45f4-b1d1-bed17839d75b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0fe705-2e88-491b-b20a-b6246187e2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4618116-a629-47e2-960a-6678b5c1d833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd89eef-3e9b-45a1-8d33-8cfb656be5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d886c1d-c012-49df-8c72-250f4cc5a3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5790bb-7114-4aca-98de-094c3b0797ab",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcccc821-0605-4796-9869-521411aab69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb7975b-35d1-43fb-ad02-e5b658e98490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a337de6e-6492-4a5a-81af-f1b197963962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54a90beb-0135-4545-9511-cb0abe092c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2375c951-ac90-4b56-a903-9a0a0f8a04e1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3943ebc8-04cd-46f6-bf8b-62265e90a736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d709a82-e89b-41d0-9ebf-0a58b654d73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86410d06-0d14-4db1-96e3-98227b41754c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d54b1533-a926-4393-bf13-5e30d2b09609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332bf45a-a9eb-42c5-ac73-8fefd5538c7f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b6db92-56a2-415f-a15c-32ce21b3930c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a993c280-c3f8-49a3-ab23-86c4ed0dc2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c606e53-f0b0-4b79-8a69-94885d06d29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ded5334f-19dd-4f18-8698-f8a5c661eb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae5721c-6063-4b92-b672-980ab4af09c9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc2fdd5-c899-4169-8c5e-41d4f4019599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbce372b-1793-4d36-ac75-704d926e5fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec68bf3a-e38e-4bb8-ba2c-75421b5d5737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "575716c9-ff27-43c1-8e91-a0c0caa15586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba996fb-aef4-418c-b0e9-d4b0396473f2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce64d886-3805-4073-bee3-b94a168e2d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f698225-7dfa-458e-a571-ba99e035cbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e767258-4d4d-48e9-8eda-6f4d0c87ea6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28be8c15-6d5d-4158-b513-1b80e4888d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd9853f-1473-44af-9a5c-836fd4aef3f5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d012995-e8ce-45ae-a42a-cf37cbc7eba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8bcb8fd-fd34-40a9-ba61-2210df6536b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabb3477-9842-46cc-86eb-9abba29143bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f19b9d-9967-4174-a0c7-5a93d54f7b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6e8abc-f368-4c80-800f-40219d3739f7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b2c587-b811-49bf-a21f-9b0013717fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed32a36-f329-4771-b368-d6a809adad5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6251ef5b-361a-4927-a6e9-1b36fa1fe571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c61d676b-9af5-4a9e-93c4-3d4363b726b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db06f1f0-970c-4930-8db6-3dbc41195b2c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c9aa14-3529-416a-b116-2b2cd6a6f0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7977756c-3c62-41df-b2ae-97bf170c631a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06925b49-5f3a-4228-a25a-6df8e08c6c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "065a0158-2ee3-485f-ad33-a06fa1b4f447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba7163a-ee11-435f-9fd9-2d83bce1633f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19871ae-4dc6-44f1-8002-89cb5cc6a810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833ccfae-afc7-4b6b-8142-58ee33c44065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee34fb2-a76c-48fe-94c3-44bf08eeb7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ada9a6c0-8c7c-4172-96a5-5b45f0d0b234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a68991-238f-4e8d-bbdb-26c9a9eb186e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73d96f9-e63c-4e2f-b7b7-9b40068178e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4972d106-bf7d-42ae-9095-9f0cc3d9e1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff3ad3d-c4ae-4c25-87e8-4acfd923e72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c4e38f-b186-4d89-8d3f-f74321c89785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5102e8-c9c7-4561-b4fd-7380e52ef41c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c862bb6a-480e-4714-868e-4f58e4dcbdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c16844-afad-4d6f-bb83-1c0697cb6208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6030e8b-1175-4092-95f3-de475b0a90fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "078d162e-ae70-49b8-b769-7172141a96f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a010b6-d347-4d1c-bc35-1a506d697237",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3cd360-4c94-4ce6-8020-c64dab001785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a00c69-c4c1-408f-a3bf-87d2eac0e843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c040752-7008-4090-af20-228c2d7d4ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "776d318b-72be-4fe8-964c-a6a10c31aa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ea8763-be53-4a91-be55-daa6427bca48",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8593c6-e104-4c4a-ba9e-bce24c91254f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9913bb7-ecc3-405c-b07b-71e38db07817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b90ca6b-2eae-4563-9f6f-007ae7fb28ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53b05f54-354b-431e-975e-0006338d5a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597009f7-534a-4620-9534-72f73f81f3cb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d521656-6a7f-40df-bdaa-2f95fe23ebf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46f8466-43d3-4fb7-b96e-91338164cdd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d914eab0-9690-46f6-8fed-95e071d9eab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5547fdf3-1c8e-4fda-9d48-60cb1364e86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c617cc-ea37-41be-9a0a-e66538ddf3fc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6d81d3-fa3f-4b04-9b64-9d8b255a2951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd73f1c4-49d8-4615-b985-f1d20384dd33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de013fae-373b-43fe-a725-a893f914599f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d39b1da-9582-4e69-8f82-f67b6fe2d7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5f22cd-8aad-43ee-9d39-ece5d9c036ae",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba3862c-7a25-49e5-ab7b-b73bdee83cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79d6c62-b5d0-4f5d-be94-48e0fd1a5ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff7beed-155b-4516-8b41-065b91b0d3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d436efd-d364-495d-a950-786a952c10ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8fb2f9-90e9-45e7-acc5-51246a0a7ccb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dda2c5b-71be-4057-ba1c-5441da28d510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b912ea59-5882-44da-8d67-c3bf106a8cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1be268-1eff-43f7-9909-6918981b58ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "689c518c-aac7-490a-81e9-0c88836189ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5869c8-5055-4015-a50d-2efa92b4aefa",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4e5362-564f-42c7-b81a-97824eec0866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096bdaaf-6c6a-47bc-93b4-dde0a42aeabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3977d4-2be4-4f3e-9ee3-b794c62e3794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "104130e7-7284-424a-98ca-678ac19587f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036a66ea-3056-48f3-9087-52a8d85c6cec",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88684dfc-1f72-49ab-873a-7db341f0bd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b714b7f2-9b95-49d0-a621-768f0c92b9fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95765f1-8326-4b87-973e-51aec34b48f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e70184d9-ba22-4a6a-9a67-c92d4a334460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e63a22-cfbe-44ab-83a0-88aa638f0be8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450d7a86-ee0f-4607-82c6-514fd45bf80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9ac589-577b-44d3-9643-92af60e7652f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d02fb7-c68e-42ac-92f9-72b596395171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4b022e-9a03-4909-a272-53c7f492b3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e1f9a6-a5f5-4c8e-aafb-597b972626fe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1facaf02-38c9-4a65-9e0c-4aa6d2f76497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e1d509-8cab-4bdd-8efe-9f278c23a008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c72a13-ba09-4ca8-a334-f3352ee20078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "377a10cc-116d-4bbc-8773-a19821f48b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec573b6-d7c4-4077-8800-f56594beefb1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28df2933-86aa-4e6f-9262-aeea664d4bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fcd0e3-4f80-43fd-ba87-d1c20e36bf20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1784527b-ded4-4525-b50f-226f79524e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d94597da-0fcf-4fb7-8b32-f3df2fadc00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a885258-de82-4b0c-82c5-890333e53ed9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c88eba7-710a-45d8-8c36-c835513582da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1beaa476-6031-4565-b038-dd10fbc38e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2731c265-4a40-4443-bbaf-276a0d706d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "10c1a6ef-469f-49ad-8ab1-fd6fe603e606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6640b83e-5805-481e-9c6e-723c2ba73c3a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea97f25-1025-4807-8b17-f20758c2287c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4746cb9b-b322-46c7-bc88-e1c00d887406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f424e1c8-c81f-473f-a193-074008e32179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f28166c0-3b00-4114-a9be-8a0185299b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4e9a07-1459-445d-8ebb-97c86db16446",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bbfbec-f8de-4b65-b612-212992a1b0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60343997-dc3d-4dc0-bdce-625fc7b42666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cebf2f4-2dcb-4630-b14c-2bdc43110113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f65d955b-3a52-4198-8983-6636120b441c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596c91d5-ae00-44e8-a131-b53222ad0c5a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76837448-796c-42ca-b928-130928fad490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195b87bc-f516-47c7-a48f-114faa6de9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da5f89f-8857-4eb3-87ff-4357438a0be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0237304-3f54-408f-9d17-e885747d37af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430fd0f5-ad95-4217-905c-69fd2e4a999d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de51c6b4-ea8a-456d-8178-ca1fef7cf0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0edc26e9-bf5e-49e7-947d-e1ef0e6c8aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85be26d-0bdc-45ff-9545-1c18029bea03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b87471-9f1c-4231-a0bc-960a5f093a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c28762-35e0-4c9c-882c-7f1dfb804d9e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924a88d1-9f7a-416e-a3b4-022bd798bd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956fb719-d6bf-4b8c-8453-380e47e63fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10197dc4-7bd0-4921-aedf-7a45467daa5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2674e82e-a41c-42ff-91c7-ccd2dc9e87fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb7265b-6831-41f6-a28f-60d35e3434e5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b47a179-2a08-451c-a673-ad30b18126dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b994c8-5907-4fe4-9064-9d194231b5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a09c210-e6ec-4463-9e64-ca7c00e43d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d170fd0-bd4d-4fa0-840d-382b0a845557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a110e404-89b6-49cf-a3cf-08e8c3b4ce40",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02989737-70e5-4a8f-8778-cd7b8a8a7d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70eee139-4f84-4d76-a5e7-64111702d684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95d2178-fb02-449d-aae3-8e5574c03f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ee742d9a-497c-4e31-9a54-43117a3b3b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b006b5-e698-4bff-8565-e3b424c7c977",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a8367f-2c25-4d5d-977c-af868b9c81d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a67634-69e9-4f85-aad3-c0b339a15e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30775d7c-109a-4e6e-8e56-243f813ec4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2de42d99-fb2d-45f1-a147-ced1ac75fa47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b016b8-ae08-4e17-a577-4e50aadb6bb9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9277220-e14f-44b8-952a-3b1aa52950ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db520822-4224-468d-af50-b234235c1bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c44678-70ab-4f55-9967-adb3825bc0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e077f836-754c-4fff-a926-77bd6af8d3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3b15c3-cc2e-46a8-a00e-8d2ce1aafdf1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3fb46d-699d-4add-98b8-0abaecfa7291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b5feb1-41b3-4701-9802-cdc630234198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f742e477-046b-4754-92cc-0faed7390242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c601a951-4658-49c4-ba2c-c389761abe18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2cc54b-e009-434b-9017-67429c47e18e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859a4a5e-f663-48bc-86fe-2af6e05aa853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4476e35d-3400-420d-a1da-acaea2869c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7c07e7-af23-4417-ac48-e221a82369d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed299d4b-e2b5-4a1c-83ce-78327f5e9fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4331b8f5-4f96-47ca-a407-e46e8a93ee6f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9caf9889-1e5d-49f4-a99d-5d3b7ed57061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bf8ded-f251-424c-9d4b-ca39fec53b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9225d7e-28e1-414f-a0a9-0c8efd97a287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "543edc00-b453-4dd9-ac1c-8cfb991cd844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea320f99-b678-47b0-a4c1-1b0238e1d006",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69003f59-b333-406e-876b-46dece8e2e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab6087e-794c-4dd0-80e9-39bfa3f2582f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e3e13a-b506-4a6f-b606-5c5443e49999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ceb1a2f-9679-49bb-9068-fd7b8f26b0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f660f5f9-be99-4485-a1d1-1b8d67ace883",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bb24ea-a9de-4d2f-85a4-eea565210420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3024d6-da31-4936-8b63-90846eb9a283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e752375d-4973-4621-8e38-295748567d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18377be3-0a15-4046-ab32-487934d01634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0502b3-41f8-4b66-a045-5706520cae99",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42438951-328c-4862-945c-79a4f98baf0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f95a08d-558a-4056-af03-0c914acc7f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a108fd-e127-4379-b387-b08048b9fe9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb71901-eb57-4a1d-96a2-276dd1d99361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7b49d9-c036-4aa2-9329-024bf8438784",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3367a6ee-1799-4b50-9c3a-1c2aeb8c8238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d40116-e6e8-40a1-be5c-1c20afa58665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa6573e-d085-4b99-82fe-808e9b1a4de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "33168450-7b53-4aa5-bcc7-30ec99cd0329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0760e9-4856-45b6-b912-562e863f04e0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3be615-dfab-4a23-9547-8b5753933b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d0c306-41cf-4e40-bbd3-bbd2007fecca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffeab8d-695e-4bf9-978d-a0771ccb06d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6b3216-b1bb-4f10-aca4-2814c9b8d4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354938b1-3a9d-4b0d-a34a-727430bdc13d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da48d877-ef46-4f30-9c5f-0d1d3dab83f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f048d03-c13b-41cd-8d0d-70292a715396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5673c833-5461-4fa6-b3b6-5381682b76db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27b780c1-f20b-43b6-b9b1-2677b6cf45e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fd1114-8300-43e8-9015-1cc7422b8680",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e340a3a1-777d-44b5-b4a6-b709c42d7c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e87c68-e810-48c6-963e-ded189f58522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9597b28-ad1a-4720-af86-eff4b06f6c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3173914e-dadb-4c59-84b3-c49f66659df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e57b13-f61a-42fa-8aa1-35a539d68839",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef4469f-0b25-4647-9381-8bf86170bb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5099574-eee6-4afd-a540-cc0e7617580c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34337a4-10f2-4ff8-b3b7-edc68092e811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "099190e7-da2a-491e-a620-f668da13e5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a5b0f2-3618-4554-b391-02af3055857f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684a4306-c838-4553-a391-1302501a8371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45adb756-ccc9-48a1-a9e9-9e4a423453e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6739267-b39a-419a-8e4e-b5583a8fb0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "94c55742-626b-4d00-ba3e-ab69bc0b2910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09847f7-7f46-44e2-8840-1831042634f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092b4b03-69fd-4f3e-a2e5-9f3f2f620be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5d0c81-c7b2-42a4-ac26-094f11e02734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65553581-d159-4fa3-820d-b4a3bd661f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "77de272b-1d2f-4d2e-8c73-5cd82240321a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7a054c-544b-46eb-b3a0-783d7d1c71ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c705f9e7-4c8b-40b1-8331-5a810cddf25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9823eea7-b1a0-4386-9fa0-71bf922b73ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d80877b-5de3-492a-9461-ddd67ad9132a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a297cd0b-603f-45bd-a9d3-7d48c454c2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8a70fa-31aa-47d9-9eb0-610a55687204",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae08e15-d7d6-4315-8d1e-907dcfd20cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae5f034-5f5a-42bc-ac17-3ebbb074f1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab66dd0-0abc-4d37-8588-e22cac378437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3936ac9a-0817-4ee3-bea4-7dbe5b05c214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9230c113-f8cc-4ec4-a5a1-24aadb3cab47",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30646e40-45f8-428d-a767-b1c174163fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7503e1ca-1bbe-4b61-b37e-3805abe65e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a8cd8c-ae6f-4935-9c3c-53a82d0aabdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8b32c6-2dd0-4766-9caa-91e81da30d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da29af14-dcf0-4e29-921f-ddd3c24e73c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534f7d7f-fc81-40fa-bbe6-632619c09e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e11c03e-d673-4ed5-947d-d7ef3a5cfdb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0adbe26-6874-4b08-82f4-8cc0e2600f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "62398896-07c3-4996-943b-c00174332dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6038c7de-314c-4038-93a1-3fc483efcb08",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb9a843-f057-45c3-9f00-68cd4769b83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e0187e-c965-4140-bfe9-a7700cd95836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7340d806-99d5-4dd7-8064-93cdb0475468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "762c7964-bd29-4d52-9793-e40979194892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85605b8d-e43b-4b12-b076-e598a8be35e4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ad26e2-b239-4f05-a480-dbe0a963d896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c572c32-e76b-4f3e-84d9-e31916563308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315a9292-60aa-48cb-958e-c3a98fcb19ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cb68b0-6b08-442f-9f4e-030e4c9e6b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e227fe0-8f00-4b3a-aa54-43eacb61df3f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f4f12f-8d72-40ad-b6a5-4d7f2be44e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc09fc1-af80-4132-b98a-63c06eee122c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20fd91e-cae0-42d5-8638-c6ecdc2077fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2862d0-2bab-4b54-b608-d257dbe91259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21509ebf-b798-4399-91c2-e570339f36e2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d151216-bf8f-4a77-ad2b-501132cd6015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737ea678-9772-4e93-90db-0ffc1968839c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6667fd-4745-4fd4-9010-977fb1c1d0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1d4b94-7ef8-4270-83d0-dbfd8325e6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d2537d-cc8b-489d-9b9d-30801b9c54a4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13915de5-0560-4471-8109-ecab6c613bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6492ead-8f1b-4e14-8853-a80fd461d2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc5cc7c-9418-4a26-a1fc-6ab8c03f49dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa79f571-d724-4482-8249-69110e2a08b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cc6820-fdaa-4f89-af52-78bbce333f4b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3058b68-0ca0-41a1-ba5d-589b5e510160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdac0a17-0abe-42e6-8473-afcddc52e62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c829b86-40fc-40e4-9fcb-93cdac34f170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e33a2b-1268-45c3-9931-a3e53dd38a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c05136b-12a1-4e25-9634-05fbe9025600",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f875ab19-9550-4366-b4f4-1a6bc9d49e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e81bb2-2356-4a03-83dd-82eed15dc871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faeefc53-a016-48eb-8e8e-195449acb15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "83bf743b-5175-42c9-b443-03fab3152171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3e1213-6877-4cd4-867e-613206dcb4d0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0993923-abda-4bcd-b10b-25fb6ce5335c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff1d807-c816-4b7e-ab91-4e39cf7fa8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f341989d-07c8-4a67-82f6-b342a9c011c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab85bed-cb64-4058-833f-78956d3e1159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b4fd9c-01d2-4694-ba92-876a6d7e93a0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e36bf76-919e-487b-ab6a-12b574f1143c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374c0e68-9686-4b49-899b-5f1495bd302c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbdfedf-94bf-4d41-9f68-97a9245c402e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3706bf2c-c3ff-451d-9b2d-b19afe15683e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da72ca30-e251-4a29-bb09-f49181bda2ab",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f2f30f-a34b-4121-a55b-e6856e488549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c53096-1f01-430f-89cc-00437a74534a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3caccb-9aea-4383-9fd0-8be1e79bc74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ef5be4-7c37-430f-ae3f-46f719f3295a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12c07ae-5af7-4a54-a544-587141934fb7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff07a40-d650-4984-b7a2-7327f21228d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3beed288-6489-44be-97c2-66891a4201a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4426d943-c657-4490-aff3-2c48b39c4b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f28884a-a43e-47e5-bee0-ea27a75eda23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3fa9f9-3ee2-433e-931d-36d129f50beb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf81851-4826-40de-9881-48e800b98200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17fbf36-ec18-484c-90ac-accaec4ab80c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f33d95-2fd3-4fef-9172-77bf12a9ecdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f674322-7943-44cf-b799-4eec03f602c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657fa3ac-2122-443e-b552-fd958c534123",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd78f8f-70fd-4fdc-9b4f-5abdf9e372a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de18282-153f-4a5f-b5d6-0bce64894a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fee2f06-fe8a-493e-9029-a137b37210ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4eca5fb-da24-45e7-b6da-6fb59929c15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393cabe9-aacf-4535-ada4-67a4e5b3ddad",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eeacf83-55c8-477d-be51-e09da2e79fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a173b731-7a5f-4367-aa90-8e3bd01ab36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b289162-195d-4708-9867-89fb9f445bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1426c593-4f61-4897-8836-1156fa01fd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef6bb7f-3056-47be-865e-1ed84d6d6e34",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0a2d03-d50b-4439-9490-5625bfa9fb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2770b528-2d0a-4e1d-9f39-418920d8ac95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fbe62e-fd2d-45df-af7a-3b3d6221505b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46455a8d-8cb9-4918-943c-acdcea9c7e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a5d7ef-a37a-441e-8ae2-fb55b5b2e0f3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82db0302-ea2e-490a-b5f9-d0ae19c6d777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8e9d83-55bd-4233-8705-c132179e0b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b715d37-5103-4dbb-8ec3-45aea1fdae04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e19c0b-f35d-488b-a6f5-13f75be10f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d82592d-2969-4848-9043-1ec765b4e0f7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65adea76-deb8-4788-b7b5-31c9bf043622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a922625-3bef-4871-be07-77994e2cb4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cddb12f-3ce9-4bbd-b9bd-f3d14a907939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "895a01de-187b-4abe-bcf0-a6f3346e3a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9dd106b-df64-4c9c-b941-766b357fc8ea",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2c2783-2c35-4f2d-a5f9-1e31d07b2c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac928d0f-8ded-403a-b301-ceee513ee550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d5f562-ef5a-4e92-88e6-f52c224f6067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cadf437d-ad44-4f51-9d48-83e25bbfa9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dea1b41-3f49-40b4-a273-efff7fa13433",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce171663-157a-45fd-b3eb-4fcc9e706801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099d70ad-6883-4066-be4e-4c4c771133d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b2bcc1-d4cf-4596-a579-3dc2813d51a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43a9d372-2877-4bd6-83dd-a31053827dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54cba71-8228-4d02-b7be-909e8e178707",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1b208f-e6d1-4593-a443-a637dcf00149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c830c8d8-4f56-4f1f-af67-734a8dbdad87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b730d65a-7b89-44cb-838d-5419b5b88aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2d395f-7fb5-41d8-9e4a-91b0549eca23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4f5bc6-1681-4c14-bb7f-53238696a337",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d35f74d-042f-4045-9d95-c6c19f6d1b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae430f3-a7ab-45e0-b8dd-8b8f1e037d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0315dcb5-8019-48a6-9019-48811b532de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e14d7a3c-0966-45f4-82db-b04c3c09f9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a89ceb1-974e-487a-917b-fc3f11629592",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7d6823-1596-4b6f-a268-779c8c4218b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f2318c-d23a-4092-9f02-7e57c43d3ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae9bb6e-cf6e-4bfc-a7e7-1cceaea395f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04c1e48e-7aa0-407a-a52d-fcedacf2211e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c226ecf9-59b0-41e9-a320-76dcebd6f340",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6bf85c-ea18-4c6a-a104-fef9210fe096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadce980-0667-4c52-a975-f4fc665c0121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8790c2b9-191b-4894-a2d3-4c0c1a117c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e66525-b99f-40d6-abc9-1f707e0ac219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370bb7ce-f566-40e3-9e50-02b4a95611d7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a8e0cf-acae-431e-83d0-87dd0967b6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e7a311-1c09-4765-842f-dd2aa69b60f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6adeb5d-8e13-487c-8a40-c59c22edde0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1480bf0f-ecb7-4d66-a61c-6b6d7a19df29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9ef5ba-0a92-4d00-9c55-e6a386d4de49",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533c076c-4b0f-4e4d-b2ad-772e961b2157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcb70df-610b-44f5-9381-48c45206cdc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a467be-8bd5-4c33-950f-17d47127f598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaca73ea-5eb1-43c6-9421-12be4c2095c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43267d46-47fc-4ebb-95d0-50218d24ede3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16c2bc2-68ae-4e89-8861-10acd099fb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1265e14-2659-48a2-80b2-84ddccb09057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c142dc7e-cae1-4388-ae2e-03ff4e6af579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3435a47-b514-43eb-b75a-8465d6358fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114fd685-c109-4647-913a-949f13ba4f48",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4294030-0397-4971-9391-c370cf9c7a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689cd28a-4011-4aed-8c0c-1a433ac055b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05aaa73e-2f25-4f7c-b6a2-0f7a07179923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a378784-d804-4353-88a6-d06df1fff876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af30cc9a-eb30-4fa9-986a-972978a4557a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e8d0c0-9d44-4725-ad3f-ec1cd32aa1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ab36f6-613f-4937-9e4d-803678625589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8b772b-94d9-4c7d-8537-201306a18e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1463903-0698-4f71-a910-9ab0cfaa928e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02054d8d-5d26-4099-a871-142e7f2e19c6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f08496-ba01-4199-9865-0278e33c27e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845185d4-d958-44b5-bfc8-563c0a628daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a24739-8d31-46f3-a79f-fe0359f504df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d51c14d-d832-4214-be41-ce960248b989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1db09e-dcb9-49ff-a47a-cb822a8d5752",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a0933c-ee3c-4906-92fc-52b2c060961d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7430838-b0a6-4752-984e-1d9fee6b84df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785bbbf9-dfc1-43a1-ade5-0b623c1f7766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0271fba9-09de-4fbd-bbdf-ed79d272a821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cd2d75-f7e9-424f-84cb-262d397d7c16",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0235146-c6bc-4fa6-9f72-562c2221802c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "06310ba0-f184-45f8-bbaa-52795638f470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24b1c1d-880b-4e1c-8bc5-2dd92e471eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3200b0c6-a2b5-4cdd-a5fc-758ad203c935"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e5b3ca6b-d037-4901-b99d-39567f0a5aed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ddd5bae2-c4d1-4b0e-be64-fea07501e16d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a62f6d1-9067-4a49-a332-cfe88cb856b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ce8ec92-b2de-4357-be9e-441aa9418feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b02fec-5522-4fc0-ab19-83ebfc7b75fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1de95c40-69d3-4d5f-a0a5-fc41376772cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95b4be9-9339-4697-8e55-315a90f11f77",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f041f35-5f3b-45d0-b61c-3eedb6c1c582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef4ee88a-6ff7-4c8f-babc-0ac3ebcaad9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4128c6d1-74ed-4a29-aeba-58722c76716a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dbbae3f-4136-473b-bf8a-d0b3673adf1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3847d03e-1323-4b5d-b86f-454d28def3f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "642e1667-3e58-4fb9-acba-0bdd6859416b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "845b9457-790b-45fa-ad91-ed8cb0b25ec9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7e35b02-4c9d-40a9-9de9-6fa6d7b1513b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "22ee91aa-b021-43d1-8d73-d6ec59aa7f43",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74d26ae9-8d4d-4cca-8f99-26f9a53ed11e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b46408f6-a2df-4aef-bd6f-f15c77ca9c56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a9d2058-7394-477c-8ced-279ffd2e3284"
                }
              }
            ]
          },
          {
            "id": "a5bf4c07-885f-4267-b7d2-f40ae16f840f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f37b78f-716a-497a-8020-d502096abb64",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c7d57d5-53cb-4f79-a2b3-21b2b08ce12d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d422bd03-651b-4795-a263-36da7c9fbbed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be84df0e-d244-4360-b61c-4bf36e5a839b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "46165408-b58c-4c17-8a9a-2e8f80269333"
                    }
                  }
                ]
              },
              {
                "id": "525b20ea-6d3a-40ae-a51d-1ca5ee304f91",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "447b1361-f407-4db6-83b9-148bb3aacca7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "abc7abf5-73b2-4d0f-af5e-d517622f25e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01109097-c3ab-41d4-a954-0d154069252a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0fcd830c-7a4a-4bbc-8cc8-c22be0007832"
                    }
                  }
                ]
              },
              {
                "id": "d7ca931b-34a0-417f-917c-02a4f75f093c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52a16b17-457f-4211-9c77-550316c0c3e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae7632b1-62c3-46cb-ab83-690d38a68e4f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e928278-7ffd-48bf-b121-d0ed0646006e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0858080e-6a9b-4538-afcf-8b67a31dda67"
                    }
                  }
                ]
              },
              {
                "id": "f487622a-b3c5-4e27-81e2-3e3115db7b83",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "498ff8a2-d7dd-4eac-81d5-958da1fe0fdb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a86fa90f-c19e-45e7-b06d-2a406aa6f694"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1097e7dc-de9a-40d9-a4d1-1b98c5bc7221",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d1a1a816-58f2-4d6e-bcf2-b35f9f87ce99"
                    }
                  }
                ]
              },
              {
                "id": "d0d70066-f37d-44e3-aebd-e76b3c6ffb9c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd31f5e0-8c31-4775-b217-2a34ff1d1c0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dcbb8785-b678-46d6-8376-c610ad052412"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1be74fc2-9055-469c-8372-aa1220b3a719",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f8cd1f00-4f4c-4017-be53-860e2b455189"
                    }
                  }
                ]
              },
              {
                "id": "bc6297e8-cfac-4352-8f02-1134025c5668",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e20bda6-4265-43b7-aa9d-5ead5c5cf3ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4dd6fc73-5994-4cff-8c2f-1c7c3c4d8993"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca7ecbd6-90b8-4171-9947-027d7c98d94c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3771bcf1-9454-4db9-9cca-3355a723b596"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85ad9529-5a76-477b-9d17-0fd9a067ea92",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86bd82ba-6854-4411-a010-820cff3eff56"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "65d90800-f7af-445d-85a6-111977150f0d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75ed1408-642b-4708-a477-c43c8e551a08"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b939a822-9518-414a-b73b-81dbcd819b12",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "553d21de-7258-4f57-a171-281f5080f492"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0752eac3-bfcd-4748-bf67-b33bd1df78d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3f37348-9dcd-4245-badd-83485dd130fe"
            }
          }
        ]
      },
      {
        "id": "4e8100b6-b87d-4bf9-9752-e69c90a59361",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1d3f8186-d7de-4755-bdcd-3ceca094d763",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e69d691-10e4-4d14-8e6b-133d53211f5a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17daf00f-2e09-4d21-bc7a-4f48a28d9f5d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014254d1-f3fc-4de4-ab6e-007edab550c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc43016-eb92-4023-9b13-1709c789848b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6b208d-f6ed-42b6-b6dd-53d85c013fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2af838ce-c1b7-4d94-9648-3161c90dec80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96bf049-ca35-4107-88b4-39ef8c7674a1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8873a5da-70c9-4339-94af-e026890748c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdcec002-a06a-4c74-acbd-dbe916c19b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2adb3f5-2541-4cf4-9f5b-71bd9a6f9e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1fa08a-de09-4bf2-8b77-2b8722dbea8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c27d9c-8ebb-443e-8647-aba8ef79c16a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0ad3fb-fbd6-46ec-a4bb-657a9fa6f894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13dc9323-4db5-4ca5-ba83-3e9440bd9810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb579d2-d5e8-409e-adf7-617a2d3c3758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f708191f-4242-4fb6-b939-82ca5905bbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8209727-b1ef-49a7-b220-7f70232644d2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60759f51-fcb9-4365-bf7f-77e92977c1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d4f8ff-408e-4db9-863d-88619ac472d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73c5a12-0a0a-4021-98f9-40b90ba539a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "090198a2-b087-48bc-a75d-30f7df3ca4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb6749f-256f-433f-932b-e57ac2af4b25",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6431f5-4e12-427d-abd9-731cd0cfc431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6518c78-a669-428d-abfc-b07b2c2ed3a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29e1070-4182-4a29-9349-2cb8748ca217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc9f10f-bf46-452c-9e34-f06e19284c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffe6af6-8940-4c59-a08a-44153b75e708",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1381af42-6e1a-4fc5-a435-211cae2af6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c86e58-7ac5-4138-ba71-a17584bcc3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a39234-d026-4b6b-95ed-fe6d599bbfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c222468-132d-485d-a56e-841d158dc785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fc0c01-9bfa-44f9-93ae-4e703de1bd01",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3568162b-6a9b-4992-b86c-a008c550808b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd627211-0a18-4fa1-9346-0ed708ce9484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46d3148-005b-4044-9056-b09066c9dcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2913d667-597d-46c6-b3f3-7f88e3c736f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c000dc13-3115-4be7-938e-236edb3e965e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507cb0d6-36d1-4467-b1f6-5ef43e3a1331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da64586a-ed7d-423f-98c9-bf8b01439270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d15cfed-9681-4aca-b7fb-ac3ff4a0535f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "403419d5-f4d4-4865-a3eb-b0909f1c395e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5dd15e-40e4-40b9-b4a5-05efce7e3816",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92cc139-0969-42c4-9292-a14b86346f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f981da5-7a14-42e9-a54f-8a66bff7c4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbea1559-3abe-45b3-9d75-6eecc724b448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "490d2398-41b0-430a-bc87-cae4f8ee000f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d13360d-e3cf-4079-9977-86c5cf1a4265",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee65e53f-7417-4f58-9fbd-ef5dfa1696f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe7514f-feef-4e6f-9425-eed8e4022304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2904c8c5-27a1-48b9-bd4a-01734ac2b6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a01679e1-b8d6-4795-a015-bf585a23ecf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36729de4-cd48-4c4a-ae4f-4f3ec044937b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcf2fdd-d0cd-4b00-ab6d-38e98c06011a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18bb780b-6323-4245-bb36-53fcc7774226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc7a853-5b49-4365-8f7d-e16b1ea5cde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2da1752e-7e89-4d91-b603-5afc341e4027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5f7c53-17f7-4c0d-9558-a90c2ea4b11f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cfb661-84d6-48d0-b00b-3191680d0c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2843a5c-a66c-4248-a5b3-78b1b0369289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe8093c-d724-49e4-aceb-8f2020db250d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee2fd0c-3372-44d6-bfed-fdc49a956145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe29a14e-e63b-4122-ada6-1d1dd29788da",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48851ae2-2797-4bdf-a751-c68b6c942b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef264afd-965b-422b-b556-606c072c22b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b74b6cd-da36-4f49-a7f5-55985a801102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "123b6eb4-d570-4584-b5a1-dafe501fc61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a397e8b2-5f55-4e8b-aca2-4beda7e57990",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f09e63d-3098-430b-90b0-feeb2d3dfb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbcee18-87f0-4a45-bd71-194228fcab7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb497b19-99ad-4794-b7d8-6a5340be7f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "230512b7-5d27-4482-9a9d-4b9e1a5b99d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d9158a-6764-47b5-8985-4e9cd707ae22",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddab4659-e84c-47c1-beaa-20d10f6cb8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30f540f-cac6-4ee6-9aaf-d5ee5bc2c796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d42c80-2886-4eac-8e2d-93e28ea3c4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc514dae-0e1e-499b-9d60-2eec3ca3b937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43b8802-ef3e-4b08-82c4-ed6384eb5aad",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abad0246-fade-48f9-90e6-e32efbcaa874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab18a9d-b8d4-4c0e-84e7-c769d9248fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279f438b-d3f8-4d0e-b502-ccc73b5b0b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5034c6-c395-4e7e-8bbe-abfcbae6f4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672ec2e1-ca45-4847-bacc-22452d6c3be0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4a5706-7cf8-46b4-8ee3-4b0a40bff6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b5c4a9-415c-45bc-9609-4a4138752788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b40a51-8c25-41d7-a24a-846a56cfbbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b973304-7d58-418d-98ff-dc9f7344e426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f96d627-8371-4785-bdc3-123cac2534ae",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c99f8b-a6a0-44e3-b7ef-c9c6e239e000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f0c167-7041-403d-a789-b9487d74447a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a3c047-f74c-4280-8cfa-826da516e09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6c3af8-c6d8-4eb5-af7c-123c3bf18bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cdff60-687e-4cb3-9069-90bc4d1aa0e0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8de3a8a-cf36-432e-92be-bcd16df34e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a190708-00f8-49a6-9267-7cb3fe8832ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d693dddb-e451-404f-bcf3-0713ab46dca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95766ac1-b579-4d68-b852-7e715cdaa410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1a6cdd-e17c-4786-ab44-cbd25845eea3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c445a6-ce18-4e3e-bf6d-4e42f9978338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa4768b-610b-4454-ba49-ee12db4ce308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9822d7-fada-4e51-b2da-b6f3aedb761a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9980fe71-8744-46bf-8183-69362221fcfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a6eacc-2fe9-496e-9d6a-10ad9ead7565",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc20440-568c-4854-b405-1080259a090f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c617e4-e218-4c8d-8660-d16441e20298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2dd275-3779-411a-b4ab-73240be69469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f94d9768-fa72-4e4c-ae84-c69ad6591693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d24181-0f3c-4fb9-a86e-c719571eb273",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72eec589-8792-461c-90e1-921a9cbb98dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321e535f-7136-4c64-b02c-c3733877445d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd910fc9-3986-43bd-aa78-fb4246b8e673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26e10143-6835-412b-aae2-983c8f9a1ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2caad550-8adb-4176-99ac-fe6dc8e62834",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249a785a-22bf-4cfb-8748-74ffd289432b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c5bee3-0a3f-43b0-9f6e-ec03cf8b115a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759199b7-f938-4aa6-b0a1-08fa7f896841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e005d4d9-48d9-4c66-abf3-cdee519d8fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99198123-0918-4012-84ce-abdfc6cb7339",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0e04ff-638f-45ef-a4d0-5edda2b94255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc80a67e-a3e6-427f-b31b-a300ea3ac230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247d80cf-4e5d-4d37-95cc-15e3ed5c3f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "183029e9-0d73-449c-b06f-8581c676e931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4dfbf0-78de-4834-bad0-c224a4eca9d7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e47e8f-b493-41ec-b512-fd4d0e6f8f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168845b0-b91a-4022-aaeb-72a637afe0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22db2a6c-78b0-4129-ad90-b92e3312344c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a75fd4a-c225-4494-a39a-3a725ff59ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68eeba3-4f1b-4fdb-900b-c3bbf89f002f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65f5024-ad66-460c-bab3-14d0f4143f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805ce06c-186d-4d19-8a97-e612315c9add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c817b4-9960-4674-bcec-3b28ae7001eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1225dfe9-1f25-46ae-8928-c477543de888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82f22e0-8ae2-4f59-be73-c7acb651aef8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5fb8b0-4c89-4b21-a1b3-4dcc1b3beac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba89043-4ae0-4897-b682-d51adad7f62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5bbc46-720f-4954-a270-ae0f5dcdf913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51f09d5b-459f-4855-b421-4b7d0894821a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a8ae50-789d-4c81-b51f-8e0092aca6a6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb303a9-8ff6-4f66-b982-441a149d6878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74295ed5-6c6e-4a76-bf11-d74a04aa6dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc93df3-2056-4eb9-9f60-30a62b39b2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf60f900-dd29-4b1b-a2f0-a87374a66d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1712a27f-53ff-4bbc-bb9d-0edda7bbcae7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6bdbdb0-d08c-4e8f-a392-2ce166cfe7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e2d83c-04a5-4a95-85e1-adf1f39f81cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85672b7-9ee3-457a-85a8-02b8202d37e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b34b5a-4c6b-4bc9-a37f-918ecf46f2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e74edb0-949e-484c-9864-ba1c1b45e37e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b26ce8a-cf86-48e6-80cf-2ed61f76ca5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe85660-363e-4dae-bd58-eb1c743eeeb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e943eb9b-3b4a-4690-bd93-ce676ffc7b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c50acd25-9073-4b41-85db-97c9d34e6a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec97374-1cc7-414b-973c-56a3907164c8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb8ba2b-de4a-4977-94dd-f358faee97a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a733255f-0e45-43c5-8c82-68a2d42c32bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148c14f8-bfa2-4b84-813b-9816a5680ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1d8ad4-2456-4863-b026-5829c08cdade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ea300b-4bc6-4f4e-b81c-be9e99136281",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85abfaa0-5ea0-4cef-870c-43dfbdc8fc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043c8c42-8e4c-49ab-ace1-7db59e1d7095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4149be-6e1e-4fc1-ac9f-b42516158474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17bd7f1f-add9-40c2-8397-bfcae5967d09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4cdd8c7a-7f2c-446d-a8b1-9a5e8c2ff471",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee1ddfbe-9dcd-4834-81b7-9ebd1677f711",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f23f61-4bb9-41dc-afb3-589399c3ae5d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f53512e1-afdb-436e-a82a-f289dddf3dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafa8413-f666-458c-b5b4-dd195c47c1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9090b404-2d84-4b25-889d-7277a43c923c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4167e46f-dc7c-4534-9c3e-44f9dc8f4ce7",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6900cfc1-2b30-4b2f-ae64-c9e1e122c889",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6ae3aa-7025-4570-948d-3de9ab88f994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecea54d6-806b-418d-9f52-715fb4aa34e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b0cc045-3e9b-4ee9-8fe3-1eae6d3d559b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "697ee159-3eb8-4c17-b5a4-826d03d247fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4057c5dc-197b-454b-8db3-2fcddff88c77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99286d93-62c2-4774-bfdc-b3f22066aad2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42190ed1-ee3b-40d2-ac49-df2410af0e7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28ebd0be-c5f4-4c33-ade9-e0a45a89bd00",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "90d1549d-608b-475d-9289-e9ba6b4ff3cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f9fac1b-40d8-4a79-9c2a-936495af4ff2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d30383a-162e-4753-91a9-d0955921e3f5"
            }
          }
        ]
      },
      {
        "id": "503e62dc-7aaf-4f54-b627-ba398f517f6a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2d60caac-34e5-44c6-9cbc-125bad3b7224",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65ae627f-bc78-4a69-8910-f464a60a2f6f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b100af67-e378-4e6f-aee5-72958b5e0f6a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1173917e-8bb5-4871-af2a-4b712e53da16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75de6b3-5a13-4437-8a62-ffec5f6394ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724c551e-7c09-4dd7-90b6-e12164b7a2b0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dab43d-7708-4717-a014-3e53a2ba5abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a433d6ee-d260-4f68-ba34-3948e2648663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579e2f5b-9234-411e-87f2-e6f830f5450c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a807c192-2060-49df-aba9-f2e3fdee4346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26ecad0-4f4e-4ffa-862d-10aed7569c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4891d9-aea1-4eb4-9ea2-a8348e3dda62",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8338eb87-ba46-4036-bc17-4e922e0704c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa121d3d-d825-4b9e-87f6-6d1bb4f8f32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38f5524-1dba-4135-bd76-2554d6f4c83f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb377af-3e4a-40ed-924b-c55a7e899a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416ff3d7-9136-423d-bd36-82e1953b2a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e668170-564d-40eb-ac92-2cd9c7f31966",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c77b26-402e-4c8a-80a7-3bedd1eda922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4b1ea6-260a-4e6f-8b17-d6b6affcf280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c05598-57d4-422a-a842-69f5df029f20",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc0093a-322d-4417-8248-bf5c4e22fcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a6ee9d-65f4-4f02-be52-89303ccad315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c73b23f-e20d-4967-87a2-05c37f5edb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da730b2c-d9ff-438e-af35-da8592365b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da319567-f918-481e-b741-699a74c8fa42",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82db869-42b4-42dd-a149-dcb777133d06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c36981c-6c73-4da5-94e3-5d152ba88541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ca5b67-51be-438a-9ed1-4386f8c52f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d348a5dc-ee02-47fe-a9b9-9df99438596b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544c34c7-41f8-4ab9-9af7-68592235aefa",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e847aec7-2364-43c9-b24f-5fcd099cf634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3777bc18-5c80-4e81-b30c-2860d792f2c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef4b956-dc3a-428e-81c2-be28b046dae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1045f3f6-36fa-46af-9f3e-0ee116099440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71ebc26-707d-4157-9cbe-298a4457d7ad",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f63b04-e896-49cc-a0b3-5b6f8d69ac8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9943c58-3826-4c8c-9cc0-30a483fc66e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6667a049-a3bb-4fdc-8881-1c1cfe908605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341b433b-d95f-4aaf-b449-730c9d65887c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e81bdbd-2f3d-4b6b-85ea-d1b3887d207d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f37edc-35fc-4784-a9ef-7b44a2ad8800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b06ff8e-5b73-4631-beca-77f2a39e51c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e49ae4c-1253-4071-8f69-506d53b9d376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5eb627-d822-4ba0-912d-54048677cffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5687c740-c161-48fa-88f9-edff79c4a619",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3606a7d1-bf0e-4ac5-b6c1-537f2cee6a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2198d6-35e7-41d8-8b2f-c1833c3f62ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a47866-aed7-49b0-add7-777430708301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a04d887-82a3-4413-8e30-0872dc4c392c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80044d45-8056-45b8-840a-4e286264a4af",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca73efc0-b561-49ad-9eb9-c7b10ce5ac26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a77d6593-92d3-4a1a-b546-a1dfac21148a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d153dda-c595-47ca-907b-4eea1e3ec182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af352415-f7bc-40f7-a10c-bdc1eb471fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8082e6-65d8-45d6-b7e2-f11ca8b77cfb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9251545c-48d2-4c0f-9467-6b8c7287eb8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cf3392e-696e-466b-9702-73f384c8e872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d23f48-dfac-4702-9e16-f72b6edc2218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0847b23-96f1-4c55-aaed-9ae2cd477edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7087df4a-a067-45e4-8245-74422674fd13",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8850fecc-5a2a-48ed-9743-b402d6ccbe1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e47f82-84cf-449a-af98-fe4d15320b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd428337-1da6-40f9-8481-d830cbc97cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f31abeb-ec49-42ba-b75f-c45f6aaecbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d4623d-8d6d-4c2f-9f95-1a6d80cc7f73",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b0139c-5464-4e11-9464-3ef9e4eaad13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6daae403-5794-4318-9ecc-2b73033b8012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6bbda0-63a0-413a-9834-0935a21e9ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356b9dfc-6ed1-49a8-89bf-d0d3bea6caee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe12743-2bb4-467c-b569-7414bc527f0a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba413141-280a-42e0-9934-2aecebfd7fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400aa915-1b79-405e-9d26-86bbf14aa7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adb8e9c-d573-44f8-b3a6-b629fb31f2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ebf711-fba4-46a1-8872-58a97a69f313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1cf7fb-a5e3-4f02-a88b-48ba1648e0bd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b3de8b-9753-4e00-93ed-18c6a18b5d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc53897-6c58-4ccf-9a40-e2b7cbb58577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b48e4ad-6ba1-4b33-9c2a-dd47b6f8f916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41bb3af-af6b-450a-819c-dc3d2b490152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6b5a9e-e495-4c8a-8868-207d91863d02",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7d9cc8-4347-48a1-b51f-f2912b671d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f376c88e-02ce-4947-a07a-1181ef3b838a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3427f01f-70a1-4be3-b4a4-f215f7254ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a252f1d7-5dc7-45e6-9b8b-33cc3f92b933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcf533f-86cd-4b51-86bb-3940b49d6bfa",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09188ae5-4c0b-46b8-ae4e-7985be408f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9ae6bc-99f9-48ed-8870-20f8bde740d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "576b588e-018c-441d-9211-ba3f4087ba42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6774d8db-76e2-4f5c-8b65-2f40ae61ac3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9de0e9-766b-4b5d-a139-0ad5fcb80a1a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70450da-0cff-401f-a5e6-4bf783bc2d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f7476b-b9bd-46c9-a91e-4d2171ef15dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "965985dd-0212-4330-873a-456ca99928c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563ab8dd-16d9-408b-84da-1dc69153bcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec51d1d7-d988-4972-9b92-8a5e6a3fd73b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57e9a1a-12a5-483c-b34b-11d10e755114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ab96cf-14d5-4fe5-acc7-f28caa39d91a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142b6c84-3b86-4317-904b-7136cc345b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629a5fa0-ff55-4116-9156-4b629fb85779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f744f6-7857-46c6-bffb-f95e03ff0d0d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3bcc90-43bf-4eae-87c1-dc1766e13167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4de1ac1-b899-4b09-bd41-936a175c6f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998c48ec-8503-412e-97cd-f8d46d7d517e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fb10da-68dc-4f2b-ac38-67bcd4b643ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc172a5a-f748-4a4f-9909-8676a3f17dde",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfc5fc4-beeb-47ee-a8d2-2973b795a02d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45b1db1b-b330-43ba-a1ae-095cc4391299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b373fb8b-aa27-4771-ba8b-931b7077d30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "befbf196-cd59-4fc6-956f-8cc5ef798b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86de2c6a-e3a3-4961-ac66-8e4597686250",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bbd56f-d10f-409f-8904-371242112d0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "478bb87a-8042-4543-bda8-c379e0a401fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9286bb-b5a1-4869-9677-68ccb345c482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023072f3-58f9-4554-9901-0312a1ca989b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b294851-0d32-4a40-8787-b7ac4e67feaf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728d7bdc-e3a7-49d5-89c7-bef10973e56c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a87eef9-bece-49ff-b935-e90fd9b6a062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4128a3c0-ecf7-4087-a1fd-c6e4179d8661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7c0f82-60d2-4b85-8032-5f8f8ed916fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72430309-76c8-4d76-aec9-a79d9212e116",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df101d86-aa8f-494f-8aae-2ea1cf3fc85d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc6fd5eb-5019-41f6-a014-444a6839ad54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fdb0ac-5545-4731-9784-44a1d41eb4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3072d0-e81e-41de-b4d8-57362c704b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b76fa3e-2892-496e-9853-0d87e0911fd5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7877bf-d1e3-4b52-8e57-26f7ab7c1d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8aff238-85cc-4e1f-b636-0df849afc3d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a869865b-8118-447f-a1c1-b7c793eac97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab550d14-77d0-439b-b968-827e90748bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3909d84d-e96b-4916-b727-0cfa51539e37",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2991d15-ac40-4535-92c4-0133da1b48c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e6e74ba-fd51-468f-a610-0a7eb1976a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8232fd9-c389-4f63-a566-f32adea2b583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11fa859d-e95d-4a76-bb32-9a163a37ccdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf58161-b704-46a2-970d-ea81dbc095a6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67efafd6-f104-4e50-aeb7-25d51ab9ef77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a49d0b2b-2625-4151-8d09-4c3484876bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e512c11-4245-45bf-ab64-29c510dbfc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c6f6a4-338a-4817-8fbb-7345dd4537b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42eff6b-5801-4b8e-8337-581523cc9959",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cce87e-f46a-448c-b0dc-ce79f899a448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99168622-780b-4941-a924-1c693c1d15f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f8c2a8-935b-463e-8c6e-f51704f806c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa23f7e4-8dce-4818-a98a-3d1b5d68fff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209ad344-319b-4192-b925-a34f4b91cbf0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de7c998-3392-49c6-bd5e-6094903448cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3391d496-97d8-4ebb-9823-111fac8b03be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c98f046-9b2a-4cea-9cf3-3a3d6bebd8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b05f8f-8fee-4b04-874c-887b481988aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc227b8-6b1a-493b-9f0e-9b23f7965981",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84b36e6-46c2-4505-82b6-97a82559808e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b62863d-807e-47f6-a81e-922d3b6e178a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0137aaaa-adb7-49d8-a249-e8600622173b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee29323-caac-40df-b6bb-5e12aaa62c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b488aa-ed77-4349-9285-1628f5e7b453",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5579918-b414-42f6-8295-9617c797561b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81640a5b-0fa8-4108-83c3-d1adfc85623c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62053357-860f-4267-9e25-8c1648ac8e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7187b9-36ba-486c-96d5-dd6c2e9ed217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81dc310a-d3e7-4816-a4eb-a382d314fe71",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef15c853-5ff3-4675-81a0-7969a5c07b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f00c6d-85d5-4cd4-b1ea-49a55494f2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ae10d9-8ceb-416f-9879-0de7b628b8ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7036f00-b3a2-42dc-bdb7-b171710ba612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37901986-0714-4c92-8d69-af36f00ba679",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8454411a-dc1d-4159-a3cc-b75ec84efa8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c40095e-2044-4d0d-b673-c3aad6b0c10b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37242f7-7eb3-451f-b634-f95b499c4fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbf606f-2e04-4aa5-a2da-dbcf76fcd399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827811f2-8ac8-40d5-9afd-77aee6b2fcf2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e5cce4-1c4e-4766-befd-4d2c82e561e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a615d976-08a4-47f0-b996-52991eccc6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2218c077-e6d8-4ed8-95e6-154b7e82014c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e22b8a-bd75-46ba-ad34-be67e387108e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044e9df7-718a-4671-9720-91a2cedc46d2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fce89f-0a49-44ba-8277-b59562ce6b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faefe96a-d52f-4a0d-96a7-fb5615c62bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecae369-8946-467f-818c-ede436d1f594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bfc7e35-5797-43ec-9eea-49bf3dbd3a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac3f8b6-8b1f-456b-9d51-da095050e8c9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78664318-9da3-459e-bd95-b766569da829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77090e9-d659-4923-835e-92ec01fdd74a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924ddead-0f57-4ceb-a0dc-ade8637958c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8284bb-eb07-4082-8f42-3d87c061b2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc140397-6f34-49e8-bb22-7823becb920b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f214c102-b1ef-4046-8c85-5ad4fe08034e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27aad75-609e-454f-8631-13ec5716ae3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf3bf24-afd0-423c-bc2f-954c0fb17522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7885c5-dcc0-4bab-8d84-be427b367c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72e0618-a2f7-4dc5-9c9e-e3546ce822a5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cb6f63-ba48-4ccc-8e42-17612bb5d3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c185fb35-5313-4715-b0ea-824f57a2a758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7e52b1-fd93-4e55-9fb0-25c8befd9ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f82ce6b-45c8-4960-80f1-edbbceca2280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12c11ce-119c-46fc-8d8b-7b5e69e984e9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3b9605-2681-4a93-88c6-8bf77faf38fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5939541c-d694-4e05-bad1-bc70ec4fc5fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc66c26c-5a89-4d62-a064-91bf4aeece67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39858f54-b08f-45cf-83a9-ac899132baea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6478ec4a-50aa-41a8-8335-d2c61e8a217c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11aa0349-17ac-4fbb-93bf-e04e31e76e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47693209-4a22-416e-a97c-3b13222d7a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf169bc-0d6e-48cd-ac4d-9c4039c6abf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e08b31-5945-4933-b2f0-f186a763d7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0d2b83-9b71-4162-a3e8-55d47b67ec0e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6537f2a-ac77-4860-b971-93e85a6850bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737c1b87-f46f-4b91-bac0-115b2fb6ce33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6325a5-005d-4dec-a98a-c38997f6ecd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c1a386-a7f8-4622-82f3-6d0ce3cdcb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e25f79-14fb-4abc-bfbe-57f10c1fab74",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817d9490-f242-4af3-b065-7fac8cb3a186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7ba215-9438-4c7c-b074-d51d76a7f600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44023e28-b2a3-4ccf-a6f4-cb956d192421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f68d477-d553-4347-9e8c-4c5cc17df48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ea16b0-0653-4b19-a0ae-b5c599f75f6d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4064fac-bddf-4823-9404-e0244c2ffc84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62030fed-f3d0-4a72-b19b-b7567672de92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc76ae17-0512-45f0-b42d-fa0e2136c5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588a4c15-2f26-45a1-8785-5b8ba07b499c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363cc406-945d-4689-a6a6-969071f0f236",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfa6454-dd79-4056-a766-84060a45b8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3916210c-df62-4027-a440-71dd73512e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "578ee8aa-c06e-40d5-b04d-6b12a72be4d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf4c24e-7542-4d24-98f9-82cc0de5a0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5f501e-65cb-488d-80cb-5609566a2267",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d375a2b-614f-4f8d-b589-7127115eafdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9317f2e2-5aeb-4c87-b918-bea7970e4e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36edcda9-75ba-4e7b-8e37-7e4c05f99df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908ec601-1ef5-4eb3-bed9-c27469732a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09440994-85e1-4a0b-bdef-911e56e3964c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbdc9b9-bca7-43c5-b7fe-7383968def85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6401f4d6-527e-4a3a-8ad9-b4bc296099af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb735518-7424-4268-afcf-6a109b06809e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6aa6294-fa65-4127-acf3-ca99413694a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3158f527-f992-4be7-b10a-1cd66dd66e3b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7e9b9d-7158-48c1-8c44-3b4d244218ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e13955d-f4af-4a1e-a86d-126845ed99ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16e9d0a-9594-4ca4-8344-78da0f3a605f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08c848e-c8c9-4df2-82a7-79374706141b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012710b7-afec-4822-9558-b0f9830a7461",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7f69fd-e373-4c9a-927b-0b8a96ef988e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66415b51-820e-4581-8506-9e14ccffbdf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e0fdf9-ad06-46ae-8b1b-ba7f38c1c6fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93c8c73-d696-4daf-82c5-6a3ececc319d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede372b2-0b0c-4fda-a328-a315c579d3c9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4468930f-69fa-42e3-9095-1f162fefb8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a94cb85-38c8-4bba-a6b2-35dac272d08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04f7762-cf6e-4674-916a-859828a3e699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c618139-bcef-49b2-bf6d-133bfcb313f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864e98c2-a2b9-4a34-8f5f-24772dbdc7b3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a751ac-9fe6-43b0-9abf-ffd61f723363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23386612-e73f-4dff-b308-7519756a9d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab220b8-3bb9-4808-ac85-a3c19bbe2653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b93b19d-c68f-418c-a793-1f3ed6001927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0ccd5b-c5d7-4456-af43-ff4543b69ebc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d78b8c5-f12f-472d-b556-fd38c1013c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd410f2c-9095-4499-bee9-dfb795b20a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0197bafb-18de-4f0e-81c5-8b0bfeecc644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c74e73-0dc6-458c-9253-bc738124301f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fac0bca-a8d5-4426-804e-19b33cae3da2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef186421-d667-466d-85c5-41c8c44b7ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3fedf9-8ec5-4032-93e1-b5df0efbcf3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c771ab-08d3-4667-84bb-b86d5c95746b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbf5eed-fe65-4823-8747-b9415e5a51c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e930879-6fe0-46d6-8f0c-9dc72d7ff0b0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a10fc33-021b-41be-a20f-c573d8adbe07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba959fde-3e3a-441d-8de9-583690e8a9c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb070cfa-80fb-4a19-b134-d8e1ce3c8d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1857a882-ece5-41fe-b78e-e8de42775404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd8d629-2fbc-4c1a-8724-9701cc483398",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63332995-df63-43d1-852d-6cc8d641eccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3be9e8b-5731-437f-93a5-29556cc5909f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde88a0e-6684-4df7-99b2-17fa80d78ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2446761-c576-4264-bf6d-f23a054af995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ef777e-e0f1-40cb-a73e-1285e1e5f8ea",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9882fa2c-42a7-4faf-bbfc-2e3fbd79b57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f26868-dcd9-4f41-9258-cafffe708dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83590f66-6ffb-4d9c-b983-5d06575cfbf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84aefd27-af4c-482a-a604-7ce51feb1e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e1d45e-aee4-4e79-9a59-53afc0f659ae",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61572f0-1669-4e99-bfb7-d4d7e6b54881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13c9367-395b-4c09-8c1c-5cd32529ed64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6422df-88ca-4eb1-a60b-11f89f34778e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa2c49f-4db7-4f8b-b347-baede9e9718a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64aa408-826f-433c-b50f-a4bf3e466cdb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88db4163-4cff-4e36-8638-7b5b90980dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3045501-89ed-44ea-9311-fad4f04ca513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b62245-90a1-4e0b-a19e-42229d138a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd47138-8cbd-4c61-a0d2-ecded783f765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932e384c-850c-4a40-bd46-872f4730b169",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7da80a9-41fd-486c-a7a3-c7e25741b897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67af8a4a-ff39-42db-bf4f-303da7738a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e95530-0df3-463c-9d4d-b3382f313a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eebdb52-ed71-4623-aee8-bb066b2786cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84051ccc-c87b-414d-a550-a475196cca06",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eeb8605-582f-4de4-9945-be6e4375f73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc192d62-7245-47f8-9b07-7bd661e158f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe911e5-e489-46bf-9c71-c87f13a93742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8dc374-d968-4e18-a0f9-8838436de702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30d32a9-833b-406b-b793-316d0b126749",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675784cf-e0d8-4e8c-9974-88f41296c898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e82236-f08a-4e8c-a99f-ce0015c847fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c766a82-c303-4893-aace-afa6bcf4afe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bed47b9-d72a-4d70-8ebf-57df60b16d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e11964-b6ca-4e37-a76d-078999419da5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de41339-bb73-477a-955e-99a19724f31b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a53b60ac-b89d-4e97-aa74-0dcb5fc8c33f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eca9de4-880e-4fa4-b9f4-54bdb0c1f1cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f959585-f15b-4a2b-931a-c3d32bba366f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b31a5f-bff3-45e2-b67f-0163fe68c4cc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f11ea93-1c32-43a1-93cf-7c6e6456706d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc5162ba-a26b-41a5-8fcf-02945834909d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff84ab20-69e7-42f9-a8d7-36799aa3184e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989a7cd1-d5bc-4ef2-87c6-85a9298ef6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fa748c-2688-4cea-980f-44732bef86b6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6931eb1d-22ee-4b96-ad2a-49831d2da67d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "382d6403-1cff-4dda-ae82-52f3b2ef4c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445195e6-3a1a-411c-b27a-4ff90aa28d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a002d94b-6a12-463e-a35e-5d1bad401aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3accc8a3-d8ad-4cda-ad34-4566e668880b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d404733-8b87-4ed1-b784-60c1d9ebd893",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e07a74-2402-441a-8aae-811dacaf39bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dd4ab2-3fe2-46db-bf3e-828b82635ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845a304f-13cd-42f7-a4aa-9457b6a297a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b6d146-c03c-4436-b970-1a8fddaa8ec1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31401bb-9253-40dd-800a-6562a6a27123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d814218-94af-4fa6-ba46-76a638b059a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10409615-97db-4e74-85db-9438acf76764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe1f4b7-c9d4-42f2-b567-d07319362834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6556954-49be-47d5-9822-241b1b6d9ad7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63459dce-590f-4fce-8313-68141b7b7de8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca8de38-8219-4063-8939-e6998f2c0bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6484558-9f54-4506-8e21-13ae57372758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc815681-f02d-46e8-b5f4-ee8079eee9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d15ded1-820a-4fc0-8fc8-8553fb6f5a87",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb19e0f-f99b-4500-80e3-98ea435c311b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6043aab6-a03f-4657-8164-89b1aeb0ccef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "401d4bce-3aeb-4c2e-9a9a-7971d02d073c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b0f48d-d009-4c0d-9990-c97a3789d067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a360971-b7d8-4fb8-b85f-bd7d7efa9004",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10ab3d0-8be1-41bc-8848-b474efe54715",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12df89e4-ce07-456e-ae52-769f0452c0b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de126549-3982-48f7-bbbf-bbd80d004922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e5402d-ef11-4032-b246-fc4234619874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d9cc57-9582-4327-8e72-d2d36cacd233",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c9a57f-b4ec-46cf-899b-0d0305a6e192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5086b1c8-7641-45d8-856e-d45d91333723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60180c0-3b7a-4a84-bf61-f34734541b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078b9d89-c2fd-4376-a848-871c62f00058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b302c7a-8c15-49fd-9247-24ddd4c2b8c9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500e21f1-3060-4790-9d52-8450c5148616",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18dbc4c6-6dd0-483c-aab0-612e500497c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2e1764-a8c9-4101-b704-a0db6b76b259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11960642-bc47-4b82-ad88-20bf4ee6c257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cd018d-410f-41d7-93ed-541b9188bca5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa16a27-9c04-4468-ab0f-654e3c95085d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17f7495d-58f5-4af3-b32b-7c3ec1da81d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "169b21f5-a082-4a52-bde8-aeffb002232b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a6c781-7166-4c46-ba3d-db28a7dba396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c1736d-a681-4007-9bc5-92366f06af11",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca9ae02-3097-4d3b-899d-6a5e2ef5570b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "526a4a6e-9e94-4ee4-8133-bea076d22434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997ffabb-143d-42c7-a14a-7b364330581c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12cf46d9-4841-4fd7-81ce-e0b2f4d7e7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9009196-a527-4cd1-8ffb-774b680aee19",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5858169-55a3-463a-b570-c0f62090444f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "847abdb6-fcd2-4c16-967a-99088b57b960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d634d799-a01b-4692-8a6c-77956d4286c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f4a03cf-1fcc-4191-8978-3b57aa662007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9851884-03ec-44fb-87a9-8082c39a3348",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a1f78e-8dd0-424e-a989-6021aacb44a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30693853-5993-4100-a59a-7fb3123afb80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b026a00-73ea-4628-96cf-89dc0d3ba9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775ae211-c753-4438-b0ea-3a98e866fae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdcda50-916f-4244-af3c-dab1b98456b1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e737e6-52f7-469b-9a6d-db55a788f602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "201f767f-aaab-4467-b6ee-d599515e655b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08635a57-6361-441e-a3eb-30208335237c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f0d8aa-30ef-44f8-860c-c2f643010381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8698bddc-0fa1-4a90-885a-e60ea8debef4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd9163b-b6d4-4beb-8cf8-abf153451a69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd06a609-8e6e-4020-8303-a3a7ab844ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a0af74-702e-4252-96b1-a79cbe43c740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8507a6-160d-444e-ab07-db5d8f979909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d406f6-22bc-4da1-b45e-560f35117a89",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74adf62-cf50-43dd-aaef-c9c10ffe4d2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a443a1d7-bbe9-49ec-ab6b-b4142df1cd03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf84aff6-65fe-4e10-8012-a6c4e41ebdb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c075014-3dd2-4e16-8e17-f6e9af7a8cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da4de00-48cc-4417-be27-e25d0edd7aed",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9a4b74-89b1-4d2e-9df4-fcb70cfbef2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c94b26eb-5a5c-40a3-8bdc-38b22d1622b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7101a6-4060-4403-879f-94f1c45d4aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a953611-e0d3-48f2-8e92-10a204b977fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b429e47-50e8-4277-b77d-bf88b453dcc2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e424af2-b051-4417-93df-74f788c96ddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f12d790-db19-4dd5-9fc1-8ebe11f2a340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3660ca2c-c8e0-4e2b-b18d-28e916a797dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ecae29-f80f-4ddd-a9d3-b8571a6de101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c13951-b377-4efe-9b37-b4a8bff3240b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3748dd2-4e6b-4614-9eea-14edd8fc136e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0033a4e4-67d3-451c-853a-6f83f8dba26c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29b9430-2882-4b54-9f05-d2364b0079f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7755e451-cf47-419c-8101-d332cf7f6fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ed1c2c-1656-48c7-acfe-27ec17baaabb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bba26c-12fd-4916-84a0-aceac7a59cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32f67d9d-920b-4c7a-a7ed-4963cec3e80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce456971-153f-4590-97cb-b77222be0c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba1b826-fb0c-495e-86a3-f0ae3d2f11ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283acd5b-3543-4eb9-927e-dca7e412613f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe473c4-ff7c-4dbd-a4b3-42f128afcab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "676bc143-25cc-499a-be73-1233b4f80c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e814e43c-a932-43cf-b5c0-36ff22114c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ae7a43-d6a1-4bf8-a21f-2cd446f50cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d767f8-c6c2-4904-9940-228ec3a4034d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76715115-7b8f-4b39-b66c-1a584cb6374f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14b42b88-f5e4-4d63-908d-b4c6d2eee7a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4039d9f9-8e8e-436f-ad1a-8954e65b5c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef09af3-3612-42c8-b85c-a149bb5e1ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930ad30e-f575-4bd2-9f02-aff69f693279",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5307dcce-33d6-442c-948f-8f602f1f19c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c44852f-c78f-4a89-bc25-9fb0d9531dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9106b3b2-a1af-496f-9193-ce0a8c0bbb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a1de3b-b54e-4156-9377-dc6539ca8357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316ffd5d-914e-4ed1-b7a6-ff1ffd86c14f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff348b0f-a5ce-4cd0-92c1-0f6d51d81cf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba96d5cf-dea4-47a9-ba8c-1c2048abed40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ad198b-a785-4907-a92d-80ce5a677436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095f8600-55ca-4952-baf4-7428b4554525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8deed9b-0fd2-479c-bfd4-baf2041d979a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a96a25c-b38d-47a1-afa2-9660516e6e02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84aae32b-72c9-4d59-949e-1e41445f9c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296a6f7c-6be2-4398-988e-9559555f875a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee256b27-78f2-4065-aba8-a6be148fe020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91e55e8-7b42-4f7f-b141-370368951321",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd213ab3-0f98-4d7f-b138-ce66ceea1cb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef83c05-866d-4753-a717-15785f5eecac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf039aad-252a-43f2-90e4-38b6b2c3c40b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc5e3a4-21ad-4110-935e-42c2a581c523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b60f625-79e0-4451-b2c4-e4e309214117",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93dd3228-39b1-4725-ac35-beb8fee2283b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50798e1f-c92b-4ee0-a2d6-d798ad462bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc5c1d6-2429-44ef-ad96-fd23995c99b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369ed14f-2f28-4970-9950-d2adcaa0438a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3295f1-80b4-4e89-a6e3-f874b96c45d3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c70767-a287-4d33-9ae8-989b032118a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57ab7d82-6d88-4f0b-bb80-9b8fefafa5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a762a7e2-60c6-404a-8370-fecda64145b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b9b71a-d999-4e74-a6d1-c7b3fa295a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac888fb-7345-4e55-b98f-9bd94597cf09",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28999406-5ba8-4c93-a482-2c27cb334a33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d37fb867-03bb-410a-a7e2-dbcd1c1e9623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a815cb4a-c37f-4d1c-aff1-e29f4fefd79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8db6ab-b3ec-4e57-ab8b-8eb8dc868e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426ae8dc-6ee2-4b92-9c7f-4b10bb7057c1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf5dc94-bff1-4663-a063-612d815e83be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8878c672-8b4d-4e61-b454-e2b18c3ff676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9255d924-2ee6-4c14-9674-c34061ffffca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc887fd6-3a35-488c-9a19-84b0cac9cea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6f2cf0-f33c-4c79-b066-79196c3e1875",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7573a2-a06b-47c3-99c8-a600da2ff1c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "419acfd8-0a63-4e87-be83-79eb839f243c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfeb621-5897-488e-80b2-bdfb182cddb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcd4141-a69b-4240-a374-670975314d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5509cef6-4a43-4bcd-b6d8-e4700a9dd9e8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deafccc6-f231-4e9b-b492-f43dc5c96bb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61eb9a9a-f735-4b0e-b478-8977c3dc59dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8c5793-15be-4c08-9c7f-995ce15c9f99",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a6dc0e-d1d6-46de-b9b7-1587616f33cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081aaf58-ba1d-47e3-8ae0-6669a72bf69f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0ecdfb-5a82-47af-9135-40786c9adcb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb1ad5f7-76de-4d0f-8a32-2eb5f9456077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbf591d-ffb6-420f-9300-1c1c27660d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5532e124-0e4b-4f9e-8aae-d63944aba07d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70c63383-0f2e-480c-b8f3-518cbef9e5aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "634c16b2-55f3-45ef-93f9-fd96e4410b36"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64666a69-90e8-40e6-a971-d16f4bd72134",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dfd65235-26d6-4526-b178-6342879e4e6d"
                    }
                  }
                ]
              },
              {
                "id": "0355d9ef-1638-43f4-b01c-484c71866ecd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65f22a84-d968-42f6-a8a4-45c05930b4fe",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb907f82-fd3c-49d7-9332-62ef0d82bba7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d26fc443-2681-4e02-bec8-350c530c2364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d69b9a-7ede-46ee-95a8-4e5d1b92227e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c560ecd2-33ba-49c4-b78f-febe9b55afd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9993c2e6-6df0-4e18-b358-c57e322305e9",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aba41ae-9787-4aeb-aa97-a903faa08fa3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a1e9eb8b-8f13-4db3-915a-01ac819f9b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b225fca-7c5e-4e51-a240-2a7a172b4f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "928b7e1d-bb09-4c5f-847b-c1085d038b8d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d40157b-4dd9-4bfa-aef9-3e555bde6c06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32d10015-0e7b-43d0-9e4e-ef47a13e1fb9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6a2e80f-3165-4392-a861-0eeb80817d95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "731dde79-c5bd-49a6-9f38-af985ceca22b"
                    }
                  }
                ]
              },
              {
                "id": "fd4669eb-2d53-4f4d-8d3e-44e527a38a35",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d2e83e9d-8d6a-4115-bd08-56e92dc9b36d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ee73d4-cfe2-4394-a47d-2a41eff8bcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "06dfa308-348c-42cc-b1aa-b43e08ac158b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3009245-db22-4645-a5bd-8f9fe48227ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4476b586-7a15-4ce7-b0a1-db170159a8a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a0a35489-0aab-4414-a069-bf952a9307b5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e52be8e6-3341-4834-bbab-495865cd2511",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "038c22e4-ad79-4c82-a836-9b7a809a25cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1a61b9b5-6c10-4c87-9bd8-753f7c1f342c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ce5a41e-2b3f-418d-a76d-f732f9ea251a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b8485ca-4de8-4cd3-8c06-102a8df1db3b"
                    }
                  }
                ]
              },
              {
                "id": "40a26e18-d96b-4c5c-81bd-372da235d787",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5a9d3a0-d9b0-46b6-949c-e7ed96cc5b5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4a12bc1f-4bce-41c3-a102-4afec634259c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b389728a-c586-49c8-a9eb-a58a96ccef0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6a9272b-bac2-4eb6-bc42-e81a8f9cad21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "937faad5-19fd-4aa2-85e6-38cecb973182",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e53e26c4-1408-4664-9ead-5083df5afde6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ccf4e970-2116-4afa-8377-02fc0045e630",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df8975e2-1b96-4848-b32d-95de72ff90d1"
            }
          }
        ]
      },
      {
        "id": "84133306-0454-4117-9a34-393318168c36",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2ce82ec2-e599-48a1-8e6d-4b05f925bfb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9540408c-74de-46cc-b409-0627b58639ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e94dd343-5687-49f7-80d2-a970fe48c21c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba7632c-2dd2-412b-a861-e1e85a59a80b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e2e80e2d-170f-45d9-85f4-efbcab7d0cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca84a4dc-1e70-4be0-b69e-4a7a2a560aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f7f81bf-4513-4744-b2db-bd2f4405c001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7bc312-5a0a-4ee1-bb24-39ee6d0198a9",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9fc85c-6cfe-4f7b-b2b8-671ca424588d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "eb423a00-4a63-4105-aa77-57003051a166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8758e665-4dfa-40b0-9493-fd6041a365a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99474785-12e0-440b-8474-ae370a247b8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36f790fd-c944-4ebd-951a-2580025d86a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eba38b01-76ae-4b00-a1bd-3d294141689d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03b39776-34f1-4e1b-9879-c0f848e16f62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6275db70-98b4-41a1-b7ed-22ee83925784"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58a6a912-c05a-4f2c-b697-9014fe506cdf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4663a1b9-ec6c-4602-8022-f39764f037f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bee00a45-38f6-433a-999c-aad152d7932c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4060a4f-c1b0-4d02-a6f0-06c48606f2b5"
            }
          }
        ]
      },
      {
        "id": "0f5d8143-231f-4f06-8b19-1877d2897853",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4c74e52b-2de7-433e-a66f-789ef984e6fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfa12b3f-a911-4837-a1b1-2db3da980d80",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f3eb3eca-8b64-4a13-b6c1-51b2dcebb297",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b981e05d-4ed2-45d4-960b-ca22820a0781",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "450390df-b9f6-4ea3-b556-17a4af68f1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bad005-00ae-4d37-b655-40256c0b26ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70eb556a-1f09-4972-99d9-677a3f9e4efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aef6d4e-15eb-4988-9114-603cd140f96f",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f25312-98f4-4ec3-8601-9e3f26737caf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f78581-a4bb-40e9-a32b-7dc7c20da2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b6727a-8d33-4e38-9d56-f2dc4dc35760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24b17f64-1d4f-4c44-96a8-17ae859e0a8d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de797dac-f21c-4357-9779-e56a438c3aa3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b1a1d71-2ad6-47e0-8366-c77bc1c7c49f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f0002eb-1b7a-490c-a4a3-ff4594c8ebc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71f66a0f-96dd-473b-b357-a0ba57203783"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cadd5cef-aee0-42d2-ba43-9f1706480fc4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e912f293-1559-42ed-9380-2322929e4b48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f157928-fc23-4753-a97d-b41b07927026",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c199f9a-8745-4944-8bc1-0ca663937c92"
            }
          }
        ]
      },
      {
        "id": "9c807c77-c466-4a43-81a4-da484e48b4df",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d64165a6-4403-4552-9be5-36c645f64311",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb7b03dc-2d4d-4c71-a96e-c5222dbde963",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61aa8ebe-fd63-41cf-9fab-98185cfd5daf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71e3513-0b46-411e-b9c6-a944203606f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53b21c8e-4a2f-42cf-97e3-12005c4529aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b553d4-8996-45fc-b80c-c31444cf6f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a8db02a-749f-47a5-861a-458f5313c930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca37a97a-08bc-49eb-8c88-c4ead14b15e5",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e2a4af-b78a-4680-a888-54a3f1d18ce9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "50bea46d-968a-4e54-aabc-7b54c1e23400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131ab4bd-85e9-440b-824a-8c06217ad124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99e9873b-8cba-4e7b-8b4a-22b52bdc851e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcce3f39-f4d3-43b1-8697-9fdf68888a26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbf8e1d8-642f-4652-8763-db0e63912a18"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29c391be-3e25-47f7-9f0b-a1af479c5279",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e71c35c-0571-4318-817b-f58435d16925"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60d6e9ad-9999-401a-bba4-0db806f4c04d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ad10be66-49eb-4802-ab26-0fb6224de384"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8b8ccb0-c85f-4c2a-9056-d7200900bf8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b1cbbea-721b-49a5-b7a1-1a546c0c3cbb"
            }
          }
        ]
      },
      {
        "id": "dbaee9e3-6768-4099-a923-35855420c1f3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee670cac-0975-430c-b67d-f9339086d3ee",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f94dd8c-3924-4ce4-b59c-9f4df358b03c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5d4b3fb0-637b-4dc2-bf95-466d03ab7fcf",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a52740ff-8f50-4572-aad2-26e40d074cf9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fcf9d642-2d3e-49b0-8d13-779e3b0c4a97",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 721.7423076923077,
      "responseMin": 6,
      "responseMax": 9450,
      "responseSd": 839.6234314688917,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679272869489,
      "completed": 1679273069685
    },
    "executions": [
      {
        "id": "7d55b290-3f53-4bb3-9709-25a125568b45",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "472bced3-b8fa-42a1-a43f-95ec31edf8f1",
          "httpRequestId": "966264f0-32d0-42f8-8ae7-63fcd7e630a8"
        },
        "item": {
          "id": "7d55b290-3f53-4bb3-9709-25a125568b45",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "61bc6aea-6a29-4b05-a2cb-348003903efe",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "ec805acf-ea9f-427f-ab4f-eec1b25f4e63",
        "cursor": {
          "ref": "ab753b99-21d3-4105-b0c4-c86159bf67f5",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9014e485-c95c-49e0-be11-fc32afa60d26"
        },
        "item": {
          "id": "ec805acf-ea9f-427f-ab4f-eec1b25f4e63",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e32c6fb9-803e-47cc-b82d-363d9c8a0c7e",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "59b48f84-6236-4a9a-9681-1b13604bcf9b",
        "cursor": {
          "ref": "1a90570f-1446-429b-ba77-a55171e6f523",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d16f99dd-c629-4a2b-a97f-f29b8f1b16df"
        },
        "item": {
          "id": "59b48f84-6236-4a9a-9681-1b13604bcf9b",
          "name": "did_json"
        },
        "response": {
          "id": "b85f5718-8ca8-45fc-9fe6-7b6f70375a74",
          "status": "OK",
          "code": 200,
          "responseTime": 1358,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0882e69f-a915-44de-b209-8d2ec28d2fc9",
        "cursor": {
          "ref": "c21263c0-b516-4936-939e-9cc78669345d",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "28c30d1b-af7a-45a2-b323-88b5ae1776b9"
        },
        "item": {
          "id": "0882e69f-a915-44de-b209-8d2ec28d2fc9",
          "name": "did:invalid"
        },
        "response": {
          "id": "d0df91ea-e96d-44a8-a3b4-abbbeac8068e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1160,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0882e69f-a915-44de-b209-8d2ec28d2fc9",
        "cursor": {
          "ref": "c21263c0-b516-4936-939e-9cc78669345d",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "28c30d1b-af7a-45a2-b323-88b5ae1776b9"
        },
        "item": {
          "id": "0882e69f-a915-44de-b209-8d2ec28d2fc9",
          "name": "did:invalid"
        },
        "response": {
          "id": "d0df91ea-e96d-44a8-a3b4-abbbeac8068e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1160,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a12cb5f-28ef-4a47-a3c3-cd7f957a9b3f",
        "cursor": {
          "ref": "372d06a5-ca53-4ab3-9ddf-45cfed12a3ca",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "20e86746-b55f-4bba-af95-fa16e366ad42"
        },
        "item": {
          "id": "5a12cb5f-28ef-4a47-a3c3-cd7f957a9b3f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "077a93e1-a8dc-46c8-9d87-7e028e3ec079",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1183,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5046bb40-c8e3-4ea7-8e8d-f6156a76a9e2",
        "cursor": {
          "ref": "14bfbfb7-d345-41f5-a083-0a909e669a5a",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "acd7ea31-895f-46ee-bfeb-37fcdbd8f1d0"
        },
        "item": {
          "id": "5046bb40-c8e3-4ea7-8e8d-f6156a76a9e2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "03be74f1-5ff7-441b-9323-2ef4da98a4bd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 681,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb98da3-13df-4648-b451-c91abbf85edb",
        "cursor": {
          "ref": "a31d39f1-0036-4846-9ca3-49d6a090c7b2",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0c9c1e32-6251-4be0-a4a7-162d7a6f2e95"
        },
        "item": {
          "id": "fbb98da3-13df-4648-b451-c91abbf85edb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8d9dfd7b-950b-43f6-bdb8-b031e2703796",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f75395e-0b8c-4fed-afdd-d8fffa1372ce",
        "cursor": {
          "ref": "3c8bf8f2-17f6-4f99-8235-1a887074842b",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bb411497-e92f-4a1b-a82e-0d60f99013a4"
        },
        "item": {
          "id": "1f75395e-0b8c-4fed-afdd-d8fffa1372ce",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "bbae12a9-79a9-49ee-95e0-1cdefe86bc4a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 623,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f75395e-0b8c-4fed-afdd-d8fffa1372ce",
        "cursor": {
          "ref": "3c8bf8f2-17f6-4f99-8235-1a887074842b",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bb411497-e92f-4a1b-a82e-0d60f99013a4"
        },
        "item": {
          "id": "1f75395e-0b8c-4fed-afdd-d8fffa1372ce",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "bbae12a9-79a9-49ee-95e0-1cdefe86bc4a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 623,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c22e2ba-9dcf-4406-abb5-7d1ccddf268b",
        "cursor": {
          "ref": "0b5b769f-5890-4a3e-9004-b7239276e614",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6a49165d-4c4d-4a66-b29c-aedfb73b6be0"
        },
        "item": {
          "id": "8c22e2ba-9dcf-4406-abb5-7d1ccddf268b",
          "name": "identifiers"
        },
        "response": {
          "id": "d2ddd9b3-3292-47c2-a72b-1d448bc05d1c",
          "status": "OK",
          "code": 200,
          "responseTime": 1058,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d8b404-01c7-4035-a3b3-ab85525332a6",
        "cursor": {
          "ref": "5ba19407-bea3-4379-873a-35d7681516d4",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0eda9971-9689-4808-8877-531946222508"
        },
        "item": {
          "id": "74d8b404-01c7-4035-a3b3-ab85525332a6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1d2814e8-9416-4ffa-93cc-2965723b64c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d8b404-01c7-4035-a3b3-ab85525332a6",
        "cursor": {
          "ref": "5ba19407-bea3-4379-873a-35d7681516d4",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0eda9971-9689-4808-8877-531946222508"
        },
        "item": {
          "id": "74d8b404-01c7-4035-a3b3-ab85525332a6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1d2814e8-9416-4ffa-93cc-2965723b64c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee81316-37e4-4972-abf4-9334b407a46e",
        "cursor": {
          "ref": "c1e12b67-2a21-451e-98d2-7e3988f49584",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f261a920-4c4c-41c7-bbc0-57f662859a99"
        },
        "item": {
          "id": "cee81316-37e4-4972-abf4-9334b407a46e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "de968a67-0d3f-4458-b44e-2caeee706e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc5ebd0-434b-49b3-b831-74346f7a9e76",
        "cursor": {
          "ref": "634964a5-022f-492b-9a3d-23b935e00ae4",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b6426fc4-866b-4c62-9e8b-ebdf460a60e3"
        },
        "item": {
          "id": "8cc5ebd0-434b-49b3-b831-74346f7a9e76",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2cb082e5-31e9-4b2f-b5b8-fa9c025b2103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c84b207-0a41-4f91-a641-276204d8b006",
        "cursor": {
          "ref": "b6b6d791-7e29-4b97-a681-8b8bf446fd16",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7e7f92cf-37fd-4ec4-93b4-cb6c1071d89f"
        },
        "item": {
          "id": "6c84b207-0a41-4f91-a641-276204d8b006",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "22d9839e-cb6b-4ef3-ad78-4dfd2541d8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f04c9a5-67e5-4114-a2f3-694a405f4825",
        "cursor": {
          "ref": "5efbe9ae-0be9-4a4a-a2d8-6ccddbcd7a1b",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6e81c569-fa90-4af6-a039-1ffaa3119f3b"
        },
        "item": {
          "id": "0f04c9a5-67e5-4114-a2f3-694a405f4825",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "89434aa4-452f-40bf-9ec8-af919d5d9d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b27a99-3c70-4686-b78b-7d1d4f554c44",
        "cursor": {
          "ref": "4a96f5c2-a769-42b5-9d73-f3ab24fbc8df",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "318c56c1-8338-4981-aded-b267ca8bf2ff"
        },
        "item": {
          "id": "25b27a99-3c70-4686-b78b-7d1d4f554c44",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b3a555d4-dfe4-4bb3-a564-4b4420bcb09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af4bf8f-798a-4eda-abf3-0df54d421646",
        "cursor": {
          "ref": "6daa48e1-f666-4830-b9a7-8c07a4d54556",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0ab4bd52-d61f-423d-8cec-1372c92387a4"
        },
        "item": {
          "id": "4af4bf8f-798a-4eda-abf3-0df54d421646",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b54f31d2-6436-461e-9074-2729812619e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7549ff-efa7-4dfa-a125-6493c80ac9c0",
        "cursor": {
          "ref": "8d664803-f4cd-470d-8419-ad18d259b58c",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a185b688-c2da-483e-9cb0-f3bcaba8180d"
        },
        "item": {
          "id": "ee7549ff-efa7-4dfa-a125-6493c80ac9c0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f75d9b49-aa07-4502-aae5-bb5ea48f8f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecce9303-05d8-47b6-9eb2-8d492d190c62",
        "cursor": {
          "ref": "054fae32-1446-4d90-a8a6-75e0df37a64a",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5d90a671-60b9-4e01-b849-0b1a8322e560"
        },
        "item": {
          "id": "ecce9303-05d8-47b6-9eb2-8d492d190c62",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3af482fa-7d2a-4104-8a2b-b16f540a273a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3986d3d-6781-4c9a-b9d3-75a4e8fa2c38",
        "cursor": {
          "ref": "c6d37c24-3a6f-405f-b2fe-49e091931d7d",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1938cc2c-1b14-424a-9132-804dc0182130"
        },
        "item": {
          "id": "d3986d3d-6781-4c9a-b9d3-75a4e8fa2c38",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "99223cc0-d5b3-4428-bf97-33c9bbbc4036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b309bf22-121f-410c-a295-bb3de09ff07f",
        "cursor": {
          "ref": "5e7ac9b2-cf4e-4cf3-9125-e388edfb5208",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a7062cc4-991f-4d6a-8560-1366f1d007e2"
        },
        "item": {
          "id": "b309bf22-121f-410c-a295-bb3de09ff07f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b418a27f-478d-4b64-981b-3b8603090068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e87ae56-5539-45f4-b1d1-bed17839d75b",
        "cursor": {
          "ref": "c3084958-6854-42b2-bc4b-0686b1a70b59",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b50f447c-db42-4d0d-a2f3-6288f40604ce"
        },
        "item": {
          "id": "2e87ae56-5539-45f4-b1d1-bed17839d75b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d91def5d-6bee-43fa-95fa-0a689f889982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5790bb-7114-4aca-98de-094c3b0797ab",
        "cursor": {
          "ref": "16dcfec6-1a99-4b49-bc6e-0f1c15c55a46",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "56b9bef7-e6e3-4bdd-87fa-8281c1b5e0e4"
        },
        "item": {
          "id": "5b5790bb-7114-4aca-98de-094c3b0797ab",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8471b027-34cc-4333-9275-391f5914c69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2375c951-ac90-4b56-a903-9a0a0f8a04e1",
        "cursor": {
          "ref": "c4906891-b0ea-4142-a509-9ac87fc85b12",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9c19a0c8-6333-414e-a3d3-90b381c8a385"
        },
        "item": {
          "id": "2375c951-ac90-4b56-a903-9a0a0f8a04e1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3868e889-3164-4685-8382-61423c5606dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332bf45a-a9eb-42c5-ac73-8fefd5538c7f",
        "cursor": {
          "ref": "2767d37b-235b-4a04-9f68-bad1496165d1",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e52c85d3-c554-4075-8108-c20db0647808"
        },
        "item": {
          "id": "332bf45a-a9eb-42c5-ac73-8fefd5538c7f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7e2acf3f-8d54-4896-8ed7-959d9c881a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae5721c-6063-4b92-b672-980ab4af09c9",
        "cursor": {
          "ref": "12bdcce1-4c88-40c6-9f94-7433bb88ce3d",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3f225338-1eeb-4c6c-bd10-3ff0fd8fb6b3"
        },
        "item": {
          "id": "fae5721c-6063-4b92-b672-980ab4af09c9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "473ca88e-9ed5-47da-b3e6-6570af7f279f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba996fb-aef4-418c-b0e9-d4b0396473f2",
        "cursor": {
          "ref": "ca5099a4-6515-4f5d-a299-4b5cff4cdd13",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "901d5e55-b7cc-4558-af6b-77375970b0b0"
        },
        "item": {
          "id": "eba996fb-aef4-418c-b0e9-d4b0396473f2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "74e90944-d9cd-4c03-96d6-ee4e539ffbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd9853f-1473-44af-9a5c-836fd4aef3f5",
        "cursor": {
          "ref": "f4469e81-f65e-437f-848e-e1c80a94f8fb",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c9e79d68-e115-44d8-a8b2-39e40668eccc"
        },
        "item": {
          "id": "9cd9853f-1473-44af-9a5c-836fd4aef3f5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d1fb4c01-e0b0-4c07-ac7c-f13e6cf2b84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6e8abc-f368-4c80-800f-40219d3739f7",
        "cursor": {
          "ref": "10520c5d-2b93-412a-9cf9-cc6339aba8ea",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "635c0f1a-4e89-44f8-9f2a-34032118c761"
        },
        "item": {
          "id": "bc6e8abc-f368-4c80-800f-40219d3739f7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8aeee5fc-e345-47f6-88f6-94402895afa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db06f1f0-970c-4930-8db6-3dbc41195b2c",
        "cursor": {
          "ref": "b9376c37-60bc-4461-9ba8-8ac6e5c7ef29",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2ba6ac46-f115-4418-879a-aab426fbac3c"
        },
        "item": {
          "id": "db06f1f0-970c-4930-8db6-3dbc41195b2c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "175a3f7b-a838-4705-850e-131f97d7562a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba7163a-ee11-435f-9fd9-2d83bce1633f",
        "cursor": {
          "ref": "38fd1a05-ae11-4d75-a285-d57240578a11",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f7ffbfee-d03e-4011-8334-4af63cb8da23"
        },
        "item": {
          "id": "fba7163a-ee11-435f-9fd9-2d83bce1633f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6615356e-8590-46b2-9358-728e4a7dab49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a68991-238f-4e8d-bbdb-26c9a9eb186e",
        "cursor": {
          "ref": "bd6fc3f9-8818-4fd4-ae41-e689a5790ed9",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3c9e8fff-3c8c-4649-a484-c5ba1700f79e"
        },
        "item": {
          "id": "b7a68991-238f-4e8d-bbdb-26c9a9eb186e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fb940431-c548-4060-b32b-92f33ed103f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5102e8-c9c7-4561-b4fd-7380e52ef41c",
        "cursor": {
          "ref": "7b8ca0f8-8dab-4685-b232-69fabb172b50",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f6f27d97-0a3a-4892-8c50-043be37ab603"
        },
        "item": {
          "id": "ce5102e8-c9c7-4561-b4fd-7380e52ef41c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e6253542-2b7e-420f-aa73-b386236e4e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a010b6-d347-4d1c-bc35-1a506d697237",
        "cursor": {
          "ref": "b3bd9c20-a391-44fa-b964-3ee81e43427d",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ca3a5891-da8d-45fb-a662-e8452c6b85bc"
        },
        "item": {
          "id": "84a010b6-d347-4d1c-bc35-1a506d697237",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "682f8c2b-7492-404c-a7bc-a7a280446534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ea8763-be53-4a91-be55-daa6427bca48",
        "cursor": {
          "ref": "a5fea33b-1fb7-4017-aa01-0d762873b467",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6332f184-b260-4904-a57f-a3b55674eb80"
        },
        "item": {
          "id": "40ea8763-be53-4a91-be55-daa6427bca48",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "152c54dd-2818-4f06-af6f-bc1e8c4a8910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597009f7-534a-4620-9534-72f73f81f3cb",
        "cursor": {
          "ref": "c83c4994-6baf-4db7-b1f6-3ce09f5f3faf",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7ce794cf-f034-4fa9-909e-6e199a9d166e"
        },
        "item": {
          "id": "597009f7-534a-4620-9534-72f73f81f3cb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6ed7b573-62ad-452d-bb38-c31161756a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c617cc-ea37-41be-9a0a-e66538ddf3fc",
        "cursor": {
          "ref": "7856d374-13f4-46e7-96b4-1f405784f8f6",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0a539760-2bf8-49d9-9476-42b99a1fb4f9"
        },
        "item": {
          "id": "c5c617cc-ea37-41be-9a0a-e66538ddf3fc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "df347e60-a286-4f97-a634-b469302c3e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5f22cd-8aad-43ee-9d39-ece5d9c036ae",
        "cursor": {
          "ref": "f17441b1-1b0d-43eb-bd11-f47f63949639",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3e3d5a01-ba44-421f-a0a6-f8ea03458eba"
        },
        "item": {
          "id": "fe5f22cd-8aad-43ee-9d39-ece5d9c036ae",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2d41a008-f3be-449d-8dcc-51dfe993fd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8fb2f9-90e9-45e7-acc5-51246a0a7ccb",
        "cursor": {
          "ref": "0f70a1ba-e653-4261-9ab0-eecadb6a16aa",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c6831b14-dbee-4294-83a9-82ef29ec0357"
        },
        "item": {
          "id": "ba8fb2f9-90e9-45e7-acc5-51246a0a7ccb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "eb941f81-13f2-4015-81e6-e2c8e2b34581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5869c8-5055-4015-a50d-2efa92b4aefa",
        "cursor": {
          "ref": "1405a28d-17a0-4645-a6b6-e8e3ca1d6dad",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "39a94cd4-7b97-4ec9-aad9-7c6be1540580"
        },
        "item": {
          "id": "fe5869c8-5055-4015-a50d-2efa92b4aefa",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "448e3725-3500-4fc3-8ae7-8881049b0be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036a66ea-3056-48f3-9087-52a8d85c6cec",
        "cursor": {
          "ref": "127d835c-01b2-4a50-837d-afdfca4b15c5",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e4f2a6eb-347b-4d2e-a08a-1060aa94980a"
        },
        "item": {
          "id": "036a66ea-3056-48f3-9087-52a8d85c6cec",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "db832c94-46e9-4e51-805c-3420e29a9a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e63a22-cfbe-44ab-83a0-88aa638f0be8",
        "cursor": {
          "ref": "052e0df2-1d84-4a8f-9881-5a21a4f40272",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fa7cb7c5-0d5d-4f32-aafa-112f19261491"
        },
        "item": {
          "id": "d5e63a22-cfbe-44ab-83a0-88aa638f0be8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ad39efb1-4ad2-46c6-8983-7a68e59cf177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e1f9a6-a5f5-4c8e-aafb-597b972626fe",
        "cursor": {
          "ref": "cc2d397b-7545-4a9a-8a41-b94d160fc860",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b136c50e-0569-48a0-8c70-84e044b0d137"
        },
        "item": {
          "id": "a4e1f9a6-a5f5-4c8e-aafb-597b972626fe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "df83c397-f1ee-4149-9686-2714944f99ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec573b6-d7c4-4077-8800-f56594beefb1",
        "cursor": {
          "ref": "84b538df-b22b-4250-a2e4-baec216f5890",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fe479211-c281-4e4c-a2a6-982a7ff530f2"
        },
        "item": {
          "id": "0ec573b6-d7c4-4077-8800-f56594beefb1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "787dc57e-9081-4412-bafe-0ef5a6a3ee75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a885258-de82-4b0c-82c5-890333e53ed9",
        "cursor": {
          "ref": "a36ed259-9a72-48ec-909b-289e8a204eae",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e7bfad98-ba65-4a61-8c82-598d32595f26"
        },
        "item": {
          "id": "6a885258-de82-4b0c-82c5-890333e53ed9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b65bc435-4e87-4b64-8c52-37b1d74edcd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1111,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6640b83e-5805-481e-9c6e-723c2ba73c3a",
        "cursor": {
          "ref": "00eed043-be46-42b6-9980-308ae244412c",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "257a40b2-2bae-42bf-b63c-34172bbcd8f6"
        },
        "item": {
          "id": "6640b83e-5805-481e-9c6e-723c2ba73c3a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "19a11b3c-bd01-4cb8-950f-dd837763a6a2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1538,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4e9a07-1459-445d-8ebb-97c86db16446",
        "cursor": {
          "ref": "70e8fea2-cf74-40b3-9906-6092ddb15269",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "aee908df-763b-4019-9d89-54de80da3fce"
        },
        "item": {
          "id": "7b4e9a07-1459-445d-8ebb-97c86db16446",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a3588b0f-725b-4783-8fa2-cfc4fccbb042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1571,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596c91d5-ae00-44e8-a131-b53222ad0c5a",
        "cursor": {
          "ref": "c8f144ec-2448-4c5b-a0a9-55c3f77c8ea1",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "46ccd70b-886f-4191-b627-6beef1da1b36"
        },
        "item": {
          "id": "596c91d5-ae00-44e8-a131-b53222ad0c5a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5f58da28-e67c-4f77-a693-cf635cadd88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430fd0f5-ad95-4217-905c-69fd2e4a999d",
        "cursor": {
          "ref": "ffcd7ea3-52ae-49df-9fdd-e2f00a771a8f",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5a3958dc-081e-4e89-8049-88e81e5e7511"
        },
        "item": {
          "id": "430fd0f5-ad95-4217-905c-69fd2e4a999d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "50f50f7c-50e1-4ed5-810f-79536c93e265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c28762-35e0-4c9c-882c-7f1dfb804d9e",
        "cursor": {
          "ref": "57990a60-37ff-44f3-bd09-32ed4cd48f7e",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c61a4a1e-32fa-495d-8e1a-f836ee4db201"
        },
        "item": {
          "id": "b7c28762-35e0-4c9c-882c-7f1dfb804d9e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "301d5e0b-6731-43ee-8a05-0f6a19ea214c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb7265b-6831-41f6-a28f-60d35e3434e5",
        "cursor": {
          "ref": "e7bc4862-9535-431f-9fc0-b8012caa59c9",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "25a74afd-7103-4a30-96d8-cb5a959cb065"
        },
        "item": {
          "id": "fbb7265b-6831-41f6-a28f-60d35e3434e5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "26112bea-0568-4fc2-8470-a6bbcdc87959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a110e404-89b6-49cf-a3cf-08e8c3b4ce40",
        "cursor": {
          "ref": "1442edce-dbfc-4144-81f2-9e64a8c25587",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ee824273-b370-4c9b-8dd4-81f5b9e7faff"
        },
        "item": {
          "id": "a110e404-89b6-49cf-a3cf-08e8c3b4ce40",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ea151cfe-72fc-4c13-82d7-4175356a4852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b006b5-e698-4bff-8565-e3b424c7c977",
        "cursor": {
          "ref": "8a85148d-f46a-4d85-bc66-f6b501932331",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2b3972da-2566-40b5-9fe4-1e289462cb40"
        },
        "item": {
          "id": "99b006b5-e698-4bff-8565-e3b424c7c977",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d9120c6d-dc11-45f7-a5cd-000fabe3aa1d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 753,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b016b8-ae08-4e17-a577-4e50aadb6bb9",
        "cursor": {
          "ref": "710d1660-f232-4669-8612-bca616489ca1",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0523cb21-4462-4b4b-96bb-53169658b53c"
        },
        "item": {
          "id": "f4b016b8-ae08-4e17-a577-4e50aadb6bb9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3a7c07bd-862f-4c33-bd57-67b64a898273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3b15c3-cc2e-46a8-a00e-8d2ce1aafdf1",
        "cursor": {
          "ref": "617a470b-7f40-415a-b16d-e127977c7ac7",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3b415c53-219c-45a6-a5dd-26913af600fd"
        },
        "item": {
          "id": "5b3b15c3-cc2e-46a8-a00e-8d2ce1aafdf1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3ee99a9c-21c4-49a2-a838-ebff07df24ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2cc54b-e009-434b-9017-67429c47e18e",
        "cursor": {
          "ref": "43dbdba9-a8fc-4f49-9b67-7c3d28f3891a",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "79f00bee-47a5-4fec-895b-bda486fb651a"
        },
        "item": {
          "id": "ae2cc54b-e009-434b-9017-67429c47e18e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6713ae69-2ef2-40c3-8d36-41badee65995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4331b8f5-4f96-47ca-a407-e46e8a93ee6f",
        "cursor": {
          "ref": "a5980656-dde0-4efd-8f8c-a7878cec3771",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "de0a5290-cadd-4d85-a163-8582e197685d"
        },
        "item": {
          "id": "4331b8f5-4f96-47ca-a407-e46e8a93ee6f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f22d7b7c-4ac9-40b8-a50f-4ddbffd9d0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea320f99-b678-47b0-a4c1-1b0238e1d006",
        "cursor": {
          "ref": "dc0c0a60-a47b-4d10-9b94-e57d877d780b",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a153fa9b-4c68-4dab-a25c-b94ced25a79b"
        },
        "item": {
          "id": "ea320f99-b678-47b0-a4c1-1b0238e1d006",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fd9bdd54-a28e-43fe-bfa5-e20ae2d80a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f660f5f9-be99-4485-a1d1-1b8d67ace883",
        "cursor": {
          "ref": "aa078728-92e0-495e-8185-1b73b8817aa6",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "904d091e-a3ed-45c1-84ca-2669bde57d69"
        },
        "item": {
          "id": "f660f5f9-be99-4485-a1d1-1b8d67ace883",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dc1a2ace-9dfd-41ad-b1d4-30ce9bb4401e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0502b3-41f8-4b66-a045-5706520cae99",
        "cursor": {
          "ref": "6d60dcc1-e980-4077-b3da-75aeb6fa5f47",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "71c70130-81db-435e-a8f7-0e46116371c3"
        },
        "item": {
          "id": "da0502b3-41f8-4b66-a045-5706520cae99",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "35ae1a38-ca1f-4119-8ff7-23b466749674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7b49d9-c036-4aa2-9329-024bf8438784",
        "cursor": {
          "ref": "02167018-509f-4925-afd3-767c67ed8899",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0348f8e0-ce72-4dcc-8b7f-02cf4064f570"
        },
        "item": {
          "id": "8d7b49d9-c036-4aa2-9329-024bf8438784",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cce2d107-09f3-44ce-bfe6-295f4c110fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0760e9-4856-45b6-b912-562e863f04e0",
        "cursor": {
          "ref": "609e9e2b-ace5-41f6-90f1-234e741056c1",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f60ea71c-437c-443c-9519-e81f425b212c"
        },
        "item": {
          "id": "6c0760e9-4856-45b6-b912-562e863f04e0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d6eff4b3-e7e7-4c27-8d74-c3f2249acc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354938b1-3a9d-4b0d-a34a-727430bdc13d",
        "cursor": {
          "ref": "7dae07cc-0830-4b3c-84b6-5deb0a90907e",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0f5369c6-5459-49e7-9d0b-e4c370be6656"
        },
        "item": {
          "id": "354938b1-3a9d-4b0d-a34a-727430bdc13d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "facccb86-cada-47dd-92d7-687e43dfbb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fd1114-8300-43e8-9015-1cc7422b8680",
        "cursor": {
          "ref": "6d30c846-e22e-4dab-87ba-771852f2982f",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "75c1eb61-4d02-4b14-991e-d59958781e12"
        },
        "item": {
          "id": "18fd1114-8300-43e8-9015-1cc7422b8680",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "68e9de04-a54a-40ee-8be4-16e271674ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e57b13-f61a-42fa-8aa1-35a539d68839",
        "cursor": {
          "ref": "79219bb8-5a57-4587-8e64-bd521b1463e9",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "edbee1ae-fa3b-41a9-ab0c-8ff71cec7876"
        },
        "item": {
          "id": "80e57b13-f61a-42fa-8aa1-35a539d68839",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "98bfb7fd-71c2-4226-917d-73e67766cb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a5b0f2-3618-4554-b391-02af3055857f",
        "cursor": {
          "ref": "fcca4587-49ff-4062-8d09-462724f5acee",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "003b6c63-6bde-4e71-8c48-7868a03b3035"
        },
        "item": {
          "id": "64a5b0f2-3618-4554-b391-02af3055857f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c5266867-0fe6-4e36-9c70-437a849365f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09847f7-7f46-44e2-8840-1831042634f2",
        "cursor": {
          "ref": "4ae757c1-fdea-43d4-8780-7d21ba781ef1",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7c02be47-34bd-42ac-9017-31e0dde74f51"
        },
        "item": {
          "id": "e09847f7-7f46-44e2-8840-1831042634f2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c10a49ce-02b5-4378-8898-6dbe67ad5a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7a054c-544b-46eb-b3a0-783d7d1c71ca",
        "cursor": {
          "ref": "9eb3ab40-ff9a-4866-928a-a7dae294ac34",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "400e1209-8557-4e56-9c29-d4d3f8295c57"
        },
        "item": {
          "id": "bd7a054c-544b-46eb-b3a0-783d7d1c71ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7a84e122-9d7a-4b21-932f-40d7d248e114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8a70fa-31aa-47d9-9eb0-610a55687204",
        "cursor": {
          "ref": "c32e15da-1895-4980-ba29-4a4c622dfcca",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0e0563c4-23fd-4fe1-a760-e82a8592767f"
        },
        "item": {
          "id": "4d8a70fa-31aa-47d9-9eb0-610a55687204",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2e5cfcdc-dcbb-411a-89b0-8a77fd60b5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9230c113-f8cc-4ec4-a5a1-24aadb3cab47",
        "cursor": {
          "ref": "55098453-475b-4ab2-8b2d-58519e90d909",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9646da2b-5c46-410b-8995-1c458465c814"
        },
        "item": {
          "id": "9230c113-f8cc-4ec4-a5a1-24aadb3cab47",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "155898a2-b466-4368-8cec-e20969e4b9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da29af14-dcf0-4e29-921f-ddd3c24e73c7",
        "cursor": {
          "ref": "3ae01ca6-5a5f-495e-8016-9a664c542923",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "61f54d3f-193a-45cb-ab5d-50ea35fb1205"
        },
        "item": {
          "id": "da29af14-dcf0-4e29-921f-ddd3c24e73c7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a9d66668-837c-4537-bc59-500231514057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6038c7de-314c-4038-93a1-3fc483efcb08",
        "cursor": {
          "ref": "d9df4d19-fe65-48eb-96f9-77f15cfc9b33",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "22981b35-586e-4983-bf41-27202df660fe"
        },
        "item": {
          "id": "6038c7de-314c-4038-93a1-3fc483efcb08",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "85b3be6b-72ad-4b04-9f04-403dcde8322b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85605b8d-e43b-4b12-b076-e598a8be35e4",
        "cursor": {
          "ref": "eea342f1-6e7f-415c-8e0b-83d795e2d812",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7a719081-158f-4a4a-8aea-9eb716c79f78"
        },
        "item": {
          "id": "85605b8d-e43b-4b12-b076-e598a8be35e4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8899aad9-27ae-4d2e-a9bd-6aac2b91919d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e227fe0-8f00-4b3a-aa54-43eacb61df3f",
        "cursor": {
          "ref": "caf4932b-d013-4e98-8c14-07507aeeadc8",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "739ca39a-33f4-4f55-ad10-628c6c4a8496"
        },
        "item": {
          "id": "3e227fe0-8f00-4b3a-aa54-43eacb61df3f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8d430845-fad0-4ff0-aea6-1a5a171a5f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 898,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21509ebf-b798-4399-91c2-e570339f36e2",
        "cursor": {
          "ref": "d8732243-31ac-407d-9b1a-0ed33f77ecb6",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9a41766b-937e-4dc0-a067-d583b18bd0fd"
        },
        "item": {
          "id": "21509ebf-b798-4399-91c2-e570339f36e2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bb4eb736-63ce-456e-968a-69008b789dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1230,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d2537d-cc8b-489d-9b9d-30801b9c54a4",
        "cursor": {
          "ref": "72b9c8fc-c27e-482f-aa1f-2bc9c45fed54",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "aea1d198-046d-494f-a894-f707fcaae731"
        },
        "item": {
          "id": "20d2537d-cc8b-489d-9b9d-30801b9c54a4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8152b86e-3b03-43aa-a83d-391fb7f0a51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1455,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cc6820-fdaa-4f89-af52-78bbce333f4b",
        "cursor": {
          "ref": "499444f0-423c-4cc2-ab8d-585f7b653111",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f177c76b-b2bb-447e-ac99-0e2d9dbc3ae6"
        },
        "item": {
          "id": "c9cc6820-fdaa-4f89-af52-78bbce333f4b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "88fd86e3-6d43-4971-bdc8-a6f2a5b403a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1708,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c05136b-12a1-4e25-9634-05fbe9025600",
        "cursor": {
          "ref": "e0f37a57-f6c4-4a48-bf04-2e4f3e9df051",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "59a93aed-179f-40c7-966b-f65bcb13624f"
        },
        "item": {
          "id": "1c05136b-12a1-4e25-9634-05fbe9025600",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5b9ced83-092c-46d1-8083-aa5c2eaacc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1404,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3e1213-6877-4cd4-867e-613206dcb4d0",
        "cursor": {
          "ref": "a71d386b-aca2-43f1-8b62-5613e5cd06ca",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "88142f3c-5cd6-439f-a743-6cc797d94f48"
        },
        "item": {
          "id": "4a3e1213-6877-4cd4-867e-613206dcb4d0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0d896a7b-f011-4352-baa6-d8cd6e76dfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 880,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b4fd9c-01d2-4694-ba92-876a6d7e93a0",
        "cursor": {
          "ref": "a207af72-e8ab-47d0-b6f3-57c74165fb0f",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "46bcf171-e286-40fc-a18a-c51d0023b634"
        },
        "item": {
          "id": "f1b4fd9c-01d2-4694-ba92-876a6d7e93a0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e20e1fa4-3b55-43ad-95fc-77c39f3b220e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da72ca30-e251-4a29-bb09-f49181bda2ab",
        "cursor": {
          "ref": "581df004-0666-4212-a7f6-c64f853cd96c",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fe124b2c-c1db-452c-b954-f3d447c45d1f"
        },
        "item": {
          "id": "da72ca30-e251-4a29-bb09-f49181bda2ab",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "82f120a3-3019-4b4a-9581-31bc09b363af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12c07ae-5af7-4a54-a544-587141934fb7",
        "cursor": {
          "ref": "7ab444a4-f642-4ff3-a099-f0b65c5074a5",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b54c658a-00ac-4955-991c-810714c0a43b"
        },
        "item": {
          "id": "e12c07ae-5af7-4a54-a544-587141934fb7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3662eae1-8923-45f8-bff1-082f9dac5554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3fa9f9-3ee2-433e-931d-36d129f50beb",
        "cursor": {
          "ref": "7d8c9909-cdd5-4f54-a59a-1dcb2aff0da9",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f3d42df1-349e-42f0-93ae-2a15f9747b44"
        },
        "item": {
          "id": "fc3fa9f9-3ee2-433e-931d-36d129f50beb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "92c6f5a2-8e78-4baa-a569-932a32ba8eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657fa3ac-2122-443e-b552-fd958c534123",
        "cursor": {
          "ref": "27ec81dc-ece7-4ecb-a5ab-4b4b2cfd0cbc",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e34518cb-ff49-4b6b-b747-c9018b0cf697"
        },
        "item": {
          "id": "657fa3ac-2122-443e-b552-fd958c534123",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "63143b4c-e7c6-4c01-9a6a-560028277b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393cabe9-aacf-4535-ada4-67a4e5b3ddad",
        "cursor": {
          "ref": "0dd39b5c-8410-49a3-98c7-0c41db4a75f9",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "efcd66cd-b9fc-4eac-9cc0-cee45b0bdc77"
        },
        "item": {
          "id": "393cabe9-aacf-4535-ada4-67a4e5b3ddad",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "83864853-0480-43b1-8f27-7e8b0f719673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef6bb7f-3056-47be-865e-1ed84d6d6e34",
        "cursor": {
          "ref": "3514cc60-11f3-4303-9897-7dc0c41c2e1f",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "32af8bfe-530c-4d1b-a65d-7d4914e5d0cd"
        },
        "item": {
          "id": "fef6bb7f-3056-47be-865e-1ed84d6d6e34",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c9a7f462-07ff-424b-a6c9-55512c870d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a5d7ef-a37a-441e-8ae2-fb55b5b2e0f3",
        "cursor": {
          "ref": "548f9052-4f66-4227-b413-9ccc07d3fd2d",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "521091ef-d2a9-46e7-8b13-e65296376d2e"
        },
        "item": {
          "id": "d1a5d7ef-a37a-441e-8ae2-fb55b5b2e0f3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5ffa8a2b-cb9b-4591-a27e-9255a2371e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d82592d-2969-4848-9043-1ec765b4e0f7",
        "cursor": {
          "ref": "1375238d-950b-4b04-8202-dcf11744a2e7",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0ac45b88-44c8-4ccb-ba69-6f440c3d0d4c"
        },
        "item": {
          "id": "1d82592d-2969-4848-9043-1ec765b4e0f7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0c657e29-6d10-4681-954b-587d5316e45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9dd106b-df64-4c9c-b941-766b357fc8ea",
        "cursor": {
          "ref": "5366c510-d9ba-4dc1-8991-d9d914c6b039",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c30b3616-6a12-488b-9542-de0f1db337a3"
        },
        "item": {
          "id": "b9dd106b-df64-4c9c-b941-766b357fc8ea",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8db8af07-06fa-44c7-b6c3-cb149c528271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dea1b41-3f49-40b4-a273-efff7fa13433",
        "cursor": {
          "ref": "0e848edd-8b4b-4fd0-9325-9cb6d9e3792a",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f517d5ff-e28b-4ebb-8567-53931f08e7f1"
        },
        "item": {
          "id": "0dea1b41-3f49-40b4-a273-efff7fa13433",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4aad5e3d-474a-49cb-b322-cccf6e0f123c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54cba71-8228-4d02-b7be-909e8e178707",
        "cursor": {
          "ref": "764efabd-080e-4a0c-b3c9-13d9d068b724",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "557232a6-0104-4bee-8ef1-2c5f0a462448"
        },
        "item": {
          "id": "c54cba71-8228-4d02-b7be-909e8e178707",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "807b89aa-b10f-4960-b01c-ad79e20704f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4f5bc6-1681-4c14-bb7f-53238696a337",
        "cursor": {
          "ref": "930e3ee3-3db7-4adb-a6c8-61b7006e47d8",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fc056b8b-68bc-4386-88a9-9d3d190ced6a"
        },
        "item": {
          "id": "eb4f5bc6-1681-4c14-bb7f-53238696a337",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1be6d99d-71b8-4117-8d78-8579249983db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a89ceb1-974e-487a-917b-fc3f11629592",
        "cursor": {
          "ref": "86869aa1-6234-410b-ab12-98932e9142a3",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6f74d5a9-25a0-40a7-8fbd-660f35d3bc3f"
        },
        "item": {
          "id": "9a89ceb1-974e-487a-917b-fc3f11629592",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c17b83c7-dbf5-4817-af23-1e0bea08094d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c226ecf9-59b0-41e9-a320-76dcebd6f340",
        "cursor": {
          "ref": "299c62eb-3af0-4212-9f08-60542df9283c",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c72ceeb7-a7f7-4075-93e3-b705264b4242"
        },
        "item": {
          "id": "c226ecf9-59b0-41e9-a320-76dcebd6f340",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e4f1840c-9b49-454d-89d9-4aa260d0bc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370bb7ce-f566-40e3-9e50-02b4a95611d7",
        "cursor": {
          "ref": "6978ee1b-742d-4fb9-93db-5c923c3c3efb",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "957c79b2-2309-439e-962b-823b85244015"
        },
        "item": {
          "id": "370bb7ce-f566-40e3-9e50-02b4a95611d7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3e7824a9-d3e1-4189-a362-d51b36db97da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9ef5ba-0a92-4d00-9c55-e6a386d4de49",
        "cursor": {
          "ref": "7f8c91c4-20e3-4e93-9b26-dd3453c84149",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a1d1d8e8-09f1-4b3c-87cf-32954f3cee84"
        },
        "item": {
          "id": "ac9ef5ba-0a92-4d00-9c55-e6a386d4de49",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5571822e-5a7b-4d5e-9286-2c6ee6c2915c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43267d46-47fc-4ebb-95d0-50218d24ede3",
        "cursor": {
          "ref": "4b867bfb-dd83-42b5-a7d9-723248533892",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "55b12438-35bf-49e7-9dc9-01d55e8a3dd4"
        },
        "item": {
          "id": "43267d46-47fc-4ebb-95d0-50218d24ede3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f02959ff-d49d-491f-80fd-89f31c6f3939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114fd685-c109-4647-913a-949f13ba4f48",
        "cursor": {
          "ref": "8b7596c3-d6b3-4c30-86b8-b5049edfe570",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bcaffa31-da9e-48b9-bd62-d199487c8d3a"
        },
        "item": {
          "id": "114fd685-c109-4647-913a-949f13ba4f48",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0d346931-0487-4266-84c5-ead4fcc09ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af30cc9a-eb30-4fa9-986a-972978a4557a",
        "cursor": {
          "ref": "d21281d1-c1c6-4321-a2f0-164ee88f99dc",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "068599a9-1206-406d-9869-02bccb07c923"
        },
        "item": {
          "id": "af30cc9a-eb30-4fa9-986a-972978a4557a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fa3ca859-25ad-40ad-8f28-529e8f745ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02054d8d-5d26-4099-a871-142e7f2e19c6",
        "cursor": {
          "ref": "afffb7e1-c35a-435f-971e-1847d1e5cf38",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "36312230-ee8d-4183-8ca7-e536c83e9260"
        },
        "item": {
          "id": "02054d8d-5d26-4099-a871-142e7f2e19c6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "46a914c3-db0e-46a9-a4d0-43c7b286dd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1db09e-dcb9-49ff-a47a-cb822a8d5752",
        "cursor": {
          "ref": "48e0bb94-38fb-4db0-b657-e05f578c86bf",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9b09099e-5f93-4680-b6f8-b9f3fe6c66ba"
        },
        "item": {
          "id": "1d1db09e-dcb9-49ff-a47a-cb822a8d5752",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ca970960-2dd9-4e0d-a6e9-887cc42d56c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cd2d75-f7e9-424f-84cb-262d397d7c16",
        "cursor": {
          "ref": "118dab62-564a-48ea-a23d-c0ecdc91b173",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b45b46c5-d1a2-41d0-ad38-e3af1170c410"
        },
        "item": {
          "id": "92cd2d75-f7e9-424f-84cb-262d397d7c16",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cab39cb5-19c8-4563-bdc1-c6a34e132eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd5bae2-c4d1-4b0e-be64-fea07501e16d",
        "cursor": {
          "ref": "54df30fc-0a5f-4000-b68a-8c0d696f011c",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3f936caa-ae81-4028-9f14-c6b391f2e748"
        },
        "item": {
          "id": "ddd5bae2-c4d1-4b0e-be64-fea07501e16d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8642318b-cfb0-4a2a-985a-fe633330c263",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95b4be9-9339-4697-8e55-315a90f11f77",
        "cursor": {
          "ref": "4f7a4ee4-9617-4f35-bb3c-1175bf938449",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6ede0fed-d143-4138-a899-c84ed6335326"
        },
        "item": {
          "id": "a95b4be9-9339-4697-8e55-315a90f11f77",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "527128c5-e395-46ad-a961-f07442f61402",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 609,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f37b78f-716a-497a-8020-d502096abb64",
        "cursor": {
          "ref": "2ed677a8-84ce-4e55-9adf-1662d7b74bc6",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "10e6a10d-cf5d-4b9e-a6d2-079458602059"
        },
        "item": {
          "id": "7f37b78f-716a-497a-8020-d502096abb64",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dbc43c34-475f-411d-9fa1-e3bdd8c7cf95",
          "status": "Created",
          "code": 201,
          "responseTime": 5113,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "525b20ea-6d3a-40ae-a51d-1ca5ee304f91",
        "cursor": {
          "ref": "95107883-1642-41f0-aa7c-bbaf46564331",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "55896165-f9f8-48a7-8a7c-6b20654aa72a"
        },
        "item": {
          "id": "525b20ea-6d3a-40ae-a51d-1ca5ee304f91",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0e336614-8186-466d-809f-3146566aa800",
          "status": "Created",
          "code": 201,
          "responseTime": 4306,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ca931b-34a0-417f-917c-02a4f75f093c",
        "cursor": {
          "ref": "ac6ce081-f71c-4af1-9ecd-a2d35ad82b97",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6fa9e8a0-f6d9-4375-9f01-aa174397ae07"
        },
        "item": {
          "id": "d7ca931b-34a0-417f-917c-02a4f75f093c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d62a7efe-06bc-4591-ba4f-a49b7911d4cf",
          "status": "Created",
          "code": 201,
          "responseTime": 4172,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f487622a-b3c5-4e27-81e2-3e3115db7b83",
        "cursor": {
          "ref": "c5469828-85ea-4a2b-a2e6-9b9d99bc277c",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "adfe5a76-4844-40e2-b359-f9c304df2066"
        },
        "item": {
          "id": "f487622a-b3c5-4e27-81e2-3e3115db7b83",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "81f629ad-8499-4700-8539-ead10f4f5259",
          "status": "Created",
          "code": 201,
          "responseTime": 4269,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d70066-f37d-44e3-aebd-e76b3c6ffb9c",
        "cursor": {
          "ref": "a4f4a595-d013-47e5-acfa-145534b55a2f",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "917e3e11-1832-4948-9f40-8a0254a1871b"
        },
        "item": {
          "id": "d0d70066-f37d-44e3-aebd-e76b3c6ffb9c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "457d6a73-5093-487b-90a8-32f2c873eaf0",
          "status": "Created",
          "code": 201,
          "responseTime": 5729,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6297e8-cfac-4352-8f02-1134025c5668",
        "cursor": {
          "ref": "e2930bac-330a-48a9-8c2e-b4e0aee22ba0",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "15647f04-1966-4b58-ab16-825a001cafec"
        },
        "item": {
          "id": "bc6297e8-cfac-4352-8f02-1134025c5668",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8afe756c-4614-415d-8dbb-d0f24099da94",
          "status": "Created",
          "code": 201,
          "responseTime": 9450,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17daf00f-2e09-4d21-bc7a-4f48a28d9f5d",
        "cursor": {
          "ref": "6b5fc808-6d35-44e4-a92a-8a912edffcdb",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4ae97d9a-1de4-4b87-9e73-4f3e804a87b9"
        },
        "item": {
          "id": "17daf00f-2e09-4d21-bc7a-4f48a28d9f5d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7be87aa2-1fad-407f-83e2-062104afe647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17daf00f-2e09-4d21-bc7a-4f48a28d9f5d",
        "cursor": {
          "ref": "6b5fc808-6d35-44e4-a92a-8a912edffcdb",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4ae97d9a-1de4-4b87-9e73-4f3e804a87b9"
        },
        "item": {
          "id": "17daf00f-2e09-4d21-bc7a-4f48a28d9f5d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7be87aa2-1fad-407f-83e2-062104afe647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96bf049-ca35-4107-88b4-39ef8c7674a1",
        "cursor": {
          "ref": "edf7fd93-8d40-4c5f-bbd1-e4eaeed39b05",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "337dde53-f367-4001-b371-b8000e7a5601"
        },
        "item": {
          "id": "e96bf049-ca35-4107-88b4-39ef8c7674a1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fba98b2d-7c06-48c0-bce7-da4da7741f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c27d9c-8ebb-443e-8647-aba8ef79c16a",
        "cursor": {
          "ref": "edaee2c1-3e7c-4b84-8cea-1dfb1130c2b4",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "06a30e19-5803-4497-bb6c-0a17a7f2c54b"
        },
        "item": {
          "id": "14c27d9c-8ebb-443e-8647-aba8ef79c16a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ae105d70-61e4-4a4f-b657-a7750a8b728d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8209727-b1ef-49a7-b220-7f70232644d2",
        "cursor": {
          "ref": "cd1fb6c2-704a-497c-99ff-bb7350969dd7",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "53adcd0b-10b8-49fb-971f-23c29138c5a7"
        },
        "item": {
          "id": "e8209727-b1ef-49a7-b220-7f70232644d2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "742275a2-93c5-4d70-bc5a-c65d6682d128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 937,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb6749f-256f-433f-932b-e57ac2af4b25",
        "cursor": {
          "ref": "0a20c8e6-25a7-4813-ad20-44a097db446c",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ed4ddb8d-9cd4-4d64-b653-0dd28ab28bd2"
        },
        "item": {
          "id": "beb6749f-256f-433f-932b-e57ac2af4b25",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "34a81d90-7adc-490c-9610-53309421f999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1200,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffe6af6-8940-4c59-a08a-44153b75e708",
        "cursor": {
          "ref": "dd66b5e6-8902-427e-ba44-bbd8437b28bc",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "96f982b1-ddab-4b9a-a169-bb2653bc9f6a"
        },
        "item": {
          "id": "cffe6af6-8940-4c59-a08a-44153b75e708",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ea02b299-e216-435d-b3d2-754807f371b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1392,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fc0c01-9bfa-44f9-93ae-4e703de1bd01",
        "cursor": {
          "ref": "0156458d-f4e8-468b-8f1c-65733dcad7f8",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f73ce2ba-0159-4ca9-8740-ba6b28a4945b"
        },
        "item": {
          "id": "b9fc0c01-9bfa-44f9-93ae-4e703de1bd01",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3c391ba3-22df-455e-9ea2-5dbc2caa356d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1218,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c000dc13-3115-4be7-938e-236edb3e965e",
        "cursor": {
          "ref": "d6b4cff4-cb02-4e7b-9415-b02666904f67",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a1a6cbf3-4a73-4343-9e0d-8a89743575e9"
        },
        "item": {
          "id": "c000dc13-3115-4be7-938e-236edb3e965e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7c5a3d81-2009-49fa-b700-8735f25f7e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1410,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5dd15e-40e4-40b9-b4a5-05efce7e3816",
        "cursor": {
          "ref": "7ef45d01-d280-400d-b623-8e8daee8bacf",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "da4f4060-a285-480c-8eb4-f6b42870de93"
        },
        "item": {
          "id": "0c5dd15e-40e4-40b9-b4a5-05efce7e3816",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4210f3f5-4330-4636-bd2a-9bb744efb0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d13360d-e3cf-4079-9977-86c5cf1a4265",
        "cursor": {
          "ref": "da8f0336-82e8-4bae-bb78-0cfccefe74b0",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "80292665-4620-48d5-b7c8-b87e589e41fe"
        },
        "item": {
          "id": "4d13360d-e3cf-4079-9977-86c5cf1a4265",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "077a9fbb-3fc1-4574-9069-8464c9700c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36729de4-cd48-4c4a-ae4f-4f3ec044937b",
        "cursor": {
          "ref": "31ea16f6-71ec-41db-85a2-26e420becc25",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "818f894d-68f4-4ea9-bbe7-ae349da9b38f"
        },
        "item": {
          "id": "36729de4-cd48-4c4a-ae4f-4f3ec044937b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e202d93b-4260-4458-adea-b44fdbf815d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5f7c53-17f7-4c0d-9558-a90c2ea4b11f",
        "cursor": {
          "ref": "69a322dc-e3e5-4a2f-a08e-9fa545327e68",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "346155ee-b698-4443-80af-600075def2c4"
        },
        "item": {
          "id": "7c5f7c53-17f7-4c0d-9558-a90c2ea4b11f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "63719c3a-c27f-410b-8cf2-dfdeb8d12ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe29a14e-e63b-4122-ada6-1d1dd29788da",
        "cursor": {
          "ref": "3c2f1dbf-ffb1-407c-a9e0-ae1bd10c5a46",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a473ef0d-b4bf-4907-8733-12bc5cbd6110"
        },
        "item": {
          "id": "fe29a14e-e63b-4122-ada6-1d1dd29788da",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "13e536da-bb66-4c2f-be91-c56b1ea55dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a397e8b2-5f55-4e8b-aca2-4beda7e57990",
        "cursor": {
          "ref": "7c38889e-7bee-4635-bea9-842b27e324c9",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f7e79d68-8f9c-43de-8b9a-6f8c1167a803"
        },
        "item": {
          "id": "a397e8b2-5f55-4e8b-aca2-4beda7e57990",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ad201585-921e-4d87-98be-df09bd44089c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d9158a-6764-47b5-8985-4e9cd707ae22",
        "cursor": {
          "ref": "0a2c1e3f-74ad-4282-a286-add599460f64",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a866abda-4d27-442d-a405-7048920ce235"
        },
        "item": {
          "id": "e2d9158a-6764-47b5-8985-4e9cd707ae22",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9e29e925-1300-4e30-b5ad-4072d363b371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43b8802-ef3e-4b08-82c4-ed6384eb5aad",
        "cursor": {
          "ref": "59b49417-1481-4710-b4e0-13fde5bb57db",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a3d013c3-2263-45d6-88a9-6816c23451cc"
        },
        "item": {
          "id": "e43b8802-ef3e-4b08-82c4-ed6384eb5aad",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6908cd6f-72da-479f-afff-b669262496a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672ec2e1-ca45-4847-bacc-22452d6c3be0",
        "cursor": {
          "ref": "12920330-c129-46a7-910d-4472a9819a15",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3a99ba4c-93c4-47ea-8021-66f559fa0f07"
        },
        "item": {
          "id": "672ec2e1-ca45-4847-bacc-22452d6c3be0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "09e1f17f-8072-4952-8e13-04c4f639bc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f96d627-8371-4785-bdc3-123cac2534ae",
        "cursor": {
          "ref": "ad96392f-373c-4bcb-8c9a-c8a04d6ae4fa",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "713f71d0-e98c-42cf-a183-8261329005cb"
        },
        "item": {
          "id": "8f96d627-8371-4785-bdc3-123cac2534ae",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2ce896d2-f86b-4696-b308-8cd869acd77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 931,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cdff60-687e-4cb3-9069-90bc4d1aa0e0",
        "cursor": {
          "ref": "e4cb8187-dff2-4763-977a-ca13d3fbc06f",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1d503abd-15d4-48e1-94dc-57e54a2f3b7c"
        },
        "item": {
          "id": "a2cdff60-687e-4cb3-9069-90bc4d1aa0e0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fcac695d-b273-4ddc-81a2-bd510e51ab2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 965,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1a6cdd-e17c-4786-ab44-cbd25845eea3",
        "cursor": {
          "ref": "bfa47fca-4f87-4281-8bf0-3e662fcb11fb",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "44529af0-2298-4ff4-b3e2-141c72e9c01d"
        },
        "item": {
          "id": "ef1a6cdd-e17c-4786-ab44-cbd25845eea3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ae950004-09c1-44f0-aa20-799a23dddcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1173,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a6eacc-2fe9-496e-9d6a-10ad9ead7565",
        "cursor": {
          "ref": "98213e86-ba24-4d1a-b34f-69e5a5fb575d",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e601a7a8-cef8-43c9-b341-813d8a24ee09"
        },
        "item": {
          "id": "d5a6eacc-2fe9-496e-9d6a-10ad9ead7565",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5b5a7537-d3a6-4853-bc9a-506d15ebb493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d24181-0f3c-4fb9-a86e-c719571eb273",
        "cursor": {
          "ref": "dc70dad1-7fdf-47aa-bd36-0392a5594db5",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bb730818-a5aa-4e49-8990-1f5c500a4ca9"
        },
        "item": {
          "id": "a6d24181-0f3c-4fb9-a86e-c719571eb273",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "99d8d11c-258e-4a3b-ad6c-c06ae1233f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2caad550-8adb-4176-99ac-fe6dc8e62834",
        "cursor": {
          "ref": "adf486b5-62e8-4d03-be2b-25eb8ab9d58c",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f0b8b93c-ab6e-4189-bc48-80eec26fcf59"
        },
        "item": {
          "id": "2caad550-8adb-4176-99ac-fe6dc8e62834",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "57a56b27-344f-4a33-9c7d-4a340c4fb4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99198123-0918-4012-84ce-abdfc6cb7339",
        "cursor": {
          "ref": "6ee00a9f-b018-43a2-946d-9e7345dc1640",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "72b55fc2-bf3f-4843-bd84-273d54fcc451"
        },
        "item": {
          "id": "99198123-0918-4012-84ce-abdfc6cb7339",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7e5beb84-dea8-4185-ba86-354f3ad52cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4dfbf0-78de-4834-bad0-c224a4eca9d7",
        "cursor": {
          "ref": "b34849e8-5e72-47a0-8021-fa44a98912c4",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "593cd4f7-beeb-444b-9dd8-fbfb798e1ac4"
        },
        "item": {
          "id": "3f4dfbf0-78de-4834-bad0-c224a4eca9d7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b265afff-b4bb-4cbe-a683-b53edbcfacb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68eeba3-4f1b-4fdb-900b-c3bbf89f002f",
        "cursor": {
          "ref": "a937a69e-4652-4c3d-994c-5fc0c907f490",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2be92a44-74e6-4474-be11-489be4aa43a6"
        },
        "item": {
          "id": "b68eeba3-4f1b-4fdb-900b-c3bbf89f002f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "494c5205-83ed-4fc3-b3df-7b0d7fe2bc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82f22e0-8ae2-4f59-be73-c7acb651aef8",
        "cursor": {
          "ref": "c87f7774-37e0-47c9-b783-0fe7038f51d9",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5bcbeae9-482c-4192-a9da-5145c008e347"
        },
        "item": {
          "id": "b82f22e0-8ae2-4f59-be73-c7acb651aef8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "db072878-cd6e-42fa-ad65-44e692fd2c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a8ae50-789d-4c81-b51f-8e0092aca6a6",
        "cursor": {
          "ref": "001da6c1-3121-480e-812b-072b320f1a39",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "58119ff5-404d-4e56-af16-636f6e03680d"
        },
        "item": {
          "id": "14a8ae50-789d-4c81-b51f-8e0092aca6a6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c6ff18d8-6871-4fc5-88b2-02dfea1fa129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1712a27f-53ff-4bbc-bb9d-0edda7bbcae7",
        "cursor": {
          "ref": "45911e77-238c-4472-b002-ff49867e457a",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "626ba75f-588d-4311-a75d-24a7c3685130"
        },
        "item": {
          "id": "1712a27f-53ff-4bbc-bb9d-0edda7bbcae7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "143fc1d7-fe22-4c39-99a7-306dfacb229a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e74edb0-949e-484c-9864-ba1c1b45e37e",
        "cursor": {
          "ref": "0c4e083a-62b1-4ba1-8c80-fdd952be2a82",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "993b48b2-be1d-45c8-8f51-eede33b2463a"
        },
        "item": {
          "id": "2e74edb0-949e-484c-9864-ba1c1b45e37e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c81e45cc-14cb-4697-96cd-30a40afd1210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec97374-1cc7-414b-973c-56a3907164c8",
        "cursor": {
          "ref": "0d19557a-b281-474d-8889-667bbf011d84",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3fedcc65-7a7b-431c-a06e-5da2bdb1e6dd"
        },
        "item": {
          "id": "cec97374-1cc7-414b-973c-56a3907164c8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "83e25b4b-c70c-48d4-868e-72c9f990ae6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ea300b-4bc6-4f4e-b81c-be9e99136281",
        "cursor": {
          "ref": "7b9a6851-6c6c-4872-9b11-cd849505f1c5",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bfa5e32e-caab-4d4e-af5d-e6fa5ed52705"
        },
        "item": {
          "id": "28ea300b-4bc6-4f4e-b81c-be9e99136281",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c68c7480-58b3-40d4-9231-bb277ffd2409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1ddfbe-9dcd-4834-81b7-9ebd1677f711",
        "cursor": {
          "ref": "7c655db1-c4b6-46f0-81fe-1c9b33914add",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "824b448a-2f83-4e64-a982-7986e9b33a1f"
        },
        "item": {
          "id": "ee1ddfbe-9dcd-4834-81b7-9ebd1677f711",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6c1e4871-1fc8-47e2-bb47-5ddbbbdd437a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4167e46f-dc7c-4534-9c3e-44f9dc8f4ce7",
        "cursor": {
          "ref": "af561ee6-6233-4c64-8ad5-88b7715ef666",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bf1ec43f-4bd2-4978-8ea1-4ddc40bec565"
        },
        "item": {
          "id": "4167e46f-dc7c-4534-9c3e-44f9dc8f4ce7",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "1031ab48-d76b-4dc0-b7b9-bf446414b154",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 617,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b100af67-e378-4e6f-aee5-72958b5e0f6a",
        "cursor": {
          "ref": "557ed4fd-811e-4b75-9fe2-284867e2780a",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "17b313c8-502d-4316-99f3-c8a1be16fd45"
        },
        "item": {
          "id": "b100af67-e378-4e6f-aee5-72958b5e0f6a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ff023f4c-eec4-419f-8399-6061c6c1b80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b100af67-e378-4e6f-aee5-72958b5e0f6a",
        "cursor": {
          "ref": "557ed4fd-811e-4b75-9fe2-284867e2780a",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "17b313c8-502d-4316-99f3-c8a1be16fd45"
        },
        "item": {
          "id": "b100af67-e378-4e6f-aee5-72958b5e0f6a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ff023f4c-eec4-419f-8399-6061c6c1b80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724c551e-7c09-4dd7-90b6-e12164b7a2b0",
        "cursor": {
          "ref": "9c330f39-e582-488e-9905-f06ab6e212f3",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d0f4b4e4-fe90-4f42-ad8a-c3131f17c740"
        },
        "item": {
          "id": "724c551e-7c09-4dd7-90b6-e12164b7a2b0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7dab7c90-553f-4315-b04c-ce790c3cdf2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579e2f5b-9234-411e-87f2-e6f830f5450c",
        "cursor": {
          "ref": "7d358609-eea6-4d87-a101-63fa9d45418a",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8a060274-24a8-4573-a3f1-b8382f3cc520"
        },
        "item": {
          "id": "579e2f5b-9234-411e-87f2-e6f830f5450c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e5440de1-40ad-4971-8eef-bf044bf40dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4891d9-aea1-4eb4-9ea2-a8348e3dda62",
        "cursor": {
          "ref": "718fe9b1-d65c-4d58-bd54-8d6f96d526dd",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "dd9ba191-185d-4de2-90f9-9d7c537198ca"
        },
        "item": {
          "id": "ef4891d9-aea1-4eb4-9ea2-a8348e3dda62",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4281545b-0390-4d0a-9be9-83b3787a3dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38f5524-1dba-4135-bd76-2554d6f4c83f",
        "cursor": {
          "ref": "f6cf6744-d78a-483f-861d-a906e6aa65ae",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3bf4b731-73c7-40d2-8716-c7255eeca01d"
        },
        "item": {
          "id": "a38f5524-1dba-4135-bd76-2554d6f4c83f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9bd810ab-2c41-483e-8b85-e172a9f87993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e668170-564d-40eb-ac92-2cd9c7f31966",
        "cursor": {
          "ref": "24c704fa-d61c-4d35-9af0-1e5dca5b4543",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f67750b8-2ab8-42d1-843a-7bfc09683cd5"
        },
        "item": {
          "id": "1e668170-564d-40eb-ac92-2cd9c7f31966",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "98d3c6ab-81e2-4083-bcd2-63deb1d42244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c05598-57d4-422a-a842-69f5df029f20",
        "cursor": {
          "ref": "eaf23733-d409-4f79-8ac3-44b9a38c359c",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0a42d88b-0f34-4e07-aa52-e57f5c46f4bf"
        },
        "item": {
          "id": "a9c05598-57d4-422a-a842-69f5df029f20",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7466ab1f-da80-48b9-a088-d3baf5eaa8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da319567-f918-481e-b741-699a74c8fa42",
        "cursor": {
          "ref": "0781a600-2192-482f-9dda-d7c2f52ad631",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1f0a29fb-6f31-4831-9914-60ae427c3a67"
        },
        "item": {
          "id": "da319567-f918-481e-b741-699a74c8fa42",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5272646b-f73b-45c1-a392-e5d0b33869ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544c34c7-41f8-4ab9-9af7-68592235aefa",
        "cursor": {
          "ref": "a899c453-ec6e-49aa-9e65-3559446d6d34",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "20d64394-b99e-41f7-b8e2-831773677bb5"
        },
        "item": {
          "id": "544c34c7-41f8-4ab9-9af7-68592235aefa",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "33d62004-e682-47fa-ae48-ef15d5353c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71ebc26-707d-4157-9cbe-298a4457d7ad",
        "cursor": {
          "ref": "2b80f390-c52b-4efb-91b2-801ab114556f",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "564332e8-5ddb-42d1-8f8e-6983a97a7b67"
        },
        "item": {
          "id": "c71ebc26-707d-4157-9cbe-298a4457d7ad",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2ab26107-f21c-4a11-8848-63a6fa0f6231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e81bdbd-2f3d-4b6b-85ea-d1b3887d207d",
        "cursor": {
          "ref": "3ef43b9b-8088-4d78-a673-cd5a51e4b926",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "20753e2a-bee1-41e7-9d94-51706571ae4e"
        },
        "item": {
          "id": "6e81bdbd-2f3d-4b6b-85ea-d1b3887d207d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ca9fc1a9-8410-4b83-bec5-cdb79af5d28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5687c740-c161-48fa-88f9-edff79c4a619",
        "cursor": {
          "ref": "0413a487-3714-45b6-8dc2-0dc5db1021c0",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "69e685e5-2f5a-4fce-a387-d2535e6f4c13"
        },
        "item": {
          "id": "5687c740-c161-48fa-88f9-edff79c4a619",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3cb3e20d-5fad-457b-aa3e-ec7ff48e9328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80044d45-8056-45b8-840a-4e286264a4af",
        "cursor": {
          "ref": "c70d20bc-87dc-4a37-95d9-129ca015a1ba",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "954c69e3-79f2-451e-b555-5d8566f5b2d6"
        },
        "item": {
          "id": "80044d45-8056-45b8-840a-4e286264a4af",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1e0414a9-f844-4be5-a508-84b646519b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8082e6-65d8-45d6-b7e2-f11ca8b77cfb",
        "cursor": {
          "ref": "c9d5bfc2-90a3-45ee-a88d-e95b1414a2a0",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c32cae11-1ff3-4396-8b1a-f087889f87ab"
        },
        "item": {
          "id": "4e8082e6-65d8-45d6-b7e2-f11ca8b77cfb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a13cf95b-1fca-4594-9428-8d63062d1483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7087df4a-a067-45e4-8245-74422674fd13",
        "cursor": {
          "ref": "f838d367-3451-4ad7-bcb9-4472d14b6b9e",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fc16ffb9-7401-4f28-aa1a-ac7d06e2da4a"
        },
        "item": {
          "id": "7087df4a-a067-45e4-8245-74422674fd13",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "457586bb-d034-4deb-9858-4b1cffdc17e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d4623d-8d6d-4c2f-9f95-1a6d80cc7f73",
        "cursor": {
          "ref": "e79ac84b-9b0e-4fa4-85f1-d439aa8088db",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9cac6e01-1697-4487-8a1b-d339aa5c4794"
        },
        "item": {
          "id": "f8d4623d-8d6d-4c2f-9f95-1a6d80cc7f73",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ed967110-1f5a-40e7-9e14-77dedaa31359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe12743-2bb4-467c-b569-7414bc527f0a",
        "cursor": {
          "ref": "1c76ea80-6572-4d02-9c72-a25c4e4f1f94",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1da5d2c2-fd60-4179-850d-f801049e6fb6"
        },
        "item": {
          "id": "8fe12743-2bb4-467c-b569-7414bc527f0a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "93df4f1d-0f49-4121-a2f4-8b06c968b16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1cf7fb-a5e3-4f02-a88b-48ba1648e0bd",
        "cursor": {
          "ref": "43ba7621-544b-4e88-a1c1-b7f60642fb36",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ccd51901-2e3d-4c88-a2e6-0915dd72a9c2"
        },
        "item": {
          "id": "bb1cf7fb-a5e3-4f02-a88b-48ba1648e0bd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4d0d8669-5907-41a5-a9a0-418d81e3358b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6b5a9e-e495-4c8a-8868-207d91863d02",
        "cursor": {
          "ref": "2dffe61f-5294-41b5-9a29-b0fbfe3d162d",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ed68265b-cb41-4987-aa8e-2c9af28ba744"
        },
        "item": {
          "id": "8c6b5a9e-e495-4c8a-8868-207d91863d02",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0a6b5861-ef6e-4af8-9738-e81279c27436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcf533f-86cd-4b51-86bb-3940b49d6bfa",
        "cursor": {
          "ref": "aaec9d62-0929-4f2c-af8c-92f0461a0931",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "18e3226a-fb89-4211-83d8-73195eb95f2e"
        },
        "item": {
          "id": "8bcf533f-86cd-4b51-86bb-3940b49d6bfa",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ef92391f-797e-4734-9ba9-9b6a77c67ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9de0e9-766b-4b5d-a139-0ad5fcb80a1a",
        "cursor": {
          "ref": "bc3468de-e171-4730-8c05-2c9a499ec278",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "80a8785f-900e-497a-9f6d-a6fe82f309da"
        },
        "item": {
          "id": "0b9de0e9-766b-4b5d-a139-0ad5fcb80a1a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6c639de0-bcb6-4941-87db-329effa08ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec51d1d7-d988-4972-9b92-8a5e6a3fd73b",
        "cursor": {
          "ref": "5ee21d35-3135-4ed2-92f8-18c719432511",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9f5ebb90-336a-497c-803c-46c0e89f4a1e"
        },
        "item": {
          "id": "ec51d1d7-d988-4972-9b92-8a5e6a3fd73b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4bc23c15-f0f5-409c-8754-9af5580cabff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f744f6-7857-46c6-bffb-f95e03ff0d0d",
        "cursor": {
          "ref": "6a8cf7ed-bb3b-4260-a995-9899bce5c627",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "09c50761-6bf6-49db-beb1-bbe7e6b043e0"
        },
        "item": {
          "id": "23f744f6-7857-46c6-bffb-f95e03ff0d0d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bc6e6308-3955-41e1-8c0c-e9ea272edac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc172a5a-f748-4a4f-9909-8676a3f17dde",
        "cursor": {
          "ref": "fb5563a2-39ea-4446-af4d-9049cf8d3b67",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ca0bf796-01f6-4147-b551-adf015a9b39f"
        },
        "item": {
          "id": "dc172a5a-f748-4a4f-9909-8676a3f17dde",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5f40266a-3f3c-4c8a-b9d6-bf1b3cf54d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86de2c6a-e3a3-4961-ac66-8e4597686250",
        "cursor": {
          "ref": "205da7b0-f3b2-4dcc-afe8-efa657ae5ab5",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e8ded930-2f11-4bb4-b615-d992e66cfbf0"
        },
        "item": {
          "id": "86de2c6a-e3a3-4961-ac66-8e4597686250",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e04b00d2-1c10-4639-a932-91ee06d53719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b294851-0d32-4a40-8787-b7ac4e67feaf",
        "cursor": {
          "ref": "9b435a25-9434-4981-b826-608a895a44a6",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "54205c84-23ae-4edc-835a-debe028a0135"
        },
        "item": {
          "id": "7b294851-0d32-4a40-8787-b7ac4e67feaf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4da6fbbe-f6b5-4b76-9031-7db132b747aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72430309-76c8-4d76-aec9-a79d9212e116",
        "cursor": {
          "ref": "8cc5520a-0ac2-4b80-804e-4ce83b59e97d",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9f909883-66d3-489c-9321-64d7329f967b"
        },
        "item": {
          "id": "72430309-76c8-4d76-aec9-a79d9212e116",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3061a7a5-9daa-4e28-b947-5254ce5b2418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b76fa3e-2892-496e-9853-0d87e0911fd5",
        "cursor": {
          "ref": "97f2064c-8b64-4e3f-9d81-6bac2750685f",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fa484321-3c42-40a4-8291-e805a490091a"
        },
        "item": {
          "id": "0b76fa3e-2892-496e-9853-0d87e0911fd5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e70add6c-f043-470f-9adf-e5037198c224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3909d84d-e96b-4916-b727-0cfa51539e37",
        "cursor": {
          "ref": "adc617e8-cd60-4fa1-812f-399097ad131b",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c1e40466-f4e0-4678-b9f5-bf961cc1bf55"
        },
        "item": {
          "id": "3909d84d-e96b-4916-b727-0cfa51539e37",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c47e4a7b-39ef-4fa9-8fa6-7b9670016267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf58161-b704-46a2-970d-ea81dbc095a6",
        "cursor": {
          "ref": "f8d48f84-a733-4829-be36-5b3ad48e030f",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ddd77a10-11a3-47c3-800b-c70bd979defc"
        },
        "item": {
          "id": "7bf58161-b704-46a2-970d-ea81dbc095a6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "487662f9-fc0d-4fae-9c8a-845f81809259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42eff6b-5801-4b8e-8337-581523cc9959",
        "cursor": {
          "ref": "3dff8a49-22bb-4f26-b690-63d658fa14b8",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b6bf6d09-12b9-4ce4-913f-2f5977041bae"
        },
        "item": {
          "id": "a42eff6b-5801-4b8e-8337-581523cc9959",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1431568e-8bee-441e-8770-b799bbd111bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209ad344-319b-4192-b925-a34f4b91cbf0",
        "cursor": {
          "ref": "7b36f5b8-b9cf-4e84-bf5c-e2782b725217",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c509070e-d039-46d2-bae7-7d667f32509c"
        },
        "item": {
          "id": "209ad344-319b-4192-b925-a34f4b91cbf0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b0d58371-cac3-44e3-853d-7c9f7ec5d8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc227b8-6b1a-493b-9f0e-9b23f7965981",
        "cursor": {
          "ref": "23bbf0e4-8f33-4e32-9ffe-6c7689e579f1",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "10d5684b-c977-4d29-b851-e0e0b807588d"
        },
        "item": {
          "id": "afc227b8-6b1a-493b-9f0e-9b23f7965981",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6020f150-f65c-4732-a404-c0aa03132845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b488aa-ed77-4349-9285-1628f5e7b453",
        "cursor": {
          "ref": "54ca364e-6da2-4a82-ae8c-413a90f451d3",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "92f93558-02cc-4a9e-94f6-76936079d2bb"
        },
        "item": {
          "id": "85b488aa-ed77-4349-9285-1628f5e7b453",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3110559c-e25e-48e8-80eb-5205ac0bd15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dc310a-d3e7-4816-a4eb-a382d314fe71",
        "cursor": {
          "ref": "48d43f01-9cb2-4be5-8c93-734de6555805",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1ccf08bd-2d08-4695-95d4-eed93834700e"
        },
        "item": {
          "id": "81dc310a-d3e7-4816-a4eb-a382d314fe71",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e24c1562-1a4f-4164-af10-e1e31229c360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37901986-0714-4c92-8d69-af36f00ba679",
        "cursor": {
          "ref": "88615f10-a69c-4b7c-83c8-65706507d1fa",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7efa1448-aaa6-422a-bc8a-7678f607c19f"
        },
        "item": {
          "id": "37901986-0714-4c92-8d69-af36f00ba679",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8303cfd4-68e3-4782-b33b-d007e5349814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827811f2-8ac8-40d5-9afd-77aee6b2fcf2",
        "cursor": {
          "ref": "7bd3d3ca-7117-4edc-9929-b7d983e04b32",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "02ae4176-8d1b-446e-9f96-50bbe8259578"
        },
        "item": {
          "id": "827811f2-8ac8-40d5-9afd-77aee6b2fcf2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b3de9b2a-1f5e-45c4-886c-40d3621e7b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044e9df7-718a-4671-9720-91a2cedc46d2",
        "cursor": {
          "ref": "a12ca40d-9306-489c-8f1c-eb67694502b1",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4bfd9eea-6073-4f7c-a95f-a2c790064eb8"
        },
        "item": {
          "id": "044e9df7-718a-4671-9720-91a2cedc46d2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "95243937-b5c0-4ad4-954f-1f23ce8c0193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac3f8b6-8b1f-456b-9d51-da095050e8c9",
        "cursor": {
          "ref": "73407910-e771-4b0c-9d13-64634a7fe4dd",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ef5a571d-53b1-44ad-95cc-896503a49c5e"
        },
        "item": {
          "id": "dac3f8b6-8b1f-456b-9d51-da095050e8c9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "44294f3c-c0b1-454e-91f1-d2da38f207fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc140397-6f34-49e8-bb22-7823becb920b",
        "cursor": {
          "ref": "0418a38c-ce02-4014-b851-042cf75933f3",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d17ead77-6de4-403f-84a1-65274f7ca7f7"
        },
        "item": {
          "id": "dc140397-6f34-49e8-bb22-7823becb920b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "12fdfc54-6bac-4553-ae7d-314d2655e011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72e0618-a2f7-4dc5-9c9e-e3546ce822a5",
        "cursor": {
          "ref": "344a58d1-78e0-4586-ac2d-0babefc0bdb4",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "55ef378a-ddee-4fcc-afcf-e3a83e3273dd"
        },
        "item": {
          "id": "f72e0618-a2f7-4dc5-9c9e-e3546ce822a5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b1a37b28-d490-4b4e-bbbe-90a305f2624d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12c11ce-119c-46fc-8d8b-7b5e69e984e9",
        "cursor": {
          "ref": "1e8bd4f3-71ab-4535-a90a-bc454964c324",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6dfbe84b-281a-4244-a7cf-00b11091fe13"
        },
        "item": {
          "id": "e12c11ce-119c-46fc-8d8b-7b5e69e984e9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "83ef7dbb-59fc-4189-ae90-9b8c54b1dba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6478ec4a-50aa-41a8-8335-d2c61e8a217c",
        "cursor": {
          "ref": "9359149a-c05a-4e3e-96c6-02d7239abca3",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9ef152b7-8356-4b3f-b33e-f64e23782f54"
        },
        "item": {
          "id": "6478ec4a-50aa-41a8-8335-d2c61e8a217c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d3f1f19a-c2a3-4d0d-a7fd-39296318f03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0d2b83-9b71-4162-a3e8-55d47b67ec0e",
        "cursor": {
          "ref": "3e976c91-61c6-4072-8cb4-1f3be88e9823",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "58e3efb5-df3a-49d2-9f56-1d016f147484"
        },
        "item": {
          "id": "1f0d2b83-9b71-4162-a3e8-55d47b67ec0e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "847bf207-eaea-45af-8b6c-784870c4c168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e25f79-14fb-4abc-bfbe-57f10c1fab74",
        "cursor": {
          "ref": "2f2ce1d0-9a27-4fb1-9273-8723a2504994",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "64d121c8-37b6-4ec5-a2c2-326d93572251"
        },
        "item": {
          "id": "02e25f79-14fb-4abc-bfbe-57f10c1fab74",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0ae6f274-732b-499b-8b63-791c81064c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ea16b0-0653-4b19-a0ae-b5c599f75f6d",
        "cursor": {
          "ref": "fcf1f11a-90ed-4834-a8c7-a1cc65642403",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7d6ca01a-abb3-4c5a-8c86-be2abc2fe646"
        },
        "item": {
          "id": "67ea16b0-0653-4b19-a0ae-b5c599f75f6d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fb72356a-513e-443e-a3dc-3f362971fe4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363cc406-945d-4689-a6a6-969071f0f236",
        "cursor": {
          "ref": "b09108b1-f0b6-4542-982d-782d5c2ea231",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3249c682-9c5e-465b-839a-e77a747db803"
        },
        "item": {
          "id": "363cc406-945d-4689-a6a6-969071f0f236",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "de3dd254-c187-47a3-ac43-fe9e7150d366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5f501e-65cb-488d-80cb-5609566a2267",
        "cursor": {
          "ref": "0309a5d0-af3c-470c-a6cd-306f62fa16b4",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fc24c5f3-d72a-41d4-9a54-8fdd1d29bedb"
        },
        "item": {
          "id": "7b5f501e-65cb-488d-80cb-5609566a2267",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a9332d86-9e2b-425d-aadf-5f819ded6a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09440994-85e1-4a0b-bdef-911e56e3964c",
        "cursor": {
          "ref": "f1a545b6-afe5-44b2-a30a-a2fba9f08e3f",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a7c936a1-43c3-4b11-9b67-23b4c4e9a634"
        },
        "item": {
          "id": "09440994-85e1-4a0b-bdef-911e56e3964c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "43806887-6b56-441f-90cc-5e7fbb1f9124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3158f527-f992-4be7-b10a-1cd66dd66e3b",
        "cursor": {
          "ref": "dd40b9c2-601c-44b4-9b1b-40b880525d9d",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ede66702-ed76-4da1-a84e-ad3a075633ae"
        },
        "item": {
          "id": "3158f527-f992-4be7-b10a-1cd66dd66e3b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "211fd023-47f4-44a8-a6c9-333b1741862a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012710b7-afec-4822-9558-b0f9830a7461",
        "cursor": {
          "ref": "b1b420df-c1d3-4f75-975e-5e98e8d1bcfb",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cc7b37d8-6377-47a2-9ea2-74de2607aafb"
        },
        "item": {
          "id": "012710b7-afec-4822-9558-b0f9830a7461",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0b153784-0130-4de4-9bab-c66c91869653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede372b2-0b0c-4fda-a328-a315c579d3c9",
        "cursor": {
          "ref": "c9a5937e-c1d8-49fb-b23d-022306882224",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "be2294db-8cfe-4255-a119-cb7d48195503"
        },
        "item": {
          "id": "ede372b2-0b0c-4fda-a328-a315c579d3c9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2440cf53-87bb-481b-a0b9-6d8465c060b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864e98c2-a2b9-4a34-8f5f-24772dbdc7b3",
        "cursor": {
          "ref": "812fb881-493e-4057-96ed-15cfdd4558c6",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "47189b37-ce88-4fef-a297-4bef602686a2"
        },
        "item": {
          "id": "864e98c2-a2b9-4a34-8f5f-24772dbdc7b3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "63aabae9-47de-4c63-bd28-76119d07c8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0ccd5b-c5d7-4456-af43-ff4543b69ebc",
        "cursor": {
          "ref": "3e63eaf6-7351-434e-9c4c-22c48ece870a",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2c93a1ff-2135-46b1-bcb7-8b32bec81ee9"
        },
        "item": {
          "id": "7a0ccd5b-c5d7-4456-af43-ff4543b69ebc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1b09d873-aad6-4a1c-8916-1febb3c8dc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fac0bca-a8d5-4426-804e-19b33cae3da2",
        "cursor": {
          "ref": "52592aef-4858-4427-b771-4ca32e928e5b",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fa02b852-1045-4fc0-ab9c-0ae723bd7fd8"
        },
        "item": {
          "id": "1fac0bca-a8d5-4426-804e-19b33cae3da2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b039e683-2cfd-4043-84c8-41409aa565a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e930879-6fe0-46d6-8f0c-9dc72d7ff0b0",
        "cursor": {
          "ref": "31b13d63-84ba-4562-8ef1-2ca63b28d148",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f2bfa268-8629-477a-9945-da19dcc7b720"
        },
        "item": {
          "id": "2e930879-6fe0-46d6-8f0c-9dc72d7ff0b0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b9064445-995a-4368-a844-cb907b51ce94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd8d629-2fbc-4c1a-8724-9701cc483398",
        "cursor": {
          "ref": "92954816-815f-4024-81d5-8e8d45a07532",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ace6861c-b586-40b3-be57-3a8fee581221"
        },
        "item": {
          "id": "0bd8d629-2fbc-4c1a-8724-9701cc483398",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ec95e27b-549f-4cfa-bc20-ab8f1c4b8475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ef777e-e0f1-40cb-a73e-1285e1e5f8ea",
        "cursor": {
          "ref": "a5921b7e-608d-4661-bdad-87da6dc467c4",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ab1f5a32-a7a6-4874-a881-8cc778b358e8"
        },
        "item": {
          "id": "d9ef777e-e0f1-40cb-a73e-1285e1e5f8ea",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ee7de149-ac29-4e6a-8091-6b450d88779c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e1d45e-aee4-4e79-9a59-53afc0f659ae",
        "cursor": {
          "ref": "747da8a4-69df-4cb9-92c1-b087bd47339f",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "647b7700-5890-420d-bede-8a093a6ed829"
        },
        "item": {
          "id": "79e1d45e-aee4-4e79-9a59-53afc0f659ae",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d6ae5ac3-996e-4616-9691-b7b0a2fcc0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64aa408-826f-433c-b50f-a4bf3e466cdb",
        "cursor": {
          "ref": "4ce611f6-76b8-4f27-a438-f9404a4aa36c",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "02648bde-f13f-43ff-aaf1-e6685f27d035"
        },
        "item": {
          "id": "f64aa408-826f-433c-b50f-a4bf3e466cdb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b7e6d084-7e27-4cc0-a170-7b1ee3536b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932e384c-850c-4a40-bd46-872f4730b169",
        "cursor": {
          "ref": "54dda38b-82f2-4bd1-83ab-f2cd8b1ad56d",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c60cb409-ed0d-436d-aa98-54f4870ca52e"
        },
        "item": {
          "id": "932e384c-850c-4a40-bd46-872f4730b169",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "24cada38-6ed1-49aa-91cb-c19607242ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84051ccc-c87b-414d-a550-a475196cca06",
        "cursor": {
          "ref": "0dade4a7-20a6-4340-84d0-5294d6f4ce2d",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c2de70fc-01a0-4380-84af-4a2f556e420a"
        },
        "item": {
          "id": "84051ccc-c87b-414d-a550-a475196cca06",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "923bfbcf-10a2-4e96-93d2-7590aed83215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30d32a9-833b-406b-b793-316d0b126749",
        "cursor": {
          "ref": "756e16be-84f0-42f1-9d52-602669bba456",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "323344bf-cfc9-46a3-bd78-00921e0b7064"
        },
        "item": {
          "id": "d30d32a9-833b-406b-b793-316d0b126749",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8769a390-cfaf-41f4-83b3-9e6ca2d54d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e11964-b6ca-4e37-a76d-078999419da5",
        "cursor": {
          "ref": "7258bcae-b59e-4fca-a852-3f3ebdce1d6e",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "113eb557-946e-449f-8968-d9ae4f677593"
        },
        "item": {
          "id": "05e11964-b6ca-4e37-a76d-078999419da5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "94a1956a-b5f7-45d0-b7c1-13b6d9bc7ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b31a5f-bff3-45e2-b67f-0163fe68c4cc",
        "cursor": {
          "ref": "0546ea78-1c7e-4f1f-8717-bfd54fe9ca34",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cf441c44-49f8-4e40-a467-14b5ff9b0f7e"
        },
        "item": {
          "id": "25b31a5f-bff3-45e2-b67f-0163fe68c4cc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ea9aed02-cbf9-4740-9f57-81c9fc4d08d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fa748c-2688-4cea-980f-44732bef86b6",
        "cursor": {
          "ref": "040513c3-2658-46bd-a689-4be35b1ed924",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2c9a320a-e00b-4cdc-b4ec-392da0e8a5f0"
        },
        "item": {
          "id": "62fa748c-2688-4cea-980f-44732bef86b6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8c7ff4f4-6745-45a3-b1d7-da522f02cd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3accc8a3-d8ad-4cda-ad34-4566e668880b",
        "cursor": {
          "ref": "727f43aa-29b4-4c31-862e-1d1571d5a6ee",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7d946ff2-e80b-44fe-8595-ff815e323d30"
        },
        "item": {
          "id": "3accc8a3-d8ad-4cda-ad34-4566e668880b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "557faaaf-2c6a-4efc-9ceb-05b540c48391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b6d146-c03c-4436-b970-1a8fddaa8ec1",
        "cursor": {
          "ref": "ce6e88ef-9eb8-45e3-b6ee-010565cebfb9",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "de8b520c-bd10-4640-bd2f-3c6ff37ebeab"
        },
        "item": {
          "id": "d4b6d146-c03c-4436-b970-1a8fddaa8ec1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "09c63ef5-43f8-48bb-be2c-150d698a61f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6556954-49be-47d5-9822-241b1b6d9ad7",
        "cursor": {
          "ref": "9eea183b-416d-46a7-9aff-e8669a912a81",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ed46c179-1c3c-4aef-be35-fea9ed688c2c"
        },
        "item": {
          "id": "b6556954-49be-47d5-9822-241b1b6d9ad7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "060a6adc-ef24-46f8-928b-2b49d4563d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d15ded1-820a-4fc0-8fc8-8553fb6f5a87",
        "cursor": {
          "ref": "515f1186-6946-4b93-8259-af3d0a60bfa8",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d30477dd-334b-4be5-b539-e6268c5df622"
        },
        "item": {
          "id": "4d15ded1-820a-4fc0-8fc8-8553fb6f5a87",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a88c20de-39b9-45ae-a6b2-034f3d99d517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a360971-b7d8-4fb8-b85f-bd7d7efa9004",
        "cursor": {
          "ref": "78242c31-9a0f-4d41-9705-aeced28a69f8",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9a266d9a-cca4-485c-b415-a7af144dda9a"
        },
        "item": {
          "id": "1a360971-b7d8-4fb8-b85f-bd7d7efa9004",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0c4e72a8-6439-4d70-9858-4e6bc76b54fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d9cc57-9582-4327-8e72-d2d36cacd233",
        "cursor": {
          "ref": "062ede8e-e114-489b-9b86-b88c3b2a914a",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2d9aba7d-0e16-4981-82b7-acd24527ea73"
        },
        "item": {
          "id": "67d9cc57-9582-4327-8e72-d2d36cacd233",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8ca61f99-de70-4770-8dfc-7ad4746b9155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b302c7a-8c15-49fd-9247-24ddd4c2b8c9",
        "cursor": {
          "ref": "194da252-fa48-4e08-8bd4-92dc3665e1d3",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c52a29f3-d539-4f1d-91d0-edcebb5de51b"
        },
        "item": {
          "id": "8b302c7a-8c15-49fd-9247-24ddd4c2b8c9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "fb05c9ab-6c55-42ba-be62-172b4ab4cade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cd018d-410f-41d7-93ed-541b9188bca5",
        "cursor": {
          "ref": "526fc029-24bf-4844-a927-69d5c0df7e61",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0a4740d0-0b12-4611-a3d2-4ac093ed0dd2"
        },
        "item": {
          "id": "c1cd018d-410f-41d7-93ed-541b9188bca5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "db97705e-304f-45da-9823-ec04a7d7ce3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c1736d-a681-4007-9bc5-92366f06af11",
        "cursor": {
          "ref": "09adbd1e-ca68-455a-b350-8c13e68aae20",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "337875a8-e1f8-41e6-8091-f619fb8d8c03"
        },
        "item": {
          "id": "81c1736d-a681-4007-9bc5-92366f06af11",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2b997b3b-73be-479a-88b0-9679e6ae6a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9009196-a527-4cd1-8ffb-774b680aee19",
        "cursor": {
          "ref": "dc48e6bb-86b8-4209-a6be-df241b08d22c",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7f3eebc1-74bf-4019-b089-35c8922b2fa8"
        },
        "item": {
          "id": "b9009196-a527-4cd1-8ffb-774b680aee19",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "704e3727-89f0-4b0a-a677-cf14da0ab575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9851884-03ec-44fb-87a9-8082c39a3348",
        "cursor": {
          "ref": "7d459beb-59bf-4ed6-8901-12cd3acfd821",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dc05646f-b271-4404-8a60-5b3d9170237b"
        },
        "item": {
          "id": "a9851884-03ec-44fb-87a9-8082c39a3348",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "21cc0120-439d-49c8-9982-1208eb4d7db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1301,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdcda50-916f-4244-af3c-dab1b98456b1",
        "cursor": {
          "ref": "99e2d829-e68e-4908-9937-2bae802485f3",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1a5691d1-8ac0-4636-a2f2-295ed7ce43e2"
        },
        "item": {
          "id": "acdcda50-916f-4244-af3c-dab1b98456b1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ff198571-feef-4868-b123-6336d3bc85a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 942,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8698bddc-0fa1-4a90-885a-e60ea8debef4",
        "cursor": {
          "ref": "d3d34774-2d1f-461b-a067-285b1764d024",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "024fb8b1-567e-4c25-a236-e42a646e22ac"
        },
        "item": {
          "id": "8698bddc-0fa1-4a90-885a-e60ea8debef4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "17f5a07f-ad23-4c63-9b3a-83ac8401c04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1277,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d406f6-22bc-4da1-b45e-560f35117a89",
        "cursor": {
          "ref": "0ad17a06-5621-4f61-ad77-f0c70877e490",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "71e27d6e-26e3-4931-99a8-3782351e5d2d"
        },
        "item": {
          "id": "87d406f6-22bc-4da1-b45e-560f35117a89",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5322fae9-4856-452f-9286-b300d8dd5a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1661,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da4de00-48cc-4417-be27-e25d0edd7aed",
        "cursor": {
          "ref": "203a7f0c-93c1-41e8-be0e-355b9b224e85",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c6b9be7c-d219-4e32-ba80-ad01b4bf3815"
        },
        "item": {
          "id": "5da4de00-48cc-4417-be27-e25d0edd7aed",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8ebc44dd-ea6b-4e0f-a97b-e538a60700c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b429e47-50e8-4277-b77d-bf88b453dcc2",
        "cursor": {
          "ref": "d76c22c4-0c4a-4cd6-b42f-f2f7c9d4b444",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "284c650d-629c-4b2e-a90e-6b2205e5ef8a"
        },
        "item": {
          "id": "6b429e47-50e8-4277-b77d-bf88b453dcc2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "41e59ac6-ed49-4179-ae97-8d017232e5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c13951-b377-4efe-9b37-b4a8bff3240b",
        "cursor": {
          "ref": "b00c3f71-f89e-493c-9acc-ff497386c125",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dcdc29dd-fb0a-4ad0-b4e1-eded2ce00a46"
        },
        "item": {
          "id": "93c13951-b377-4efe-9b37-b4a8bff3240b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1cc016ed-8cf9-4912-9b35-521c0afc7a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ed1c2c-1656-48c7-acfe-27ec17baaabb",
        "cursor": {
          "ref": "28b34fcb-6cf7-4933-8ab0-7a96ab7e1877",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c2330178-7b3e-4ba3-81c0-fefb313b6107"
        },
        "item": {
          "id": "f0ed1c2c-1656-48c7-acfe-27ec17baaabb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "761e5ee3-f84c-440b-a7b5-c4f51d259713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283acd5b-3543-4eb9-927e-dca7e412613f",
        "cursor": {
          "ref": "16531f8e-7cec-4826-b026-b71beb49d91d",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e20c44f7-7be6-4b64-a9a8-7fa1a64b860a"
        },
        "item": {
          "id": "283acd5b-3543-4eb9-927e-dca7e412613f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d3cb3754-6dc6-44cc-ad09-afb21e271df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d767f8-c6c2-4904-9940-228ec3a4034d",
        "cursor": {
          "ref": "0704d405-f9ee-4d6e-9158-ed8feb3008e8",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6702ae36-b57d-4b82-801e-40332dbffb9b"
        },
        "item": {
          "id": "34d767f8-c6c2-4904-9940-228ec3a4034d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "454fea57-2df3-4174-9f0b-96f5180e97cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930ad30e-f575-4bd2-9f02-aff69f693279",
        "cursor": {
          "ref": "4366a839-44d9-4339-825a-5fec14fcfbb1",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "46b936f9-20cb-435d-82cc-10d8a2194417"
        },
        "item": {
          "id": "930ad30e-f575-4bd2-9f02-aff69f693279",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bc17be4e-31d7-44cd-8ae0-3935619b0ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316ffd5d-914e-4ed1-b7a6-ff1ffd86c14f",
        "cursor": {
          "ref": "6613379b-df07-4e48-9aeb-1283e461fee4",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3f015c01-c19d-4ad7-be36-22bd4dcb24bf"
        },
        "item": {
          "id": "316ffd5d-914e-4ed1-b7a6-ff1ffd86c14f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7df34118-3575-413f-93b4-0304b3ffdcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8deed9b-0fd2-479c-bfd4-baf2041d979a",
        "cursor": {
          "ref": "b00ec1be-5994-4ca0-b55e-6a12417d908a",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "17061133-05c2-48ad-a88d-6926b82dbbb9"
        },
        "item": {
          "id": "a8deed9b-0fd2-479c-bfd4-baf2041d979a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0d71710b-4945-4bc4-be3b-dd7e616026d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91e55e8-7b42-4f7f-b141-370368951321",
        "cursor": {
          "ref": "1f52ebc3-1486-424c-bf75-b03dcdd4c8aa",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1885708f-0398-4848-b1b0-8a34d7b5c3f3"
        },
        "item": {
          "id": "c91e55e8-7b42-4f7f-b141-370368951321",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1c8141dc-d0f6-4e53-97d1-8d2c8afe3e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b60f625-79e0-4451-b2c4-e4e309214117",
        "cursor": {
          "ref": "a4f56128-962b-48ae-89ec-acc4d3e4a09e",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8edecc9d-69f2-483c-84a3-f47198db5903"
        },
        "item": {
          "id": "6b60f625-79e0-4451-b2c4-e4e309214117",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b098acd4-b229-4763-8de3-d1098b3d943c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3295f1-80b4-4e89-a6e3-f874b96c45d3",
        "cursor": {
          "ref": "20865f04-2565-4973-b5ac-f54bd233261c",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "06e2a09c-088c-4b6e-8868-4ac9b9662e50"
        },
        "item": {
          "id": "da3295f1-80b4-4e89-a6e3-f874b96c45d3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "44ef3168-fb58-42a7-8c5c-2b5834f88f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac888fb-7345-4e55-b98f-9bd94597cf09",
        "cursor": {
          "ref": "0dbc7afb-f893-4967-922e-936cecdc6d0b",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "dbef6123-7a43-41f9-8564-d165e915dd75"
        },
        "item": {
          "id": "3ac888fb-7345-4e55-b98f-9bd94597cf09",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9ca5e05e-4df6-4e23-aadc-bdb027068b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426ae8dc-6ee2-4b92-9c7f-4b10bb7057c1",
        "cursor": {
          "ref": "ccc5b951-67ff-4c3d-b5be-a3a0df342eae",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4ce4b37f-519d-405c-856c-6effd5acaea1"
        },
        "item": {
          "id": "426ae8dc-6ee2-4b92-9c7f-4b10bb7057c1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "eaf23369-d9ba-4dc4-8e08-950d7511ccfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6f2cf0-f33c-4c79-b066-79196c3e1875",
        "cursor": {
          "ref": "589bb860-421b-4bdd-ae93-b6af98a60009",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7bd3db56-db20-4b3e-b5db-cbd3b15b9569"
        },
        "item": {
          "id": "6a6f2cf0-f33c-4c79-b066-79196c3e1875",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "95228a3e-cfda-4b76-af13-79901353b61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5509cef6-4a43-4bcd-b6d8-e4700a9dd9e8",
        "cursor": {
          "ref": "e2822820-a35c-4914-96b5-0f1049134c56",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cfc52b13-afca-47e8-bc69-a3ef7ea96a79"
        },
        "item": {
          "id": "5509cef6-4a43-4bcd-b6d8-e4700a9dd9e8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "adf57426-5774-46c9-8a45-ab82361e2981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081aaf58-ba1d-47e3-8ae0-6669a72bf69f",
        "cursor": {
          "ref": "9d7d8174-943b-4c7f-9214-edfb77772e46",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "cea517bc-0a5c-47c0-b86d-7c03044b3c6e"
        },
        "item": {
          "id": "081aaf58-ba1d-47e3-8ae0-6669a72bf69f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b1cb14dd-46c5-4670-ac9d-c862d95340e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f22a84-d968-42f6-a8a4-45c05930b4fe",
        "cursor": {
          "ref": "b63fccf3-d70a-4338-bc6e-0e4a7695496c",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6ee9c510-2b7e-4dbe-aa2d-a737b935ce1a"
        },
        "item": {
          "id": "65f22a84-d968-42f6-a8a4-45c05930b4fe",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "edc1226c-42e8-40c2-b817-ded231194857",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9993c2e6-6df0-4e18-b358-c57e322305e9",
        "cursor": {
          "ref": "e1a8ce58-0867-47e4-954d-0d5ea7e78882",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3ac615d6-1a6d-4f3a-9d62-9859a534c3d4"
        },
        "item": {
          "id": "9993c2e6-6df0-4e18-b358-c57e322305e9",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "d10b5b7a-f2a6-4234-a99b-2838d2be9da6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 432,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e83e9d-8d6a-4115-bd08-56e92dc9b36d",
        "cursor": {
          "ref": "76c4a221-1f20-4a77-857b-b194a57f5ff6",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7c0d83b5-416f-40f1-824b-2d9b9e9357e1"
        },
        "item": {
          "id": "d2e83e9d-8d6a-4115-bd08-56e92dc9b36d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "80a8892a-3ea7-4d06-9b90-9a7f84a215d2",
          "status": "OK",
          "code": 200,
          "responseTime": 515,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52be8e6-3341-4834-bbab-495865cd2511",
        "cursor": {
          "ref": "2453ff65-edb6-4d83-b118-d8a44f50bdcf",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "99e169b4-e721-4ca1-a0b2-2a40b7a17afa"
        },
        "item": {
          "id": "e52be8e6-3341-4834-bbab-495865cd2511",
          "name": "credentials_verify"
        },
        "response": {
          "id": "870d830a-7290-404a-b604-1c1d4084ede1",
          "status": "OK",
          "code": 200,
          "responseTime": 2339,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a26e18-d96b-4c5c-81bd-372da235d787",
        "cursor": {
          "ref": "3ade94de-b0de-4505-bea1-3bd0e2bffa33",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "63ff7be6-9d9a-4dcf-9313-a5e2d2380568"
        },
        "item": {
          "id": "40a26e18-d96b-4c5c-81bd-372da235d787",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4318e261-27f5-4cce-a667-dfc3081f7608",
          "status": "OK",
          "code": 200,
          "responseTime": 1640,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94dd343-5687-49f7-80d2-a970fe48c21c",
        "cursor": {
          "ref": "55f60a5b-4b04-4438-a14a-734904ee0377",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "677408cb-171b-446d-9408-eb0d99968caf"
        },
        "item": {
          "id": "e94dd343-5687-49f7-80d2-a970fe48c21c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "acbd6076-24f8-44d2-9ef8-71a4d5a68182",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94dd343-5687-49f7-80d2-a970fe48c21c",
        "cursor": {
          "ref": "55f60a5b-4b04-4438-a14a-734904ee0377",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "677408cb-171b-446d-9408-eb0d99968caf"
        },
        "item": {
          "id": "e94dd343-5687-49f7-80d2-a970fe48c21c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "acbd6076-24f8-44d2-9ef8-71a4d5a68182",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94dd343-5687-49f7-80d2-a970fe48c21c",
        "cursor": {
          "ref": "55f60a5b-4b04-4438-a14a-734904ee0377",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "677408cb-171b-446d-9408-eb0d99968caf"
        },
        "item": {
          "id": "e94dd343-5687-49f7-80d2-a970fe48c21c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "acbd6076-24f8-44d2-9ef8-71a4d5a68182",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7bc312-5a0a-4ee1-bb24-39ee6d0198a9",
        "cursor": {
          "ref": "bc03b1a5-0e6c-4d93-9fc6-cc7f0f72e4d6",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "75181a1c-b5e1-4aa5-9b5f-f9a495021aa2"
        },
        "item": {
          "id": "7d7bc312-5a0a-4ee1-bb24-39ee6d0198a9",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c758521d-20ca-4315-8ccb-50f38d0bd220",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 406,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3eb3eca-8b64-4a13-b6c1-51b2dcebb297",
        "cursor": {
          "ref": "39a10ddb-620e-4f72-ad1e-82d57377a0ba",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6c4f58cf-3d9f-4339-964c-ff7ed9672b9b"
        },
        "item": {
          "id": "f3eb3eca-8b64-4a13-b6c1-51b2dcebb297",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "355d6e55-392b-4839-8dec-de8b66025d83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3eb3eca-8b64-4a13-b6c1-51b2dcebb297",
        "cursor": {
          "ref": "39a10ddb-620e-4f72-ad1e-82d57377a0ba",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6c4f58cf-3d9f-4339-964c-ff7ed9672b9b"
        },
        "item": {
          "id": "f3eb3eca-8b64-4a13-b6c1-51b2dcebb297",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "355d6e55-392b-4839-8dec-de8b66025d83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aef6d4e-15eb-4988-9114-603cd140f96f",
        "cursor": {
          "ref": "b692cb52-faee-4ee3-979e-e3928f59756f",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b11611a4-574c-46eb-bc25-2abde6089e76"
        },
        "item": {
          "id": "3aef6d4e-15eb-4988-9114-603cd140f96f",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "c0c72ef8-fc5a-4eff-a23c-9a5aa20c3b84",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 699,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61aa8ebe-fd63-41cf-9fab-98185cfd5daf",
        "cursor": {
          "ref": "4416a50a-a4f8-44a1-b24a-d1981663e081",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4d9c3da5-a4c4-4b12-acfe-9954b7825264"
        },
        "item": {
          "id": "61aa8ebe-fd63-41cf-9fab-98185cfd5daf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d68842fd-a28e-4e90-add2-8c512c46ca7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61aa8ebe-fd63-41cf-9fab-98185cfd5daf",
        "cursor": {
          "ref": "4416a50a-a4f8-44a1-b24a-d1981663e081",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4d9c3da5-a4c4-4b12-acfe-9954b7825264"
        },
        "item": {
          "id": "61aa8ebe-fd63-41cf-9fab-98185cfd5daf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d68842fd-a28e-4e90-add2-8c512c46ca7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca37a97a-08bc-49eb-8c88-c4ead14b15e5",
        "cursor": {
          "ref": "cb987df1-f5a2-4835-9caa-bdb47f7e5374",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f2ad47e2-d0d3-4523-92d4-f799bdcb5d6c"
        },
        "item": {
          "id": "ca37a97a-08bc-49eb-8c88-c4ead14b15e5",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "d1c28824-cba9-4001-b2e8-19cf49741b9f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1029,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}